MODULE CHECKPROT(%TITLE	'Queue protection checks'
		IDENT = 'V04-000'
		) =
BEGIN

!
!****************************************************************************
!*									    *
!*  COPYRIGHT (c) 1978, 1980, 1982, 1984 BY				    *
!*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
!*  ALL RIGHTS RESERVED.						    *
!* 									    *
!*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
!*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
!*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
!*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
!*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
!*  TRANSFERRED.							    *
!* 									    *
!*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
!*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
!*  CORPORATION.							    *
!* 									    *
!*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
!*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
!* 									    *
!*									    *
!****************************************************************************
!

!++
! FACILITY:
!	Job controller.
!
! ABSTRACT:
!	This module contains the routines that interface to the $CHKPRO service
!	for queue protection checking.
!
! ENVIRONMENT:
!	VAX/VMS user and kernel mode.
!--
!
! AUTHOR: M. Jack, CREATION DATE: 16-Feb-1982
!
! MODIFIED BY:
!
!	V03-001	MLJ0114		Martin L. Jack,	23-Jun-1983  4:57
!		Changes for job controller baselevel.
!
!**

REQUIRE 'SRC$:JOBCTLDEF';


FORWARD ROUTINE
	CHKPRO,
	CHECK_R_ACCESS,
	CHECK_W_ACCESS,
	CHECK_E_ACCESS,
	CHECK_D_ACCESS;

GLOBAL ROUTINE CHKPRO(ACCESS,OWNER,PROTECTION)=

!++
!
! FUNCTIONAL DESCRIPTION:
!	This routine executes a call to the $CHKPRO service.
!
! INPUT PARAMETERS:
!	ACCESS		- Desired access.
!	OWNER		- Object ownership.
!	PROTECTION	- Object protection.
!
! IMPLICIT INPUTS:
!	MBX		- Pointer to buffered mailbox message.
!
! OUTPUT PARAMETERS:
!	NONE
!
! IMPLICIT OUTPUTS:
!	NONE
!
! ROUTINE VALUE:
!	True if access is granted, false if denied.
!
! SIDE EFFECTS:
!	NONE
!
!--

BEGIN
LOCAL
	ITMLST:		BBLOCK[64],	! $CHKPRO item list
	RIGHTS:		VECTOR[2];	! Rights vector


! OPER privilege implicitly grants all types of access.
!
IF .BBLOCK[MBX[ACM$Q_PRVMSK], PRV$V_OPER]
THEN
    RETURN TRUE;


! Construct the item list and call $CHKPRO to check the access.
!
RIGHTS[0] = .MBX[ACM$L_UIC];
RIGHTS[1] = 0;
ITMLST[0,0,16,0] = 4;				! Desired access
ITMLST[2,0,16,0] = CHP$_ACCESS;
ITMLST[4,0,32,0] = ACCESS;
ITMLST[8,0,32,0] = 0;
ITMLST[12,0,16,0] = 8;				! Requestor's privileges
ITMLST[14,0,16,0] = CHP$_PRIV;
ITMLST[16,0,32,0] = MBX[ACM$Q_PRVMSK];
ITMLST[20,0,32,0] = 0;
ITMLST[24,0,16,0] = 8;				! Requestor's UIC
ITMLST[26,0,16,0] = CHP$_RIGHTS;
ITMLST[28,0,32,0] = RIGHTS;
ITMLST[32,0,32,0] = 0;
ITMLST[36,0,16,0] = 4;				! Object's UIC
ITMLST[38,0,16,0] = CHP$_OWNER;
ITMLST[40,0,32,0] = OWNER;
ITMLST[44,0,32,0] = 0;
ITMLST[48,0,16,0] = 4;				! Object's protection
ITMLST[50,0,16,0] = CHP$_PROT;
ITMLST[52,0,32,0] = PROTECTION;
ITMLST[56,0,32,0] = 0;
ITMLST[60,0,32,0] = 0;				! Trailing zero


$CHKPRO(ITMLST=ITMLST)
END;

GLOBAL ROUTINE CHECK_R_ACCESS(SMQ,SJH)=

!++
!
! FUNCTIONAL DESCRIPTION:
!	This routine checks whether the requestor has R access to the specified
!	job in the specified queue.  OPER privilege and E access to the queue
!	implicitly grant R access.
!
! INPUT PARAMETERS:
!	SMQ		- Pointer to SMQ.
!	SJH		- Pointer to SJH.
!
! IMPLICIT INPUTS:
!	MBX		- Pointer to buffered mailbox message.
!
! OUTPUT PARAMETERS:
!	NONE
!
! IMPLICIT OUTPUTS:
!	NONE
!
! ROUTINE VALUE:
!	True if access is granted, false if denied.
!
! SIDE EFFECTS:
!	NONE
!
!--

BEGIN
MAP
	SMQ:		REF BBLOCK,	! Pointer to SMQ
	SJH:		REF BBLOCK;	! Pointer to SJH


! Test for R access to the job.
!
IF CHKPRO(%B'0001', .SJH[SJH$L_UIC], .SMQ[SMQ$W_PROTECTION])
THEN
    RETURN TRUE;


! Test for E access to the queue.
!
IF CHKPRO(%B'0100', .SMQ[SMQ$L_OWNER_UIC], .SMQ[SMQ$W_PROTECTION])
THEN
    RETURN TRUE;


FALSE
END;

GLOBAL ROUTINE CHECK_W_ACCESS(SMQ)=

!++
!
! FUNCTIONAL DESCRIPTION:
!	This routine checks whether the requestor has W access to the specified
!	queue.  OPER privilege and E access to the queue implicitly grant
!	W access.
!
! INPUT PARAMETERS:
!	SMQ		- Pointer to SMQ.
!
! IMPLICIT INPUTS:
!	MBX		- Pointer to buffered mailbox message.
!
! OUTPUT PARAMETERS:
!	NONE
!
! IMPLICIT OUTPUTS:
!	NONE
!
! ROUTINE VALUE:
!	True if access is granted, false if denied.
!
! SIDE EFFECTS:
!	NONE
!
!--

BEGIN
MAP
	SMQ:		REF BBLOCK;	! Pointer to SMQ


! Test for W access to the queue.
!
IF CHKPRO(%B'0010', .SMQ[SMQ$L_OWNER_UIC], .SMQ[SMQ$W_PROTECTION])
THEN
    RETURN TRUE;


! Test for E access to the queue.
!
IF CHKPRO(%B'0100', .SMQ[SMQ$L_OWNER_UIC], .SMQ[SMQ$W_PROTECTION])
THEN
    RETURN TRUE;


FALSE
END;

GLOBAL ROUTINE CHECK_E_ACCESS(SMQ)=

!++
!
! FUNCTIONAL DESCRIPTION:
!	This routine checks whether the requestor has E access to the specified
!	queue.  OPER privilege implicitly grants E access.
!
! INPUT PARAMETERS:
!	SMQ		- Pointer to SMQ.
!
! IMPLICIT INPUTS:
!	MBX		- Pointer to buffered mailbox message.
!
! OUTPUT PARAMETERS:
!	NONE
!
! IMPLICIT OUTPUTS:
!	NONE
!
! ROUTINE VALUE:
!	True if access is granted, false if denied.
!
! SIDE EFFECTS:
!	NONE
!
!--

BEGIN
MAP
	SMQ:		REF BBLOCK;	! Pointer to SMQ


! Test for E access to the queue.
!
IF CHKPRO(%B'0100', .SMQ[SMQ$L_OWNER_UIC], .SMQ[SMQ$W_PROTECTION])
THEN
    RETURN TRUE;


FALSE
END;

GLOBAL ROUTINE CHECK_D_ACCESS(SMQ,SJH)=

!++
!
! FUNCTIONAL DESCRIPTION:
!	This routine checks whether the requestor has D access to the specified
!	job in the specified queue.  OPER privilege and E access to the queue
!	implicitly grant D access.
!
! INPUT PARAMETERS:
!	SMQ		- Pointer to SMQ.
!	SJH		- Pointer to SJH.
!
! IMPLICIT INPUTS:
!	MBX		- Pointer to buffered mailbox message.
!
! OUTPUT PARAMETERS:
!	NONE
!
! IMPLICIT OUTPUTS:
!	NONE
!
! ROUTINE VALUE:
!	True if access is granted, false if denied.
!
! SIDE EFFECTS:
!	NONE
!
!--

BEGIN
MAP
	SMQ:		REF BBLOCK,	! Pointer to SMQ
	SJH:		REF BBLOCK;	! Pointer to SJH


! Test for D access to the job.
!
IF CHKPRO(%B'1000', .SJH[SJH$L_UIC], .SMQ[SMQ$W_PROTECTION])
THEN
    RETURN TRUE;


! Test for E access to the queue.
!
IF CHKPRO(%B'0100', .SMQ[SMQ$L_OWNER_UIC], .SMQ[SMQ$W_PROTECTION])
THEN
    RETURN TRUE;


FALSE
END;

END
ELUDOM
