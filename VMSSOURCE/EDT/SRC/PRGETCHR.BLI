%TITLE 'EDT$PRGETCHR - get next parse character'
MODULE EDT$PRGETCHR (				! Get next parse character
		IDENT = 'V04-000'			! File: PRGETCHR.BLI Edit: JBS1005
		) =
BEGIN
!
!****************************************************************************
!*									    *
!*  COPYRIGHT (c) 1978, 1980, 1982, 1984 BY				    *
!*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
!*  ALL RIGHTS RESERVED.						    *
!* 									    *
!*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
!*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
!*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
!*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
!*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
!*  TRANSFERRED.							    *
!* 									    *
!*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
!*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
!*  CORPORATION.							    *
!* 									    *
!*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
!*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
!* 									    *
!*									    *
!****************************************************************************
!

!++
! FACILITY:	EDT -- The DEC Standard Editor
!
! ABSTRACT:
!
!	Get the next character to be parsed.
!
! ENVIRONMENT:	Runs at any access mode - AST reentrant
!
! AUTHOR: Bob Kushlis, CREATION DATE: December 12, 1978
!
! MODIFIED BY:
!
! 1-001	- Original.  DJS 25-Feb-1981.  This module was created by
!	extracting routine GET_CHAR from module PARSER.
! 1-002	- Regularize headers.  JBS 12-Mar-1981
! 1-003	- Change alphabetic processing.  JBS 19-Jul-1982
! 1-004	- Don't strip diacritical marks.  JBS 13-Dec-1982
! 1-005	- Add VT220 support conditional.  JBS 11-Feb-1983
!--


%SBTTL 'Declarations'
!
! TABLE OF CONTENTS:
!

REQUIRE 'EDTSRC:TRAROUNAM';

FORWARD ROUTINE
    EDT$$PA_GETCH : NOVALUE;

!
! INCLUDE FILES:
!

REQUIRE 'EDTSRC:EDTREQ';

LIBRARY 'EDTSRC:SUPPORTS';

!
! MACROS:
!
!	NONE
!
! EQUATED SYMBOLS:
!
!	NONE
!
! OWN STORAGE:
!
!	NONE
!
! EXTERNAL REFERENCES:
!
!	In the routine

%SBTTL 'EDT$$PA_GETCH  - get the next char to parse'

GLOBAL ROUTINE EDT$$PA_GETCH 			! Get the next character to parse
    : NOVALUE =

!++
! FUNCTIONAL DESCRIPTION:
!
!	Get the next character from the input line.  If we are pointing at the
!	end of the record, return a '!', otherwise, get the character pointed
!	to by EDT$$A_CMD_BUF  and bump EDT$$A_CMD_BUF .  The character
!	is placed in the global	EDT$$C_PA_CH.  Lower case alphabetics are converted
!	to upper case.
!
! FORMAL PARAMETERS:
!
!	NONE
!
! IMPLICIT INPUTS:
!
!	EDT$$A_CMD_BUF
!	EDT$$A_CMD_END
!
! IMPLICIT OUTPUTS:
!
!	EDT$$C_PA_CH
!
! ROUTINE VALUE:
!
!	NONE
!
! SIDE EFFECTS:
!
!	NONE
!
!--

    BEGIN

    EXTERNAL
	EDT$$A_CMD_BUF,				! Pointer into command buffer.
	EDT$$A_CMD_END,				! Pointer to end of current command.

%IF SUPPORT_VT220
%THEN
	EDT$$B_CHAR_INFO : BLOCKVECTOR [256, 1, BYTE],	! table of character information
%FI

	EDT$$C_PA_CH;				! the currently being processed character

    LOCAL
	CHAR;

    IF CH$PTR_GTR (.EDT$$A_CMD_BUF, .EDT$$A_CMD_END)
    THEN
	EDT$$C_PA_CH = %C'!'
    ELSE
	BEGIN
	CHAR = CH$RCHAR_A (EDT$$A_CMD_BUF);

%IF ( NOT SUPPORT_VT220)
%THEN
	CHAR = .CHAR AND %X'7F';
%FI

%IF SUPPORT_VT220
%THEN

	IF .EDT$$B_CHAR_INFO [.CHAR, 0, 0, 1, 0]	! Lower case letter
	THEN
%ELSE

	    IF ((.CHAR GEQ %C'a') AND (.CHAR LEQ %C'z'))
	    THEN
%FI

		EDT$$C_PA_CH = .CHAR - %C'a' + %C'A'
	    ELSE
		EDT$$C_PA_CH = .CHAR;

	END;

    END;					! of routine EDT$$PA_GETCH

!<BLF/PAGE>

END						! of module EDT$PRGETCHR

ELUDOM
