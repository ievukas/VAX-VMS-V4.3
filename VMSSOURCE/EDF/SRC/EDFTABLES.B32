%TITLE 'TPARSE tables for EDF utility.'
MODULE EDF$TABLES ( IDENT = 'V04-000',
    		ADDRESSING_MODE ( EXTERNAL = GENERAL ),
    		ADDRESSING_MODE ( NONEXTERNAL = GENERAL ),
		OPTLEVEL=3
    		) =
BEGIN

!
!****************************************************************************
!*									    *
!*  COPYRIGHT (c) 1978, 1980, 1982, 1984 BY				    *
!*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
!*  ALL RIGHTS RESERVED.						    *
!* 									    *
!*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
!*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
!*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
!*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
!*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
!*  TRANSFERRED.							    *
!* 									    *
!*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
!*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
!*  CORPORATION.							    *
!* 									    *
!*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
!*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
!* 									    *
!*									    *
!****************************************************************************
!

!++
! FACILITY:		VAX/VMS EDIT/FDL UTILITY
!
! ABSTRACT:		LIB$TPARSE tables for EDF V1.0
!
! ENVIRONMENT:		NATIVE/USER MODE
!
! AUTHOR: 		Ken Henderson
!
! CREATION DATE:	15-Sep-1981
!
! MODIFIED BY:
!
!			V03-009	JWT0191		Jim Teague	 2 Aug 1984
!				Remove knowledge of ERASE_ON_DELETE.
!
!			V03-008 RRB0017	   Rowland R. Bradley	10 Mar 1984
!				Disallow ACLs - Comment out access control
!				will support later.
!
!			V03-007	KFH0007		Ken Henderson	10 Sep 1983
!				Support for named UICs
!
!			V03-006	KFH0006		Ken Henderson	30 Jul 1983
!				Added DEFERRED_WRITE, ERASE_ON_DELETE,
!				NEVER_RU_JOURNAL
!
!			V03-005	KFH0005		Ken Henderson	26 Apr 1983
!				Added ADD_KEY_FDL, DELETE_KEY_FDL.
!				Changed 'redesign' to 'touchup'.
!
!			V03-004	KFH0004		Ken Henderson	14 Apr 1983
!				Added SET_FUNCTION, GRANULARITY,
!				PROMPTING, and RESPONSES tables.
!
!			V03-003	KFH0003		Ken Henderson	8 Oct 1982
!				Added Access, ACL, Connect,
!				Journal, and Sharing primaries.
!
!			V03-002	KFH0002		Ken Henderson	8 Sept 1982
!				Removed GLOBAL LITERAL
!				definitions and added SDL-
!				generated literals.
!
!			V03-001	KFH0001		Ken Henderson	2 April 1982
!				Modifed SEGn_xxx parsing
!				to fix FT2 QAR 1020. And
!				modified (keyword) parsing
!				to not allow extraneous
!				characters on the answer.
!
!--

!++
!
! FUNCTIONAL DESCRIPTION:
!
!	This module defines the TPARSE tables for looking up EDF keywords.
!
! CALLING SEQUENCE:
!
!	Used by the RTL routine LIB$TPARSE
!
! INPUT PARAMETERS:
!
!	NONE
!
! IMPLICIT INPUTS:
!
!	NONE
!
! OUTPUT PARAMETERS:
!
!	NONE
!
! IMPLICIT OUTPUTS:
!
!	NONE
!
! ROUTINES CALLED:
!
!	NONE
!
! SIGNALS:
!
!	NONE
!
! SIDE EFFECTS:
!
!	NONE
!
!--

! EXTERNAL DEFINITIONS
!
LIBRARY 'SYS$LIBRARY:STARLET';
LIBRARY 'SYS$LIBRARY:TPAMAC';
REQUIRE	'SHRLIB$:FDLPARDEF';
REQUIRE 'LIB$:EDFSTRUCT';

MACRO
	DESC_BLK =
		BLOCK [ 8,BYTE ]%;

GLOBAL
	EDF$AB_STRING		: DESC_BLK,
	EDF$AB_COMMENT		: DESC_BLK,
	EDF$GL_SECNUM		: LONG,
	EDF$GL_PROT_MASK	: LONG,
	EDF$GL_FID1		: LONG,
	EDF$GL_FID2		: LONG,
	EDF$GL_FID3		: LONG,
	EDF$GL_OWNER_UIC	: LONG,
	EDF$GL_SPARE1		: LONG;

! +
! These are the Primary Attributes.
! -

! +
!	Transition Type			Next State	Parameter
! -

$INIT_STATE (EDF$AB_PRIMARY_TABLE_STA,EDF$AB_PRIMARY_TABLE_KEY);

$STATE	(,
	('ACCESS',			TPA$_EXIT, ,,,	FDL$C_ACCESS),
!rrb	('ACL',				TPA$_EXIT, ,,,	FDL$C_ACL),
	('AREA',			S_AREA_N),
	('CONNECT',			TPA$_EXIT, ,,,	FDL$C_CONNECT),
	('DATE',			TPA$_EXIT, ,,,	FDL$C_DATE),
	('FILE',			TPA$_EXIT, ,,,	FDL$C_FILE),
	('JOURNAL',			TPA$_EXIT, ,,,	FDL$C_JNL),
	('KEY',				S_KEY_N),
	('RECORD',			TPA$_EXIT, ,,,	FDL$C_RECORD),
	('SHARING',			TPA$_EXIT, ,,,	FDL$C_SHARING),
	('SYSTEM',			TPA$_EXIT, ,,,	FDL$C_SYSTEM),
	('TITLE',			TPA$_EXIT, ,,,	FDL$C_TITLE)
	);

$STATE	(S_AREA_N,
	((S_PRINUM),			TPA$_EXIT, ,,,	FDL$C_AREA)
	);

$STATE	(S_KEY_N,
	((S_PRINUM),			TPA$_EXIT, ,,,	FDL$C_KEY)
	);

$STATE	(S_PRINUM,
	(TPA$_DECIMAL,			TPA$_EXIT),
	(TPA$_EOS,			TPA$_FAIL),
	(TPA$_LAMBDA,			TPA$_FAIL)
	);

! +
! These are the Secondary Attributes.
! -

! ACCESS PRIMARY

! +
!	Transition Type			Next State	Parameter
! -

$INIT_STATE (EDF$AB_ACCESS_TABLE_STA,EDF$AB_ACCESS_TABLE_KEY);

$STATE	(,
	('BLOCK_IO',			TPA$_EXIT, ,,,	FDL$C_FACBIO),
	('DELETE',			TPA$_EXIT, ,,,	FDL$C_FACDEL),
	('GET',				TPA$_EXIT, ,,,	FDL$C_FACGET),
	('PUT',				TPA$_EXIT, ,,,	FDL$C_FACPUT),
	('RECORD_IO',			TPA$_EXIT, ,,,	FDL$C_FACBRO),
	('TRUNCATE',			TPA$_EXIT, ,,,	FDL$C_FACTRN),
	('UPDATE',			TPA$_EXIT, ,,,	FDL$C_FACUPD)
	);

! ACL PRIMARY

! +
!	Transition Type			Next State	Parameter
! -
!
!$INIT_STATE (EDF$AB_ACL_TABLE_STA,EDF$AB_ACL_TABLE_KEY);
!
!$STATE	(,
!	('ENTRY',			TPA$_EXIT, ,,,	FDL$C_ACE)
!	);

! AREA PRIMARY

! +
!	Transition Type			Next State	Parameter
! -

$INIT_STATE (EDF$AB_AREA_TABLE_STA,EDF$AB_AREA_TABLE_KEY);

$STATE	(,
	('ALLOCATION',			TPA$_EXIT, ,,,	FDL$C_ALLOC),
	('BEST_TRY_CONTIGUOUS',		TPA$_EXIT, ,,,	FDL$C_BTCONT),
	('BUCKET_SIZE',			TPA$_EXIT, ,,,	FDL$C_BKT),
	('CONTIGUOUS',			TPA$_EXIT, ,,,	FDL$C_CONTG),
	('EXACT_POSITIONING',		TPA$_EXIT, ,,,	FDL$C_EXACT),
	('EXTENSION',			TPA$_EXIT, ,,,	FDL$C_EXTND),
	('POSITION',			TPA$_EXIT, ,,,	FDL$C_POSI),
	('VOLUME',			TPA$_EXIT, ,,,	FDL$C_VOLU)
	);

! CONNECT PRIMARY

! +
!	Transition Type			Next State	Parameter
! -

$INIT_STATE (EDF$AB_CONNECT_TABLE_STA,EDF$AB_CONNECT_TABLE_KEY);

$STATE	(,
	('ASYNCHRONOUS',		TPA$_EXIT, ,,,	FDL$C_ASY),
	('BLOCK_IO',			TPA$_EXIT, ,,,	FDL$C_BIO),
	('BUCKET_CODE',			TPA$_EXIT, ,,,	FDL$C_BUCODE),
	('CONTEXT',			TPA$_EXIT, ,,,	FDL$C_RCTX),
	('END_OF_FILE',			TPA$_EXIT, ,,,	FDL$C_EOF),
	('FAST_DELETE',			TPA$_EXIT, ,,,	FDL$C_FDEL),
	('FILL_BUCKETS',		TPA$_EXIT, ,,,	FDL$C_FLOA),
	('KEY_GREATER_EQUAL',		TPA$_EXIT, ,,,	FDL$C_KGE),
	('KEY_GREATER_THAN',		TPA$_EXIT, ,,,	FDL$C_KGT),
	('KEY_LIMIT',			TPA$_EXIT, ,,,	FDL$C_KLIM),
	('KEY_OF_REFERENCE',		TPA$_EXIT, ,,,	FDL$C_KRF),
	('LOCATE_MODE',			TPA$_EXIT, ,,,	FDL$C_LOCMODE),
	('LOCK_ON_READ',		TPA$_EXIT, ,,,	FDL$C_REA),
	('LOCK_ON_WRITE',		TPA$_EXIT, ,,,	FDL$C_RLK),
	('MANUAL_UNLOCKING',		TPA$_EXIT, ,,,	FDL$C_ULK),
	('MULTIBLOCK_COUNT',		TPA$_EXIT, ,,,	FDL$C_MBC),
	('MULTIBUFFER_COUNT',		TPA$_EXIT, ,,,	FDL$C_MBF),
	('NOLOCK',			TPA$_EXIT, ,,,	FDL$C_NLK),
	('NONEXISTENT_RECORD',		TPA$_EXIT, ,,,	FDL$C_NXR),
	('READ_AHEAD',			TPA$_EXIT, ,,,	FDL$C_RAH),
	('READ_REGARDLESS',		TPA$_EXIT, ,,,	FDL$C_RRL),
	('TIMEOUT_ENABLE',		TPA$_EXIT, ,,,	FDL$C_TMENB),
	('TIMEOUT_PERIOD',		TPA$_EXIT, ,,,	FDL$C_TMO),
	('TRUNCATE_ON_PUT',		TPA$_EXIT, ,,,	FDL$C_TPT),
	('TT_CANCEL_CONTROL_O',		TPA$_EXIT, ,,,	FDL$C_TTCCO),
	('TT_PROMPT',			TPA$_EXIT, ,,,	FDL$C_TTPMT),
	('TT_PURGE_TYPE_AHEAD',		TPA$_EXIT, ,,,	FDL$C_TTPTA),
	('TT_READ_NOECHO',		TPA$_EXIT, ,,,	FDL$C_TTRNE),
	('TT_READ_NOFILTER',		TPA$_EXIT, ,,,	FDL$C_TTRNF),
	('TT_UPCASE_INPUT',		TPA$_EXIT, ,,,	FDL$C_TTCVT),
	('UPDATE_IF',			TPA$_EXIT, ,,,	FDL$C_UIF),
	('WAIT_FOR_RECORD',		TPA$_EXIT, ,,,	FDL$C_WAT),
	('WRITE_BEHIND',		TPA$_EXIT, ,,,	FDL$C_WBH)
	);

! DATE PRIMARY

! +
!	Transition Type			Next State	Parameter
! -

$INIT_STATE (EDF$AB_DATE_TABLE_STA,EDF$AB_DATE_TABLE_KEY);

$STATE	(,
	('BACKUP',			TPA$_EXIT, ,,,	FDL$C_BACKUP),
	('CREATION',			TPA$_EXIT, ,,,	FDL$C_CREAT),
	('EXPIRATION',			TPA$_EXIT, ,,,	FDL$C_EXPR),
	('REVISION',			TPA$_EXIT, ,,,	FDL$C_REV)
	);

! FILE PRIMARY

! +
!	Transition Type			Next State	Parameter
! -

$INIT_STATE (EDF$AB_FILE_TABLE_STA,EDF$AB_FILE_TABLE_KEY);

$STATE	(,
	('ALLOCATION',			TPA$_EXIT, ,,,	FDL$C_ALL),
	('BEST_TRY_CONTIGUOUS',		TPA$_EXIT, ,,,	FDL$C_BTC),
	('BUCKET_SIZE',			TPA$_EXIT, ,,,	FDL$C_BKTSIZ),
	('CLUSTER_SIZE',		TPA$_EXIT, ,,,	FDL$C_CLUSIZ),
	('CONTEXT',			TPA$_EXIT, ,,,	FDL$C_FCTX),
	('CONTIGUOUS',			TPA$_EXIT, ,,,	FDL$C_CONT),
	('CREATE_IF',			TPA$_EXIT, ,,,	FDL$C_CIF),
	('DEFAULT_NAME',		TPA$_EXIT, ,,,	FDL$C_DFNAM),
	('DEFERRED_WRITE',		TPA$_EXIT, ,,,	FDL$C_DEFWRT),
	('DELETE_ON_CLOSE',		TPA$_EXIT, ,,,	FDL$C_DOC),
	('DIRECTORY_ENTRY',		TPA$_EXIT, ,,,	FDL$C_DIR),
!	('ERASE_ON_DELETE',		TPA$_EXIT, ,,,	FDL$C_EODEL),
	('EXTENSION',			TPA$_EXIT, ,,,	FDL$C_EXTEN),
	('GLOBAL_BUFFER_COUNT',		TPA$_EXIT, ,,,	FDL$C_GBC),
	('MAX_RECORD_NUMBER',		TPA$_EXIT, ,,,	FDL$C_MAXRECN),
	('MAXIMIZE_VERSION',		TPA$_EXIT, ,,,	FDL$C_MAXVER),
	('MT_BLOCK_SIZE',		TPA$_EXIT, ,,,	FDL$C_MTBLSIZ),
	('MT_CLOSE_REWIND',		TPA$_EXIT, ,,,	FDL$C_MTRWC),
	('MT_CURRENT_POSITION',		TPA$_EXIT, ,,,	FDL$C_MTCP),
	('MT_NOT_EOF',			TPA$_EXIT, ,,,	FDL$C_MTNEF),
	('MT_OPEN_REWIND',		TPA$_EXIT, ,,,	FDL$C_MTREW),
	('MT_PROTECTION',		TPA$_EXIT, ,,,	FDL$C_MTPRO),
	('NAME',			TPA$_EXIT, ,,,	FDL$C_NAME),
	('NOBACKUP',			TPA$_EXIT, ,,,	FDL$C_BKTUP),
	('NON_FILE_STRUCTURED',		TPA$_EXIT, ,,,	FDL$C_NFS),
	('ORGANIZATION',		TPA$_EXIT, ,,,	FDL$C_ORG),
	('OUTPUT_FILE_PARSE',		TPA$_EXIT, ,,,	FDL$C_OFP),
	('OWNER',			TPA$_EXIT, ,,,	FDL$C_OWNER),
	('PRINT_ON_CLOSE',		TPA$_EXIT, ,,,	FDL$C_POC),
	('PROTECTION',			TPA$_EXIT, ,,,	FDL$C_PROT),
	('READ_CHECK',			TPA$_EXIT, ,,,	FDL$C_READC),
	('REVISION',			TPA$_EXIT, ,,,	FDL$C_REVISN),
	('SEQUENTIAL_ONLY',		TPA$_EXIT, ,,,	FDL$C_SQO),
	('SUBMIT_ON_CLOSE',		TPA$_EXIT, ,,,	FDL$C_SOC),
	('SUPERSEDE',			TPA$_EXIT, ,,,	FDL$C_SUPER),
	('TEMPORARY',			TPA$_EXIT, ,,,	FDL$C_TEMPO),
	('TRUNCATE_ON_CLOSE',		TPA$_EXIT, ,,,	FDL$C_TOC),
	('USER_FILE_OPEN',		TPA$_EXIT, ,,,	FDL$C_UFO),
	('WINDOW_SIZE',			TPA$_EXIT, ,,,	FDL$C_WIN),
	('WRITE_CHECK',			TPA$_EXIT, ,,,	FDL$C_WRITEC)
	);

! JOURNALING PRIMARY

! +
!	Transition Type			Next State	Parameter
! -

$INIT_STATE (EDF$AB_JOURNAL_TABLE_STA,EDF$AB_JOURNAL_TABLE_KEY);

$STATE	(,
	('AFTER_IMAGE',			TPA$_EXIT, ,,,	FDL$C_AFTIM),
	('AFTER_NAME',			TPA$_EXIT, ,,,	FDL$C_AFTNAM),
	('AUDIT_TRAIL',			TPA$_EXIT, ,,,	FDL$C_AUDIT),
	('AUDIT_NAME',			TPA$_EXIT, ,,,	FDL$C_AUDNAM),
	('BEFORE_IMAGE',		TPA$_EXIT, ,,,	FDL$C_BEFIM),
	('BEFORE_NAME',			TPA$_EXIT, ,,,	FDL$C_BEFNAM),
	('RECOVERY_UNIT',		TPA$_EXIT, ,,,	FDL$C_RU)
	);

! KEY PRIMARY

! +
!	Transition Type			Next State	Parameter
! -

$INIT_STATE (EDF$AB_KEY_TABLE_STA,EDF$AB_KEY_TABLE_KEY);

$STATE	(,
	('CHANGES',			TPA$_EXIT, ,,,	FDL$C_CHANGE),
	('DATA_AREA',			TPA$_EXIT, ,,,	FDL$C_DAREA),
	('DATA_FILL',			TPA$_EXIT, ,,,	FDL$C_DFILL),
	('DATA_KEY_COMPRESSION',	TPA$_EXIT, ,,,	FDL$C_DATKC),
	('DATA_RECORD_COMPRESSION',	TPA$_EXIT, ,,,	FDL$C_DATRC),
	('DUPLICATES',			TPA$_EXIT, ,,,	FDL$C_DUPS),
	('INDEX_AREA',			TPA$_EXIT, ,,,	FDL$C_IAREA),
	('INDEX_COMPRESSION',		TPA$_EXIT, ,,,	FDL$C_IDXC),
	('INDEX_FILL',			TPA$_EXIT, ,,,	FDL$C_IFILL),
	('LENGTH',			TPA$_EXIT, ,,,	FDL$C_SEGLEN),
	('LEVEL1_INDEX_AREA',		TPA$_EXIT, ,,,	FDL$C_LAREA),
	('NAME',			TPA$_EXIT, ,,,	FDL$C_KYNAME),
	('NULL_KEY',			TPA$_EXIT, ,,,	FDL$C_NULL),
	('NULL_VALUE',			TPA$_EXIT, ,,,	FDL$C_NULLVAL),
	('POSITION',			TPA$_EXIT, ,,,	FDL$C_SEGPOS),
	('PROLOGUE',			TPA$_EXIT, ,,,	FDL$C_PROL),
	((S_SEGLEN),			TPA$_EXIT, ,,,	FDL$C_SEGLEN),
	((S_SEGPOS),			TPA$_EXIT, ,,,	FDL$C_SEGPOS),
!	((S_SEGTYP),			TPA$_EXIT, ,,,	FDL$C_SEGTYP),
	('SEG0_TYPE',			TPA$_EXIT, ,,,	FDL$C_SEGTYP),
	('TYPE',			TPA$_EXIT, ,,,	FDL$C_SEGTYP),
	(TPA$_LAMBDA,			TPA$_FAIL)
	);

$STATE	(S_SEGLEN,
	((S_SEG))
	);
$STATE	(,
	('LENGTH',	TPA$_EXIT)
	);

$STATE	(S_SEGPOS,
	((S_SEG))
	);
$STATE	(,
	('POSITION',	TPA$_EXIT)
	);

$STATE	(S_SEGTYP,
	((S_SEG))
	);
$STATE	(,
	('TYPE',	TPA$_EXIT)
	);

$STATE	(S_SEG,
	('S')
	);
$STATE	(,
	('E')
	);
$STATE	(,
	('G')
	);
$STATE	(,
	(TPA$_DECIMAL,			,,,	EDF$GL_SECNUM)
	);
$STATE	(,
	('_',	TPA$_EXIT)
	);

! RECORD PRIMARY

! +
!	Transition Type			Next State	Parameter
! -

$INIT_STATE (EDF$AB_RECORD_TABLE_STA,EDF$AB_RECORD_TABLE_KEY);

$STATE	(,
	('BLOCK_SPAN',			TPA$_EXIT, ,,,	FDL$C_BLKSPN),
	('CARRIAGE_CONTROL',		TPA$_EXIT, ,,,	FDL$C_CARCTRL),
	('CONTROL_FIELD_SIZE',		TPA$_EXIT, ,,,	FDL$C_VFCSIZ),
	('FORMAT',			TPA$_EXIT, ,,,	FDL$C_FMT),
	('SIZE',			TPA$_EXIT, ,,,	FDL$C_SIZE)
	);

! SHARING PRIMARY

! +
!	Transition Type			Next State	Parameter
! -

$INIT_STATE (EDF$AB_SHARING_TABLE_STA,EDF$AB_SHARING_TABLE_KEY);

$STATE	(,
	('DELETE',			TPA$_EXIT, ,,,	FDL$C_SHRDEL),
	('GET',				TPA$_EXIT, ,,,	FDL$C_SHRGET),
	('MULTISTREAM',			TPA$_EXIT, ,,,	FDL$C_SHRMSE),
	('PROHIBIT',			TPA$_EXIT, ,,,	FDL$C_SHRNIL),
	('PUT',				TPA$_EXIT, ,,,	FDL$C_SHRPUT),
	('UPDATE',			TPA$_EXIT, ,,,	FDL$C_SHRUPD),
	('USER_INTERLOCK',		TPA$_EXIT, ,,,	FDL$C_SHRUPI)
	);

! SYSTEM PRIMARY

! +
!	Transition Type			Next State	Parameter
! -

$INIT_STATE (EDF$AB_SYSTEM_TABLE_STA,EDF$AB_SYSTEM_TABLE_KEY);

$STATE	(,
	('DEVICE',			TPA$_EXIT, ,,,	FDL$C_DEVICE),
	('SOURCE',			TPA$_EXIT, ,,,	FDL$C_SOURCE),
	('TARGET',			TPA$_EXIT, ,,,	FDL$C_TARGET)
	);

! +
! Qualifier Keywords
! -

! POSITION

! +
!	Transition Type			Next State	Parameter
! -

$INIT_STATE (EDF$AB_POSIT_TABLE_STA,EDF$AB_POSIT_TABLE_KEY);

$STATE	(,
	('ANY_CYLINDER',		TPA$_EXIT, ,,,	FDL$C_ANYPOS),
	('CLUSTER',			TPA$_EXIT, ,,,	FDL$C_CLUSPOS),
	('CYLINDER',			TPA$_EXIT, ,,,	FDL$C_CYLPOS),
	('FILE_ID',			TPA$_EXIT, ,,,	FDL$C_FIDPOS),
	('FILE_NAME',			TPA$_EXIT, ,,,	FDL$C_FNMPOS),
	('LOGICAL',			TPA$_EXIT, ,,,	FDL$C_LOGPOS),
	('NONE',			TPA$_EXIT, ,,,	FDL$C_NOPOS),
	('VIRTUAL',			TPA$_EXIT, ,,,	FDL$C_VIRPOS)
	);

! FID

! +
!	Transition Type			Next State	Parameter
! -

$INIT_STATE (EDF$AB_FID_TABLE_STA,EDF$AB_FID_TABLE_KEY);

!	For File ID (FID)
!
!	( n,n,n )	! Where n is a decimal number
!

!	State Name
!
!	Transisition	Next		Action				 Mask		Action Routine
!	   Type		State		Routine		Mask		Address		  Parameter
!
$STATE	(S_FID,
	((S_FID_P),	TPA$_EXIT)
	);

$STATE	(S_FID_P,
	('(')
	);
$STATE	(,
	(TPA$_DECIMAL,	,		,		,		EDF$GL_FID1)
	);
$STATE	(,
	(',')
	);
$STATE	(,
	(TPA$_DECIMAL,	,		,		,		EDF$GL_FID2)
	);
$STATE	(,
	(',')
	);
$STATE	(,
	(TPA$_DECIMAL,	,		,		,		EDF$GL_FID3)
	);
$STATE	(,
	(')',		TPA$_EXIT)
	);

! UIC

! +
!	Transition Type			Next State	Parameter
! -

$INIT_STATE (EDF$AB_UIC_TABLE_STA,EDF$AB_UIC_TABLE_KEY);

!	For UIC
!
!	State Name
!
!	Transisition	Next		Action				 Mask		Action Routine
!	   Type		State		Routine		Mask		Address		  Parameter
!
$STATE	(S_UIC,
	((S_UIC_P),	TPA$_EXIT)
	);

$STATE	(S_UIC_P,
	(TPA$_IDENT,	TPA$_EXIT,	,		,		EDF$GL_OWNER_UIC)
	);


! PROTECTION

! +
!	Transition Type			Next State	Parameter
! -

$INIT_STATE (EDF$AB_PROT_TABLE_STA,EDF$AB_PROT_TABLE_KEY);

!	For Protection Spec
!
!	(SYSTEM:RWED,OWNER:....)	or
!
!	(SYSTEM=RWED,OWNER=....)
!

!	State Name
!
!	Transisition	Next		Action				 Mask		Action Routine
!	   Type		State		Routine		Mask		Address		  Parameter
!
$STATE	(S_PROT,
	((S_PROT_P),	TPA$_EXIT)
	);

$STATE	(S_PROT_P,
	('(')
	);
$STATE	(S_NEXT_PROT,
	('SYSTEM',	S_SYSPR),
	('OWNER',	S_OWNPR),
	('GROUP',	S_GROPR),
	('WORLD',	S_WORPR)
	);

$STATE	(S_SYSPR,
	(':'),
	('='),
	(TPA$_LAMBDA,	S_END_PRO)
	);
$STATE	(S_SYSPRO,
	('R',		S_SYSPRO,	,		%X'0001',	EDF$GL_PROT_MASK),
	('W',		S_SYSPRO,	,		%X'0002',	EDF$GL_PROT_MASK),
	('E',		S_SYSPRO,	,		%X'0004',	EDF$GL_PROT_MASK),
	('D',		S_SYSPRO,	,		%X'0008',	EDF$GL_PROT_MASK),
	(TPA$_LAMBDA,	S_END_PRO)
	);

$STATE	(S_OWNPR,
	(':'),
	('='),
	(TPA$_LAMBDA,	S_END_PRO)
	);
$STATE	(S_OWNPRO,
	('R',		S_OWNPRO,	,		%X'0010',	EDF$GL_PROT_MASK),
	('W',		S_OWNPRO,	,		%X'0020',	EDF$GL_PROT_MASK), 
	('E',		S_OWNPRO,	,		%X'0040',	EDF$GL_PROT_MASK),
	('D',		S_OWNPRO,	,		%X'0080',	EDF$GL_PROT_MASK),
	(TPA$_LAMBDA,	S_END_PRO)
	);

$STATE	(S_GROPR,
	(':'),
	('='),
	(TPA$_LAMBDA,	S_END_PRO)
	);
$STATE	(S_GROPRO,
	('R',		S_GROPRO,	,		%X'0100',	EDF$GL_PROT_MASK),
	('W',		S_GROPRO,	,		%X'0200',	EDF$GL_PROT_MASK),
	('E',		S_GROPRO,	,		%X'0400',	EDF$GL_PROT_MASK),
	('D',		S_GROPRO,	,		%X'0800',	EDF$GL_PROT_MASK),
	(TPA$_LAMBDA,	S_END_PRO)
	);

$STATE	(S_WORPR,
	(':'),
	('='),
	(TPA$_LAMBDA,	S_END_PRO)
	);
$STATE	(S_WORPRO,
	('R',		S_WORPRO,	,		%X'1000',	EDF$GL_PROT_MASK),
	('W',		S_WORPRO,	,		%X'2000',	EDF$GL_PROT_MASK),
	('E',		S_WORPRO,	,		%X'4000',	EDF$GL_PROT_MASK),
	('D',		S_WORPRO,	,		%X'8000',	EDF$GL_PROT_MASK),
	(TPA$_LAMBDA,	S_END_PRO)
	);

$STATE	(S_END_PRO,
	(',',		S_NEXT_PROT),
	(')',		TPA$_EXIT)
	);

! ORGANIZATION

! +
!	Transition Type			Next State	Parameter
! -

$INIT_STATE (EDF$AB_ORG_TABLE_STA,EDF$AB_ORG_TABLE_KEY);

$STATE	(,
	('INDEXED',			TPA$_EXIT, ,,,	FDL$C_IDX),
	('RELATIVE',			TPA$_EXIT, ,,,	FDL$C_REL),
	('SEQUENTIAL',			TPA$_EXIT, ,,,	FDL$C_SEQ)
	);

! SOURCE/TARGET

! +
!	Transition Type			Next State	Parameter
! -

$INIT_STATE (EDF$AB_SOURCE_TABLE_STA,EDF$AB_SOURCE_TABLE_KEY);

$STATE	(,
	('IAS',				TPA$_EXIT, ,,,	FDL$C_IAS),
	('RSTS/E',			TPA$_EXIT, ,,,	FDL$C_RSTS),
	('RSX-11M',			TPA$_EXIT, ,,,	FDL$C_M),
	('RSX-11M-PLUS',		TPA$_EXIT, ,,,	FDL$C_MPLUS),
	('RT-11',			TPA$_EXIT, ,,,	FDL$C_RT),
	('TRAX-11',			TPA$_EXIT, ,,,	FDL$C_TRAX),
	('VAX/VMS',			TPA$_EXIT, ,,,	FDL$C_VMS)
	);

! RECOVERY_UNIT

! +
!	Transition Type			Next State	Parameter
! -

$INIT_STATE (EDF$AB_RU_TABLE_STA,EDF$AB_RU_TABLE_KEY);

$STATE	(,
	('IF_IN_RECOVERY_UNIT',		TPA$_EXIT, ,,,	FDL$C_IF_IN),
	('NECESSARY_TO_WRITE',		TPA$_EXIT, ,,,	FDL$C_NEC),
	('NEVER_RU_JOURNAL',		TPA$_EXIT, ,,,	FDL$C_NEVER),
	('NONE',			TPA$_EXIT, ,,,	FDL$C_NONE)
	);

! CARRIAGE_CONTROL

! +
!	Transition Type			Next State	Parameter
! -

$INIT_STATE (EDF$AB_CARR_TABLE_STA,EDF$AB_CARR_TABLE_KEY);

$STATE	(,
	('CARRIAGE_RETURN',		TPA$_EXIT, ,,,	FDL$C_CR),
	('FORTRAN',			TPA$_EXIT, ,,,	FDL$C_FTN),
	('NONE',			TPA$_EXIT, ,,,	FDL$C_NONE),
	('PRINT',			TPA$_EXIT, ,,,	FDL$C_PRINT)
	);

! FORMAT

! +
!	Transition Type			Next State	Parameter
! -

$INIT_STATE (EDF$AB_FORMAT_TABLE_STA,EDF$AB_FORMAT_TABLE_KEY);

$STATE	(,
	('FIXED',			TPA$_EXIT, ,,,	FDL$C_FIX),
	('STREAM',			TPA$_EXIT, ,,,	FDL$C_STM),
	('STREAM_CR',			TPA$_EXIT, ,,,	FDL$C_STMCR),
	('STREAM_LF',			TPA$_EXIT, ,,,	FDL$C_STMLF),
	('UNDEFINED',			TPA$_EXIT, ,,,	FDL$C_UDF),
	('VARIABLE',			TPA$_EXIT, ,,,	FDL$C_VAR),
	('VFC',				TPA$_EXIT, ,,,	FDL$C_VFC)
	);

! TYPE

! +
!	Transition Type			Next State	Parameter
! -

$INIT_STATE (EDF$AB_TYPE_TABLE_STA,EDF$AB_TYPE_TABLE_KEY);

$STATE	(,
	('BIN2',			TPA$_EXIT, ,,,	FDL$C_BN2),
	('BIN4',			TPA$_EXIT, ,,,	FDL$C_BN4),
	('BIN8',			TPA$_EXIT, ,,,	FDL$C_BN8),
	('DECIMAL',			TPA$_EXIT, ,,,	FDL$C_PAC),
	('INT2',			TPA$_EXIT, ,,,	FDL$C_IN2),
	('INT4',			TPA$_EXIT, ,,,	FDL$C_IN4),
	('INT8',			TPA$_EXIT, ,,,	FDL$C_IN8),
	('STRING',			TPA$_EXIT, ,,,	FDL$C_STG)
	);

! LOAD_METHOD

! +
!	Transition Type			Next State	Parameter
! -

$INIT_STATE (EDF$AB_LOAD_METHOD_TABLE_STA,EDF$AB_LOAD_METHOD_TABLE_KEY);

$STATE	(,
	('FAST_CONVERT',		TPA$_EXIT, ,,,	EDF$K_FAST_CONVERT),
	('NOFAST_CONVERT',		TPA$_EXIT, ,,,	EDF$K_NOFAST_CONVERT),
	('RMS_PUTS',			TPA$_EXIT, ,,,	EDF$K_RMS_PUTS)
	);

! BUCKET_WEIGHT

! +
!	Transition Type			Next State	Parameter
! -

$INIT_STATE (EDF$AB_WEIGHT_TABLE_STA,EDF$AB_WEIGHT_TABLE_KEY);

$STATE	(,
	('FLATTER_FILES',		TPA$_EXIT, ,,,	EDF$K_FLATTER_FILES),
	('SMALLER_BUFFERS',		TPA$_EXIT, ,,,	EDF$K_SMALLER_BUFFERS)
	);

! SURFACE_OPTION

! +
!	Transition Type			Next State	Parameter
! -

$INIT_STATE (EDF$AB_SURFACE_OPTION_TABLE_STA,EDF$AB_SURFACE_OPTION_TABLE_KEY);

$STATE	(,
	('ADD',				TPA$_EXIT, ,,,	EDF$K_ADDED_SURFACE),
	('FILL',			TPA$_EXIT, ,,,	EDF$K_FILL_SURFACE),
	('INIT',			TPA$_EXIT, ,,,	EDF$K_INIT_SURFACE),
	('KEY',				TPA$_EXIT, ,,,	EDF$K_KEY_SURFACE),
	('LINE',			TPA$_EXIT, ,,,	EDF$K_LINE_SURFACE),
	('RECORD',			TPA$_EXIT, ,,,	EDF$K_SIZE_SURFACE)
	);

! CURRENT_FUNC

! +
!	Transition Type			Next State	Parameter
! -

$INIT_STATE (EDF$AB_CURRENT_FUNC_TABLE_STA,EDF$AB_CURRENT_FUNC_TABLE_KEY);

$STATE	(,
	('ADD',				, ,,,	EDF$K_ADD),
	('DELETE',			, ,,,	EDF$K_DELETE),
	('EXIT',			, ,,,	EDF$K_EXIT),
	('HELP',			, ,,,	EDF$K_HELP),
	('INVOKE',			, ,,,	EDF$K_INVOKE),
	('MODIFY',			, ,,,	EDF$K_MODIFY),
	('QUIT',			, ,,,	EDF$K_QUIT),
	('SET',				, ,,,	EDF$K_SET),
	('VIEW',			, ,,,	EDF$K_VIEW)
	);

$STATE	(,
	(TPA$_EOS,			TPA$_EXIT),
	(TPA$_LAMBDA,			TPA$_FAIL)
	);

! DESIGN_CYCLE

! +
!	Transition Type			Next State	Parameter
! -

$INIT_STATE (EDF$AB_DESIGN_CYCLE_TABLE_STA,EDF$AB_DESIGN_CYCLE_TABLE_KEY);

$STATE	(,
	('AR',				TPA$_EXIT, ,,,	EDF$K_AR),	! ADDED RECORDS
	('BF',				TPA$_EXIT, ,,,	EDF$K_BF),	! BUCKET FILL
	('DK',				TPA$_EXIT, ,,,	EDF$K_DK),	! DUP KEYS
	('EM',				TPA$_EXIT, ,,,	EDF$K_EM),	! BUCKET EMPHASIS
	('FD',				TPA$_EXIT, ,,,	EDF$K_FINIS),	! DONE WITH CYCLING
	('IC',				TPA$_EXIT, ,,,	EDF$K_IC),	! INDEX RECORD COMPRESSION
	('IL',				TPA$_EXIT, ,,,	EDF$K_IL),	! INITIAL LOAD
	('KC',				TPA$_EXIT, ,,,	EDF$K_KC),	! DATA KEY COMPRESSION
	('KL',				TPA$_EXIT, ,,,	EDF$K_KL),	! KEY LENGTH
	('KP',				TPA$_EXIT, ,,,	EDF$K_KP),	! KEY POSITION
	('KT',				TPA$_EXIT, ,,,	EDF$K_KT),	! KEY TYPE
	('LM',				TPA$_EXIT, ,,,	EDF$K_LM),	! LOAD METHOD
	('PV',				TPA$_EXIT, ,,,	EDF$K_PV),	! PROLOGUE VERSION
	('RC',				TPA$_EXIT, ,,,	EDF$K_RC),	! DATA RECORD COMPRESSION
	('RF',				TPA$_EXIT, ,,,	EDF$K_RF),	! RECORD FORMAT
	('RS',				TPA$_EXIT, ,,,	EDF$K_RS)	! RECORD SIZE
	);

! SCRIPT_OPTION

! +
!	Transition Type			Next State	Parameter
! -

$INIT_STATE (EDF$AB_SCRIPT_OPTION_TABLE_STA,EDF$AB_SCRIPT_OPTION_TABLE_KEY);

$STATE	(,
	('ADD_KEY',			TPA$_EXIT, ,,,	EDF$K_ADD_KEY_FDL),
	('DELETE_KEY',			TPA$_EXIT, ,,,	EDF$K_DELETE_KEY_FDL),
	('INDEXED',			TPA$_EXIT, ,,,	EDF$K_IDX_DESIGN_FDL),
	('OPTIMIZE',			TPA$_EXIT, ,,,	EDF$K_OPTIMIZE_FDL),
	('RELATIVE',			TPA$_EXIT, ,,,	EDF$K_REL_DESIGN_FDL),
	('SEQUENTIAL',			TPA$_EXIT, ,,,	EDF$K_SEQ_DESIGN_FDL),
	('TOUCHUP',			TPA$_EXIT, ,,,	EDF$K_REDESIGN_FDL)
	);

! YES_NO

! +
!	Transition Type			Next State	Parameter
! -

$INIT_STATE (EDF$AB_YES_NO_TABLE_STA,EDF$AB_YES_NO_TABLE_KEY);

$STATE	(,
	('FALSE',			TPA$_EXIT, ,,,	EDF$K_NO),
	('NO',				TPA$_EXIT, ,,,	EDF$K_NO),
	('TRUE',			TPA$_EXIT, ,,,	EDF$K_YES),
	('YES',				TPA$_EXIT, ,,,	EDF$K_YES)
	);

! SET_FUNCTION

! +
!	Transition Type			Next State	Parameter
! -

$INIT_STATE (EDF$AB_SET_FUNCTION_TABLE_STA,EDF$AB_SET_FUNCTION_TABLE_KEY);

$STATE	(,
	('ANALYSIS',			TPA$_EXIT, ,,,	EDF$K_SET_ANALYSIS),
	('DISPLAY',			TPA$_EXIT, ,,,	EDF$K_SET_DISPLAY),
	('EMPHASIS',			TPA$_EXIT, ,,,	EDF$K_SET_EMPHASIS),
	('GRANULARITY',			TPA$_EXIT, ,,,	EDF$K_SET_GRANULARITY),
	('NUMBER_KEYS',			TPA$_EXIT, ,,,	EDF$K_SET_NUMBER_KEYS),
	('OUTPUT',			TPA$_EXIT, ,,,	EDF$K_SET_OUTPUT),
	('PROMPTING',			TPA$_EXIT, ,,,	EDF$K_SET_PROMPTING),
	('RESPONSES',			TPA$_EXIT, ,,,	EDF$K_SET_RESPONSES)
	);

! GRANULARITY

! +
!	Transition Type			Next State	Parameter
! -

$INIT_STATE (EDF$AB_GRANULARITY_TABLE_STA,EDF$AB_GRANULARITY_TABLE_KEY);

$STATE	(,
	('1',				TPA$_EXIT, ,,,	EDF$K_ONE),
	('2',				TPA$_EXIT, ,,,	EDF$K_TWO),
	('3',				TPA$_EXIT, ,,,	EDF$K_THREE),
	('4',				TPA$_EXIT, ,,,	EDF$K_FOUR),
	('DOUBLE',			TPA$_EXIT, ,,,	EDF$K_DOUBLE),
	('FOUR',			TPA$_EXIT, ,,,	EDF$K_FOUR),
	('ONE',				TPA$_EXIT, ,,,	EDF$K_ONE),
	('THREE',			TPA$_EXIT, ,,,	EDF$K_THREE),
	('TWO',				TPA$_EXIT, ,,,	EDF$K_TWO)
	);

! PROMPTING

! +
!	Transition Type			Next State	Parameter
! -

$INIT_STATE (EDF$AB_PROMPTING_TABLE_STA,EDF$AB_PROMPTING_TABLE_KEY);

$STATE	(,
	('BRIEF',			TPA$_EXIT, ,,,	EDF$K_BRIEF),
	('FULL',			TPA$_EXIT, ,,,	EDF$K_FULL)
	);

! RESPONSES

! +
!	Transition Type			Next State	Parameter
! -

$INIT_STATE (EDF$AB_RESPONSES_TABLE_STA,EDF$AB_RESPONSES_TABLE_KEY);

$STATE	(,
	('AUTOMATIC',			TPA$_EXIT, ,,,	EDF$K_AUTO),
	('MANUAL',			TPA$_EXIT, ,,,	EDF$K_MAN)
	);

END ELUDOM
