%TITLE 'EDT$CALLFIO - calls fileio routine'
MODULE EDT$CALLFIO (				! Calls file I/O routine for EDT
		IDENT = 'V04-000'			! File: CALLFIO.BLI Edit: JBS1008
		) =
BEGIN
!
!****************************************************************************
!*									    *
!*  COPYRIGHT (c) 1978, 1980, 1982, 1984 BY				    *
!*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
!*  ALL RIGHTS RESERVED.						    *
!* 									    *
!*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
!*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
!*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
!*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
!*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
!*  TRANSFERRED.							    *
!* 									    *
!*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
!*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
!*  CORPORATION.							    *
!* 									    *
!*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
!*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
!* 									    *
!*									    *
!****************************************************************************
!

!++
! FACILITY:	EDT -- The DEC Standard Editor
!
! ABSTRACT:
!
!	This routine calls the basic file i/o routine used by EDT.
!
! ENVIRONMENT:	Runs on Vax/Vms
!
! AUTHOR: Shelly T. Solomon, CREATION DATE: 03-Jan-1982
!
! MODIFIED BY:
!
! 1-001	- Original.  STS 03-Jan-1982
! 1-002 - Add fcode to the enabled parameters. STS 25-Feb-1982
! 1-003 - Signal if bad status returned on VMS. STS 09-Mar-1982
! 1-003 - Deallocate everything you can if unwinding. STS 09-Mar-1982
! 1-004	- Clear EDT$$G_IOFI_NFND before calling file I/O.  JBS 26-Mar-1982
! 1-006 - Take out reference to edt$$a_file_rout on 11's. STS 02-Jun-1982
! 1-007	- Don't try to deallocate strings which may not be there.  JBS 22-Feb-1983
! 1-008	- Improve the appearance of the listing.  JBS 13-Jun-1983
!--


%SBTTL 'Declarations'
!
! TABLE OF CONTENTS:
!

REQUIRE 'EDTSRC:TRAROUNAM';

FORWARD ROUTINE
    EDT$$CALLFIO;

!
! LINKAGES
!

LINKAGE
    IOCALL = CALL (REGISTER = 1);		! special linkage for file routine

!
! INCLUDE FILES:
!

REQUIRE 'EDTSRC:EDTREQ';

%IF %BLISS (BLISS32)
%THEN

REQUIRE 'EDTSRC:SYSSYM';

%FI

!
! MACROS:
!
!	NONE
!
! EQUATED SYMBOLS:
!

EXTERNAL LITERAL
    EDT$K_GET;

!
! OWN STORAGE:
!
!	NONE
!
! EXTERNAL REFERENCES:
!
! in the routine
!

%SBTTL 'EDT$CALLFIO - Calls EDT file routine'

GLOBAL ROUTINE EDT$$CALLFIO (			! Calls EDT file routine
    FILECODE, 					! Function code
    FILESTRM, 					! Stream identification
    FILE_REC, 					! File name or record descriptor
    FILE_RHB					! Default name or record header descriptor
    ) : =

!++
! FUNCTIONAL DESCRIPTION:
!
! This routine sets up a condition handler and then calls the designated
! file I/O routine.
!
! FORMAL PARAMETERS:
!
! filecode = function code defining type of I/O operation to be performed
! filestream = stream identifier
! file_rec = address of string descriptor, i.e. the file name or place to store
!   record read or place to fetch record to be written
! file_rhb = address of string descriptor for any record prefixes
!
! IMPLICIT INPUTS:
!
!	NONE
!
! IMPLICIT OUTPUTS:
!
!	EDT$$G_IOFI_NFND	1 = file not found on open
!
! COMPLETION STATUS:
!
!	Same as the file I/O routine
!
! SIDE EFFECTS:
!
!	NONE
!
!--

    BEGIN

%IF %BLISS (BLISS32)
%THEN

    EXTERNAL ROUTINE
	STR$FREE1_DX,
	EDT$$SC_RESET,
	EDT$$DEA_ALLHEAP,
	EDT$$FIOHNDLR;

    EXTERNAL
	EDT$$A_FILE_ROUT,			! address of routine for file I/O
	EDT$$G_FILE_ENV,			! file routine environment word
	EDT$$G_EDIT_MOD;

%ELSE

    EXTERNAL ROUTINE
	EDT$FILEIO;

%FI

    EXTERNAL
	EDT$$G_IOFI_NFND;			! 1 = file not found (set by handler)

    MESSAGES ((PASSTATUS));

    LOCAL
	STATUS;

%IF %BLISS (BLISS32)
%THEN

    LOCAL
	FCODE : VOLATILE,
	STREAM : VOLATILE;

    ENABLE
	EDT$$FIOHNDLR (STREAM, FCODE);		! on VAX enable a handler for error processing

    STREAM = .FILESTRM;
    FCODE = .FILECODE;
%FI

    EDT$$G_IOFI_NFND = 0;
!+
! The following call is a general routine call using the linkage defined
! as iocall.  i.e. what is happening is that a call is being made to the
! routine whose address is contained in the variable EDT$$A_FILE_ROUT.
! The contents of the variable EDT$$G_FILE_ENV is first put into register 1
! for the call. (This is done because of the requirements of callable EDT
! where the user can specify his own file routine and some high-level
! languages require an environment word to be passed in register 0.)
! The remaining four parameters in the list are the actual parameters
! passed to the file I/O routine.
!-

%IF %BLISS (BLISS32)
%THEN
    STATUS = IOCALL (.EDT$$A_FILE_ROUT, .EDT$$G_FILE_ENV, %REF (.FILECODE), %REF (.FILESTRM), .FILE_REC,
	.FILE_RHB);
%ELSE
    STATUS = EDT$FILEIO (%REF (.FILECODE), %REF (.FILESTRM), .FILE_REC, .FILE_RHB);
%FI

%IF %BLISS (BLISS32)
%THEN						! on VMS signal any bad status returned

IF ( NOT .STATUS)
    THEN

	IF ((.STATUS NEQ RMS$_EOF) OR (.FILECODE NEQ EDT$K_GET))
	THEN
	    BEGIN
!+
! Deallocate as much as you can - this is going to be an
! exit from EDT.
!-

	    IF (.EDT$$G_EDIT_MOD EQL CHANGE_MODE) THEN EDT$$SC_RESET ();

	    EDT$$DEA_ALLHEAP ();
	    SIGNAL_STOP (EDT$_PASSTATUS, 0, .STATUS, 0);
	    END;

%FI

    RETURN (.STATUS);
    END;					! End of routine CALLFIO

!<BLF/PAGE>

END						! End of module CALLFIO

ELUDOM
