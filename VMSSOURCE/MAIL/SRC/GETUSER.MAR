	.TITLE	MAIL$GETUSER		GET USER AUTHORIZATION INFO
	.IDENT	'V04-000'
;
;****************************************************************************
;*									    *
;*  COPYRIGHT (c) 1978, 1980, 1982, 1984 BY				    *
;*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
;*  ALL RIGHTS RESERVED.						    *
;* 									    *
;*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
;*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
;*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
;*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
;*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
;*  TRANSFERRED.							    *
;* 									    *
;*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
;*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
;*  CORPORATION.							    *
;* 									    *
;*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
;*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
;* 									    *
;*									    *
;****************************************************************************
;

;++
; FACILITY:	VAX/VMS MAIL UTILITY
;
; ABSTRACT:	GET USER AUTHORIZATION INFO
;
;
; ENVIRONMENT:	NATIVE/USER MODE 
;
; AUTHOR:	LEN KAWELL, CREATION DATE: 23-AUG-78
;
; MODIFICATION HISTORY:
;
;	V03-009	BLS0261		Benn Schreiber		16-Jan-1984
;		UAF$B_FLAGS is now UAF$L_FLAGS
;
;	V03-008	BLS0255		Benn Schreiber		28-Dec-1983
;		Use new global flags
;
;	V03-007	BLS0229		Benn Schreiber		16-Jul-1983
;		SYSUAF is now only read.  Remove unneeded routines to
;		lock and update uaf records.  Make uaf buffer allocated
;		dynamically rather than static.  Change DSBMSK usage
;		to LNM_MODE.
;
;	V03-006	BLS0227		Benn Schreiber		 1-Jul-1983
;		If network slave, tell node name with NOSUCHUSR error
;
;	V03-005	BLS0221		Benn Schreiber		 5-May-1983
;		Fix handling of SYSPRV
;
;	V03-004	BLS0211		Benn Schreiber		13-Mar-1983
;		Prevent looping on global buffer error
;
;	V03-003	BLS0197		Benn Schreiber		 9-Dec-1982
;		Handle case of failing to map global buffers on SYSUAF
;
;	V03-002	BLS0182		Benn Schreiber		 4-Aug-1982
;		Disable process and group logical name table searches
;
;	V03-001	BLS0177		Benn Schreiber		21-Jun-1982
;		Remove definition of UAF$S_USERNAME, as it is in $UAFDEF
;--
	.PAGE
	.SBTTL	DECLARATIONS
;
; INCLUDE FILES:
;

;
; MACROS:
;

;
; EQUATED SYMBOLS:
;
	MAIFDEF				;MAIL CONTROL FLAG DEFINITIONS
	$PRVDEF				;PROCESS PRIVILEGE DEFINITIONS
	$PSLDEF				;PROCESSOR STATUS LONGWORD DEFS
	$UAFDEF				;USER AUTHORIZATION FILE DEFINTITIONS
	$STSDEF				;STATUS MESSAGE DEFINITIONS

	.GLOBAL	UAF$L_FLAGS,UAF$V_NOMAIL ;MAKE SYMBOLS GLOBAL FOR ADDRLIST

USERNAME	= 4			;USER NAME ARGUMENT OFFSET
REC_ADDR	= 8			;RECORD ADDRESS ARGUMENT OFFSET

RETRY_RLK 	= 2			;NUMBER OF RETRIES IF RECORD IS LOCKED
SLEEP_RLK	= 75			;MSEC TO SLEEP BEFORE RETRYING A $GET

;
; OWN STORAGE:
;
	.PSECT	$OWN$,LONG,RD,WRT,NOEXE

	.ALIGN	LONG

MAIL$T_UAF_BUFF::			;ADDRESS OF UAF BUFFER
	.LONG	0
UAF_FAB:				;USER AUTHORIZATION FILE FAB
	$FAB-
	DNM=<SYS$SYSTEM:.DAT>,-		; DEFAULT NAME
	FNM=<SYSUAF>,-			; FILE NAME (SEPARATED FOR: $ DEFINE SYSUAF XXX)
	FAC=<GET>,-			; GET ACCESS
	SHR=<PUT,GET,DEL,UPD>		; SHARED ACCESS

UAF_RAB:				;USER AUTHORIZATION FILE RAB
	$RAB-
	FAB=UAF_FAB,-			; ADDR OF FAB
	KBF=NAME_BUFF,-			; KEY BUFFER
	KSZ=UAF$S_USERNAME,-		; KEY SIZE
	RAC=KEY,-			; RECORD ACCESS BY KEY
	ROP=RLK,-			; READ OF LOCKED RECORD ALLOWED
	USZ=UAF$C_LENGTH		; BUFFER SIZE

NAME_BUFF:
	.BLKB	UAF$S_USERNAME		; KEY BUFFER
	.PSECT	$PLIT$,LONG,RD,NOWRT,NOEXE

WAKEDELTA:				;LOCKED RECORD RETRY HIBERNATE TIME
	.LONG	-10*1000*SLEEP_RLK,-1

	.PSECT	$CODE$,LONG,RD,NOWRT,EXE

	.PAGE
	.SBTTL	MAIL$OPEN_UAF
;++
; FUNCTIONAL DESCRIPTION:
;
;	OPEN SYSTEM USER AUTHORIZATION FILE
;
; CALLING SEQUENCE:
;	CALL MAIL$OPEN_UAF
;
; INPUT PARAMETERS:
;	NONE
;
; IMPLICIT INPUTS:
;	NONE
;
; OUTPUT PARAMETERS:
;	NONE
;
; IMPLICIT OUTPUTS:
;	NONE
;
; COMPLETION CODES:
;	R0 = SUCCESS OR FAILURE
;
; SIDE EFFECTS:
;	FAILURES SIGNALLED.
;
;--
	.ENTRY	MAIL$OPEN_UAF,^M<R2,R3>	;OPEN USER AUTHORIZATION FILE
	MOVAB	UAF_FAB,R2		;POINT AT THE FAB
	MOVAB	UAF_RAB,R3		;AND THE RAB
	INSV	#PSL$C_EXEC,#FAB$V_LNM_MODE,- ;SEARCH ONLY SYSTEM LOG NAMES
		#FAB$S_LNM_MODE,FAB$B_ACMODES(R2)
	CLRL	-(SP)			;ENABLE SYSTEM UIC PRIVILEGE
	PUSHL	#<1@PRV$V_SYSPRV>
	CALLS	#2,MAIL$UP_PRIV		;RAISE PRIVILEGES
	$OPEN	(R2)			;OPEN AUTHORIZATION FILE
	PUSHL	R0			;SAVE STATUS
	CALLS	#0,MAIL$DOWN_PRIV	;DISABLE SYSTEM UIC PRIVILEGE
	POPL	R0			;RESTORE STATUS
	BLBC	R0,10$			;BR IF ERROR
	MOVL	MAIL$T_UAF_BUFF,RAB$L_UBF(R3) ;SET USER BUFFER ADDRESS
5$:	$CONNECT (R3)			;CONNECT THE RAB
	BLBS	R0,20$			;BR IF SUCCESS
	MOVL	RAB$L_STS(R3),FAB$L_STS(R2) ;SAVE INFO IN FAB FOR ERROR
	CMPL	R0,#RMS$_CRMP		;WAS IT FAILURE TO MAP GLOBAL BUFFERS?
	BNEQ	10$			;BRANCH IF NOT
	TSTW	FAB$W_GBC(R2)		;BEEN HERE ALREADY?
	BEQL	10$			;IF EQL YES--GO REPORT ERROR
	CLRW	FAB$W_GBC(R2)		;CLEAR THE GLOBAL BUFFER COUNT
	BRB	5$			;AND TRY AGAIN
10$:
	PUSHL	FAB$L_STV(R2)		;SET RMS STATUS VALUE
	PUSHL	R0			;SET RMS STATUS
	PUSHL	#0			;SET FAO COUNT
	PUSHL	#MAIL$_UAFOPNERR	;SET ERROR STATUS
	CALLS	#4,G^LIB$SIGNAL		;SIGNAL THE ERROR
	BISL	#STS$M_INHIB_MSG,R0	;INHIBIT FURTHER MESSAGES
20$:
	RET

	.PAGE
	.SBTTL	MAIL$GET_USER
;++
; FUNCTIONAL DESCRIPTION:
;
;	GET AND USER ATHORIZATION RECORD.
;
; CALLING SEQUENCE:
;	CALL MAIL$GET_USER(USERNAME)
;
; INPUT PARAMETERS:
;	USERNAME = ADDR OF USERNAME DESC
;
; IMPLICIT INPUTS:
;	UAF_FAB IS OPEN AND UAF_RAB IS CONNECTED TO IT.
;
; OUTPUT PARAMETERS:
;	NONE
;
; IMPLICIT OUTPUTS:
;	MAIL$T_UAF_BUFF = ADDRESS OF USER AUTHORIZATION RECORD.
;
; COMPLETION CODES:
;	R0 = SUCCESS OR FAILURE.
;
; SIDE EFFECTS:
;	FAILURES SIGNALLED.
;
;--
	.ENTRY	MAIL$GET_USER,-		;GET USER AUTHORIZATION RECORD
		^M<R2,R3,R4,R5>		;
	BISL	#RAB$M_NLK,RAB$L_ROP+UAF_RAB ;SET NO-LOCK FLAG
;
; GET THE RECORD
;
	MOVL	USERNAME(AP),R4		;GET ADDR OF USERNAME DESC
	MOVC5	(R4),@4(R4),#^A" ",#UAF$S_USERNAME,NAME_BUFF ;BLANK FILL NAME
	MOVL	#RETRY_RLK,R3		;INIT RETRY COUNTER
	BRB	20$			;SKIP WAIT THE FIRST TIME
10$:	$SCHDWK_S DAYTIM=WAKEDELTA	;SCHEDULE A WAKEUP REQUEST
	BLBC	R0,20$			;BR IF FAILURE
	$HIBER_S			;HIBERNATE FOR A WHILE
20$:	$GET	UAF_RAB			;GET THE USER'S RECORD
	BLBS	R0,30$			;BR IF SUCCESS
	CMPL	R0,#RMS$_RLK		;RECORD LOCK ERROR?
	BNEQ	GET_ERR			;BR IF NOT
	SOBGEQ	R3,10$			;TRY AGAIN IF IT WAS
	BRB	GET_ERR			;
30$:
	RET
;
; ERROR GETTING RECORD
;
GET_ERR:				;ERROR READING UAF
	CMPL	#RMS$_RNF,R0		;RECORD NOT FOUND?
	BNEQ	10$			;IF NEQ NO - SOME OTHER ERROR
	BBC	#MAIF_V_NETJOB,MAIL$GL_FLAGS,5$ ;BRANCH IF NOT NETWORK JOB
	PUSHAQ	MAIL$Q_SYSNODE		;STACK ADDR OF NODE NAME
	PUSHAQ	@USERNAME(AP)		;SET ADDR OF USERNAME DESC
	PUSHL	#2			;SET NUMBER OF FAO ARGS
	PUSHL	#MAIL$_NOSUCHUSRAT	;ERROR STATUS
	CALLS	#4,G^LIB$SIGNAL		;SIGNAL THE ERROR
	RET
5$:	PUSHAQ	@USERNAME(AP)		;SET ADDR OF USERNAME DESC
	PUSHL	#1			;SET NUMBER OF FAO ARGUMENTS
	PUSHL	#MAIL$_NOSUCHUSR	;SET ERROR STATUS
	CALLS	#3,G^LIB$SIGNAL		;SIGNAL THE ERROR
	RET
10$:
	PUSHL	RAB$L_STV+UAF_RAB	;SET RMS STATUS VALUE
	PUSHL	R0			;SET RMS STATUS
	PUSHL	#0			;SET FAO COUNT
	PUSHL	#MAIL$_UAFGETERR	;SET ERROR STATUS
	CALLS	#3,G^LIB$SIGNAL		;SIGNAL THE ERROR
	RET

	.END
