MODULE PAS$TRUNCATE ( %TITLE 'TRUNCATE procedure'
		IDENT = '1-003'			! File: PASTRUNCA.B32 Edit: SBL1003
		) =
BEGIN
!
!****************************************************************************
!*									    *
!*  COPYRIGHT (c) 1978, 1980, 1982, 1984 BY				    *
!*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
!*  ALL RIGHTS RESERVED.						    *
!* 									    *
!*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
!*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
!*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
!*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
!*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
!*  TRANSFERRED.							    *
!* 									    *
!*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
!*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
!*  CORPORATION.							    *
!* 									    *
!*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
!*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
!* 									    *
!*									    *
!****************************************************************************
!

!++
! FACILITY:	Pascal Language Support
!
! ABSTRACT:
!
!	This module contains PAS$TRUNCATE, which implements the
!	VAX-11 Pascal TRUNCATE procedure.
!
! ENVIRONMENT:	User mode - AST reentrant
!
! AUTHOR: Steven B. Lionel, CREATION DATE: 29-January-1982
!
! MODIFIED BY:
!
! 1-001	- Original.  SBL 29-January-1982
! 1-002 - Set FAB$V_TEF after truncate.  SBL 12-Jul-1982
! 1-003 - Don't do $TRUNCATE if not a file oriented device.  SBL 29-July-1982
!--


%SBTTL 'Declarations'
!
! PROLOGUE DEFINITIONS:
!

REQUIRE 'RTLIN:PASPROLOG';			! Externals, linkages, PSECTs, structures

!
! TABLE OF CONTENTS:
!

FORWARD ROUTINE
    PAS$TRUNCATE: NOVALUE;				! Do a TRUNCATE

!
! MACROS:
!
!	NONE
!
! EQUATED SYMBOLS:
!
!	NONE
!
! FIELDS:
!
!	NONE
!
! OWN STORAGE:
!
!	NONE

%SBTTL 'PAS$TRUNCATE - TRUNCATE procedure'
GLOBAL ROUTINE PAS$TRUNCATE (
	PFV: REF $PAS$PFV_FILE_VARIABLE, 		! File variable
	ERROR						! Unwind address if error
    ): NOVALUE =

!++
! FUNCTIONAL DESCRIPTION:
!
!	PAS$TRUNCATE implements the VAX-11 Pascal TRUNCATE procedure.  It
!	deletes the current component and all following components from the
!	file and enters Generation mode.
!
! CALLING SEQUENCE:
!
!	CALL PAS$TRUNCATE (PFV.mr.r [, ERROR.j.r])
!
! FORMAL PARAMETERS:
!
!	PFV		- The Pascal File Variable (PFV) passed by reference.
!			  The structure of the PFV is defined in PASPFV.REQ.
!
!	ERROR		- Optional.  If specified, the address to unwind to
!			  if an error occurs.
!
! IMPLICIT INPUTS:
!
!	NONE
!
! IMPLICIT OUTPUTS:
!
!	FAB$V_TEF = 1
!
! ROUTINE VALUE:
!
!	NONE
!
! SIDE EFFECTS:
!
!	Places file in Generation mode
!
! SIGNALLED ERRORS:
!
!	FILNOTOPE - File not open
!	FILNOTSEQ - File is not sequential organization
!	FILNOTINS - File is not in Inspection mode
!	GENNOTALL - Generation mode is not allowed for READONLY file
!	TRUNOTALL - TRUNCATE is not allowed on a shared file
!	ERRDURTRU - Error during TRUNCATE
!
!--

    BEGIN

    LOCAL
	FCB: REF $PAS$FCB_CONTROL_BLOCK,		! File control block
	PFV_ADDR: VOLATILE,				! Enable argument
	UNWIND_ACT: VOLATILE,				! Enable argument
	ERROR_ADDR: VOLATILE;				! Enable argument

    BIND
	RAB = FCB: REF BLOCK [, BYTE],			! RMS RAB
	FAB = FCB: REF $PAS$FAB_FCB_STRUCT;		! RMS FAB

    BUILTIN
	ACTUALCOUNT;

    ENABLE
	PAS$$IO_HANDLER (PFV_ADDR, UNWIND_ACT, ERROR_ADDR);

    IF ACTUALCOUNT () GEQU 2
    THEN
	ERROR_ADDR = .ERROR;				! Set unwind address

    !+
    ! Set PFV address enable argument.
    !-

    PFV_ADDR = PFV [PFV$R_PFV];

    !+
    ! Validate and lock PFV
    !-

    PAS$$VALIDATE_PFV (PFV [PFV$R_PFV]; FCB);

    !+
    ! Set unwind action to unlock file.
    !-

    UNWIND_ACT = PAS$K_UNWIND_UNLOCK;

    !+
    ! Resolve lazy lookahead, if any.
    !-

    IF NOT .PFV [PFV$V_VALID]
    THEN
	PAS$$LOOK_AHEAD (PFV [PFV$R_PFV], FCB [FCB$R_FCB]; FCB);

    !+
    ! Verify that the file is open.
    !-

    IF NOT .PFV [PFV$V_OPEN]
    THEN
	$PAS$IO_ERROR (PAS$_FILNOTOPE,0);

    !+
    ! Verify that the file is in Inspection mode.
    !-

    IF NOT .FCB [FCB$V_INSPECTION]
    THEN
	$PAS$IO_ERROR (PAS$_FILNOTINS,0);

    !+
    ! Verify that Generation mode is allowed for this file.
    !-

    IF .FCB [FCB$V_NOWRITE]
    THEN
	$PAS$IO_ERROR (PAS$_GENNOTALL,0);

    !+
    ! Verify that the file is sequential organization
    !-

    IF .FAB [FAB$B_ORG] NEQ FAB$C_SEQ
    THEN
	$PAS$IO_ERROR (PAS$_FILNOTSEQ,0);

    !+
    ! Verify that the file is opened for exclusive access
    !-

    IF NOT .FAB [FAB$V_NIL]
    THEN
	$PAS$IO_ERROR (PAS$_TRUNOTALL,0);

    
    !+
    ! If the file is not already at EOF and is file oriented, do the truncate.
    !+

    IF (NOT .FCB [FCB$V_EOF]) AND .FCB [FCB$V_FOD]
    THEN
	IF NOT $PAS$RMS_OP ($TRUNCATE (RAB=.RAB))
	THEN
	    $PAS$IO_ERROR (PAS$_ERRDURTRU);	! Error during TRUNCATE

    !+
    ! Set FAB$V_TEF so that unused space is deallocated when the file
    ! is closed.
    !-

    FAB [FAB$V_TEF] = 1;

    !+
    ! Reset record buffer pointers
    !-

    FCB [FCB$A_RECORD_BEG] = .RAB [RAB$L_UBF];
    FCB [FCB$A_RECORD_CUR] = .FCB [FCB$A_RECORD_BEG];
    FCB [FCB$L_RECORD_LEN] = .RAB [RAB$W_USZ];
    FCB [FCB$A_RECORD_END] = .FCB [FCB$A_RECORD_BEG] + .FCB [FCB$L_RECORD_LEN];

    !+
    ! Set "truncate on put" bit so that first $PUT will truncate the file.
    ! This is required for magtapes since RMS won't $PUT to an empty
    ! magtape file without it.
    !-

    RAB [RAB$V_TPT] = 1;

    !+
    ! Set Generation mode
    ! Indicate at EOF
    ! Cancel previous LOCATE
    ! Indicate successful operation
    ! Undefine file buffer
    ! Unlock the file
    !-

    FCB [FCB$V_INSPECTION] = 0;
    FCB [FCB$V_GENERATION] = 1;
    FCB [FCB$V_EOF] = 1;
    FCB [FCB$V_LOCATE] = 0;
    FCB [FCB$L_STATUS] = 0;
    PFV [PFV$V_DFB] = 0;
    PFV [PFV$V_EOF_DEFINED] = 1;
    PFV [PFV$V_LOCK] = 0;

    RETURN;

    END;					! End of routine PAS$TRUNCATE

!<BLF/PAGE>

END						! End of module PAS$TRUNCATE

ELUDOM
