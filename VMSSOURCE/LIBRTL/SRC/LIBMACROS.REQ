! Macros for the Run-Time Library LIB$ facility
! File: LIBMACROS.REQ, Edit: SBL1003
!
!****************************************************************************
!*									    *
!*  COPYRIGHT (c) 1978, 1980, 1982, 1984 BY				    *
!*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
!*  ALL RIGHTS RESERVED.						    *
!* 									    *
!*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
!*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
!*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
!*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
!*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
!*  TRANSFERRED.							    *
!* 									    *
!*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
!*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
!*  CORPORATION.							    *
!* 									    *
!*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
!*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
!* 									    *
!*									    *
!****************************************************************************
!
! Author: Steven B. Lionel, 16-August-1982
!
! 1-001 - Original.  SBL 16-August-1982
! 1-002 - Add macros to read, write and copy with autoincrement.
!	  SBL 12-Apr-1983
! 1-003 - Add $LIB$MOVQ.  SBL 17-June-1983
!--

!+
! This file contains macros which are available to any BLISS module that
! REQUIREs LIBPROLOG.REQ.  Macros in this file are useful to any LIB$
! module written in BLISS.  All macros defined MUST have names that begin
! with "$LIB$".
!-

!+
! $LIB$VALIDATE_ARGCOUNT
!
! Macro used to check that a LIB$ procedure was called with the correct
! number of arguments.  If the test fails, the procedure returns with the
! failure status LIB$_WRONUMARG.
!
! Format:
!	$LIB$VALIDATE_ARGCOUNT (lo, hi);
!
!	lo = Lowest number of arguments which are valid (0-255)
!	hi = Highest number of arguments which are valid (0-255)
!-

MACRO
    $LIB$VALIDATE_ARGCOUNT (lo, hi) =
	BEGIN
	BUILTIN
	    ACTUALCOUNT;
	EXTERNAL LITERAL
	    LIB$_WRONUMARG;

	%IF lo NEQ hi
	%THEN
	    %IF lo NEQ 0
	    %THEN
		LOCAL
		    DIFF: BYTE;
		DIFF = ACTUALCOUNT () - lo;
		IF .DIFF  GTRU (hi - lo)
		THEN
		    RETURN LIB$_WRONUMARG;
	    %ELSE
		IF ACTUALCOUNT () GTRU hi
		THEN
		    RETURN LIB$_WRONUMARG;
	    %FI

	%ELSE
	    IF ACTUALCOUNT () NEQU lo
	    THEN
		RETURN LIB$_WRONUMARG;
	%FI

	END %;

!+
! Macros to read, write and copy with autoincrement.
!-

MACRO
    $LIB$RBYTE_A(P) = (P = .P+1; .(.P-1)<0, 8>) %,
    $LIB$RWORD_A(P) = (P = .P+2; .(.P-2)<0,16>) %,
    $LIB$RLONG_A(P) = (P = .P+4; .(.P-4)<0,32>) %,

    $LIB$WBYTE_A(P) = (P=.P+1; .P-1)<0,8> %,
    $LIB$WWORD_A(P) = (P=.P+2; .P-2)<0,16> %,
    $LIB$WLONG_A(P) = (P=.P+4; .P-4)<0,32> %,

    $LIB$COPY_BYTE_A (S,D) = ($LIB$WBYTE_A(D)=$LIB$RBYTE_A(S)) %,
    $LIB$COPY_WORD_A (S,D) = ($LIB$WWORD_A(D)=$LIB$RWORD_A(S)) %,
    $LIB$COPY_LONG_A (S,D) = ($LIB$WLONG_A(D)=$LIB$RLONG_A(S)) %,
    $LIB$COPY_QUAD_A (S,D) = ((.D)<0,32>=.(.S)<0,32>; 
	(.D+4)<0,32>=.(.S+4)<0,32>; D=.D+8; S=.S+8) %;

!+
! Macro to move a quadword with a MOVQ instruction.
!-

MACRO
    $LIB$MOVQ (S,D) =
	BEGIN
	(D) = .(S);
	((D)+4) = .((S)+4);
	END %;


! End of file LIBMACROS.REQ
