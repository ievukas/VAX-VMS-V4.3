MODULE PAS$BIN ( %TITLE 'Convert value in base 2 to string'
		IDENT = '1-001'			! File: PASBIN.B32 Edit: SBL1001
		) =
BEGIN
!
!****************************************************************************
!*									    *
!*  COPYRIGHT (c) 1978, 1980, 1982, 1984 BY				    *
!*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
!*  ALL RIGHTS RESERVED.						    *
!* 									    *
!*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
!*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
!*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
!*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
!*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
!*  TRANSFERRED.							    *
!* 									    *
!*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
!*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
!*  CORPORATION.							    *
!* 									    *
!*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
!*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
!* 									    *
!*									    *
!****************************************************************************
!

!++
! FACILITY:	Pascal Language Support
!
! ABSTRACT:
!
!	This module contains PAS$BIN which implements the
!	VAX-11 Pascal BIN procedure.
!
! ENVIRONMENT:	User mode - AST reentrant
!
! AUTHOR: Steven B. Lionel, CREATION DATE: 1-April-1981
!
! MODIFIED BY:
!
! 1-001	- Original.  SBL 1-April-1981
!--


%SBTTL 'Declarations'
!
! PROLOGUE DEFINITIONS
!

REQUIRE 'RTLIN:PASPROLOG';			! Externals, linkages, PSECTs, structures

!
! TABLE OF CONTENTS:
!

FORWARD ROUTINE
    PAS$BIN: NOVALUE;				! Convert value in base 2

!
! MACROS:
!
!	NONE
!
! EQUATED SYMBOLS:
!
!	NONE
!
! FIELDS:
!
!	NONE
!
! OWN STORAGE:
!
!	NONE
!

!! If this is for a V2 system, redefine OTS$CVT_L_TB as PAS$CVT_L_TB.
%IF %VARIANT
%THEN
UNDECLARE
    OTS$CVT_L_TB;
EXTERNAL ROUTINE
    PAS$CVT_L_TB;
BIND ROUTINE
    OTS$CVT_L_TB = PAS$CVT_L_TB;
%FI

%SBTTL 'PAS$BIN - Convert value in base 2 to string'
GLOBAL ROUTINE PAS$BIN (
	RESULT: REF VECTOR [, BYTE],			! Result string
	TOTAL_WIDTH: WORD SIGNED,			! Total field width
    	NBITS,						! Size of value in bits
    	VALUE,						! Address of value
    	MIN_DIGITS: SIGNED				! Minimum number of digits
    ): NOVALUE =

!++
! FUNCTIONAL DESCRIPTION:
!
!	This procedure implements the VAX-11 Pascal BIN function.  It
!	converts a value to an ASCII representation in base 2 and stores
!	that result in a string.
!
! CALLING SEQUENCE:
!
!	CALL PAS$BIN (RESULT.wt.r, TOTAL_WIDTH.rw.v, NBITS.rl.v, VALUE.rz.r
!			    [, MIN_DIGITS.rl.v])
!
! FORMAL PARAMETERS:
!
!	RESULT		- The string into which the result will be placed.
!
!	TOTAL_WIDTH	- Total field width.
!
!	NBITS		- The size of VALUE in bits.
!
!	VALUE		- The address of the value to write.
!
!	MIN_DIGITS	- Optional.  The minimum number of digits to appear
!			  in the result.  Defaults to the minimum necessary
!			  to represent every bit of the value.
!
! IMPLICIT INPUTS:
!
!	NONE
!
! IMPLICIT OUTPUTS:
!
!	NONE
!
! ROUTINE VALUE:
!
!	NONE
!
! SIDE EFFECTS:
!
!	NONE
!
! SIGNALLED ERRORS:
!
!	NEGDIGARG - negative "digits" argument to BIN, HEX or OCT is not allowed
!
!--

    BEGIN

    LOCAL
        ACTUAL_DIGITS,					! Number of digits actually used
	ACTUAL_NBITS,					! Value size actually used
	DESCR: BLOCK [8, BYTE];				! String descriptor

    LITERAL
	M_SIZE_IN_BITS = %X'04';			! Flags argument for
							! convert routine
    BUILTIN
	ACTUALCOUNT;

    !+
    ! Set initial values for conversion.
    !-

    ACTUAL_NBITS = .NBITS;
    ACTUAL_DIGITS = .ACTUAL_NBITS;
    
    !+
    ! Create result string descriptor with actual width.
    !-

    DESCR [DSC$B_CLASS] = DSC$K_CLASS_S;
    DESCR [DSC$B_DTYPE] = DSC$K_DTYPE_T;
    DESCR [DSC$A_POINTER] = RESULT [0];

    IF ACTUALCOUNT () GEQU 5
    THEN
	BEGIN
	ACTUAL_DIGITS = .MIN_DIGITS;
	IF .ACTUAL_DIGITS LSS 0
	THEN
	    SIGNAL_STOP (PAS$_NEGDIGARG);	! Negative "digits" argument to BIN, HEX or OCT is not allowed
	END;

    DESCR [DSC$W_LENGTH] = .TOTAL_WIDTH;
    !+
    ! Will TOTAL_WIDTH truncate the value?
    !+
    IF .TOTAL_WIDTH LSSU .ACTUAL_NBITS
    THEN
	ACTUAL_NBITS = .TOTAL_WIDTH;

    IF .ACTUAL_DIGITS GTRU .TOTAL_WIDTH
    THEN
	ACTUAL_DIGITS = .TOTAL_WIDTH;
    
    !+
    ! Do the conversion.  We assume it won't fail.
    !-

    OTS$CVT_L_TB (.VALUE, DESCR, .ACTUAL_DIGITS, .ACTUAL_NBITS,
    		  M_SIZE_IN_BITS);

    RETURN;

    END;					! End of routine PAS$BIN

!<BLF/PAGE>

END						! End of module PAS$BIN

ELUDOM
