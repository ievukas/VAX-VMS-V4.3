MODULE fcimra (	IDENT = 'V04-000'
		%BLISS32[, ADDRESSING_MODE (EXTERNAL    = LONG_RELATIVE,
					    NONEXTERNAL = LONG_RELATIVE)]
		) =
BEGIN
!
!****************************************************************************
!*									    *
!*  COPYRIGHT (c) 1978, 1980, 1982, 1984 BY				    *
!*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
!*  ALL RIGHTS RESERVED.						    *
!* 									    *
!*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
!*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
!*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
!*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
!*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
!*  TRANSFERRED.							    *
!* 									    *
!*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
!*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
!*  CORPORATION.							    *
!* 									    *
!*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
!*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
!* 									    *
!*									    *
!****************************************************************************
!

!++
! FACILITY:	 DSR (Digital Standard RUNOFF) / DSRPLUS
!
! ABSTRACT:
!
!	Special handling for first character written into the MRA.
!
! ENVIRONMENT:	Transportable
!
! AUTHOR:	R.W.Friday	CREATION DATE:	June, 1978


%SBTTL 'Revision History'
! MODIFIED BY:
!
!	011	KFA00011	Ken Alden	05-Oct-1983
!		For DSRPLUS: Added bit sca_margin_pad to help the CREF
!		  facility determine what is in the MRA.
!
!	010	RER00010	Ron Randall	12-May-1983
!		For DSRPLUS:  Fixed numbered-footnote/entity-resolution bug.
!
!	009	RER00009	Ron Randall	18-Apr-1983
!		Fixed left margin indentation bug.
!
!	008	RER00008	Ron Randall	06-Apr-1983
!		For DSRPLUS:
!		Adds footnote number or blanks at the start of each footnote
!		line being collected if footnote numbering is on.
!
!	007	RER00007	Ron Randall	07-Mar-1983
!		Global edit of all modules. Updated module names, idents,
!		copyright dates. Changed require files to BLISS library.
!--


%SBTTL 'Module Level Declarations'
!
! INCLUDE FILES:
!
LIBRARY 'NXPORT:XPORT';			! XPORT Library
REQUIRE 'REQ:RNODEF';			! RUNOFF variant definitions

%IF DSRPLUS %THEN
LIBRARY 'REQ:DPLLIB';			! DSRPLUS BLISS Library
%ELSE
LIBRARY 'REQ:DSRLIB';			! DSR BLISS Library
%FI

!
! EXTERNAL REFERENCES:
!
EXTERNAL
    fnct : fnct_definition,
    mra  : REF FIXED_STRING,
    pdt  : REF pdt_definition,
    sca  : sca_definition,
    tsf  : tsf_definition;

%IF DSRPLUS %THEN
EXTERNAL
    entity_in_footnote,
    l_character,
    r_character;

EXTERNAL ROUTINE
    foonum;
%FI

EXTERNAL ROUTINE
    gcpos,
    gcskip,
    gtpc,
    negind,
    xmarg;


GLOBAL ROUTINE fcimra : NOVALUE =

!++
! FUNCTIONAL DESCRIPTION:
!
!	This routine is called prior to putting the first text character
!	into the MRA.  It generates sufficient spaces to take care of
!	the left margin, takes care of paragraph indentation, and also
!	line spacing.
!	Prior to the call to FCIMRA, commands such as .SKIP, .TEST PAGE,
!	.LEFT MARGIN, .INDENT, and others have saved certain carriage 
!	control information.  FCIMRA finishes processing this information
!	before the first actual text character gets put into the MRA.
!
! FORMAL PARAMETERS:	None
!
! IMPLICIT INPUTS:	None
!
! IMPLICIT OUTPUTS:	None
!
! ROUTINE VALUE:
! COMPLETION CODES:	None
!
! SIDE EFFECTS:		None
!--

    BEGIN
    LOCAL
	left_margin;		! Temporary computation of left margin.

%IF DSRPLUS %THEN
    !
    ! Exit if we are in FCIMRA as a result of resolving an entity.
    !
    IF  .entity_in_footnote
    THEN
	RETURN;
%FI

    left_margin = 0;

    IF  .sca_para_pnd
    THEN
	!
	! Start a paragraph.
	!
	BEGIN
	LOCAL
	    skip,
	    test_page;

	IF  .pdt_skip LSS 0
	THEN
	    skip = (.sca_spacing + 1) / 2
	ELSE
	    skip = .pdt_skip * .sca_spacing;

	test_page = (.pdt_tp + 1) * .sca_spacing + .skip;

	IF  .test_page NEQ 0
	THEN
	    !
	    ! Code for a test page command
	    !
	    gtpc (.test_page);

	IF  .pdt_skip NEQ 0
	THEN
	    !
	    !Code for skipping lines.
	    !
	    BEGIN

	    IF  .pdt_skip LSS 0
	    THEN
		gcpos  (.pdt_skip * .sca_spacing)
	    ELSE
		gcskip (.pdt_skip * .sca_spacing);

	    END;

	END
    ELSE
	!
	! Not a paragraph: just a new line.
	!
	IF  .sca_spacing GTR 1
	THEN
	    !
	    ! Code for skipping between lines.
	    !
	    gcskip (.sca_spacing - 1);

    left_margin = .sca_lm + .sca_indent;

    IF  .left_margin LSS 0
    THEN
	BEGIN
	negind ();
	left_margin = 0;
	END;

    IF  .left_margin GEQ .sca_rm
    THEN
	BEGIN
	xmarg ();
	left_margin = 0;
	END;

%IF DSRPLUS %THEN
    !
    ! Write a blank and the footnote number on the first line of a footnote.
    !
    IF  .fnct_numbering AND .fnct_collecting AND (.fnct_first_line EQL 1) 
    THEN
	BEGIN
	!
	! Reset flag that caused this action.
	!
	fnct_first_line = 0;
	!
	! Set up the footnote number digits.
	!
	foonum ();

	!
	! Write out usual spaces plus one.
	!
	INCR I FROM 1 TO (.left_margin + 1) DO
	    fs_wchar (mra, %C' ');

	!
	! Write out the footnote number in brackets.
	!
	fs_wchar (mra, %C'[');

	!
	! Write the left character only if it is not 0.
	!
	IF  .fnct_number_l NEQ 0
	THEN
	    fs_wchar (mra, .l_character);

	fs_wchar (mra, .r_character);
	fs_wchar (mra, %C']');
	fs_wchar (mra, %C' ');

	!
	! Write an extra space if no left character was written.
	!
	IF  .fnct_number_l EQL 0
	THEN
	    fs_wchar (mra, %C' ');

	!
	! Adjust character counters appropriately.
	!
	tsf_int_hl = .left_margin + 6;
	tsf_ext_hl = .left_margin + 6;
	!
	! Set in the left margin by 6 for subsequent footnote lines.
	!
	sca_lm = .sca_lm + 6;
	END
    ELSE
%FI

    BEGIN

    INCR I FROM 1 TO .left_margin DO
	fs_wchar (mra, %C' ');

    tsf_int_hl = .left_margin;
    tsf_ext_hl = .left_margin;
%IF DSRPLUS %THEN
    sca_margin_pad = .left_margin;		! Amount in the mra that was
						! used for padding.
%FI
    END;

    sca_indent = 0;
    !
    ! No paragraph pending.
    !
    sca_para_pnd = false;
    !
    ! Update word pointer.
    !
    sca_wrd_pntr = .fs_next (mra);

    END;					! End of FCIMRA

END						! End of module
ELUDOM
