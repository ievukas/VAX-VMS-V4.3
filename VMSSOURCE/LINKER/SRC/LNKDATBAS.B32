MODULE LNK_DATABASE 
		(IDENT = 'V04-000') =

BEGIN
!
!
!****************************************************************************
!*									    *
!*  COPYRIGHT (c) 1978, 1980, 1982, 1984 BY				    *
!*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
!*  ALL RIGHTS RESERVED.						    *
!* 									    *
!*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
!*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
!*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
!*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
!*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
!*  TRANSFERRED.							    *
!* 									    *
!*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
!*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
!*  CORPORATION.							    *
!* 									    *
!*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
!*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
!* 									    *
!*									    *
!****************************************************************************
!
!
!
!
!
!++
!
! MODULE: LNK_DATABASE
!
! FACILITY: LINKER
!
! ABSTRACT: GLOBAL DATA BASE OF THE LINKER
!
! HISTORY:
!
!	VERSION: X01.00
!
!	AUTHOR: T.J. PORTER 15-JAN-77
!
! 	MODIFIED BY:
!
!	V03-002	ADE0001		Alan D. Eldridge	18-Apr-1984
!		Removed 'map' from DEF$C_LNKCTL.
!
!	V03-001	JWT0152		Jim Teague		20-Feb-1984
!		Implement variable length ISDs.
!
!--

!
!++
!
! FUNCTIONAL DESCRIPTION:
!
!	This module contains the data base required throughout the whole
!	of the linker in addition to some global definitions.
!
!--
!
LIBRARY
	'STARLETL32' ;
REQUIRE
	'PREFIX' ;				! some general macros and defintions
LIBRARY
	'DATBAS' ;

GLOBAL LITERAL
	LNK$K_MAX_FILENAME_LENGTH = 39,		! Maximum filename length
	LNK$K_DZROMIN = 5,			! Default minimum empty page size before compression
	LNK$K_ISDMAX  = 95 ;			! Default limit on isections created
!
GLOBAL
	LNK$GL_CTLMSK : BLOCK [1] ;		! Control flags for this link

GLOBAL LITERAL					! define the flag bits
	DEF$C_LNKCTL =  LNK$M_IMAGE   OR	! Default control flags
			LNK$M_EXE     OR	! -- produce an executable
			LNK$M_SUPSYS  OR	! With system and debugger
			LNK$M_SUPDBG  OR	! Symbols suppressed
			LNK$M_PICIMG  OR	! Initially assumed pic
			LNK$M_SYSLIB  OR	! But with system library search enabled
			LNK$M_SYSSHR ;		! As well as shareable image
!
GLOBAL
	LNK$GL_SHRSYMS,						! Number of symbols referenced into shareable images
	LNK$GL_SHRIMGS,						! Number of shareable images referenced
	LNK$GL_CLUTREE	: REF BLOCK [,BYTE] INITIAL (0),	! Listhead for cluster tree
	LNK$GL_CLULST 	: VECTOR [2]				! List of cluster descriptors
			  INITIAL (0, LNK$GL_CLULST),
	LNK$GL_DEFCLU	: BBLOCK [CLU$C_SIZE] 			! Establish the default cluster
			  INITIAL (0				! Not yet linked and no fdb's yet
				  ,0				! No previous cluster yet
				  ,0,LNK$GL_DEFCLU [CLU$L_FSTFDB]
				  ,0,0				! Listheads for global and non-global psects
				  ,0,LNK$GL_DEFCLU [CLU$L_FSTISD] ! Singly linked i-section list
				  ,0,0				! Cluoffset and lastcluster are 0
				  ,0				! Special g^ ref list
				  ,0,0				! Number of shr image symbols and list head
				  ,0,0				! Number of .addr refs, number left in current block
				  ,0,LNK$GL_DEFCLU [CLU$L_FSTADRL] ! Singly linked list of .ADDRESS VA offsets
				  ,0				! No fixup image section
				  ,0				! No image sections in cluster
				  ,0,0				! Zero base and size
				  ,0				! No owning cluster
				  ,WORD (0)			! No flags set
				  ,BYTE (0)			! No pfc
				  ,BYTE (0)			! Round up to longword boundary
				  ,COUNTEDSTRING ('DEFAULT_CLUSTER')
				  ),
	LNK$GL_CURCLU	: REF BBLOCK 				! Current cluster initially the default
			  INITIAL (LNK$GL_DEFCLU [CLU$L_NXTCLU]),
!
	LNK$GL_FVMLST,						! Initially empty free virtual memory list
	LNK$GL_IMGFIL	: REF BBLOCK,				! Pointer to the image file descriptor
	LNK$GL_MAPFIL	: REF BBLOCK,				! Pointer to map file descriptor
	LNK$GL_SYMFIL	: REF BBLOCK,				! Pointer to symbol table file descriptor
!
	LNK$GT_IMGNAM	: VECTOR [LNK$K_MAX_FILENAME_LENGTH + 1, BYTE],	! Image name counted string
	LNK$GT_IMGID	: VECTOR [SYM$C_MAXLNG + 1, BYTE],		! Image ident counted string
	LNK$GW_MISECTS	: WORD INITIAL (LNK$K_ISDMAX),		! Maximum number of image sections
	LNK$GW_DZROMIN	: WORD INITIAL (LNK$K_DZROMIN),		! Threshold on minimum size of empty 
								! regions before compressing
!
	LNK$GB_PASS	: BYTE ;				! Current pass
!
GLOBAL BIND
	LNK$GL_DEFBAS	= LNK$GL_DEFCLU [CLU$L_BASE],
	LNK$GW_DEFLAGS	= LNK$GL_DEFCLU [CLU$W_FLAGS],
	LNK$GL_LASTCLU	= LNK$GL_CLULST [1] ;			! Pointer to last cluster descriptor

END ELUDOM
