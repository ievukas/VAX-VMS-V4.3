    .IF DF PRMSW
	.Title	CJFLOAVEC - Load Vectors for CJF Loadable Image
    .IF_FALSE
	.TITLE	CJFSYSVEC - SYS.EXE EXE$ Vectors for CJF Loadable Image
    .ENDC

	.IDENT	/V04-000/

;
;****************************************************************************
;*									    *
;*  COPYRIGHT (c) 1978, 1980, 1982, 1984 BY				    *
;*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
;*  ALL RIGHTS RESERVED.						    *
;* 									    *
;*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
;*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
;*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
;*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
;*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
;*  TRANSFERRED.							    *
;* 									    *
;*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
;*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
;*  CORPORATION.							    *
;* 									    *
;*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
;*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
;* 									    *
;*									    *
;****************************************************************************
;

;++
; Facility:
;
;       VAX/VMS Journaling
;
; Abstract:
;
;	Loadable code vector for CJF Loadable Image
;
; Environment:
;
;	Not applicable.
;
; Author:	Jeffrey W. Horn		, Creation Date:	20-APR-1983
;
; Modified by:
;
;	V03-002	WMC0001		Wayne Cardoza	09-Dec-1983
;		Make all pscects nowrt.
;
;	V03-001	PRB0264		Paul Beck	16-Sep-1983  11:35
;		Change EXE$CJF_BASE to EXE$GL_CJFBASE
;
;--

	$SLVDEF


    .IF DF PRMSW
	.PSECT	__CJF_END,NOWRT
	.BYTE	0

CJF$END::
	.PSECT	$$$CJFVEC,LONG,NOWRT
	
CJF$START::
	SLVTAB	END	= CJF$END, -
		SUBTYP	= DYN$C_PAGED, -
		PROT_R	= PRT$C_UR, -
		FACILITY= <Common Journaling>
;
;	Load vector for CJF Kernel Mode dispatcher
;

	LOADVEC	TYPE	  = SLV$K_SDATA, -	
		ENTRY	  = EXE$LOAD_KCJF+2, -
		SEC_LABEL = CJFINT$CJF_DISPATCH


	.IFF			; FOR LINKING WITH SYS.EXE
	.PSECT	$$$500,LONG
	.ALIGN	LONG
	.ENDC


;
;	Load vector for pointer to CJF base
;

	LOADVEC	TYPE	  = SLV$K_SDATA, -
		ENTRY	  = EXE$GL_CJFBASE, -
		SEC_LABEL = CJF$START, -
		DEF_RTN	  = 0

;
;	Load vectors for mode-of-caller CJF services
;

	LOADVEC	TYPE	  = SLV$K_SJUMP, -		; CJF$DEASJNL
		ENTRY	  = EXE$DEASJNL, -
		SEC_LABEL = CJFINTU$DEASJNL+2, -	; +2 for mask
		DEF_RTN	  = EXE$FAILURE

	LOADVEC	TYPE	  = SLV$K_SJUMP, -		; CJF$FORCEJNL
		ENTRY	  = EXE$FORCEJNL, -
		SEC_LABEL = CJFINT$FORCEJNL+2, -	; +2 for mask
		DEF_RTN	  = EXE$FAILURE

	LOADVEC	TYPE	  = SLV$K_SJUMP, -		; CJF$FORCEJNLW
		ENTRY	  = EXE$FORCEJNLW, -
		SEC_LABEL = CJFINT$FORCEJNLW+2, -	; +2 for mask
		DEF_RTN	  = EXE$FAILURE

	LOADVEC	TYPE	  = SLV$K_SJUMP, -		; CJF$WRITEJNL
		ENTRY	  = EXE$WRITEJNL, -
		SEC_LABEL = CJFINT$WRITEJNL+2, -	; +2 for mask
		DEF_RTN	  = EXE$FAILURE

	LOADVEC	TYPE	  = SLV$K_SJUMP, -		; CJF$WRITEJNLW
		ENTRY	  = EXE$WRITEJNLW, -
		SEC_LABEL = CJFINT$WRITEJNLW+2, -	; +2 for mask
		DEF_RTN	  = EXE$FAILURE

.END
