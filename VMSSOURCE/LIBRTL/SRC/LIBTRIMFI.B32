MODULE LIB$TRIM_FILESPEC ( %TITLE 'Trim filespec to fixed length'
		IDENT = '1-004'		! File: LIBTRIMFI.B32 Edit: DG1004
		) =
BEGIN
!
!****************************************************************************
!*									    *
!*  COPYRIGHT (c) 1978, 1980, 1982, 1984 BY				    *
!*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
!*  ALL RIGHTS RESERVED.						    *
!* 									    *
!*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
!*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
!*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
!*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
!*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
!*  TRANSFERRED.							    *
!* 									    *
!*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
!*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
!*  CORPORATION.							    *
!* 									    *
!*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
!*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
!* 									    *
!*									    *
!****************************************************************************
!

!++
! FACILITY:	General Utility Library
!
! ABSTRACT:
!
!	LIB$TRIM_FILESPEC takes a fully qualified filespec and
!	trims it so that it fits in a field of fixed width.
!
! ENVIRONMENT:	User mode - AST reentrant
!
! AUTHOR: Steven B. Lionel, CREATION DATE: 11-Jan-1983
!
! MODIFIED BY:
!
! 1-001	- Original.  SBL 11-Jan-1983
! 1-002	- Delete reference to FAB$B_DSBMSK
! 1-003 - Convert to using $FILESCAN.  SBL 12-Aug-1983
! 1-004 - Fix bug where the OUTLEN is not stored.  SBL 9-Nov-1983
!	  Add trailing zero to item list for call to $FILESCAN. DG
!--


%SBTTL 'Declarations'
!
! PROLOGUE FILE:
!

REQUIRE 'RTLIN:LIBPROLOG';			! Switches, PSECTS, macros

!
! LINKAGES:
!
!	NONE
!
! TABLE OF CONTENTS:
!

FORWARD ROUTINE
    LIB$TRIM_FILESPEC;				! Trim filespec

!
! MACROS:
!
!	NONE
!
! EQUATED SYMBOLS:
!
!	NONE
!
! FIELDS:
!
!	NONE
!
! OWN STORAGE:
!
!	NONE
!
! EXTERNALS:
!

EXTERNAL ROUTINE
    LIB$ANALYZE_SDESC_R2: LIB$ANALYZE_SDESC_R2$LINKAGE,	! Get length and pointer
    LIB$SCOPY_R_DX;			! Copy string by reference.

EXTERNAL LITERAL
    LIB$_INVARG,			! Invalid argument
    LIB$_STRTRU;			! String truncated

%SBTTL 'LIB$TRIM_FILESPEC - Trim a filespec'
GLOBAL ROUTINE LIB$TRIM_FILESPEC (
    IN_FILE: REF BLOCK [, BYTE],	! Input filespec
    OUT_FILE: REF BLOCK [, BYTE],	! Output filespec
    WIDTH: REF VECTOR [, WORD],		! Width desired (optional)
    OUTLEN: REF VECTOR [, WORD]		! Width used (optional)
    ) =

!++
! FUNCTIONAL DESCRIPTION:
!
!	LIB$TRIM_FILESPEC takes a filespec, usually an RMS resultant
!	name string, and shortens it (if necessary) so that it fits in
!	a field of fixed width.  This is useful for compilers and other
!	utilities which need to display filespecs in fixed fields, such as
!	listing headers.  This allows these utilities to display filespecs
!	in a consistent fashion.
!
!	If necessary, the following portions of the filespec are removed,
!	in order, to fit into the specified field width:
!		1.  Node (including access control)
!		2.  Device
!		3.  Directory
!		4.  Version
!		5.  Type
!	If after removing all of these fields, the file name is still longer
!	than the field width, the file name is truncated and the alternate
!	success status LIB$_STRTRU is returned.
!
! CALLING SEQUENCE:
!
!	ret_status.wlc.v = LIB$TRIM_FILESPEC (
!				in_file.rt.dx,
!				out_file.wt.dx
!				[, [width.rw.r]
!				[, [outlen.ww.r] ]])
!
! FORMAL PARAMETERS:
!
!	IN_FILE		A string containing the filespec to be trimmed.
!			The filespec should be an RMS resultant name string.
!			The error LIB$_INVARG is returned if IN_FILE contains
!			more than 255 characters.
!
!	OUT_FILE	A string into which will be placed the trimmed
!			filespec.
!
!	WIDTH		An unsigned word integer containing the maximum field 
!			width desired.  If omitted, the current length of 
!			OUT_FILE is used.
!
!	OUTLEN		An unsigned word integer into which is placed the
!			length of the trimd filespec, not including
!			any blank padding nor truncated characters.
!
! IMPLICIT INPUTS:
!
!	NONE
!
! IMPLICIT OUTPUTS:
!
!	NONE
!
! COMPLETION STATUS:
!
!	SS$_NORMAL	Normal successful completion
!	LIB$_STRTRU	Success - string truncated.  Significant characters
!			of the trimmed filespec were truncated.
!	LIB$_INVARG	Invalid argument.  IN_FILE was longer than
!			255 characters.
!	LIB$_WRONUMARG	Wrong number of arguments.
!	LIB$_xxx	Any error status from LIB$SCOPY_R_DX.
!	RMS$_xxx	Any RMS error status from the $FILESCAN service.  
!
! SIDE EFFECTS:
!
!	NONE
!
!--

    BEGIN

    FIELD
	FSCN_FIELDS =
	    SET
	    FSCN_W_LENGTH = [0,0,16,0],
	    FSCN_W_CODE = [0,16,16,0],
	    FSCN_A_POINTER = [4,0,32,0],
	    FSCN_A_NEXT = [8,0,0,0],
	    FSCN_A_END = [0,0,32,0]
	    TES;

    LOCAL
	LCL_DESCR: BLOCK [8, BYTE],		! Local descriptor for IN_FILE
	OUT_LENGTH: WORD,			! Length of OUT_FILE
	MAX_WIDTH,				! Maximum width
	CURR_WIDTH,				! Current width
	POINTER,				! Pointer to current position
	TRUNCATED,				! Set if filename truncated
	FSCN_LIST: BLOCKVECTOR [7,8,BYTE] FIELD (FSCN_FIELDS),
						! $FILESCAN Item list
	LIST_PTR: REF BLOCK [8, BYTE] FIELD (FSCN_FIELDS), ! Pointer to FSCN_LIST
	STR_STATUS1, STR_STATUS2, RMS_STATUS, COPY_STATUS; ! Status from operations.

    LABEL
	TRIM_BLOCK;

    BUILTIN
	ACTUALCOUNT,
	NULLPARAMETER;

    !+
    ! Validate argument count.
    !-

    $LIB$VALIDATE_ARGCOUNT (2,4);

    !+
    ! Initialize $FILESCAN item list.  The order of items is
    ! important; they are the order in which fields are removed.
    ! The first item is not a field, but is used to locate the filespec.
    !-

    FSCN_LIST [0,FSCN_W_CODE] = FSCN$_FILESPEC;
    FSCN_LIST [1,FSCN_W_CODE] = FSCN$_NODE;
    FSCN_LIST [2,FSCN_W_CODE] = FSCN$_DEVICE;
    FSCN_LIST [3,FSCN_W_CODE] = FSCN$_DIRECTORY;
    FSCN_LIST [4,FSCN_W_CODE] = FSCN$_VERSION;
    FSCN_LIST [5,FSCN_W_CODE] = FSCN$_TYPE;
    FSCN_LIST [6,FSCN_A_END] = 0;

    !+
    ! Indicate initially that filename is not truncated.
    !-

    TRUNCATED = 0;

    !+
    ! Get length and address of input string.
    !-

    STR_STATUS1 = LIB$ANALYZE_SDESC_R2 (IN_FILE [0,0,0,0];
	LCL_DESCR [DSC$W_LENGTH], LCL_DESCR [DSC$A_POINTER]);
    IF NOT .STR_STATUS1
    THEN
	RETURN .STR_STATUS1;

    !+
    ! Get maximum field width from WIDTH, if supplied, otherwise the
    ! current length of OUT_FILE.
    !-

    IF NULLPARAMETER (3)
    THEN
	BEGIN
	STR_STATUS2 = LIB$ANALYZE_SDESC_R2 (OUT_FILE [0,0,0,0];
	    OUT_LENGTH);
	IF NOT .STR_STATUS2
	THEN
	    RETURN .STR_STATUS2;
	MAX_WIDTH = .OUT_LENGTH;
	END
    ELSE
	MAX_WIDTH = .WIDTH [0];

    !+
    ! Scan filespec
    !-

    RMS_STATUS = $FILESCAN (SRCSTR = LCL_DESCR, VALUELST = FSCN_LIST);
    IF NOT .RMS_STATUS
    THEN
	RETURN .RMS_STATUS;

    !+
    ! Get pointer to and current length of filespec.
    !-

    CURR_WIDTH = .FSCN_LIST [0, FSCN_W_LENGTH];
    POINTER = .FSCN_LIST [0, FSCN_A_POINTER];
    LIST_PTR = FSCN_LIST [0, FSCN_A_NEXT];

    !+
    ! Strip fields from filespec, as necessary.
    !
    ! Note:  This implementation depends on a known order of the
    ! fields in a filespec.  If new fields are added, or if the order
    ! changes, this code may need to be modified.
    !-

    TRIM_BLOCK:
	BEGIN

 	!+
	! Trim fields from the left of the filespec: NODE, DEVICE and
	! directory in order.
	!-

	DECR I FROM 3 TO 1 DO
	    BEGIN
	    !+
	    ! Does filespec fit now?  If so, exit block.
	    !-

	    IF .CURR_WIDTH LEQU .MAX_WIDTH
	    THEN
		LEAVE TRIM_BLOCK;	! Yes

	    !+
	    ! Trim field from left of filespec.
	    !-

	    POINTER = .POINTER + .LIST_PTR [FSCN_W_LENGTH];
	    CURR_WIDTH = .CURR_WIDTH - .LIST_PTR [FSCN_W_LENGTH];
	    LIST_PTR = LIST_PTR [FSCN_A_NEXT];
	    END;

	!+
	! Now trim fields from the right of the filespec.
	!-

	DECRU I FROM 2 TO 1 DO
	    BEGIN
	    !+
	    ! Does filespec fit now?  If so, exit block.
	    !-

	    IF .CURR_WIDTH LEQU .MAX_WIDTH
	    THEN
		LEAVE TRIM_BLOCK;	! Yes

	    !+
	    ! Trim field from right of filespec.
	    !-

	    CURR_WIDTH = .CURR_WIDTH - .LIST_PTR [FSCN_W_LENGTH];
	    LIST_PTR = LIST_PTR [FSCN_A_NEXT];
	    END;

	!+
	! See if remaining filespec is still too long.
	!-

	IF .CURR_WIDTH LEQU .MAX_WIDTH
	THEN
	    LEAVE TRIM_BLOCK;

	!+
	! If we get here, the filename will be truncated.
	!-

	CURR_WIDTH = .MAX_WIDTH;	! Use maximum width
	TRUNCATED = .TRUNCATED + 1;	! Indicate string truncated

	END;


    !+
    ! Copy trimmed filespec to OUT_FILE.
    !-

    COPY_STATUS = LIB$SCOPY_R_DX (%REF(.CURR_WIDTH), .POINTER,
	OUT_FILE [0,0,0,0]);

    !+
    ! Store OUTLEN if desired.
    !-

    IF NOT NULLPARAMETER(4)
    THEN
	BEGIN
	LOCAL
	    LEN: WORD;
	LIB$ANALYZE_SDESC_R2 (OUT_FILE [0,0,0,0]; LEN);
	IF .CURR_WIDTH LSSU LEN
	THEN
	    LEN = .CURR_WIDTH;
	OUTLEN [0] = .LEN;
	END;

    !+
    ! If we didn't truncate the filename, or if the copy failed, return
    ! the copy status.  Otherwise return LIB$_STRTRU.
    !-

    IF (NOT .TRUNCATED) OR (NOT .COPY_STATUS)
    THEN
	RETURN .COPY_STATUS;

    RETURN LIB$_STRTRU;				! String truncated

    END;					! End of routine LIB$TRIM_FILESPEC

END						! End of module LIB$TRIM_FILESPEC

ELUDOM
