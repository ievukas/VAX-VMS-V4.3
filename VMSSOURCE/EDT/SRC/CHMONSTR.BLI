%TITLE 'EDT$CHMONSTR - test for being on a given string'
MODULE EDT$CHMONSTR (				! Test for being on a given string
		IDENT = 'V04-000'			! File: CHMONSTR.BLI Edit: JBS1007
		) =
BEGIN
!
!****************************************************************************
!*									    *
!*  COPYRIGHT (c) 1978, 1980, 1982, 1984 BY				    *
!*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
!*  ALL RIGHTS RESERVED.						    *
!* 									    *
!*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
!*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
!*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
!*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
!*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
!*  TRANSFERRED.							    *
!* 									    *
!*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
!*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
!*  CORPORATION.							    *
!* 									    *
!*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
!*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
!* 									    *
!*									    *
!****************************************************************************
!

!++
! FACILITY:	EDT -- The DEC Standard Editor
!
! ABSTRACT:
!
!	This module determines if the current position matches
!	a given string.
!
! ENVIRONMENT:	Runs at any access mode - AST reentrant
!
! AUTHOR: Bob Kushlis, CREATION DATE: Unknown
!
! MODIFIED BY:
!
! 1-001	- Original.  DJS 04-Feb-1981.  This module was created by
!	extracting the routine EDT$$TST_ONSTR  from module CHANGE.BLI.
! 1-002	- Regularize headers.  JBS 03-Mar-1981
! 1-003 - Add WPS string matching.  STS 05-Oct-1981
! 1-004	- Support the DEC Multinational character set.  JBS 20-Jul-1982
! 1-005 - Replace call to edt$$tst_eob. STS 22-Sep-1982
! 1-006	- Fix a missing dot.  JBS 07-Dec-1982
! 1-007	- Add conditionals for WPS and VT220 support.  JBS 11-Feb-1983
!--


%SBTTL 'Declarations'
!
! TABLE OF CONTENTS:
!

REQUIRE 'EDTSRC:TRAROUNAM';

FORWARD ROUTINE
    EDT$$TST_ONSTR;			! Compare the current character position with a string descriptor

!
! INCLUDE FILES:
!

REQUIRE 'EDTSRC:EDTREQ';

LIBRARY 'EDTSRC:TRANSLATE';

LIBRARY 'EDTSRC:SUPPORTS';

!
! MACROS:
!
!	NONE
!
! EQUATED SYMBOLS:
!
!	NONE
!
! OWN STORAGE:
!
!	NONE
!
! EXTERNAL REFERENCES:
!
!	In the routine

%SBTTL 'EDT$$TST_ONSTR  - test for being on a given string'

GLOBAL ROUTINE EDT$$TST_ONSTR (			! Test for being on a given string
    ADDR, 					! Address of the model string
    LEN						! Length of the model string
    ) =

!++
! FUNCTIONAL DESCRIPTION:
!
!	This routine checks to see if the string specified by ADDR and
!	LEN matches at the current character position.
!
! FORMAL PARAMETERS:
!
!  ADDR			Address of the string to test against the current position
!
!  LEN			Length of that string
!
! IMPLICIT INPUTS:
!
!	EDT$$G_EXCT_MATCH
!	EDT$$A_LN_END
!	EDT$$A_LN_PTR
!
! IMPLICIT OUTPUTS:
!
!	EDT$$A_LN_PTR
!
! ROUTINE VALUE:
!
!	The value 1 is returned if it matches, 0 otherwise.
!
! SIDE EFFECTS:
!
!	NONE
!
!--

    BEGIN

    EXTERNAL ROUTINE
	EDT$$CS_DWN,				! Move down a line
	EDT$$CS_LEFT;				! Move left a character

    EXTERNAL
	EDT$$A_WK_LN : REF LIN_BLOCK,
	EDT$$Z_EOB_LN,
	EDT$$G_EXCT_MATCH,			! Exact search or no.
	EDT$$A_LN_END,				! End of current line pointer
	EDT$$A_LN_PTR				! Current character pointer

%IF SUPPORT_VT220
%THEN
	,
	EDT$$B_CHAR_INFO : BLOCKVECTOR [256, 1, BYTE];	! Information about characters

    BIND
	GENERAL_TABLE = UPLIT (BYTE (CHAR_GENERAL)) : VECTOR [256, BYTE];

    BIND
	CI_TABLE = UPLIT (BYTE (CHAR_CI)) : VECTOR [256, BYTE];

    BIND
	DI_TABLE = UPLIT (BYTE (CHAR_DI)) : VECTOR [256, BYTE];

%ELSE
    ;
%FI

    LOCAL
	SC,
	TC,
	CP,
	MATCHED;

!+
! Keep track of how many characters matched so we can back up.
!-
    MATCHED = 0;
    CP = .ADDR;
!+
! Loop over size of the string.
!-

    DECR I FROM .LEN - 1 TO 0 DO
	BEGIN

	IF CH$PTR_EQL (.EDT$$A_LN_PTR, .EDT$$A_LN_END)
	THEN

	    IF (CH$RCHAR_A (CP) EQL ASC_K_CR)
	    THEN

		IF (.EDT$$A_WK_LN EQLA EDT$$Z_EOB_LN) THEN EXITLOOP ELSE EDT$$CS_DWN ()

	    ELSE
		EXITLOOP

	ELSE
	    BEGIN
	    SC = CH$RCHAR (.EDT$$A_LN_PTR);
	    TC = CH$RCHAR_A (CP);		! get the char we're trying to match

	    CASE .EDT$$G_EXCT_MATCH FROM 0 TO 4 OF
		SET

		[0] : 				! General
		    BEGIN

%IF SUPPORT_VT220
%THEN

		    IF (.GENERAL_TABLE [.SC] NEQ .GENERAL_TABLE [.TC]) THEN EXITLOOP;

%ELSE

		    IF ((.SC GEQ %C'a') AND (.SC LEQ %C'z')) THEN SC = .SC - %C'a' + %C'A';

		    IF ((.TC GEQ %C'a') AND (.TC LEQ %C'z')) THEN TC = .TC - %C'a' + %C'A';

		    IF (.SC NEQ .TC) THEN EXITLOOP;

%FI

		    END;

		[1] : 				! Exact

		    IF (.SC NEQ .TC) THEN EXITLOOP;

		[2] : 				! WPS
		    BEGIN

%IF SUPPORT_WPS
%THEN

%IF SUPPORT_VT220
%THEN

		    IF .EDT$$B_CHAR_INFO [.TC, 0, 0, 1, 0]	! If lower case letter
		    THEN
%ELSE

			IF ((.TC GEQ %C'a') AND (.TC LEQ %C'z'))
			THEN
%FI

			    BEGIN

%IF SUPPORT_VT220
%THEN

			    IF (.CI_TABLE [.SC] NEQ .CI_TABLE [.TC]) THEN EXITLOOP;

%ELSE

			    IF ((.SC GEQ %C'a') AND (.SC LEQ %C'z')) THEN SC = .SC - %C'a' + %C'A';

			    IF ((.TC GEQ %C'a') AND (.TC LEQ %C'z')) THEN TC = .TC - %C'a' + %C'A';

			    IF (.SC NEQ .TC) THEN EXITLOOP;

%FI

			    END
			ELSE
			    BEGIN

			    IF (.SC NEQ .TC) THEN EXITLOOP;	! Exact compare

			    END;

%ELSE
		    0
%FI

		    END;

		[3] : 				! Case insensitive
		    BEGIN

%IF SUPPORT_VT220
%THEN

		    IF (.CI_TABLE [.SC] NEQ .CI_TABLE [.TC]) THEN EXITLOOP;

%ELSE
		    0
%FI

		    END;

		[4] : 				! Diacritical insensitive
		    BEGIN

%IF SUPPORT_VT220
%THEN

		    IF (.DI_TABLE [.SC] NEQ .DI_TABLE [.TC]) THEN EXITLOOP;

%ELSE
		    0
%FI

		    END;

		[OUTRANGE] :
		    ASSERT (0);
		TES;

	    EDT$$A_LN_PTR = CH$PLUS (.EDT$$A_LN_PTR, 1);
	    END;

	MATCHED = .MATCHED + 1;
	END;

!+
! Back up to the original position.
!-

    DECR I FROM .MATCHED - 1 TO 0 DO
	EDT$$CS_LEFT ();

    RETURN (.MATCHED EQL .LEN);
    END;					! of routine EDT$$TST_ONSTR

!<BLF/PAGE>

END						! of module EDT$CHMONSTR

ELUDOM
