%TITLE 'EDT$PRISTOK - test for particular token'
MODULE EDT$PRISTOK (				! Test for particular token
		IDENT = 'V04-000'			! File: PRISTOK.BLI Edit: JBS1004
		) =
BEGIN
!
!****************************************************************************
!*									    *
!*  COPYRIGHT (c) 1978, 1980, 1982, 1984 BY				    *
!*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
!*  ALL RIGHTS RESERVED.						    *
!* 									    *
!*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
!*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
!*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
!*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
!*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
!*  TRANSFERRED.							    *
!* 									    *
!*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
!*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
!*  CORPORATION.							    *
!* 									    *
!*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
!*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
!* 									    *
!*									    *
!****************************************************************************
!

!++
! FACILITY:	EDT -- The DEC Standard Editor
!
! ABSTRACT:
!
!	Test for a particular token.
!
! ENVIRONMENT:	Runs at any access mode - AST reentrant
!
! AUTHOR: Bob Kushlis, CREATION DATE: December 12, 1978
!
! MODIFIED BY:
!
! 1-001	- Original.  DJS 25-Feb-1981.  This module was created by
!	extracting routine IS_TOKEN from module PARSER.
! 1-002	- Regularize headers.  JBS 12-Mar-1981
! 1-003	- Use the ASSERT macro.  JBS 01-Jun-1981
! 1-004	- Improve the appearance of the listing.  JBS 17-Jun-1983
!--


%SBTTL 'Declarations'
!
! TABLE OF CONTENTS:
!

REQUIRE 'EDTSRC:TRAROUNAM';

FORWARD ROUTINE
    EDT$$PA_TSTTOK;

!
! INCLUDE FILES:
!

REQUIRE 'EDTSRC:EDTREQ';

REQUIRE 'EDTSRC:PARLITS';

REQUIRE 'EDTSRC:PARTOKDEF';

REQUIRE 'EDTSRC:PARTOKTBL';

!
! MACROS:
!
!	NONE
!
! EQUATED SYMBOLS:
!
!	NONE
!
! OWN STORAGE:
!
!	NONE
!
! EXTERNAL REFERENCES:
!
!	In the routine

%SBTTL 'EDT$$PA_TSTTOK  - test for particular token'

GLOBAL ROUTINE EDT$$PA_TSTTOK (			! Test for a particular token
    TOK_NUM					! Number of the model token
    ) =

!++
! FUNCTIONAL DESCRIPTION:
!
!	This routine compares the current token as described by
!	EDT$$G_PA_TOKCLASS , EDT$$A_PA_CURTOK  and
!	EDT$$G_PA_CURTOKLEN  to the token specified by the input parameter.
!
!	When EDT$$G_PA_TOKCLASS  is CL_NUM or CL_STRING the token will match only
!	T_NUM and T_STR respectively.  Otherwise, compare the token to the token_table
!	entry specified by TOK_NUM.  EDT$$G_PA_PCENT  will be on if the token
!	started with a '%' and in that case, check the bit to see if an optional percent
!	is allowed.
!
! FORMAL PARAMETERS:
!
!  TOK_NUM		The number of the model token
!
! IMPLICIT INPUTS:
!
!	EDT$$A_PA_CURTOK
!	EDT$$G_PA_CURTOKLEN
!	EDT$$G_PA_PCENT
!	EDT$$G_PA_TOKCLASS
!
! IMPLICIT OUTPUTS:
!
!	NONE
!
! ROUTINE VALUE:
!
!	1 = token matches
!	0 = token does not match
!
! SIDE EFFECTS:
!
!	NONE
!
!--

    BEGIN

    EXTERNAL
	EDT$$A_PA_CURTOK,			! start of the current token
	EDT$$G_PA_CURTOKLEN,			! length of current token
	EDT$$G_PA_PCENT,			! Did the keyword contain a percent?
	EDT$$G_PA_TOKCLASS;			! class of current token

    LOCAL
	TOK;					! Index into the token table of the token we are looking for

!+
! Case on the token class.
!-

    CASE .EDT$$G_PA_TOKCLASS FROM CL_NAME TO CL_STRING OF
	SET

	[CL_NUMBER] :

	    IF (.TOK_NUM EQL T_NUM) THEN RETURN (1) ELSE RETURN (0);

	[CL_STRING] :

	    IF (.TOK_NUM EQL T_STR) THEN RETURN (1) ELSE RETURN (0);

	[CL_NAME, CL_SPECIAL] :
	    BEGIN
!+
! Get index of the token.
!-
	    TOK = .TOK_INDX [.TOK_NUM - 1];
	    BEGIN
!+
! Bind the token descriptor.
!-

	    BIND
		TOKEN = TOKEN_TABLE [.TOK] : BLOCK [2, BYTE];

!+
! Check for optional PERCENT.
!-

	    IF (.EDT$$G_PA_PCENT AND ( NOT .TOKEN [PAR_OPT_PERCENT])) THEN RETURN (0);

!+
! Compare the token.
!-

	    IF ((.EDT$$G_PA_CURTOKLEN GEQ .TOKEN [PAR_MIN_LENGTH]) AND 	!
		(.EDT$$G_PA_CURTOKLEN LEQ .TOKEN [PAR_MAX_LENGTH]))
	    THEN

		IF CH$EQL (.EDT$$G_PA_CURTOKLEN, .EDT$$A_PA_CURTOK, .EDT$$G_PA_CURTOKLEN, TOKEN [PAR_SYMBOL])
		THEN
		    RETURN (1)
		ELSE
		    RETURN (0)

	    ELSE
		RETURN (0);

	    END;
	    END;

	[OUTRANGE] :
	    BEGIN
	    ASSERT (0);
	    RETURN (0);
	    END;
	TES;

    END;					! of routine EDT$$PA_TSTTOK

!<BLF/PAGE>

END						! of module EDT$PRISTOK

ELUDOM
