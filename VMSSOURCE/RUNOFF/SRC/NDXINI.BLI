%TITLE 'NDXINI -- Once only initialization and global data'
MODULE NDXINI (IDENT = 'V04-000'
		    %BLISS32 [, ADDRESSING_MODE (EXTERNAL = LONG_RELATIVE, NONEXTERNAL = LONG_RELATIVE)]
		) =
BEGIN

!
!****************************************************************************
!*									    *
!*  COPYRIGHT (c) 1978, 1980, 1982, 1984 BY				    *
!*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
!*  ALL RIGHTS RESERVED.						    *
!* 									    *
!*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
!*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
!*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
!*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
!*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
!*  TRANSFERRED.							    *
!* 									    *
!*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
!*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
!*  CORPORATION.							    *
!* 									    *
!*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
!*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
!* 									    *
!*									    *
!****************************************************************************
!

!++
! FACILITY:
!   DSR (Digital Standard RUNOFF) /DSRPLUS DSRINDEX/INDEX Utility
!
! ABSTRACT:
!   This module contains once only initialization code and global data.
!
! ENVIRONMENT:	 Transportable 
!
! AUTHOR:	 JPK
!
! CREATION DATE: December 1981
!
! MODIFIED BY:
!
!	005	JPK00017	23-Feb-1983
!		Modified NDXINI to initialize the zero'th entries of LLINES,
!		RLINES and TLINES which is where the telltale strings are 
!		stored by NDXFMT.
!		Modified NDXFMT to write appropriate prologue for /TELLTALE,
!		save the appropriate lines for left and right telltales, and
!		to mark the end of every entry with a NULL.
!		Modified NDXPAG to change the NULL following each entry to a
!		space if LAYOUT is SEPARATE or to a comma otherwise and to 
!		generate and output telltales.
!
!	004	JPK00015	04-Feb-1983
!		Cleaned up module names, modified revision history to
!		conform with established standards. Updated copyright dates.
!
!	003	JPK00009	24-Jan-1983
!		Modified to enhance performance. The sort buckets have each
!		been divided into 27 sub-buckets; 1 for each letter and 1
!		for non-alphas. Removed reference to BUCKET from INDEX.
!		Definition of the structure was added to NDXPOL. References
!		to BUCKET were changed in modules NDXOUT, NDXINI, NDXFMT 
!		and NDXDAT.
!
!	002	JPK00005	24-Sep-1982
!		Removed definition of CHRFWD in NDXINI. No longer needed.
!
!--

!
! TABLE OF CONTENTS:
!
FORWARD ROUTINE
    NDXINI : NOVALUE;			! Once only initialization routine
!
! INCLUDE FILES:
!

LIBRARY 'NXPORT:XPORT';

SWITCHES LIST (REQUIRE);

REQUIRE 'REQ:NDXCLI';

REQUIRE 'REQ:NDXXPL';

REQUIRE 'REQ:NDXPOL';

REQUIRE 'REQ:PAGEN';

SWITCHES LIST (NOREQUIRE);

!
! MACROS:
!
!
! EQUATED SYMBOLS:
!

GLOBAL LITERAL
    TAB    = %O'11' : UNSIGNED (8),	! TAB character
    TMSCOL = 39,			! Default TMS column width
    RINTES = %O'34' : UNSIGNED (8),	! RUNOFF escape sequence character
    MAXLST = 10,			! Maximum subindex depth
    MAXLIN = 80;			! Maximum number of lines per page

LITERAL
    TRUE = 1,
    FALSE = 0;

!
! OWN STORAGE:
!

GLOBAL
    OUTIOB : $XPO_IOB (),			! Output file IOB
    CMDBLK : $NDXCMD,				! Command line information block
    XPLBLK : $XPL_BLOCK,			! Extended indexing information block
    PAGEN  : PAGE_DEFINITION;			! Page reference block

GLOBAL						! Hashing buckets 
    BUCKET : $BUCKET_ARRAY [27, 27];		! There are 26 buckets for letters, and
						! one for all other characters.

GLOBAL
    LSTPTR : REF $XE_BLOCK,
    INDLVL,					! Index level
    LSTSTK : VECTOR [MAXLST + 1];		! Temporary entry stack

GLOBAL						! Index pool variables
    NDXPOL : INITIAL (0),			! Address of indexing pool
    NDXSGE : INITIAL (0),			! End of current segment.
    NDXSGF : INITIAL (0);

GLOBAL						! Transaction pool variables
    XTNPOL : INITIAL (0),			! Address of transaction pool
    XTNCNT : INITIAL (0),			! Number of XTNTAB entries
    XTNLSP : INITIAL (0),
    XTNLSX : INITIAL (0),
    XTNSGP : INITIAL (0),
    XTNTAB : INITIAL (0),			!List of transaction numbers assigned
    XPAGEN : INITIAL (0);

GLOBAL
    BOOKID : INITIAL (0);			! Address of master index book id

GLOBAL						! Line and page counting variables
    PAGENO : INITIAL (0),			! Page number
    ALLOWD,					! Usuable lines per page
    LCOUNT,					! Number of lines in left column
    RCOUNT,					! Number of lines in right column
    TCOUNT;					! Number of lines in temp column

!
! NOTE: The vectors and blockvectors below have two extra entries allocated.
!	The zeroth entry is used to save the telltale strings for the column.
!	The last entry is so that there will always be an available line at 
!	the end of the column.
!
!	The temp column is used during the generation of the index as a
!	temporary save area for lines that are moved from one column to
!	another. It is also used during generation of the last page of
!	two column output.
!
GLOBAL
    LTYPE  : VECTOR      [MAXLIN + 2],			! Left column line types
    LLINES : BLOCKVECTOR [MAXLIN + 2, STR$K_D_BLN],	! Left column string descriptors
    RTYPE  : VECTOR      [MAXLIN + 2],			! Right column line types
    RLINES : BLOCKVECTOR [MAXLIN + 2, STR$K_D_BLN],	! Right column string descriptors
    TTYPE  : VECTOR      [MAXLIN + 2],			! Temp column line types
    TLINES : BLOCKVECTOR [MAXLIN + 2, STR$K_D_BLN];	! Temp column string descriptors

!
! EXTERNAL REFERENCES:
!

%SBTTL 'GLOBAL ROUTINE NDXINI -- Once only initialization'
GLOBAL ROUTINE NDXINI : NOVALUE =
!++
!
! FUNCTIONAL DESCRIPTION:
!
!	This routine is called by the command line interface routine
!	to do once only initialization of global data structures.
!
! FORMAL PARAMETERS:
!
!	None.
!
! IMPLICIT INPUTS:
!
!	None.
!
! IMPLICIT OUTPUTS:
!
!	CMDBLK	- Command line information block is initialized
!	XPLBLK	- Extended indexing attributes block is initialized
!	LLINES	- Left column string descriptors are initialized
!	RLINES	- Right column string descriptors are initialized
!	TLINES	- String descriptors for right column on last page
!
! ROUTINE VALUE:
! COMPLETION CODES:
!
!	None.
!
! SIDE EFFECTS:
!
!	None.
!--
    BEGIN
    !
    ! Initialize the command line information block
    !
    CMDBLK [NDX$V_OPTIONS] = 0;
    $STR_DESC_INIT (DESCRIPTOR = CMDBLK [NDX$T_MASTER_BOOK], CLASS = DYNAMIC);
    $STR_DESC_INIT (DESCRIPTOR = CMDBLK [NDX$T_INPUT_FILE], CLASS = DYNAMIC);
    $STR_DESC_INIT (DESCRIPTOR = CMDBLK [NDX$T_OUTPUT_FILE], CLASS = DYNAMIC);
    $STR_DESC_INIT (DESCRIPTOR = CMDBLK [NDX$T_REQUIRE_FILE], CLASS = DYNAMIC);
    $STR_DESC_INIT (DESCRIPTOR = CMDBLK [NDX$T_COMMAND_LINE], CLASS = DYNAMIC);

    !
    ! Initialize related file specification descriptor. This string is
    ! set to the resultant input file specification by NDXINP for every
    ! input file which is not concatenated to the previous one. Thus the
    ! related file name for a series of concatenated input files is the
    ! resultant file name of the first file in the series.
    !
    $STR_DESC_INIT (DESCRIPTOR = CMDBLK [NDX$T_RELATED_FILE], CLASS = DYNAMIC);

    !
    ! Initialize extended indexing attributes block
    !
    XPLBLK [XPL$V_VALID] = FALSE;		! No extended indexing attributes seen yet
    $STR_DESC_INIT (DESCRIPTOR = XPLBLK [XPL$T_SORT], CLASS = DYNAMIC);
    $STR_DESC_INIT (DESCRIPTOR = XPLBLK [XPL$T_APPEND], CLASS = DYNAMIC);
    
    !
    ! Initialize string descriptors used to build a page of output
    !
    INCR I FROM 0 TO MAXLIN + 1 DO
	BEGIN
	$STR_DESC_INIT (DESCRIPTOR = LLINES [.I, 0,0,0,0], CLASS = DYNAMIC);
	$STR_DESC_INIT (DESCRIPTOR = RLINES [.I, 0,0,0,0], CLASS = DYNAMIC);
	$STR_DESC_INIT (DESCRIPTOR = TLINES [.I, 0,0,0,0], CLASS = DYNAMIC);
	END;

    END;

END				! End of module
ELUDOM
