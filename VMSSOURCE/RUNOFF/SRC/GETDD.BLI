MODULE getdd (	IDENT = 'V04-000'
		%BLISS32[, ADDRESSING_MODE (EXTERNAL    = LONG_RELATIVE,
					    NONEXTERNAL = LONG_RELATIVE)]
		) =
BEGIN
!
!****************************************************************************
!*									    *
!*  COPYRIGHT (c) 1978, 1980, 1982, 1984 BY				    *
!*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
!*  ALL RIGHTS RESERVED.						    *
!* 									    *
!*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
!*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
!*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
!*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
!*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
!*  TRANSFERRED.							    *
!* 									    *
!*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
!*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
!*  CORPORATION.							    *
!* 									    *
!*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
!*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
!* 									    *
!*									    *
!****************************************************************************
!
!++
! FACILITY:	DSR (Digital Standard RUNOFF) / DSRPLUS
!
! ABSTRACT:	Attempts to read and recognize a display description.
!
! ENVIRONMENT:	Transportable
!
! AUTHOR:	R.W.Friday	 CREATION DATE: May, 1979
!


%SBTTL 'Revision History'
!
! MODIFIED BY:
!
!	003	KFA00003	Ken Alden 	15-Sep-1983
!		Changed the error message to RNFIDD "Illegal display descriptor"
!
!	002	RER00002	Ron Randall	07-Mar-1983
!		Global edit of all modules. Updated module names, idents,
!		copyright dates. Changed require files to BLISS library.
!
!--


%SBTTL 'Module Level Declarations'

!
! TABLE OF CONTENTS:
!
! INCLUDE FILES:
!
LIBRARY 'NXPORT:XPORT';			! XPORT Library
REQUIRE 'REQ:RNODEF';			! RUNOFF variant definitions

%IF DSRPLUS %THEN
LIBRARY 'REQ:DPLLIB';			! DSRPLUS BLISS Library
%ELSE
LIBRARY 'REQ:DSRLIB';			! DSR BLISS Library
%FI

!
! EXTERNAL REFERENCES:
!
EXTERNAL LITERAL				!Error messages
    RNFIDD;

EXTERNAL
    FS01 : FIXED_STRING,
    IRA : FIXED_STRING;

EXTERNAL ROUTINE
    ERMS,
    GSLU,
    RSKIPS;


GLOBAL ROUTINE GETDD (DD_VALUE)	=

!++
! FUNCTIONAL DESCRIPTION:
!
!	See the ABSTRACT for a general description.
!
! FORMAL PARAMETERS:
!
!	DD_VALUE gets set to the value of the recognized display description.
!
! IMPLICIT INPUTS:
!
!	Implicit input is the one-for-one correspondence
!	between the list of valid display descriptors in the
!	list DD, below, and the literals TCONVRT_XXXX_D
!	defined in the file CONVRT.REQ.
!	This makes it possible to use the index into DD as
!	the display code that gets saved.
!
! IMPLICIT OUTPUTS:	None
!
! ROUTINE VALUE:
! COMPLETION CODES:
!
!	If a valid display description is recognized, a completion code value of +1 is returned.
!	The value zero is returned if no display description is recognized.  The value
!	-1 indicates that the display description could not be recognized; in this case an
!	error message is generated too.
!
! SIDE EFFECTS:		None
!--

    BEGIN
    LOCAL
	DISPLAY_CODE,
	GSLU_RESULT;

    !Skip spaces and tabs before the display descriptor.
    RSKIPS (IRA);

    !Now attempt to get a display descriptor.
    !First, initialize FS01, where the results will be returned.
    FS_INIT (FS01);
    !And now actually try to get the discriptor.
    GSLU_RESULT = GSLU (IRA, FS01);

    !Distinguish between missing display code and one that
    !is given.
    IF  .GSLU_RESULT EQL GSLU_NONE
    THEN
	RETURN 0
    ELSE
	!Try to recognize the display code supplied.
	BEGIN
	BIND
	    DD = UPLIT (CH$PTR(UPLIT('D ')),		!Decimal
			CH$PTR(UPLIT('* ')),		!can't be gotten at.
			CH$PTR(UPLIT('LU')),		!All uppercase letters
			CH$PTR(UPLIT('LL')),		!All lowercase letters
			CH$PTR(UPLIT('LM')),		!Mixed case letters.
			CH$PTR(UPLIT('RU')),		!Upper case Roman numerals
			CH$PTR(UPLIT('RL')),		!Lower case Roman numerals
			CH$PTR(UPLIT('RM')),		!Mixed case Roman numerals.
			CH$PTR(UPLIT('O ')),		!Octal
			CH$PTR(UPLIT('H ')) )		!Hex
						: VECTOR;

	    !Assume the display name won't be found (i.e., illegal)
	    DISPLAY_CODE = -1;

	    !Now, try to recognize the given code.
	    !If the code is not recognized DISPLAY_CODE will contain the value
	    !-1.  This error is caught immediately afterwards.
	    INCR I FROM 0 TO 9 DO

		IF  CH$EQL (.FS_LENGTH(FS01),
			    .FS_START(FS01),
			    2,
			    .DD [.I],
			    %C' ')
		THEN
		    !User's display name has been recognized
		    BEGIN
		    !Remember the index into the table.  It's the display code.
		    DISPLAY_CODE = .I;
		    EXITLOOP
		    END;
	END;

    !Make sure a valid display code will be set.
    IF  .DISPLAY_CODE EQL -1
    THEN
	!User gave an invalid display name
	BEGIN
	ERMS (RNFIDD, .fs_start(FS01), .fs_length(FS01));
	RETURN -1
	END;

    !Save value of display description, and return to user
    .DD_VALUE = .DISPLAY_CODE;
    RETURN 1

    END;			!End of GETDD

END				!End of module
ELUDOM
