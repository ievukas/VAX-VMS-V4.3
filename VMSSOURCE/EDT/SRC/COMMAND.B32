%TITLE 'EDT$COMMAND - command line interpreter'
MODULE EDT$COMMAND (				! Command line interpreter
		IDENT = 'V04-000'			! File: COMMAND.B32 Edit: JBS3002
		) =
BEGIN
!
!****************************************************************************
!*									    *
!*  COPYRIGHT (c) 1978, 1980, 1982, 1984 BY				    *
!*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
!*  ALL RIGHTS RESERVED.						    *
!* 									    *
!*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
!*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
!*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
!*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
!*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
!*  TRANSFERRED.							    *
!* 									    *
!*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
!*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
!*  CORPORATION.							    *
!* 									    *
!*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
!*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
!* 									    *
!*									    *
!****************************************************************************
!

!++
! FACILITY:	EDT -- The DEC Standard Editor
!
! ABSTRACT:
!
!	This module does the result parsing of the EDIT/EDT DCL command.
!
! ENVIRONMENT:	VAX/VMS only
!
! AUTHOR: Bob Kushlis, CREATION DATE: October 12, 1979
!	  Rewritten by Sharon Burlingame with consulting provided by Peter George on  February 17, 1983
!
! MODIFIED BY:
!
! 3-001	- Completely revise module for new DCL command language interface.  SMB 17-Feb-1983
! 3-002	- Fix /NOJOURNAL.  JBS 27-Apr-1983
!--


%SBTTL 'Declarations'
!
! TABLE OF CONTENTS:
!

REQUIRE 'EDTSRC:TRAROUNAM';

FORWARD ROUTINE
    EDT$$PA_CMDLN : NOVALUE;			! Parse the command line

!
! INCLUDE FILES:
!

REQUIRE 'EDTSRC:EDTREQ';

REQUIRE 'EDTSRC:SYSSYM';

REQUIRE 'TRACESEL';

REQUIRE 'EDTSRC:TRACEMAC';

LIBRARY 'SYS$LIBRARY:CLIMAC';

!
! MACROS:
!
!	NONE
!
! EQUATED SYMBOLS:
!
!
! OWN STORAGE:
!
! 	NONE
!
! EXTERNAL REFERENCES:
!
! 	In the routine
!

%SBTTL 'EDT$$PA_CMDLN  - parse command line'

GLOBAL ROUTINE EDT$$PA_CMDLN 			! Parse a command line
    : NOVALUE =

!++
! FUNCTIONAL DESCRIPTION:
!
! This routine parses the EDT command line returning the following information:
!
!	The input file name.
!
!	The output file name.
!
!	Whether or not journalling is specified and the explicit name if given.
!
!	Whether or not a command file was specified and the explicit name if given.
!
!	Whether or not to open the file for READ ONLY.
!
!	Whether or not to CREATE a new file if the named input file doesn't exist.
!
! FORMAL PARAMETERS:
!
!	NONE
!
! IMPLICIT INPUTS:
!
!	EDT$$Z_CCMD_DESC
!	EDT$$Z_CJOU_DESC
!	EDT$$Z_COUT_DESC
!	EDT$$Z_CINP_DESC
!
!
! IMPLICIT OUTPUTS:
!
!	EDT$$Z_CCMD_DESC
!	EDT$$Z_CJOU_DESC
!	EDT$$Z_COUT_DESC
!	EDT$$Z_CINP_DESC
!
! ROUTINE VALUE:
!
!	NONE
!
! SIDE EFFECTS:
!
!	Fills the pointer and length fields of the file name
!	string descriptors.
!
!--

    BEGIN

    EXTERNAL ROUTINE
	CLI$PRESENT,				! Was a parameter/qualifier present
	CLI$GET_VALUE;				! Get the value of that parameter/qualifier

    EXTERNAL
	EDT$$Z_CCMD_DESC : BLOCK [, BYTE],
	EDT$$Z_CJOU_DESC : BLOCK [, BYTE],
	EDT$$Z_COUT_DESC : BLOCK [, BYTE],
	EDT$$Z_CINP_DESC : BLOCK [, BYTE],
	EDT$$V_COPTIONS : BITVECTOR [32];	! Options

    EXTERNAL LITERAL
	CLI$_NEGATED,				! /NO was specified
	CLI$_PRESENT,				! parameter was explicit
	CLI$_ABSENT,				! parameter was not present in command
	CLI$_DEFAULTED;				! parameter has been defaulted

    LOCAL
	OUTPUT_STATUS,
	COMMAND_STATUS,
	JOURNAL_STATUS,
	CREATE_STATUS,
	RECOVER_STATUS,
	READ_ONLY_STATUS,
	SD_COMMAND : BLOCK [8, BYTE],
	SD_CREATE : BLOCK [8, BYTE],
	SD_INPUT : BLOCK [8, BYTE],
	SD_JOURNAL : BLOCK [8, BYTE],
	SD_OUTPUT : BLOCK [8, BYTE],
	SD_READ : BLOCK [8, BYTE],
	SD_RECOVER : BLOCK [8, BYTE];

!+
! Initialize the string descriptors corresponding to the
! qualifiers and labels in the EDIT.CLD.  Note: *** the
! spelling of the strings must exactly match those of the
! qualifiers in the CLD file.
!-
    SD_COMMAND [DSC$B_DTYPE] = DSC$K_DTYPE_T;
    SD_COMMAND [DSC$B_CLASS] = DSC$K_CLASS_S;
    SD_COMMAND [DSC$A_POINTER] = UPLIT (BYTE ('COMMAND'));
    SD_COMMAND [DSC$W_LENGTH] = 7;
!
    SD_CREATE [DSC$B_DTYPE] = DSC$K_DTYPE_T;
    SD_CREATE [DSC$B_CLASS] = DSC$K_CLASS_S;
    SD_CREATE [DSC$A_POINTER] = UPLIT (BYTE ('CREATE'));
    SD_CREATE [DSC$W_LENGTH] = 6;
!
    SD_INPUT [DSC$B_DTYPE] = DSC$K_DTYPE_T;
    SD_INPUT [DSC$B_CLASS] = DSC$K_CLASS_S;
    SD_INPUT [DSC$A_POINTER] = UPLIT (BYTE ('INPUT'));
    SD_INPUT [DSC$W_LENGTH] = 5;
!
    SD_JOURNAL [DSC$B_DTYPE] = DSC$K_DTYPE_T;
    SD_JOURNAL [DSC$B_CLASS] = DSC$K_CLASS_S;
    SD_JOURNAL [DSC$A_POINTER] = UPLIT (BYTE ('JOURNAL'));
    SD_JOURNAL [DSC$W_LENGTH] = 7;
!
    SD_OUTPUT [DSC$B_DTYPE] = DSC$K_DTYPE_T;
    SD_OUTPUT [DSC$B_CLASS] = DSC$K_CLASS_S;
    SD_OUTPUT [DSC$A_POINTER] = UPLIT (BYTE ('OUTPUT'));
    SD_OUTPUT [DSC$W_LENGTH] = 6;
!
    SD_READ [DSC$B_DTYPE] = DSC$K_DTYPE_T;
    SD_READ [DSC$B_CLASS] = DSC$K_CLASS_S;
    SD_READ [DSC$A_POINTER] = UPLIT (BYTE ('READ_ONLY'));
    SD_READ [DSC$W_LENGTH] = 9;
!
    SD_RECOVER [DSC$B_DTYPE] = DSC$K_DTYPE_T;
    SD_RECOVER [DSC$B_CLASS] = DSC$K_CLASS_S;
    SD_RECOVER [DSC$A_POINTER] = UPLIT (BYTE ('RECOVER'));
    SD_RECOVER [DSC$W_LENGTH] = 7;
!+
! Get the input file spec.
!-
    CLI$GET_VALUE (SD_INPUT, EDT$$Z_CINP_DESC);
    $$TRACE (EDT$$TR_COM, EDT$$TR_SCOM_INP, .EDT$$Z_CINP_DESC [DSC$W_LENGTH],
	.EDT$$Z_CINP_DESC [DSC$A_POINTER]);
!+
! Get the output file spec if there is one.
!-
    OUTPUT_STATUS = CLI$PRESENT (SD_OUTPUT);
!+
! There is an output file by default.  Only turn on the READ_ONLY
! bit if /NOOUTPUT was explicitly specified.
!-

    IF (.OUTPUT_STATUS EQL CLI$_PRESENT)
    THEN
	BEGIN
	EDT$$V_COPTIONS [3] = 0;
	CLI$GET_VALUE (SD_OUTPUT, EDT$$Z_COUT_DESC);
	$$TRACE (EDT$$TR_COM, EDT$$TR_SCOM_OUT, .EDT$$Z_COUT_DESC [DSC$W_LENGTH],
	    .EDT$$Z_COUT_DESC [DSC$A_POINTER]);
	END
    ELSE

	IF (.OUTPUT_STATUS EQL CLI$_NEGATED) THEN EDT$$V_COPTIONS [3] = 1 ELSE EDT$$V_COPTIONS [3] = 0;

!+
! Check for explicit command file.
!-
    COMMAND_STATUS = CLI$PRESENT (SD_COMMAND);

    IF (.COMMAND_STATUS EQL CLI$_NEGATED)	! /NOCOMMAND specified
    THEN
	BEGIN
	EDT$$V_COPTIONS [4] = 1;
	$$TRACE (EDT$$TR_COM, EDT$$TR_SCOM_SW_CMD, %UPVAL, %REF (0));
	END
    ELSE
	BEGIN					! /NOCOMMAND not specified
	EDT$$V_COPTIONS [4] = 0;

	IF (EDT$$V_COPTIONS [1] = CLI$GET_VALUE (SD_COMMAND, EDT$$Z_CCMD_DESC))
	THEN
	    BEGIN
	    $$TRACE (EDT$$TR_COM, EDT$$TR_SCOM_CMD, .EDT$$Z_CCMD_DESC [DSC$W_LENGTH],
		.EDT$$Z_CCMD_DESC [DSC$A_POINTER]);
	    $$TRACE (EDT$$TR_COM, EDT$$TR_SCOM_SW_CMD, %UPVAL, %REF (2));
	    0
	    END
	ELSE
	    $$TRACE (EDT$$TR_COM, EDT$$TR_SCOM_SW_CMD, %UPVAL, %REF (1));

	END;

!+
! Check for explicit journal file.
!-
    JOURNAL_STATUS = CLI$PRESENT (SD_JOURNAL);

    IF (.JOURNAL_STATUS EQL CLI$_NEGATED)	! /NOJOURNAL specified
    THEN
	BEGIN
	EDT$$V_COPTIONS [2] = 1;
	$$TRACE (EDT$$TR_COM, EDT$$TR_SCOM_SW_JOU, %UPVAL, %REF (0));
	END
    ELSE
	BEGIN

	LOCAL
	    STATUS;

	EDT$$V_COPTIONS [2] = 0;

	IF (STATUS = CLI$GET_VALUE (SD_JOURNAL, EDT$$Z_CJOU_DESC))
	THEN
	    BEGIN
	    $$TRACE (EDT$$TR_COM, EDT$$TR_SCOM_JOU, .EDT$$Z_CJOU_DESC [DSC$W_LENGTH],
		.EDT$$Z_CJOU_DESC [DSC$A_POINTER]);
	    $$TRACE (EDT$$TR_COM, EDT$$TR_SCOM_SW_JOU, %UPVAL, %REF (2));
	    0
	    END
	ELSE
	    $$TRACE (EDT$$TR_COM, EDT$$TR_SCOM_SW_JOU, %UPVAL, %REF (1));

	END;

!+
! Look for /CREATE qualifier
!-
    CREATE_STATUS = CLI$PRESENT (SD_CREATE);
    EDT$$V_COPTIONS [5] = NOT .CREATE_STATUS;
!+
! Look for /RECOVER qualifier
!-
    RECOVER_STATUS = CLI$PRESENT (SD_RECOVER);
    EDT$$V_COPTIONS [0] = .RECOVER_STATUS;

    IF .RECOVER_STATUS THEN $$TRACE (EDT$$TR_COM, EDT$$TR_SCOM_SW_REC, %UPVAL, %REF (1));

!+
! Look for /READ_ONLY qualifier
!-
    READ_ONLY_STATUS = CLI$PRESENT (SD_READ);

    IF (.READ_ONLY_STATUS NEQ CLI$_ABSENT)
    THEN
	BEGIN
!+
! If journaling was not indicated explicitly, set it based on /READ_ONLY.
!-

	IF ((.JOURNAL_STATUS EQL CLI$_ABSENT) OR (.JOURNAL_STATUS EQL CLI$_DEFAULTED))
	THEN
	    EDT$$V_COPTIONS [2] = .READ_ONLY_STATUS;

!+
! If an output file was not indicated explicitly, set it based on /READ_ONLY.
!-

	IF ((.OUTPUT_STATUS EQL CLI$_ABSENT) OR (.OUTPUT_STATUS EQL CLI$_DEFAULTED))
	THEN
	    EDT$$V_COPTIONS [3] = .READ_ONLY_STATUS;

	IF .READ_ONLY_STATUS THEN $$TRACE (EDT$$TR_COM, EDT$$TR_SCOM_SW_REA, 0, 0);

	END;

!
    END;					! of routine EDT$$PA_CMDLN

!<BLF/PAGE>

END						! of module EDT$COMMAND

ELUDOM
