; 
; ****************************************************************************
; *									    *
; *  Copyright (c) 1982, 1983		                                    *
; *  by DIGITAL Equipment Corporation, Maynard, Mass.			    *
; * 									    *
; *  This software is furnished under a license and may be used and  copied  *
; *  only  in  accordance  with  the  terms  of  such  license and with the  *
; *  inclusion of the above copyright notice.  This software or  any  other  *
; *  copies  thereof may not be provided or otherwise made available to any  *
; *  other person.  No title to and ownership of  the  software  is  hereby  *
; *  transferred.							    *
; * 									    *
; *  The information in this software is subject to change  without  notice  *
; *  and  should  not  be  construed  as  a commitment by DIGITAL Equipment  *
; *  Corporation.							    *
; * 									    *
; *  DIGITAL assumes no responsibility for the use or  reliability  of  its  *
; *  software on equipment which is not supplied by DIGITAL.		    *
; *									    *
; ****************************************************************************
; *********************************************************************************************************************************
;  Created 15-SEP-1984 22:42:46  by  VAX-11 SDL V2.0       Source: 15-SEP-1984 22:41:29 _$255$DUA28:[CJFV4.SRC]CJFRUFMAC.SDL;1     
; *********************************************************************************************************************************
 
 
	.TITLE	STARLET
; 
;  CJF AND RUF SERVICE MACRO DEFINITIONS
; 
; 
;  $ALLJDR
; 
;  ALLOCATE A DISK OR TAPE DRIVE FOR JOURNALING
; 
;      DEVNAM	- ADDRESS OF A CHARACTER STRING DESCRIPTOR FOR THE DEVICE
;     		  NAME STRING.
;     [RSLLEN]	- ADDRESS OF A WORD TO RECEIVE THE LENGTH OF THE ALLOCATED
;     		  DEVICE NAME STRING.
;     [RSLBUF]	- ADDRESS OF A CHARACTER STRING DESCRIPTOR FOR RECEIVING THE
;     		  PHYSICAL DEVICE NAME STRING.
;     [JNLACP]	- ADDRESS OF A DESCRIPTOR FOR A JOURNAL ACP PROCESS NAME.
; 
 
	.MACRO	$ALLJDR_G	ARGPTR
		.GLOBL	CJF$ALLJDR
		CALLG	ARGPTR,G^CJF$ALLJDR
	.ENDM	$ALLJDR_G
 
	.MACRO	$ALLJDRDEF
		$OFFDEF	ALLJDR, <DEVNAM,RSLLEN,RSLBUF,JNLACP>
	.ENDM	$ALLJDRDEF
 
	.MACRO	$ALLJDR	DEVNAM=0,RSLLEN=0,RSLBUF=0,JNLACP=0
		$ALLJDRDEF
		.ADDRESS	4
		.ADDRESS	DEVNAM
		.ADDRESS	RSLLEN
		.ADDRESS	RSLBUF
		.ADDRESS	JNLACP
	.ENDM	$ALLJDR
 
	.MACRO	$ALLJDR_S DEVNAM,RSLLEN=0,RSLBUF=0,JNLACP=0
		.GLOBL	CJF$ALLJDR
		$PUSHADR JNLACP,CONTEXT=Q
		$PUSHADR RSLBUF,CONTEXT=Q
		$PUSHADR RSLLEN,CONTEXT=W
		$PUSHADR DEVNAM,CONTEXT=Q
		CALLS	#4,G^CJF$ALLJDR
	.ENDM	$ALLJDR_S
 
; 
;  $ASSJNL
; 
;  ASSIGN A CHANNEL TO A JOURNAL
; 
;      CHAN	- ADDRESS OF A WORD TO RECEIVE THE CHANNEL NUMBER ASSIGNED.
;      JNLTYP	- TYPE OF JOURNAL.
;     [JNLNAM]	- ADDRESS OF A CHARACTER STRING DESCRIPTOR FOR THE JOURNAL
;     		  NAME STRING.
;     [ACMODE]	- ADDRESS OF A BYTE CONTAINING THE ACCESS MODE TO BE ASSOCIATED
;     		  WITH CHANNEL.
;     [PROT]	- ADDRESS OF A WORD CONTAINING THE PROTECTION MASK GIVEN TO
;     		  ENTRIES WRITTEN OVER CHANNEL.
;     [FACCOD]	- ADDRESS OF A WORD CONTAINING THE FACILITY CODE VALUE GIVEN TO
;     		  ENTRIES.
;     [FLAGS] 	- FLAGS FOR CHANNEL.
;     [DEVNAM]	- ADDRESS OF A CHARACTER STRING DESCRIPTOR FOR THE DEVICE
;     		  NAME STRING.
;     [OBJUIC]	- ADDRESS OF A LONGWORD CONTAINING OBJECTS UIC
;     [SESSID]	- ADDRESS OF A STRING DESCRIPTOR FOR SESSION ID
; 
 
	.MACRO	$ASSJNL_G	ARGPTR
		.GLOBL	CJF$ASSJNL
		CALLG	ARGPTR,G^CJF$ASSJNL
	.ENDM	$ASSJNL_G
 
	.MACRO	$ASSJNLDEF
		$OFFDEF	ASSJNL, <CHAN,JNLTYP,JNLNAM,ACMODE,PROT,FACCOD,-
			FLAGS,DEVNAM,OBJUIC,SESSID>
	.ENDM	$ASSJNLDEF
 
	.MACRO	$ASSJNL	CHAN=0,JNLTYP=0,JNLNAM=0,ACMODE=0,PROT=0,-
			FACCOD=0,FLAGS=0,DEVNAM=0,OBJUIC=0,SESSID=0
		$ASSJNLDEF
		.ADDRESS	10
		.ADDRESS	CHAN
		.ADDRESS	JNLTYP
		.ADDRESS	JNLNAM
		.ADDRESS	ACMODE
		.ADDRESS	PROT
		.ADDRESS	FACCOD
		.ADDRESS	FLAGS
		.ADDRESS	DEVNAM
		.ADDRESS	OBJUIC
		.ADDRESS	SESSID
	.ENDM	$ASSJNL
 
	.MACRO	$ASSJNL_S CHAN,JNLTYP,JNLNAM=0,ACMODE=0,PROT=0,FACCOD=0,-
			FLAGS=#0,DEVNAM=0,OBJUIC=0,SESSID=0
		.GLOBL	CJF$ASSJNL
		$PUSHADR SESSID,CONTEXT=Q
		$PUSHADR OBJUIC
		$ASNPUSH DEVNAM,FLAGS
		$PUSHADR FACCOD,CONTEXT=W
		$PUSHADR PROT,CONTEXT=W
		$PUSHADR ACMODE,CONTEXT=B
		$PUSHADR JNLNAM,CONTEXT=Q
		MOVZBL	JNLTYP,-(SP)
		$PUSHADR CHAN,CONTEXT=W
		CALLS	#10,G^CJF$ASSJNL
	.ENDM	$ASSJNL_S
 
; 
;  $CREJNL
; 
;  CREATE A JOURNAL
; 
;      CHAN	- ADDRESS OF A WORD TO RECEIVE THE CHANNEL NUMBER ASSIGNED.
;      JSB	- ADDRESS OF THE JOURNAL SPECIFICATION BLOCK.
;     [ACMODE]	- ADDRESS OF A BYTE CONTAINING THE ACCESS MODE TO BE ASSOCIATED
;     		  WITH CHANNEL.
;     [PROT]	- ADDRESS OF A WORD CONTAINING THE PROTECTION MASK GIVEN TO
;     		  ENTRIES WRITTEN OVER CHANNEL.
;     [FACCOD]	- ADDRESS OF A WORD CONTAINING THE FACILITY CODE VALUE GIVEN TO
;     		  ENTRIES.
;     [FLAGS]	- FLAGS FOR CHANNEL.
;     [OBJUIC]	- ADDRESS OF A LONGWORD CONTAINING OBJECTS UIC
;     [SESSID]	- ADDRESS OF A STRING DESCRIPTOR FOR SESSION ID
;     [IOSB]	- ADDRESS OF A IOSB
; 
 
	.MACRO	$CREJNL_G	ARGPTR
		.GLOBL	CJF$CREJNL
		CALLG	ARGPTR,G^CJF$CREJNL
	.ENDM	$CREJNL_G
 
	.MACRO	$CREJNLDEF
		$OFFDEF	CREJNL, <CHAN,JSB,ACMODE,PROT,FACCOD,FLAGS,OBJUIC,-
			SESSID,IOSB>
	.ENDM	$CREJNLDEF
 
	.MACRO	$CREJNL	CHAN=0,JSB=0,ACMODE=0,PROT=0,FACCOD=0,FLAGS=0,-
			OBJUIC=0,SESSID=0,IOSB=0
		$CREJNLDEF
		.ADDRESS	9
		.ADDRESS	CHAN
		.ADDRESS	JSB
		.ADDRESS	ACMODE
		.ADDRESS	PROT
		.ADDRESS	FACCOD
		.ADDRESS	FLAGS
		.ADDRESS	OBJUIC
		.ADDRESS	SESSID
		.ADDRESS	IOSB
	.ENDM	$CREJNL
 
	.MACRO	$CREJNL_S CHAN,JSB,ACMODE=0,PROT=0,FACCOD=0,FLAGS=#0,-
			OBJUIC=0,SESSID=0,IOSB=0
		.GLOBL	CJF$CREJNL
		$PUSHADR IOSB,CONTEXT=Q
		$PUSHADR SESSID,CONTEXT=Q
		$PUSHADR OBJUIC
		PUSHL	FLAGS
		$PUSHADR FACCOD,CONTEXT=W
		$PUSHADR PROT,CONTEXT=W
		$PUSHADR ACMODE,CONTEXT=B
		$PUSHADR JSB
		$PUSHADR CHAN,CONTEXT=W
		CALLS	#9,G^CJF$CREJNL
	.ENDM	$CREJNL_S
 
; 
;  $DEASJNL
; 
;  DEASSIGN A CHANNEL TO A JOURNAL
; 
;     CHAN	- NUMBER OF THE I/O CHANNEL TO BE DEASSIGNED.
;     IOSB	- ADDRESS OF AN IOSB
; 
 
	.MACRO	$DEASJNL_G	ARGPTR
		.GLOBL	CJF$DEASJNL
		CALLG	ARGPTR,G^CJF$DEASJNL
	.ENDM	$DEASJNL_G
 
	.MACRO	$DEASJNLDEF
		$OFFDEF	DEASJNL, <CHAN,IOSB>
	.ENDM	$DEASJNLDEF
 
	.MACRO	$DEASJNL	CHAN=0,IOSB=0
		$DEASJNLDEF
		.ADDRESS	2
		.ADDRESS	CHAN
		.ADDRESS	IOSB
	.ENDM	$DEASJNL
 
	.MACRO	$DEASJNL_S CHAN,IOSB=0
		.GLOBL	CJF$DEASJNL
		$PUSHADR IOSB,CONTEXT=Q
		MOVZWL	CHAN,-(SP)
		CALLS	#2,G^CJF$DEASJNL
	.ENDM	$DEASJNL_S
 
; 
;  $DEALJDR
; 
;  DEALLOCATE A JOURNAL DISK OR TAPE DRIVE.
; 
;     DEVNAM	- ADDRESS OF A CHARACTER STRING DESCRIPTOR FOR THE DEVICE
;     		  NAME STRING.
; 
 
	.MACRO	$DEALJDR_G	ARGPTR
		.GLOBL	CJF$DEALJDR
		CALLG	ARGPTR,G^CJF$DEALJDR
	.ENDM	$DEALJDR_G
 
	.MACRO	$DEALJDRDEF
		$OFFDEF	DEALJDR, <DEVNAM>
	.ENDM	$DEALJDRDEF
 
	.MACRO	$DEALJDR	DEVNAM=0
		$DEALJDRDEF
		.ADDRESS	1
		.ADDRESS	DEVNAM
	.ENDM	$DEALJDR
 
	.MACRO	$DEALJDR_S DEVNAM
		.GLOBL	CJF$DEALJDR
		$PUSHADR DEVNAM,CONTEXT=Q
		CALLS	#1,G^CJF$DEALJDR
	.ENDM	$DEALJDR_S
 
; 
;  $DELJNL
; 
;  DELETE A JOURNAL
; 
;      CHAN	- NUMBER OF THE I/O CHANNEL TO THE JOURNAL TO BE DELETED.
;     [FLAGS]	- FLAGS FOR CHANNEL.
; 
 
	.MACRO	$DELJNL_G	ARGPTR
		.GLOBL	CJF$DELJNL
		CALLG	ARGPTR,G^CJF$DELJNL
	.ENDM	$DELJNL_G
 
	.MACRO	$DELJNLDEF
		$OFFDEF	DELJNL, <CHAN,FLAGS>
	.ENDM	$DELJNLDEF
 
	.MACRO	$DELJNL	CHAN=0,FLAGS=0
		$DELJNLDEF
		.ADDRESS	2
		.ADDRESS	CHAN
		.ADDRESS	FLAGS
	.ENDM	$DELJNL
 
	.MACRO	$DELJNL_S CHAN,FLAGS=#0
		.GLOBL	CJF$DELJNL
		PUSHL	FLAGS
		MOVZWL	CHAN,-(SP)
		CALLS	#2,G^CJF$DELJNL
	.ENDM	$DELJNL_S
 
; 
;  $DMTJMD AND $DMTJMDW
; 
;  DISMOUNT A JOURNAL MEDIUM
; 
;     [DEVNAM]	- ADDRESS OF A CHARACTER STRING DESCRIPTOR FOR THE DEVICE
;     		  NAME STRING.
;     [GRPNAM]	- ADDRESS OF A CHARACTER STRING DESCRIPTOR FOR THE TAPE
;     		  SHADOW GROUP.
;     [FLAGS]	- 32 BIT VALUE OF FLAGS.
;     [EFN]	- NUMBER OF EVENT FLAG TO BE SET UPON COMPLETION.
;     [IOSB]	- ADDRESS OF QUADWORD I/O STATUS BLOCK THAT IS TO RECEIVE
;     		  FINAL COMPLETION STATUS.
;     [ASTADR]	- ADDRESS OF THE ENTRY MASK OF AN AST SERVICE ROUTINE TO BE
;     		  EXECUTED WHEN THE DISMOUNT COMPLETES.
;     [ASTPRM]	- AST PARAMETER LONGWORD TO BE PASSED TO THE AST ROUTINE.
; 
 
	.MACRO	$DMTJMD_G	ARGPTR
		.GLOBL	CJF$DMTJMD
		CALLG	ARGPTR,G^CJF$DMTJMD
	.ENDM	$DMTJMD_G
 
	.MACRO	$DMTJMDDEF
		$OFFDEF	DMTJMD, <DEVNAM,GRPNAM,FLAGS,EFN,IOSB,ASTADR,ASTPRM>
	.ENDM	$DMTJMDDEF
 
	.MACRO	$DMTJMD	DEVNAM=0,GRPNAM=0,FLAGS=0,EFN=0,IOSB=0,ASTADR=0,-
			ASTPRM=0
		$DMTJMDDEF
		.ADDRESS	7
		.ADDRESS	DEVNAM
		.ADDRESS	GRPNAM
		.ADDRESS	FLAGS
		.ADDRESS	EFN
		.ADDRESS	IOSB
		.ADDRESS	ASTADR
		.ADDRESS	ASTPRM
	.ENDM	$DMTJMD
 
	.MACRO	$DMTJMD_S DEVNAM=0,GRPNAM=0,FLAGS=0,EFN=#0,IOSB=0,-
			ASTADR=0,ASTPRM=#0
		.GLOBL	CJF$DMTJMD
		$QIOPUSH ASTPRM,ASTADR
		$ASNPUSH IOSB,EFN
		$PUSHADR FLAGS
		$PUSHADR GRPNAM,CONTEXT=Q
		$PUSHADR DEVNAM,CONTEXT=Q
		CALLS	#7,G^CJF$DMTJMD
	.ENDM	$DMTJMD_S
 
 
	.MACRO	$DMTJMDW_G	ARGPTR
		.GLOBL	CJF$DMTJMDW
		CALLG	ARGPTR,G^CJF$DMTJMDW
	.ENDM	$DMTJMDW_G
 
	.MACRO	$DMTJMDWDEF
		$OFFDEF	DMTJMDW, <DEVNAM,GRPNAM,FLAGS,EFN,IOSB,ASTADR,ASTPRM>
	.ENDM	$DMTJMDWDEF
 
	.MACRO	$DMTJMDW	DEVNAM=0,GRPNAM=0,FLAGS=0,EFN=0,IOSB=0,ASTADR=0,-
			ASTPRM=0
		$DMTJMDWDEF
		.ADDRESS	7
		.ADDRESS	DEVNAM
		.ADDRESS	GRPNAM
		.ADDRESS	FLAGS
		.ADDRESS	EFN
		.ADDRESS	IOSB
		.ADDRESS	ASTADR
		.ADDRESS	ASTPRM
	.ENDM	$DMTJMDW
 
	.MACRO	$DMTJMDW_S DEVNAM=0,GRPNAM=0,FLAGS=0,EFN=#0,IOSB=0,-
			ASTADR=0,ASTPRM=#0
		.GLOBL	CJF$DMTJMDW
		$QIOPUSH ASTPRM,ASTADR
		$ASNPUSH IOSB,EFN
		$PUSHADR FLAGS
		$PUSHADR GRPNAM,CONTEXT=Q
		$PUSHADR DEVNAM,CONTEXT=Q
		CALLS	#7,G^CJF$DMTJMDW
	.ENDM	$DMTJMDW_S
 
; 
;  $FORCEJNL AND $FORCEJNLW
; 
;  FORCE THE JOURNAL'S CURRENT BUFFERS OUT TO SECONDARY STORAGE
; 
;      CHAN	- NUMBER OF A CHANNEL TO THE JOURNAL.
;     [SEQNO]	- HIGHEST SEQUENCE NUMBER TO FORCE TO.
;     [EFN]	- NUMBER OF EVENT FLAG TO BE SET UPON COMPLETION.
;     [IOSB]	- ADDRESS OF QUADWORD I/O STATUS BLOCK THAT IS TO RECEIVE
;     		  FINAL COMPLETION STATUS.
;     [ASTADR]	- ADDRESS OF THE ENTRY MASK OF AN AST SERVICE ROUTINE TO BE
;     		  EXECUTED UPON COMPLETION.
;     [ASTPRM]	- AST PARAMETER LONGWORD TO BE PASSED TO THE AST ROUTINE.
; 
 
	.MACRO	$FORCEJNL_G	ARGPTR
		.GLOBL	CJF$FORCEJNL
		CALLG	ARGPTR,G^CJF$FORCEJNL
	.ENDM	$FORCEJNL_G
 
	.MACRO	$FORCEJNLDEF
		$OFFDEF	FORCEJNL, <CHAN,SEQNO,EFN,IOSB,ASTADR,ASTPRM>
	.ENDM	$FORCEJNLDEF
 
	.MACRO	$FORCEJNL	CHAN=0,SEQNO=0,EFN=0,IOSB=0,ASTADR=0,ASTPRM=0
		$FORCEJNLDEF
		.ADDRESS	6
		.ADDRESS	CHAN
		.ADDRESS	SEQNO
		.ADDRESS	EFN
		.ADDRESS	IOSB
		.ADDRESS	ASTADR
		.ADDRESS	ASTPRM
	.ENDM	$FORCEJNL
 
	.MACRO	$FORCEJNL_S CHAN,SEQNO=#0,EFN=#0,IOSB=0,ASTADR=0,-
			ASTPRM=#0
		.GLOBL	CJF$FORCEJNL
		$QIOPUSH ASTPRM,ASTADR
		$ASNPUSH IOSB,EFN
		PUSHL	SEQNO
		MOVZWL	CHAN,-(SP)
		CALLS	#6,G^CJF$FORCEJNL
	.ENDM	$FORCEJNL_S
 
 
	.MACRO	$FORCEJNLW_G	ARGPTR
		.GLOBL	CJF$FORCEJNLW
		CALLG	ARGPTR,G^CJF$FORCEJNLW
	.ENDM	$FORCEJNLW_G
 
	.MACRO	$FORCEJNLWDEF
		$OFFDEF	FORCEJNLW, <CHAN,SEQNO,EFN,IOSB,ASTADR,ASTPRM>
	.ENDM	$FORCEJNLWDEF
 
	.MACRO	$FORCEJNLW	CHAN=0,SEQNO=0,EFN=0,IOSB=0,ASTADR=0,ASTPRM=0
		$FORCEJNLWDEF
		.ADDRESS	6
		.ADDRESS	CHAN
		.ADDRESS	SEQNO
		.ADDRESS	EFN
		.ADDRESS	IOSB
		.ADDRESS	ASTADR
		.ADDRESS	ASTPRM
	.ENDM	$FORCEJNLW
 
	.MACRO	$FORCEJNLW_S CHAN,SEQNO=#0,EFN=#0,IOSB=0,ASTADR=0,-
			ASTPRM=#0
		.GLOBL	CJF$FORCEJNLW
		$QIOPUSH ASTPRM,ASTADR
		$ASNPUSH IOSB,EFN
		PUSHL	SEQNO
		MOVZWL	CHAN,-(SP)
		CALLS	#6,G^CJF$FORCEJNLW
	.ENDM	$FORCEJNLW_S
 
; 
;  $GETJNL
; 
;  GET THE DEFAULT JOURNAL NAME FOR A DEVICE-UIC PAIR
; 
;      DEVNAM	- ADDRESS OF A CHARACTER STRING DESCRIPTOR FOR THE DEVICE
;     		  NAME STRING.
;      UIC	- UIC OF THE OWNER OF THE OBJECT TO BE JOURNALED.
;      JNLTYP	- TYPE OF JOURNAL.
;      JNLNAM	- ADDRESS OF DESRCIPTOR TO RECEIVE THE JOURNAL NAME.
;     [RSLLEN]	- ADDRESS OF A WORD TO RECEIVE THE LENGTH OF THE RESULTANT
;     		  NAME STRING.
; 
 
	.MACRO	$GETJNL_G	ARGPTR
		.GLOBL	CJF$GETJNL
		CALLG	ARGPTR,G^CJF$GETJNL
	.ENDM	$GETJNL_G
 
	.MACRO	$GETJNLDEF
		$OFFDEF	GETJNL, <DEVNAM,UIC,JNLTYP,JNLNAM,RSLLEN>
	.ENDM	$GETJNLDEF
 
	.MACRO	$GETJNL	DEVNAM=0,UIC=0,JNLTYP=0,JNLNAM=0,RSLLEN=0
		$GETJNLDEF
		.ADDRESS	5
		.ADDRESS	DEVNAM
		.ADDRESS	UIC
		.ADDRESS	JNLTYP
		.ADDRESS	JNLNAM
		.ADDRESS	RSLLEN
	.ENDM	$GETJNL
 
	.MACRO	$GETJNL_S DEVNAM,UIC,JNLTYP,JNLNAM,RSLLEN=0
		.GLOBL	CJF$GETJNL
		$PUSHADR RSLLEN,CONTEXT=W
		$PUSHADR JNLNAM,CONTEXT=Q
		MOVZBL	JNLTYP,-(SP)
		PUSHL	UIC
		$PUSHADR DEVNAM,CONTEXT=Q
		CALLS	#5,G^CJF$GETJNL
	.ENDM	$GETJNL_S
 
; 
;  $GETRUI
; 
;  GET RECOVERY UNIT INFORMATION
; 		Note: One of [RUID,DEVNAM] must be specified, but for SDL's
; 		      purposes they must both be considered optional
;     [RUID]	- ADDRESS OF AN OCTAWORD RECOVERY UNIT ID.
;     [DEVNAM]	- ADDRESS OF A CHARACTER STRING DESCRIPTOR FOR THE DEVICE
;     		  NAME STRING.
;      RSLBUF	- ADDRESS OF A CHARACTER STRING DESCRIPTOR FOR THE BUFFER
;     		  TO RECEIVE THE RU STRUCTURES (RUS's).
;     [RSLCNT]	- ADDRESS OF A WORD TO RECEIVE THE NUMBER OF RUS's RETURNED.
;     [FLAGS]   - 32 BIT VALUE OF FLAGS.
; 
 
	.MACRO	$GETRUI_G	ARGPTR
		.GLOBL	CJF$GETRUI
		CALLG	ARGPTR,G^CJF$GETRUI
	.ENDM	$GETRUI_G
 
	.MACRO	$GETRUIDEF
		$OFFDEF	GETRUI, <RUID,DEVNAM,RSLBUF,RSLCNT,FLAGS>
	.ENDM	$GETRUIDEF
 
	.MACRO	$GETRUI	RUID=0,DEVNAM=0,RSLBUF=0,RSLCNT=0,FLAGS=0
		$GETRUIDEF
		.ADDRESS	5
		.ADDRESS	RUID
		.ADDRESS	DEVNAM
		.ADDRESS	RSLBUF
		.ADDRESS	RSLCNT
		.ADDRESS	FLAGS
	.ENDM	$GETRUI
 
	.MACRO	$GETRUI_S RUID=0,DEVNAM=0,RSLBUF,RSLCNT=0,FLAGS=0
		.GLOBL	CJF$GETRUI
		$PUSHADR FLAGS
		$PUSHADR RSLCNT,CONTEXT=W
		$PUSHADR RSLBUF,CONTEXT=Q
		$PUSHADR DEVNAM,CONTEXT=Q
		$PUSHADR RUID
		CALLS	#5,G^CJF$GETRUI
	.ENDM	$GETRUI_S
 
; 
;  $MNTJMD
; 
;  MOUNT A JOURNAL DISK OR TAPE MEDIUM
; 
;      ITMLST	- ADDRESS OF A ZERO-TERMINATED LIST OF INPUT PARAMETERS.
;     [JNLACP]	- ADDRESS OF A DESCRIPTOR FOR A JOURNAL ACP PROCESS NAME.
;     [SGB]	- ADDRESS OF A ZERO-TERMINATED SHADOW GROUP BLOCK.
; 
 
	.MACRO	$MNTJMD_G	ARGPTR
		.GLOBL	CJF$MNTJMD
		CALLG	ARGPTR,G^CJF$MNTJMD
	.ENDM	$MNTJMD_G
 
	.MACRO	$MNTJMDDEF
		$OFFDEF	MNTJMD, <ITMLST,JNLACP,SGB>
	.ENDM	$MNTJMDDEF
 
	.MACRO	$MNTJMD	ITMLST=0,JNLACP=0,SGB=0
		$MNTJMDDEF
		.ADDRESS	3
		.ADDRESS	ITMLST
		.ADDRESS	JNLACP
		.ADDRESS	SGB
	.ENDM	$MNTJMD
 
	.MACRO	$MNTJMD_S ITMLST,JNLACP=0,SGB=0
		.GLOBL	CJF$MNTJMD
		$PUSHADR SGB
		$PUSHADR JNLACP,CONTEXT=Q
		$PUSHADR ITMLST
		CALLS	#3,G^CJF$MNTJMD
	.ENDM	$MNTJMD_S
 
; 
;  $MODFLT AND $MODFLTW
; 
;  MODIFY A FILTER
; 
;      CHAN	- NUMBER OF A CHANNEL TO THE JOURNAL.
;      FLTLST	- ADDRESS OF A ZERO-TERMINATED LIST OF POINTERS TO FILTERS.
;      FLAGS	- 32 BIT VALUE OF FLAGS.
;     [EFN]	- NUMBER OF EVENT FLAG TO BE SET UPON COMPLETION.
;     [IOSB]	- ADDRESS OF QUADWORD I/O STATUS BLOCK THAT IS TO RECEIVE
;     		  FINAL COMPLETION STATUS.
;     [ASTADR]	- ADDRESS OF THE ENTRY MASK OF AN AST SERVICE ROUTINE TO BE
;     		  EXECUTED UPON COMPLETION.
;     [ASTPRM]	- AST PARAMETER LONGWORD TO BE PASSED TO THE AST ROUTINE.
; 
 
	.MACRO	$MODFLT_G	ARGPTR
		.GLOBL	CJF$MODFLT
		CALLG	ARGPTR,G^CJF$MODFLT
	.ENDM	$MODFLT_G
 
	.MACRO	$MODFLTDEF
		$OFFDEF	MODFLT, <CHAN,FLTLST,FLAGS,EFN,IOSB,ASTADR,ASTPRM>
	.ENDM	$MODFLTDEF
 
	.MACRO	$MODFLT	CHAN=0,FLTLST=0,FLAGS=0,EFN=0,IOSB=0,ASTADR=0,-
			ASTPRM=0
		$MODFLTDEF
		.ADDRESS	7
		.ADDRESS	CHAN
		.ADDRESS	FLTLST
		.ADDRESS	FLAGS
		.ADDRESS	EFN
		.ADDRESS	IOSB
		.ADDRESS	ASTADR
		.ADDRESS	ASTPRM
	.ENDM	$MODFLT
 
	.MACRO	$MODFLT_S CHAN,FLTLST,FLAGS=#0,EFN=#0,IOSB=0,ASTADR=0,-
			ASTPRM=#0
		.GLOBL	CJF$MODFLT
		$QIOPUSH ASTPRM,ASTADR
		$ASNPUSH IOSB,EFN
		PUSHL	FLAGS
		$PUSHADR FLTLST
		MOVZWL	CHAN,-(SP)
		CALLS	#7,G^CJF$MODFLT
	.ENDM	$MODFLT_S
 
 
	.MACRO	$MODFLTW_G	ARGPTR
		.GLOBL	CJF$MODFLTW
		CALLG	ARGPTR,G^CJF$MODFLTW
	.ENDM	$MODFLTW_G
 
	.MACRO	$MODFLTWDEF
		$OFFDEF	MODFLTW, <CHAN,FLTLST,FLAGS,EFN,IOSB,ASTADR,ASTPRM>
	.ENDM	$MODFLTWDEF
 
	.MACRO	$MODFLTW	CHAN=0,FLTLST=0,FLAGS=0,EFN=0,IOSB=0,ASTADR=0,-
			ASTPRM=0
		$MODFLTWDEF
		.ADDRESS	7
		.ADDRESS	CHAN
		.ADDRESS	FLTLST
		.ADDRESS	FLAGS
		.ADDRESS	EFN
		.ADDRESS	IOSB
		.ADDRESS	ASTADR
		.ADDRESS	ASTPRM
	.ENDM	$MODFLTW
 
	.MACRO	$MODFLTW_S CHAN,FLTLST,FLAGS=#0,EFN=#0,IOSB=0,ASTADR=0,-
			ASTPRM=#0
		.GLOBL	CJF$MODFLTW
		$QIOPUSH ASTPRM,ASTADR
		$ASNPUSH IOSB,EFN
		PUSHL	FLAGS
		$PUSHADR FLTLST
		MOVZWL	CHAN,-(SP)
		CALLS	#7,G^CJF$MODFLTW
	.ENDM	$MODFLTW_S
 
; 
;  $POSJNL AND $POSJNLW	
; 
;  POSITION A FILTER PRIOR TO READING
; 
;      CHAN	- NUMBER OF A CHANNEL TO THE JOURNAL.
;      FLTLST	- ADDRESS OF A ZERO-TERMINATED LIST OF POINTERS TO FILTERS.
;     [FLAGS]	- 32 BIT VALUE OF FLAGS.
;     [EFN]	- NUMBER OF EVENT FLAG TO BE SET UPON COMPLETION.
;     [IOSB]	- ADDRESS OF QUADWORD I/O STATUS BLOCK THAT IS TO RECEIVE
;     		  FINAL COMPLETION STATUS.
;     [ASTADR]	- ADDRESS OF THE ENTRY MASK OF AN AST SERVICE ROUTINE TO BE
;     		  EXECUTED UPON COMPLETION.
;     [ASTPRM]	- AST PARAMETER LONGWORD TO BE PASSED TO THE AST ROUTINE.
; 
 
	.MACRO	$POSJNL_G	ARGPTR
		.GLOBL	CJF$POSJNL
		CALLG	ARGPTR,G^CJF$POSJNL
	.ENDM	$POSJNL_G
 
	.MACRO	$POSJNLDEF
		$OFFDEF	POSJNL, <CHAN,FLTLST,FLAGS,EFN,IOSB,ASTADR,ASTPRM>
	.ENDM	$POSJNLDEF
 
	.MACRO	$POSJNL	CHAN=0,FLTLST=0,FLAGS=0,EFN=0,IOSB=0,ASTADR=0,-
			ASTPRM=0
		$POSJNLDEF
		.ADDRESS	7
		.ADDRESS	CHAN
		.ADDRESS	FLTLST
		.ADDRESS	FLAGS
		.ADDRESS	EFN
		.ADDRESS	IOSB
		.ADDRESS	ASTADR
		.ADDRESS	ASTPRM
	.ENDM	$POSJNL
 
	.MACRO	$POSJNL_S CHAN,FLTLST,FLAGS=#0,EFN=#0,IOSB=0,ASTADR=0,-
			ASTPRM=#0
		.GLOBL	CJF$POSJNL
		$QIOPUSH ASTPRM,ASTADR
		$ASNPUSH IOSB,EFN
		PUSHL	FLAGS
		$PUSHADR FLTLST
		MOVZWL	CHAN,-(SP)
		CALLS	#7,G^CJF$POSJNL
	.ENDM	$POSJNL_S
 
 
	.MACRO	$POSJNLW_G	ARGPTR
		.GLOBL	CJF$POSJNLW
		CALLG	ARGPTR,G^CJF$POSJNLW
	.ENDM	$POSJNLW_G
 
	.MACRO	$POSJNLWDEF
		$OFFDEF	POSJNLW, <CHAN,FLTLST,FLAGS,EFN,IOSB,ASTADR,ASTPRM>
	.ENDM	$POSJNLWDEF
 
	.MACRO	$POSJNLW	CHAN=0,FLTLST=0,FLAGS=0,EFN=0,IOSB=0,ASTADR=0,-
			ASTPRM=0
		$POSJNLWDEF
		.ADDRESS	7
		.ADDRESS	CHAN
		.ADDRESS	FLTLST
		.ADDRESS	FLAGS
		.ADDRESS	EFN
		.ADDRESS	IOSB
		.ADDRESS	ASTADR
		.ADDRESS	ASTPRM
	.ENDM	$POSJNLW
 
	.MACRO	$POSJNLW_S CHAN,FLTLST,FLAGS=#0,EFN=#0,IOSB=0,ASTADR=0,-
			ASTPRM=#0
		.GLOBL	CJF$POSJNLW
		$QIOPUSH ASTPRM,ASTADR
		$ASNPUSH IOSB,EFN
		PUSHL	FLAGS
		$PUSHADR FLTLST
		MOVZWL	CHAN,-(SP)
		CALLS	#7,G^CJF$POSJNLW
	.ENDM	$POSJNLW_S
 
; 
;  $READJNL AND $READJNLW
; 
;  READ THE NEXT ENTRY FROM A JOURNAL
; 
;      CHAN	- NUMBER OF A CHANNEL TO THE JOURNAL.
;     [RSLBUF]	- ADDRESS OF DESCRIPTOR OF RESULT BUFFER.
;     [ATRLST]	- ADDRESS OF A ZERO-TERMINATED LIST OF ATTRIBUTE DESCRIPTORS.
;     [EFN]	- NUMBER OF EVENT FLAG TO BE SET UPON COMPLETION.
;     [IOSB]	- ADDRESS OF QUADWORD I/O STATUS BLOCK THAT IS TO RECEIVE
;     		  FINAL COMPLETION STATUS.
;     [ASTADR]	- ADDRESS OF THE ENTRY MASK OF AN AST SERVICE ROUTINE TO BE
;     		  EXECUTED UPON COMPLETION.
;     [ASTPRM]	- AST PARAMETER LONGWORD TO BE PASSED TO THE AST ROUTINE.
; 
 
	.MACRO	$READJNL_G	ARGPTR
		.GLOBL	CJF$READJNL
		CALLG	ARGPTR,G^CJF$READJNL
	.ENDM	$READJNL_G
 
	.MACRO	$READJNLDEF
		$OFFDEF	READJNL, <CHAN,RSLBUF,ATRLST,EFN,IOSB,ASTADR,ASTPRM>
	.ENDM	$READJNLDEF
 
	.MACRO	$READJNL	CHAN=0,RSLBUF=0,ATRLST=0,EFN=0,IOSB=0,ASTADR=0,-
			ASTPRM=0
		$READJNLDEF
		.ADDRESS	7
		.ADDRESS	CHAN
		.ADDRESS	RSLBUF
		.ADDRESS	ATRLST
		.ADDRESS	EFN
		.ADDRESS	IOSB
		.ADDRESS	ASTADR
		.ADDRESS	ASTPRM
	.ENDM	$READJNL
 
	.MACRO	$READJNL_S CHAN,RSLBUF=0,ATRLST=0,EFN=#0,IOSB=0,ASTADR=0,-
			ASTPRM=#0
		.GLOBL	CJF$READJNL
		$QIOPUSH ASTPRM,ASTADR
		$ASNPUSH IOSB,EFN
		$PUSHADR ATRLST
		$PUSHADR RSLBUF,CONTEXT=Q
		MOVZWL	CHAN,-(SP)
		CALLS	#7,G^CJF$READJNL
	.ENDM	$READJNL_S
 
 
	.MACRO	$READJNLW_G	ARGPTR
		.GLOBL	CJF$READJNLW
		CALLG	ARGPTR,G^CJF$READJNLW
	.ENDM	$READJNLW_G
 
	.MACRO	$READJNLWDEF
		$OFFDEF	READJNLW, <CHAN,RSLBUF,ATRLST,EFN,IOSB,ASTADR,ASTPRM>
	.ENDM	$READJNLWDEF
 
	.MACRO	$READJNLW	CHAN=0,RSLBUF=0,ATRLST=0,EFN=0,IOSB=0,ASTADR=0,-
			ASTPRM=0
		$READJNLWDEF
		.ADDRESS	7
		.ADDRESS	CHAN
		.ADDRESS	RSLBUF
		.ADDRESS	ATRLST
		.ADDRESS	EFN
		.ADDRESS	IOSB
		.ADDRESS	ASTADR
		.ADDRESS	ASTPRM
	.ENDM	$READJNLW
 
	.MACRO	$READJNLW_S CHAN,RSLBUF=0,ATRLST=0,EFN=#0,IOSB=0,-
			ASTADR=0,ASTPRM=#0
		.GLOBL	CJF$READJNLW
		$QIOPUSH ASTPRM,ASTADR
		$ASNPUSH IOSB,EFN
		$PUSHADR ATRLST
		$PUSHADR RSLBUF,CONTEXT=Q
		MOVZWL	CHAN,-(SP)
		CALLS	#7,G^CJF$READJNLW
	.ENDM	$READJNLW_S
 
; 
;  $RECOVER AND $RECOVERW
; 
;  PERFORM A GENERAL ROLLBACK OR ROLLFORWARD RECOVERY OPERATION
; 
;      FUNC	- TYPE OF RECOVERY TO PERFORM.
;      OBJECT	- ADDRESS OF A ZERO-TERMINATED LIST OF RECOVERY OBJECT DESCRIPTORS.
;     [FLTLST]	- ADDRESS OF A ZERO-TERMINATED LIST OF POINTERS TO FILTERS.
;     [ACMODE]	- ADDRESS OF A BYTE CONTAINING THE ACMODE TO BE USED.
;     [EFN]	- NUMBER OF EVENT FLAG TO BE SET UPON COMPLETION.
;     [IOSB]	- ADDRESS OF QUADWORD I/O STATUS BLOCK THAT IS TO RECEIVE
;     		  FINAL COMPLETION STATUS.
;     [ASTADR]	- ADDRESS OF THE ENTRY MASK OF AN AST SERVICE ROUTINE TO BE
;     		  EXECUTED UPON COMPLETION.
;     [ASTPRM]	- AST PARAMETER LONGWORD TO BE PASSED TO THE AST ROUTINE.
;     [LOGMBX]	- ADDRESS OF A STRING DESCRIPTOR POINTING TO THE LOGICAL
;     		  NAME OF THE MAILBOX TO RECEIVE LOG MESSAGES FROM THE RCP
; 
 
	.MACRO	$RECOVER_G	ARGPTR
		.GLOBL	CJF$RECOVER
		CALLG	ARGPTR,G^CJF$RECOVER
	.ENDM	$RECOVER_G
 
	.MACRO	$RECOVERDEF
		$OFFDEF	RECOVER, <FUNC,OBJECT,FLTLST,ACMODE,EFN,IOSB,ASTADR,-
			ASTPRM,LOGMBX>
	.ENDM	$RECOVERDEF
 
	.MACRO	$RECOVER	FUNC=0,OBJECT=0,FLTLST=0,ACMODE=0,EFN=0,-
			IOSB=0,ASTADR=0,ASTPRM=0,LOGMBX=0
		$RECOVERDEF
		.ADDRESS	9
		.ADDRESS	FUNC
		.ADDRESS	OBJECT
		.ADDRESS	FLTLST
		.ADDRESS	ACMODE
		.ADDRESS	EFN
		.ADDRESS	IOSB
		.ADDRESS	ASTADR
		.ADDRESS	ASTPRM
		.ADDRESS	LOGMBX
	.ENDM	$RECOVER
 
	.MACRO	$RECOVER_S FUNC,OBJECT,FLTLST=0,ACMODE=0,EFN=#0,IOSB=0,-
			ASTADR=0,ASTPRM=#0,LOGMBX=0
		.GLOBL	CJF$RECOVER
		$ASNPUSH LOGMBX,ASTPRM
		$PUSHADR ASTADR
		$ASNPUSH IOSB,EFN
		$PUSHADR ACMODE,CONTEXT=B
		$PUSHTWO FLTLST,OBJECT
		MOVZWL	FUNC,-(SP)
		CALLS	#9,G^CJF$RECOVER
	.ENDM	$RECOVER_S
 
 
	.MACRO	$RECOVERW_G	ARGPTR
		.GLOBL	CJF$RECOVERW
		CALLG	ARGPTR,G^CJF$RECOVERW
	.ENDM	$RECOVERW_G
 
	.MACRO	$RECOVERWDEF
		$OFFDEF	RECOVERW, <FUNC,OBJECT,FLTLST,ACMODE,EFN,IOSB,ASTADR,-
			ASTPRM,LOGMBX>
	.ENDM	$RECOVERWDEF
 
	.MACRO	$RECOVERW	FUNC=0,OBJECT=0,FLTLST=0,ACMODE=0,EFN=0,-
			IOSB=0,ASTADR=0,ASTPRM=0,LOGMBX=0
		$RECOVERWDEF
		.ADDRESS	9
		.ADDRESS	FUNC
		.ADDRESS	OBJECT
		.ADDRESS	FLTLST
		.ADDRESS	ACMODE
		.ADDRESS	EFN
		.ADDRESS	IOSB
		.ADDRESS	ASTADR
		.ADDRESS	ASTPRM
		.ADDRESS	LOGMBX
	.ENDM	$RECOVERW
 
	.MACRO	$RECOVERW_S FUNC,OBJECT,FLTLST=0,ACMODE=0,EFN=#0,-
			IOSB=0,ASTADR=0,ASTPRM=#0,LOGMBX=0
		.GLOBL	CJF$RECOVERW
		$ASNPUSH LOGMBX,ASTPRM
		$PUSHADR ASTADR
		$ASNPUSH IOSB,EFN
		$PUSHADR ACMODE,CONTEXT=B
		$PUSHTWO FLTLST,OBJECT
		MOVZWL	FUNC,-(SP)
		CALLS	#9,G^CJF$RECOVERW
	.ENDM	$RECOVERW_S
 
; 
;  $WRITEJNL AND $WRITEJNLW
; 
;  WRITE AN ENTRY TO THE JOURNAL
; 
;      CHAN	- NUMBER OF A CHANNEL TO THE JOURNAL.
;      WRTBUF	- ADDRESS OF DESCRIPTOR OF THE BUFFER HOLDING THE ENTRY TO BE 
;     		  WRITTEN.
;     [MODIF]	- MODIFIERS AFFECTING THE WRITE OPERATION.
;     [ENTMSK]	- KEY WHICH PERMITS WRITING THIS ENTRY ONLY IF CORRESPONDING 
;     		  BITS ARE SET IN THE JOURNAL'S MASK.
;     [ENTATR]	- VALUE WRITTEN TO THE JOURNAL AS AN ENTRY ATTRIBUTE.
;     [EFN]	- NUMBER OF EVENT FLAG TO BE SET UPON COMPLETION.
;     [IOSB]	- ADDRESS OF QUADWORD I/O STATUS BLOCK THAT IS TO RECEIVE
;     		  FINAL COMPLETION STATUS.
;     [ASTADR]	- ADDRESS OF THE ENTRY MASK OF AN AST SERVICE ROUTINE TO BE
;     		  EXECUTED UPON COMPLETION.
;     [ASTPRM]	- AST PARAMETER LONGWORD TO BE PASSED TO THE AST ROUTINE.
; 
 
	.MACRO	$WRITEJNL_G	ARGPTR
		.GLOBL	CJF$WRITEJNL
		CALLG	ARGPTR,G^CJF$WRITEJNL
	.ENDM	$WRITEJNL_G
 
	.MACRO	$WRITEJNLDEF
		$OFFDEF	WRITEJNL, <CHAN,WRTBUF,MODIF,ENTMSK,ENTATR,EFN,-
			IOSB,ASTADR,ASTPRM>
	.ENDM	$WRITEJNLDEF
 
	.MACRO	$WRITEJNL	CHAN=0,WRTBUF=0,MODIF=0,ENTMSK=0,ENTATR=0,-
			EFN=0,IOSB=0,ASTADR=0,ASTPRM=0
		$WRITEJNLDEF
		.ADDRESS	9
		.ADDRESS	CHAN
		.ADDRESS	WRTBUF
		.ADDRESS	MODIF
		.ADDRESS	ENTMSK
		.ADDRESS	ENTATR
		.ADDRESS	EFN
		.ADDRESS	IOSB
		.ADDRESS	ASTADR
		.ADDRESS	ASTPRM
	.ENDM	$WRITEJNL
 
	.MACRO	$WRITEJNL_S CHAN,WRTBUF,MODIF=#0,ENTMSK=#0,ENTATR=#0,-
			EFN=#0,IOSB=0,ASTADR=0,ASTPRM=#0
		.GLOBL	CJF$WRITEJNL
		$QIOPUSH ASTPRM,ASTADR
		$ASNPUSH IOSB,EFN
		$PUSHTWO ENTATR,ENTMSK
		PUSHL	MODIF
		$PUSHADR WRTBUF,CONTEXT=Q
		MOVZWL	CHAN,-(SP)
		CALLS	#9,G^CJF$WRITEJNL
	.ENDM	$WRITEJNL_S
 
 
	.MACRO	$WRITEJNLW_G	ARGPTR
		.GLOBL	CJF$WRITEJNLW
		CALLG	ARGPTR,G^CJF$WRITEJNLW
	.ENDM	$WRITEJNLW_G
 
	.MACRO	$WRITEJNLWDEF
		$OFFDEF	WRITEJNLW, <CHAN,WRTBUF,MODIF,ENTMSK,ENTATR,EFN,-
			IOSB,ASTADR,ASTPRM>
	.ENDM	$WRITEJNLWDEF
 
	.MACRO	$WRITEJNLW	CHAN=0,WRTBUF=0,MODIF=0,ENTMSK=0,ENTATR=0,-
			EFN=0,IOSB=0,ASTADR=0,ASTPRM=0
		$WRITEJNLWDEF
		.ADDRESS	9
		.ADDRESS	CHAN
		.ADDRESS	WRTBUF
		.ADDRESS	MODIF
		.ADDRESS	ENTMSK
		.ADDRESS	ENTATR
		.ADDRESS	EFN
		.ADDRESS	IOSB
		.ADDRESS	ASTADR
		.ADDRESS	ASTPRM
	.ENDM	$WRITEJNLW
 
	.MACRO	$WRITEJNLW_S CHAN,WRTBUF,MODIF=#0,ENTMSK=#0,ENTATR=#0,-
			EFN=#0,IOSB=0,ASTADR=0,ASTPRM=#0
		.GLOBL	CJF$WRITEJNLW
		$QIOPUSH ASTPRM,ASTADR
		$ASNPUSH IOSB,EFN
		$PUSHTWO ENTATR,ENTMSK
		PUSHL	MODIF
		$PUSHADR WRTBUF,CONTEXT=Q
		MOVZWL	CHAN,-(SP)
		CALLS	#9,G^CJF$WRITEJNLW
	.ENDM	$WRITEJNLW_S
 
; 
;  $CRENWV
; 
;  CREATE A NEW JOURNAL FILE VERSION
; 
;      CHAN	- ADDRESS OF A WORD TO RECEIVE THE CHANNEL NUMBER ASSIGNED.
;      LSTADR	- ADDRESS OF A LIST OF ITEM LIST ADDRESSES.
;     [WRTBUF]	- ADDRESS OF DESCRIPTOR FOR A BUFFER CONTAINING THE LAST
; 		  ENTRY TO BE WRITTEN TO THE CURRENT VERSION(S)
;     [IOSB]	- ADDRESS OF AN IOSB FOR THE WRITE OF THE LAST ENTRY
; 
 
	.MACRO	$CRENWV_G	ARGPTR
		.GLOBL	CJF$CRENWV
		CALLG	ARGPTR,G^CJF$CRENWV
	.ENDM	$CRENWV_G
 
	.MACRO	$CRENWVDEF
		$OFFDEF	CRENWV, <CHAN,LSTADR,WRTBUF,IOSB>
	.ENDM	$CRENWVDEF
 
	.MACRO	$CRENWV	CHAN=0,LSTADR=0,WRTBUF=0,IOSB=0
		$CRENWVDEF
		.ADDRESS	4
		.ADDRESS	CHAN
		.ADDRESS	LSTADR
		.ADDRESS	WRTBUF
		.ADDRESS	IOSB
	.ENDM	$CRENWV
 
	.MACRO	$CRENWV_S CHAN,LSTADR,WRTBUF=0,IOSB=0
		.GLOBL	CJF$CRENWV
		$PUSHADR IOSB,CONTEXT=Q
		$PUSHADR WRTBUF,CONTEXT=Q
		$PUSHADR LSTADR
		MOVZWL	CHAN,-(SP)
		CALLS	#4,G^CJF$CRENWV
	.ENDM	$CRENWV_S
 
; 
;  $CONJNLF
; 
;  CONNECT AN OLD VERSION OF THE JOURNAL FILE
; 
;      CHAN	- ADDRESS OF A WORD TO RECEIVE THE CHANNEL NUMBER ASSIGNED.
;      ITMLST	- ADDRESS OF THE ITEM LIST SPECIFYING THE OLD JOURNAL FILE VERSION
; 
 
	.MACRO	$CONJNLF_G	ARGPTR
		.GLOBL	CJF$CONJNLF
		CALLG	ARGPTR,G^CJF$CONJNLF
	.ENDM	$CONJNLF_G
 
	.MACRO	$CONJNLFDEF
		$OFFDEF	CONJNLF, <CHAN,ITMLST>
	.ENDM	$CONJNLFDEF
 
	.MACRO	$CONJNLF	CHAN=0,ITMLST=0
		$CONJNLFDEF
		.ADDRESS	2
		.ADDRESS	CHAN
		.ADDRESS	ITMLST
	.ENDM	$CONJNLF
 
	.MACRO	$CONJNLF_S CHAN,ITMLST
		.GLOBL	CJF$CONJNLF
		$PUSHADR ITMLST
		MOVZWL	CHAN,-(SP)
		CALLS	#2,G^CJF$CONJNLF
	.ENDM	$CONJNLF_S
 
; 
;  $DCNJNLF
; 
;  DISCONNECT A (SET OF) OLD JOURNAL FILE VERSIONS
; 
;      CHAN	- ADDRESS OF A WORD TO RECEIVE THE CHANNEL NUMBER ASSIGNED.
;     [ITMLST]	- ADDRESS OF THE JOURNAL SPECIFICATION BLOCK.
; 
 
	.MACRO	$DCNJNLF_G	ARGPTR
		.GLOBL	CJF$DCNJNLF
		CALLG	ARGPTR,G^CJF$DCNJNLF
	.ENDM	$DCNJNLF_G
 
	.MACRO	$DCNJNLFDEF
		$OFFDEF	DCNJNLF, <CHAN,ITMLST>
	.ENDM	$DCNJNLFDEF
 
	.MACRO	$DCNJNLF	CHAN=0,ITMLST=0
		$DCNJNLFDEF
		.ADDRESS	2
		.ADDRESS	CHAN
		.ADDRESS	ITMLST
	.ENDM	$DCNJNLF
 
	.MACRO	$DCNJNLF_S CHAN,ITMLST=0
		.GLOBL	CJF$DCNJNLF
		$PUSHADR ITMLST
		MOVZWL	CHAN,-(SP)
		CALLS	#2,G^CJF$DCNJNLF
	.ENDM	$DCNJNLF_S
 
; 
;  $GETCJI
; 
;  GET COMMON JOURNALING INFORMATION
; 
;      CHAN	- NUMBER OF A CHANNEL TO THE JOURNAL.
;      ITMLST	- ADDRESS OF A ZERO TERMINTATED ITEM LIST
; 
 
	.MACRO	$GETCJI_G	ARGPTR
		.GLOBL	CJF$GETCJI
		CALLG	ARGPTR,G^CJF$GETCJI
	.ENDM	$GETCJI_G
 
	.MACRO	$GETCJIDEF
		$OFFDEF	GETCJI, <CHAN,ITMLST>
	.ENDM	$GETCJIDEF
 
	.MACRO	$GETCJI	CHAN=0,ITMLST=0
		$GETCJIDEF
		.ADDRESS	2
		.ADDRESS	CHAN
		.ADDRESS	ITMLST
	.ENDM	$GETCJI
 
	.MACRO	$GETCJI_S CHAN,ITMLST
		.GLOBL	CJF$GETCJI
		$PUSHADR ITMLST
		MOVZWL	CHAN,-(SP)
		CALLS	#2,G^CJF$GETCJI
	.ENDM	$GETCJI_S
 
; 
;  $CANCELRU
; 
;  CANCEL A RECOVERY UNIT
; 
; 
 
	.MACRO	$CANCELRU_S 
		.GLOBL	RUF$CANCELRU
		CALLS	#0,G^RUF$CANCELRU
	.ENDM	$CANCELRU_S
 
; 
;  $CANRUH
; 
;  CANCEL RECOVERY UNIT HANDLER
; 
;  HID 	- HANDLER IDENTIFIER (AS GIVEN BY $DCLRUH)
; 
 
	.MACRO	$CANRUH_G	ARGPTR
		.GLOBL	RUF$CANRUH
		CALLG	ARGPTR,G^RUF$CANRUH
	.ENDM	$CANRUH_G
 
	.MACRO	$CANRUHDEF
		$OFFDEF	CANRUH, <HID>
	.ENDM	$CANRUHDEF
 
	.MACRO	$CANRUH	HID=0
		$CANRUHDEF
		.ADDRESS	1
		.ADDRESS	HID
	.ENDM	$CANRUH
 
	.MACRO	$CANRUH_S HID
		.GLOBL	RUF$CANRUH
		PUSHL	HID
		CALLS	#1,G^RUF$CANRUH
	.ENDM	$CANRUH_S
 
; 
;  $DCLRUH
; 
;  DECLARE RECOVERY UNIT HANDLER
; 
;      ADDR	- ADDRESS OF RECOVERY UNIT HANDLER
;     [PARAM]	- VALUE OF THE PARAMETER PASSED TO THE HANDLER WHEN CALLED
;     [HID]	- ADDRESS TO RECEIVE HANDLER ID ASSIGNED BY RUF
; 
 
	.MACRO	$DCLRUH_G	ARGPTR
		.GLOBL	RUF$DCLRUH
		CALLG	ARGPTR,G^RUF$DCLRUH
	.ENDM	$DCLRUH_G
 
	.MACRO	$DCLRUHDEF
		$OFFDEF	DCLRUH, <ADDR,PARAM,HID>
	.ENDM	$DCLRUHDEF
 
	.MACRO	$DCLRUH	ADDR=0,PARAM=0,HID=0
		$DCLRUHDEF
		.ADDRESS	3
		.ADDRESS	ADDR
		.ADDRESS	PARAM
		.ADDRESS	HID
	.ENDM	$DCLRUH
 
	.MACRO	$DCLRUH_S ADDR,PARAM=#0,HID=0
		.GLOBL	RUF$DCLRUH
		$PUSHADR HID
		$QIOPUSH PARAM,ADDR
		CALLS	#3,G^RUF$DCLRUH
	.ENDM	$DCLRUH_S
 
; 
;  $ENDRU
; 
;  SUCCESSFULLY COMPLETE A RECOVERY UNIT
; 
; 
 
	.MACRO	$ENDRU_S 
		.GLOBL	RUF$ENDRU
		CALLS	#0,G^RUF$ENDRU
	.ENDM	$ENDRU_S
 
; 
;  $MARKPOINTRU
; 
;  ESTABLISH INTERMEDIATE MARKPOINT FOR RECOVERY UNIT
; 
;     [MARKID]	- ADDRESS OF LONGWORD TO RECEIVE MARK IDENTIFIER
; 	
 
	.MACRO	$MARKPOINTRU_G	ARGPTR
		.GLOBL	RUF$MARKPOINTRU
		CALLG	ARGPTR,G^RUF$MARKPOINTRU
	.ENDM	$MARKPOINTRU_G
 
	.MACRO	$MARKPOINTRUDEF
		$OFFDEF	MARKPOINTRU, <MARKID>
	.ENDM	$MARKPOINTRUDEF
 
	.MACRO	$MARKPOINTRU	MARKID=0
		$MARKPOINTRUDEF
		.ADDRESS	1
		.ADDRESS	MARKID
	.ENDM	$MARKPOINTRU
 
	.MACRO	$MARKPOINTRU_S MARKID=0
		.GLOBL	RUF$MARKPOINTRU
		$PUSHADR MARKID
		CALLS	#1,G^RUF$MARKPOINTRU
	.ENDM	$MARKPOINTRU_S
 
; 
;  $PHASE1
; 
;  SUCCESSFULLY COMPLETE PHASE1 FOR A RECOVERY UNIT
; 
; 
 
	.MACRO	$PHASE1_S 
		.GLOBL	RUF$PHASE1
		CALLS	#0,G^RUF$PHASE1
	.ENDM	$PHASE1_S
 
; 
;  $PHASE2
; 
;  SUCCESSFULLY COMPLETE PHASE1 FOR A RECOVERY UNIT
; 
; 
 
	.MACRO	$PHASE2_S 
		.GLOBL	RUF$PHASE2
		CALLS	#0,G^RUF$PHASE2
	.ENDM	$PHASE2_S
 
; 
;  $RESETRU
; 
;  RESTORE RECOVERY UNIT STATE TO THE STATE OF GIVEN MARKPOINT 
; 
;      MARKID	- ADDRESS OF LONGWORD TO RECEIVE MARK IDENTIFIER
; 	
 
	.MACRO	$RESETRU_G	ARGPTR
		.GLOBL	RUF$RESETRU
		CALLG	ARGPTR,G^RUF$RESETRU
	.ENDM	$RESETRU_G
 
	.MACRO	$RESETRUDEF
		$OFFDEF	RESETRU, <MARKID>
	.ENDM	$RESETRUDEF
 
	.MACRO	$RESETRU	MARKID=0
		$RESETRUDEF
		.ADDRESS	1
		.ADDRESS	MARKID
	.ENDM	$RESETRU
 
	.MACRO	$RESETRU_S MARKID
		.GLOBL	RUF$RESETRU
		$PUSHADR MARKID
		CALLS	#1,G^RUF$RESETRU
	.ENDM	$RESETRU_S
 
; 
;  $STARTRU
; 
;  START A RECOVERY UNIT
; 
;     [RUFID]	- ADDRESS OF OCTAWORD TO RECEIVE RECOVERY UNIT IDENTIFIER
; 	
 
	.MACRO	$STARTRU_G	ARGPTR
		.GLOBL	RUF$STARTRU
		CALLG	ARGPTR,G^RUF$STARTRU
	.ENDM	$STARTRU_G
 
	.MACRO	$STARTRUDEF
		$OFFDEF	STARTRU, <RUFID>
	.ENDM	$STARTRUDEF
 
	.MACRO	$STARTRU	RUFID=0
		$STARTRUDEF
		.ADDRESS	1
		.ADDRESS	RUFID
	.ENDM	$STARTRU
 
	.MACRO	$STARTRU_S RUFID=0
		.GLOBL	RUF$STARTRU
		$PUSHADR RUFID
		CALLS	#1,G^RUF$STARTRU
	.ENDM	$STARTRU_S
 
; 
;  $RUSTATUS
; 
;  GET THE STATUS OF A RECOVERY UNIT
; 
;     [RUFID]	- ADDRESS OF OCTAWORD TO RECEIVE RECOVERY UNIT IDENTIFIER
; 	
 
	.MACRO	$RUSTATUS_G	ARGPTR
		.GLOBL	RUF$RUSTATUS
		CALLG	ARGPTR,G^RUF$RUSTATUS
	.ENDM	$RUSTATUS_G
 
	.MACRO	$RUSTATUSDEF
		$OFFDEF	RUSTATUS, <RUFID>
	.ENDM	$RUSTATUSDEF
 
	.MACRO	$RUSTATUS	RUFID=0
		$RUSTATUSDEF
		.ADDRESS	1
		.ADDRESS	RUFID
	.ENDM	$RUSTATUS
 
	.MACRO	$RUSTATUS_S RUFID=0
		.GLOBL	RUF$RUSTATUS
		$PUSHADR RUFID
		CALLS	#1,G^RUF$RUSTATUS
	.ENDM	$RUSTATUS_S
 
