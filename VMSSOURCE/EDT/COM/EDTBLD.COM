$ !
$ !	[ E D T . C O M ] E D T B L D . C O M
$ !
$ !	Assume default directory is [EDT] and logical names
$ !	BUG$, COM$, ENH$, EXE$, LIB$, LIS$, MAP$, OBJ$, and SRC$
$ !	are defined.
$ !
$ ON ERROR THEN GOTO FINISH
$ @COM$:EDTASNREQ
$ GOTO 'PHASE'
$ 
$INIT:
$ !
$ !	Create the Directories
$ !
$ @SYSBLDCOM$:CREATEDIR
$ GOTO FINISH
$
$UPDATE:
$ !
$ !	Create updated sources.
$ !
$ @COM$:EDTUPD
$ GOTO FINISH
$
$SRCLIB:
$ !
$ !	Delete and re-create the Bliss libraries
$ !
$ BLISS /LIBRARY=EDTSRC:EDT/LIST=LIS$:/SOURCE=REQUIRE SRC$:EDT.REQ
$ BLISS /LIBRARY=EDTSRC:ERRMSG/LIST=LIS$:/SOURCE=REQUIRE SRC$:ERRMSG
$ BLISS /LIBRARY=EDTSRC:KEYPADDEF/LIST=LIS$:/SOURCE=REQUIRE SRC$:KEYPADDEF
$ BLISS /LIBRARY=EDTSRC:PSECTS/LIST=LIS$:/SOURCE=REQUIRE SRC$:PSECTS
$ BLISS /LIBRARY=EDTSRC:SUPPORTS/LIST=LIS$:/SOURCE=REQUIRE SRC$:SUPPORTS
$ BLISS /LIBRARY=EDTSRC:TRACELIT/LIST=LIS$:/SOURCE=REQUIRE SRC$:TRACELIT
$ BLISS /LIBRARY=EDTSRC:TRACEMAC/LIST=LIS$:/SOURCE=REQUIRE SRC$:TRACEMAC
$ BLISS /LIBRARY=EDTSRC:TRANSLATE/LIST=LIS$:/SOURCE=REQUIRE SRC$:TRANSLATE
$ BLISS /LIBRARY=EDTSRC:TRAROUNAM/LIST=LIS$:/SOURCE=REQUIRE SRC$:TRAROUNAM
$
$ LIBRARY /HELP /CREATE LIB$:EDTHELP SRC$:EDTHELP
$ DELETE OBJ$:*.OBJ;*,*.OBB;*
$ DELETE LIB$:*.OLB;*
$ PURGE SRC$:, OBJ$:, LIS$:
$ DELETE FASMCHECK.CHK;*
$ GOTO FINISH
$
$ASSEM:
$ !
$ PURGE OBJ$:,LIS$:
$ !
$ ! run TABASM which produces the parser require files.
$ !
$ RUN PRMOBJ$:TABASM
$ IF F$SEARCH("LIB$:EDT.OLB") .EQS. "" THEN -
   LIBRARY/CREATE/OBJECT LIB$:EDT
$ @SYSBLDCOM$:FASM EDT "" Y 'UPDATES' N Y
$ MESSAGE/OBJ=OBJ$:/LIS=LIS$: SRC$:VMSMSG
$ RENAME OBJ$:VMSMSG.OBJ OBJ$:VMSMSG.OBB
$ CPYSYSMSG OBJ$:VMSMSG.OBB
$ MESSAGE/FILE_NAME=SHRIMGMSG/OBJ=OBJ$:/LIS=LIS$: SRC$:VMSMSG
$ LIBR/OBJECT LIB$:EDT OBJ$:VMSMSG
$ PURGE OBJ$:,LIS$:
$ GOTO FINISH
$
$OBJLIB:
$ !
$ DELETE OBJ$:*.OBJ;*
$ GOTO FINISH
$
$LNKLIB:
$ !
$ DELETE EXE$:EDTSHR.EXE;*,MAP$:EDTSHR.MAP;*
$ @COM$:LNKEDTSHR
$ CPYSYSLIB EXE$:EDTSHR.EXE
$ INSHARLIB SYS$LIBRARY:EDTSHR.EXE
$ GOTO FINISH
$
$LINK:
$ !
$ !	Delete EDT map and image then re-create EXE$:EDT.EXE
$ !			and MAP$:EDT.MAP
$ !
$ DELETE EXE$:EDT.EXE;*,	MAP$:EDT.MAP;*
$ @COM$:LINKEDT
$ !
$ !	Link WRIEDTMSG, which will create VMSMSG.TMP, for comparing
$ !	with VMSMSG.MSG
$ !
$ LINK /MAP=NL: /EXE=EXE$:WRIEDTMSG LIB$:EDT/INCLUDE=(EDT$WRIEDTMSG,EDT$MSGTXT)
$ GOTO FINISH
$
$RESULT:
$ !
$ ! Run WRIEDTMSG and compare it's output with SRC$:VMSMSG.MSG
$ !
$ RUN EXE$:WRIEDTMSG
$ SET NOON
$ DIF /IGNORE=(COMMENT,BLANK_LINES)/COMMENT=EXCLAMATION SRC$:VMSMSG.MSG .TMP
$ IF $SEVERITY .NE. 1 THEN WRITE SYS$OUTPUT -
 "%BUILD-E-EDTMSGERR, Discrepancy detected between VMSMSG.MSG and ERRMSG.REQ"
$ DELETE SRC$:VMSSMSG.TMP;*
$ SET ON
$ !
$ !	Copy the EXE and MAP to a System area
$ !
$ CPYRESEXE EXE$:EDT.EXE
$ CPYRESMAP MAP$:EDT.MAP
$ CPYRESMAP MAP$:EDTSHR.MAP
$ CPYSYSHLP LIB$:EDTHELP.HLB
$ CPYSYSHLP SRC$:EDTVT100.DOC
$ CPYSYSHLP SRC$:EDTVT200.DOC
$ CPYSYSHLP SRC$:EDTVT52.DOC
$ !
$ ! Verify that the vector of EDTSHR is not incompatible
$ !
$ @SYSBLDCOM$:VECTORTST EXE$:EDTSHR
$ !
$ GOTO FINISH
$
$FINISH:
$ IF (.NOT. $STATUS) .AND. ($SEVERITY .NE. 0) THEN -
  WRITE SYS$OUTPUT "%BLD-F-FAIL, ********* EDT BUILD FAILED **********"
$ @COM$:EDTDEAREQ
