
;
;	version 'V04-000'
;
;****************************************************************************
;*									    *
;*  COPYRIGHT (c) 1978, 1980, 1982, 1984 BY				    *
;*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
;*  ALL RIGHTS RESERVED.						    *
;* 									    *
;*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
;*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
;*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
;*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
;*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
;*  TRANSFERRED.							    *
;* 									    *
;*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
;*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
;*  CORPORATION.							    *
;* 									    *
;*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
;*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
;* 									    *
;*									    *
;****************************************************************************
;
;
; MODIFIED BY:
;
;	V03-003	DAS0001		David Solomon		11-Feb-1984
;		Fix error in $RMSCALLSTWO (used by $RENAME). For the default
;		values for ERR and SUC (0), it generated non-pic instructions
;		(PUSHAL #0). It now generates PUSHL #0 if ERR or SUC=0.
;
;	V03-002	RAS0105		Ron Schaefer		23-Nov-1982
;		Correct non-PIC references in $RMSCALLS and $RMSCALLSTWO
;		to RMS system services.  Make into general addressing.
;
;	V03-001	CWH0001		CW Hobbs		25-Sep-1982
;		Standard form service calls ($CLOSE, etc) are now
;		defined in <VMSLIB.SRC>STARLET.SDL.  The declarations
;		in this module have been removed.


;
;
;  rms macro to reserve a buffer
;  (kept in the interest of compatibility only!)
;

	.MACRO	$BUFFER SIZE
	.BLKB	SIZE
	.ENDM	$BUFFER

;
;  no-op of $init for compatibility!
;

	.MACRO	$INIT
	.PRINT				; $init macro not required!;
	.ENDM	$INIT


	.NLIST

;
;  $rmscall macro to setup arglist and call the desired routine
;

	.MACRO	$RMSCALL PROC,TAB,ERR,SUC
	.GLOBL	SYS$'PROC
	.IF	B <TAB>
	CALLG	(AP),G^SYS$'PROC
	$$.TMP=0
	.IF	NB <ERR>
	$$.TMP=1
	.ENDC
	.IF	NB <SUC>
	$$.TMP=1
	.ENDC
	.IF	NE $$.TMP
	.ERROR				; tab'= parameter missing;
	.ENDC
	.ENDC

	.IF	NB <TAB>
	$$.TMP1=1
	.IF	NB <SUC>
	PUSHAL	SUC
	$$.TMP1=3
	.ENDC
	.IF	NB <ERR>
	PUSHAL	ERR
	.IF	EQ <$$.TMP1-1>
	$$.TMP1=2
	.ENDC
	.IFF
	.IF	EQ <$$.TMP1-3>
	PUSHL	#0
	.ENDC
	.ENDC
	.NTYPE	$$.TMP2,TAB
	.IF	EQ <<$$.TMP2&^XF0>-^X50>
	PUSHL	TAB
	.IFF
	.IF	EQ <<$$.TMP2&^XF0>-^X10>
	PUSHL	TAB
	.IFF
	PUSHAL	TAB
	.ENDC
	.ENDC
	CALLS	#$$.TMP1,G^SYS$'PROC
	.ENDC
	.ENDM	$RMSCALL
	.LIST


;
;  $rmscalltwo macro to setup arglist and call the desired routine
;

	.MACRO	$RMSCALLTWO PROC,TAB,ERR,SUC,TAB2
	.GLOBL	SYS$'PROC
	.IF	B <TAB>
	CALLG	(AP),G^SYS$'PROC
	$$.TMP=0
	.IIF	NB <ERR>, $$.TMP=1
	.IIF	NB <SUC>, $$.TMP=1
	.IIF	NB <TAB2>, $$.TMP=1
	.IF	NE $$.TMP
p	.ERROR				; tab'= parameter missing;
	.ENDC
	.MEXIT
	.ENDC

;
;NOW KNOW THAT TAB IS THERE!
;

	.IF	B <TAB2>		; must have both pointers
	.ERROR				; missing parameter;
	.MEXIT
	.ENDC
	.NTYPE	$$.TMP2,TAB2
	.IF	EQ <<$$.TMP2&^XF0>-^X50>
	PUSHL	TAB2
	.IFF
	.IF	EQ <<$$.TMP2&^XF0>-^X10>
	PUSHL	TAB2
	.IFF
	PUSHAL	TAB2
	.ENDC
	.ENDC
	.IF	IDN <SUC> <0>
	PUSHL	#0
	.IFF
	.IF	NB <SUC>
	PUSHAL	SUC
	.IFF
	PUSHL	#0
	.ENDC
	.ENDC
	.IF	IDN <ERR> <0>
	PUSHL	#0
	.IFF
	.IF	NB <ERR>
	PUSHAL	ERR
	.IFF
	PUSHL	#0
	.ENDC
	.ENDC
	.NTYPE	$$.TMP2,TAB
	.IF	EQ <<$$.TMP2&^XF0>-^X50>
	PUSHL	TAB
	.IFF
	.IF	EQ <<$$.TMP2&^XF0>-^X10>
	PUSHL	TAB
	.IFF
	PUSHAL	TAB
	.ENDC
	.ENDC
	CALLS	#4,G^SYS$'PROC
	.ENDM	$RMSCALLTWO
