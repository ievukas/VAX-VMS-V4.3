 ! 
 !	DCL Command Language Interpreter internal structure definitions 
 ! 
 ! IDENT	'V04-001' 
 ! 
  
 ! 
 !**************************************************************************** 
 !*									    * 
 !*  COPYRIGHT (c) 1978, 1980, 1982, 1984 BY				    * 
 !*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    * 
 !*  ALL RIGHTS RESERVED.						    * 
 !* 									    * 
 !*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   * 
 !*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   * 
 !*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   * 
 !*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   * 
 !*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   * 
 !*  TRANSFERRED.							    * 
 !* 									    * 
 !*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   * 
 !*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   * 
 !*  CORPORATION.							    * 
 !* 									    * 
 !*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   * 
 !*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    * 
 !* 									    * 
 !*									    * 
 !**************************************************************************** 
 ! 
  
 !++ 
 ! FACILITY:  DCL Command Language Interpreter 
 ! 
 ! ABSTRACT: 
 ! 
 !	These are the structure definitions used by the DCL 
 !	command interpreter. 
 ! 
 ! ENVIRONMENT: 
 ! 
 !	VAX/VMS operating system. supervisor mode. 
 ! 
 ! AUTHOR:  Tim Halvorsen, Feb 1980 
 ! 
 ! Modified by: 
 ! 
 !	V04-001	HWS0106		Harold Schultz	07-Sep-1984 
 !		Add PRC_W_ASTSTATUS,PRC_W_ASTIOSB, and PRC_W_ASTRETN 
 !		to store status data from the CNTL-Y AST routine. 
 ! 
 !	V03-025 HWS0087		Harold Schultz	20-Jul-1984 
 !		Change order in DCL table so that FLAGS will not 
 !		be on the end. Fixes problem were a BLBx is used 
 !		to interrogate the flag and causes an accvio if the 
 !		three bytes past FLAGS (FLAGS is last allocated byte) 
 !		are not readable. (BLBx instructions use longword 
 !		context, which when applied to FLAGS causes FLAGS + the 
 !		next three bytes to be accessed). 
 !		Add PRC_B_EXONLYL to store indirect level of first 
 !		encountered exe-only procedure. Add PRC_V_SAVCMDV and 
 !		PRC_V_SAVIMGV to store saved command and image verification 
 !		modes. (Make PRC_V_EXEPROC obsolete) 
 ! 
 !	V03-024	HWS0045		Harold Schultz	30-Mar-1984 
 !		Add TABLE flag to SPWN_W_FLAGS. 
 !		Add SPWN_Q_TABLE. 
 !		Add WRK_V_CLOSERR to WRK_W_FLAGS2 
 ! 
 !	V03-023	HWS0035		Harold Schultz	21-Mar-1984 
 !		Add IRUNDWN flag to new flag byte IMGFLAG to track 
 !		image rundown. 
 ! 
 !	V03-022	HWS0007		Harold Schultz	13-Feb-1984 
 !		Add PRC_V_CARRCNTL for prompt string carriagecontrol 
 !		(in FLAGS) 
 !		Add PRC_L_STS and PRC_L_STV 
 !		Add SPWN_V_NOCTX 
 ! 
 !	V03-021	PCG0027		Peter George	06-Feb-1984 
 !		Add CTX_V_CTRLY and CTX_V_CTRLT. 
 ! 
 !	V03-020	PCG0026		Peter George	11-Jan-1984 
 !		Add PRC_L_IMGACTSTS. 
 ! 
 !	V03-019	PCG0025		Peter George	11-Jan-1984 
 !		Add EDIT_V_LOWERCASE. 
 ! 
 !	V03-018	PCG0024		Peter George	03-Jan-1984 
 !		Change PRC_V_REPROMPT to PRC_V_FLUSH. 
 ! 
 !	V03-017	PCG0023		Peter George	01-Dec-1983 
 !		Add ERASE keypad flag. 
 ! 
 !	V03-016	PCG0022		Peter George	07-Sep-1983 
 !		Add OUTFLAGS to OUT, PRC, and IDF. 
 ! 
 !	V03-015	PCG0021		Peter George	16-Aug-1983 
 !		Add WAIT bit to CTX. 
 ! 
 !	V03-014	PCG0020		Peter George	27-Jun-1983 
 !		Add SPWN_V_CLI and SPWN_Q_CLI. 
 !		Add PRC_W_WAITIOSB and WRK_L_SIGNALRTN. 
 !		Incr size of WRK_C_RECALLMAX. 
 ! 
 !	V03-013	PCG0019		Peter George	01-Jun-1983 
 !		Remove PRC_L_TAB_VEC.  Incr size of token buffer. 
 !		Add SPWN_V_KEYPAD. 
 ! 
 !	V03-012	RAS0157		Ron Schaefer	17-May-1983 
 !		Add support for new logical names services to CTX. 
 ! 
 !	V03-011	PCG0018		Peter George	03-May-1983 
 !		Add PRC_Q_FLUSHTIME and CTX_V_VERIMAGE. 
 ! 
 !	V03-010	PCG0017		Peter George	20-Apr-1983 
 !		Add prompt string and keypad state to CTX. 
 !		Add prompt string and new flags to SPWN. 
 !		Add output mailbox info to PRC. 
 ! 
 !	V03-009	PCG0016		Peter George	30-Mar-1983 
 !		Add PRC_V_VERIMAGE. 
 !		Add SPWN_T_PROCESS. 
 !		Increase WRK_C_RSLBUFSIZ. 
 !		Increase size of recall buffer. 
 ! 
 !	V03-008	PCG0015		Peter George	29-Mar-1983 
 !		Fix CTX_C_KEY* definitions. 
 ! 
 !	V03-006	PCG0014		Peter George	17-Feb-1983 
 !		Make too many changes to meaningfully list here. 
 ! 
 !	V03-005	PCG0013		Peter George	28-Jan-1983 
 !		Remove the ONEXIT bit from PRC. 
 !		Add SPWN_V_NOTIFY and SPWN_V_CONTINUE. 
 ! 
 !	V03-004	PCG0012		Peter George	01-Dec-1982 
 !		Uncomment part of PRC data structure. 
 !		Excess ERRRAB and ERRIFI. 
 !		Add SYS$OUTPUT PRC fields. 
 !		Add OUT data structure. 
 !		Add IDF_L_FILENAME. 
 ! 
 !	V03-003	PCG0011		Peter George	16-Nov-1982 
 !		Reorganize WRK block. 
 !		Remove WRK_C_DCLBUFSIZ, WRK_G_DCLPRSBUF, WRK_G_RECORD. 
 !		Increase size of command buffers. 
 !		Add slopover for input buffer - used by LIB$DO_COMMAND. 
 !		Add SIZE field to TMBX. 
 ! 
 !	V03-002	PCG0010		Peter George	25-Oct-1982 
 !		Add PROMPT entities.  Add DCL_V_NEXTQUAL flag. 
 ! 
 !	V03-001	PCG0009		Peter George	21-Jun-1982 
 !		Add PTR_V_KEYWORD, PTR_V_SYNTAX, PTR_K_IGNORE, PTR_B_LEVEL, 
 !			and PTR_B_NUMBER. 
 !		Add WRK_L_PROMPTRTN, WRK_V_CONTIN, WRK_B_VALLEV, and 
 !			WRK_V_USRMODE. Delete WRK_V_QUAL. 
 !		Double size of WRK_G_RESULT. 
 !		Add PRC_G_COMMANDS, PRC_L_NXTCMDPTR, and PRC_V_REPROMPT. 
 !		Add DCL_L_ENTITY, DCL_L_TOKEN, DCL_L_GETVM, DCL_L_FREEVM, 
 !			DCL_W_BUFLEN, DCL_W_DEFLEN, and DCL_L_DEFADDR. 
 !		Add PLM_B_QUADESC. 
 ! 
 !-- 
  
 ! 
 !	DEFINE PROCESS WORK AREA (BASED AT R11=CTL$AG_CLIDATA) 
 ! 
  
 !...$PRCDEF	
 MACRO		PRC_L_SAVAP	= 0,0,32,0%; 		! SAVED ARGUMENT POINTER 
 MACRO		PRC_L_SAVFP	= 4,0,32,0%; 		! SAVED FRAME POINTER 
 MACRO		PRC_L_INPRAB	= 8,0,32,0%; 		! ADDRESS OF INPUT RAB 
 MACRO		PRC_L_OUTRAB	= 12,0,32,0%; 		! ADDRESS OF OUTPUT RAB 
 MACRO		PRC_L_TRMLIST	= 16,0,32,0%; 		! ADDRESS OF XABTRM ITEM LIST 
 MACRO		PRC_L_INDINPRAB	= 20,0,32,0%; 	! ADDRESS OF INDIRECT INPUT RAB 
 MACRO		PRC_L_INDOUTRAB	= 24,0,32,0%; 	! ADDRESS OF INDIRECT OUTPUT RAB 
 MACRO		PRC_L_INDFAB	= 28,0,32,0%; 		! ADDRESS OF INDIRECT FAB 
 MACRO		PRC_Q_ALLOCREG	= 32,0,0,0%; 	! SYMBOL ALLOCATION REGION LISTHEAD 
 LITERAL	PRC_S_ALLOCREG	= 8; 
 MACRO		PRC_Q_GLOBAL	= 40,0,0,0%; 	! GLOBAL SYMBOL TABLE LISTHEAD 
 LITERAL	PRC_S_GLOBAL	= 8; 
 MACRO		PRC_Q_LABEL	= 48,0,0,0%; 		! LABEL SYMBOL TABLE LISTHEAD 
 LITERAL	PRC_S_LABEL	= 8; 
 MACRO		PRC_Q_LOCAL	= 56,0,0,0%; 		! LOCAL SYMBOL TABLE LISTHEAD 
 LITERAL	PRC_S_LOCAL	= 8; 
 MACRO		PRC_Q_KEYPAD	= 64,0,0,0%; 	! KEYPAD SYMBOL TABLE LISTHEAD 
 LITERAL	PRC_S_KEYPAD	= 8; 
 MACRO		PRC_L_CURRKEY	= 72,0,32,0%; 		! ADDRESS OF CURRENT KEY STATE 
 MACRO		PRC_L_LASTKEY	= 76,0,32,0%; 		! ADDRESS OF LOCKED KEY STATE 
 MACRO		PRC_L_SEVERITY	= 80,0,32,0%; 	! ADDRESS OF ERROR SEVERITY SYMBOL VALUE 
 MACRO		PRC_L_STATUS	= 84,0,32,0%; 		! ADDRESS OF COMPLETION STATUS VALUE 
 MACRO		PRC_L_RESTART	= 88,0,32,0%; 		! ADDRESS OF RESTART VALUE 
 MACRO		PRC_L_INDEPTH	= 92,0,32,0%; 		! INDIRECT STACK DEPTH (# LEVELS DEEP) 
 MACRO		PRC_L_SYMBOL	= 96,0,32,0%; 		! ADDRESS OF GOTO LABEL TABLE ENTRY 
 MACRO		PRC_W_INPCHAN	= 100,0,16,0%; 	! INPUT CHANNEL FOR INTERACTIVE JOBS 
 MACRO		PRC_W_WAITIOSB	= 102,0,16,0%; 	! WAIT COMMAND IOSB 
 MACRO		PRC_W_FLAGS	= 104,0,16,0%; 		! PROCESS LEVEL FLAGS 
 			 
 MACRO		PRC_V_CARRCNTL	= 104,0,1,0%; 	! CARRIAGE CONTROL IN PROMPT STRING FLAG 
 LITERAL	PRC_M_CARRCNTL	= 1^1 - 1^0; 
 MACRO		PRC_V_CNTRLY	= 104,1,1,0%; 		! SUPERVISOR CONTROL Y/C LEVEL REQUEST 
 LITERAL	PRC_M_CNTRLY	= 1^2 - 1^1; 
 MACRO		PRC_V_DISABL	= 104,2,1,0%; 		! DISABLE CONTROL Y AST'S 
 LITERAL	PRC_M_DISABL	= 1^3 - 1^2; 
 MACRO		PRC_V_EXIT	= 104,3,1,0%; 		! EXIT HANDLER ESTABLISHED 
 LITERAL	PRC_M_EXIT	= 1^4 - 1^3; 
 MACRO		PRC_V_GOTO	= 104,4,1,0%; 		! FORWARD GOTO IN PROGRESS 
 LITERAL	PRC_M_GOTO	= 1^5 - 1^4; 
 MACRO		PRC_V_IND	= 104,5,1,0%; 		! PROCESSING INDIRECT FILE 
 LITERAL	PRC_M_IND	= 1^6 - 1^5; 
 MACRO		PRC_V_MODE	= 104,6,1,0%; 		! COMMAND PROCESSING MODE (BATCH=1, INTER=0) 
 LITERAL	PRC_M_MODE	= 1^7 - 1^6; 
 MACRO		PRC_V_VERIFY	= 104,7,1,0%; 		! VERIFY LINES OF INDIRECT COMMAND FILES 
 LITERAL	PRC_M_VERIFY	= 1^8 - 1^7; 
 MACRO		PRC_V_AUTOLOGO	= 104,8,1,0%; 	! SILENT LOGOUT ($DELPRC) ON NEXT LEVEL 0 $GET 
 LITERAL	PRC_M_AUTOLOGO	= 1^9 - 1^8; 
 MACRO		PRC_V_DBGQUAL	= 104,9,1,0%; 		! DEBUG QUALIFIER SEEN ON COMMAND 
 LITERAL	PRC_M_DBGQUAL	= 1^10 - 1^9; 
 MACRO		PRC_V_DBGTRUE	= 104,10,1,0%; 		! STATE OF DEBUG WAS TRUE 
 LITERAL	PRC_M_DBGTRUE	= 1^11 - 1^10; 
 MACRO		PRC_V_YLEVEL	= 104,11,1,0%; 		! RUNNING AT CONTROL Y LEVEL 
 LITERAL	PRC_M_YLEVEL	= 1^12 - 1^11; 
 MACRO		PRC_V_HANGUP	= 104,12,1,0%; 		! TERMINAL HANGUP PENDING 
 LITERAL	PRC_M_HANGUP	= 1^13 - 1^12; 
 MACRO		PRC_V_PAUSE	= 104,13,1,0%; 		! CLI PAUSE STATE ACTIVE 
 LITERAL	PRC_M_PAUSE	= 1^14 - 1^13; 
 MACRO		PRC_V_EOFLOGO	= 104,14,1,0%; 		! SILENT LOGOUT ($DELPRC) ON LEVEL 0 EOF 
 LITERAL	PRC_M_EOFLOGO	= 1^15 - 1^14; 
 MACRO		PRC_V_DETACHED	= 104,15,1,0%; 	! TERMINAL IS DETACHED FROM THIS PROCESS 
 LITERAL	PRC_M_DETACHED	= 1^16 - 1^15; 
 			
 MACRO		PRC_W_ONLEVEL	= 106,0,16,0%; 	! ON ERROR LEVEL NUMBER 
 MACRO		PRC_L_ONERROR	= 108,0,32,0%; 		! ADDRESS OF ON CONDITION COMMAND TEXT 
 MACRO		PRC_L_PPFLIST	= 112,0,32,0%; 		! LISTHEAD OF OPEN PPF RAB'S (VIA OPEN COMMAND) 
 MACRO		PRC_L_TMBX	= 116,0,32,0%; 		! LISTHEAD OF TERMINATION MAILBOX STORAGE 
 				! BLOCKS! FOR EACH TERMINATION MAILBOX CREATED 
 MACRO		PRC_B_IMGFLAG	= 120,0,8,0%; 	! IMAGE CONTROL FLAGS 
 			 
 MACRO		PRC_V_IRUNDWN	= 120,0,1,0%; 		! IMAGE RUNDOWN FLAG 
 LITERAL	PRC_M_IRUNDWN	= 1^1 - 1^0; 
 			
 MACRO		PRC_W_ATTMBX	= 122,0,16,0%; 	! CHANNEL TO MAILBOX FOR RE-ATTACH REQUESTS 
 MACRO		PRC_L_INDCLOCK	= 124,0,32,0%; 	! TOTAL INDIRECT STACKS & UNSTACKS 
 MACRO		PRC_L_IMGACTSTS	= 128,0,32,0%; 	! IMAGE ACTIVATOR STATUS 
 MACRO		PRC_L_STS	= 132,0,32,0%; 		! RMS COMPLETION CODE (STS AND STV ASSUMED 
 MACRO		PRC_L_STV	= 136,0,32,0%; 		! RMS STATUS VALUE     ALWAYS ADJACENT) 
 MACRO		PRC_L_EXTBLK	= 140,0,32,0%; 		! EXIT HANDLER CONTROL BLOCK 
 MACRO		PRC_L_EXTHND	= 144,0,32,0%; 		! EXIT HANDLER ADDRESS 
 MACRO		PRC_L_EXTARG	= 148,0,32,0%; 		! NUMBER OF EXIT HANDLER ARGUMENTS 
 MACRO		PRC_L_EXTPRM	= 152,0,32,0%; 		! ADDRESS OF REASON FOR EXIT (BELOW) 
 MACRO		PRC_L_EXTCOD	= 156,0,32,0%; 		! REASON FOR EXIT 
 MACRO		PRC_L_STACKPT	= 160,0,32,0%; 		! INDIRECT STACK POINTER 
 MACRO		PRC_L_STACKLM	= 164,0,32,0%; 		! INDIRECT STACK LIMIT 
 MACRO		PRC_L_EXMDEPADR	= 168,0,32,0%; 	! "DOT" FOR EXAMINE/DEPOSIT 
 MACRO		PRC_B_EXMDEPWID	= 172,0,8,0%; 	! WIDTH DEFAULT, IE: BYTE,WORD,LONGWORD 
 MACRO		PRC_B_EXMDEPMOD	= 173,0,8,0%; 	! MODE DEFAULT, IE: ASCII,HEX,OCTAL 
 MACRO		PRC_B_DEFRADIX	= 174,0,8,0%; 	! CURRENT DEFAULT RADIX 
 LITERAL	
 $EQULST (PRC_K_,GBL,0,1 		! PROCESS RADIX TYPES 
 	,(HEX,) 			! HEXIDECIMAL 
 	,(DEC,) 			! DECIMAL 
 	,(OCT,) 			! OCTAL 
 	); 
 MACRO		PRC_B_FLAGS2	= 175,0,8,0%; 	! PROCESS LEVEL FLAGS (MORE OF THEM) 
 			 
 MACRO		PRC_V_CMD	= 175,0,1,0%; 		! COMMAND CALLBACK HAS BEEN DONE 
 LITERAL	PRC_M_CMD	= 1^1 - 1^0; 
 MACRO		PRC_V_CHAIN	= 175,1,1,0%; 		! CHAIN CALLBACK HAS BEEN DONE 
 LITERAL	PRC_M_CHAIN	= 1^2 - 1^1; 
 MACRO		PRC_V_RUNDEF	= 175,2,1,0%; 		! USE RUN DEFAULT (NOT EXTERNAL) 
 LITERAL	PRC_M_RUNDEF	= 1^3 - 1^2; 
 MACRO		PRC_V_EXEONLY	= 175,3,1,0%; 		! IMAGE IS EXECUTE ONLY 
 LITERAL	PRC_M_EXEONLY	= 1^4 - 1^3; 
 MACRO		PRC_V_PRIV	= 175,4,1,0%; 		! IMAGE IS PRIVILEGED 
 LITERAL	PRC_M_PRIV	= 1^5 - 1^4; 
 MACRO		PRC_V_EXEPROC	= 175,5,1,0%; 		! EXE-ONLY COMMAND PROCEDURE (OBSOLETE) 
 LITERAL	PRC_M_EXEPROC	= 1^6 - 1^5; 
 MACRO		PRC_V_FLUSH	= 175,6,1,0%; 		! FLUSH THE CURRENT INPUT 
 LITERAL	PRC_M_FLUSH	= 1^7 - 1^6; 
 MACRO		PRC_V_VERIMAGE	= 175,7,1,0%; 	! HAVE RMS DO IMAGE VERIFICATION 
 LITERAL	PRC_M_VERIMAGE	= 1^8 - 1^7; 
 			
 MACRO		PRC_L_LSTSTATUS	= 176,0,32,0%; 	! LAST STATUS SET (LONGWORD VALUE) 
 MACRO		PRC_L_OUTOFBAND	= 180,0,32,0%; 	! OUT OF BAND AST ENABLE BITMASK 
 			 
 						! SKIP UNUSED CHARACTERS 
 MACRO		PRC_V_CTRLT	= 180,20,1,0%; 		! CONTROL T 
 LITERAL	PRC_M_CTRLT	= 1^21 - 1^20; 
 						! SKIP UNUSED CHARACTERS 
 MACRO		PRC_V_CTRLY	= 180,25,1,0%; 		! CONTROL Y 
 LITERAL	PRC_M_CTRLY	= 1^26 - 1^25; 
 			
 MACRO		PRC_L_ONCTLY	= 184,0,32,0%; 		! ADDRESS OF ON CONTROL/Y COMMAND TEXT 
 MACRO		PRC_L_IDFLNK	= 188,0,32,0%; 		! POINTER TO INDIRECT FILE FRAMES 
 MACRO		PRC_L_SPWN	= 192,0,32,0%; 		! LISTHEAD OF SPAWN STORAGE BLOCKS FOR EACH 
 				! SUBPROCESS CREATED! SPAWN STORAGE FOR PROCESS 
 				! CURRENTLY BEING SPAWNED IS FIRST, IF ANY. 
 MACRO		PRC_W_ASTSTATUS	= 196,0,16,0%; 	! SAVED CNTL-Y AST STATUS (TEMPORARY) 
 MACRO		PRC_W_ASTIOSB	= 198,0,16,0%; 	! SAVED CNTL-Y AST REENABLE IOSB (TEMPORARY) 
 MACRO		PRC_W_ASTRETN	= 200,0,16,0%; 	! SAVED CNTL-Y AST REENABLE RETURN STATUS (TMP) 
 MACRO		PRC_W_OUTMBXCHN	= 202,0,16,0%; 	! OUTPUT MAILBOX CHANNEL 
 MACRO		PRC_W_OUTMBXSIZ	= 204,0,16,0%; 	! SIZE OF MAXIMUM OUTPUT MAILBOX MESSAGE 
 MACRO		PRC_W_OUTMBXREF	= 206,0,16,0%; 	! OUTPUT MAILBOX REFERENCE COUNT 
 MACRO		PRC_Q_FLUSHTIME	= 208,0,0,0%; 	! OUTPUT LOG FLUSH RATE 
 LITERAL	PRC_S_FLUSHTIME	= 8; 
 MACRO		PRC_Q_IMAGENAME	= 216,0,0,0%; 	! DESCRIPTOR OF CHAIN IMAGE FILE SPECIFICATION 
 LITERAL	PRC_S_IMAGENAME	= 8; 
 MACRO		PRC_Q_COMMAND	= 224,0,0,0%; 	! DESCRIPTOR OF CHAIN COMMAND LINE FOR LATER 
 LITERAL	PRC_S_COMMAND	= 8; 
 MACRO		PRC_Q_SAVEPRIV	= 232,0,0,0%; 	! SAVED PRIVILEGED IMAGE PRIVILEGES 
 LITERAL	PRC_S_SAVEPRIV	= 8; 
  
 ! 
 ! Prompt string must be kept together (and mimicked in CTX data structure). 
 ! 
 MACRO		PRC_B_PROMPTLEN	= 240,0,8,0%; 	! LENGTH OF PROMPT STRING 
 MACRO		PRC_W_PMPTCTRL	= 241,0,16,0%; 	! PROMPT CONTROL CHARACTERS 
 MACRO		PRC_B_CONTINUE	= 243,0,8,0%; 	! PROMPT CONTINUATION CHARACTER 
 MACRO		PRC_G_PROMPT	= 244,0,0,0%; 	! PROMPT STRING AREA 
 LITERAL	PRC_S_PROMPT	= 32; 
  
 ! 
 !    OUTIFI, OUTISI, OUTRABCTX, OUTDVI, and OUTFLAGS must be the same in PRC, 
 !    IDF, OUT 
 ! 
 MACRO		PRC_W_OUTIFI	= 276,0,16,0%; 	! IFI FOR OUTPUT 
 MACRO		PRC_W_OUTISI	= 278,0,16,0%; 	! ISI FOR OUTPUT 
 MACRO		PRC_L_OUTRABCTX	= 280,0,32,0%; 	! CONTENTS OF OUTPUT RAB CTX LONGWORD 
 MACRO		PRC_T_OUTDVI	= 284,0,0,0%; 	! INDIRECT OUTPUT DEVICE (ASCIC) 
 LITERAL	PRC_S_OUTDVI	= 16; 
 MACRO		PRC_B_OUTFLAGS	= 300,0,8,0%; 	! FLAGS 
 					! 
 MACRO		PRC_V_OUTCCL	= 300,0,1,0%; 		! CONCEALED OUTPUT DEVICE 
 LITERAL	PRC_M_OUTCCL	= 1^1 - 1^0; 
 MACRO		PRC_V_INPCCL	= 300,1,1,0%; 		! CONCEALED INPUT DEVICE 
 LITERAL	PRC_M_INPCCL	= 1^2 - 1^1; 
 MACRO		PRC_V_SAVCMDV	= 300,2,1,0%; 		! SAVED COMMAND VERIFICATION FLAG 
 LITERAL	PRC_M_SAVCMDV	= 1^3 - 1^2; 
 MACRO		PRC_V_SAVIMGV	= 300,3,1,0%; 		! SAVED IMAGE VERIFICATION FLAG 
 LITERAL	PRC_M_SAVIMGV	= 1^4 - 1^3; 
 				! 
 MACRO		PRC_B_EXONLYL	= 301,0,8,0%; 	! FIRST E-ONLY INDIRECT LEVEL 
  
 ! 
 ! Recall command buffer elements - using them causes the number of indirect 
 ! frames available to shrink. 
 ! 
 MACRO		PRC_L_RECALLPTR	= 303,0,32,0%; 	! POINTER TO NEXT COMMAND IN BUFFER 
 MACRO		PRC_G_COMMANDS	= 307,0,0,0%; 	! BUFFER OF COMMAND LINES 
 LITERAL	PRC_S_COMMANDS	= 1025; 
 LITERAL	PRC_C_CMDBUFSIZ	= 1025; 		! LENGTH OF COMMAND BUFFER 
  
 LITERAL	PRC_C_LENGTH	= 1332; 
 LITERAL	PRC_K_LENGTH	= 1332; 			! LENGTH OF PROCESS WORK AREA 

  
  
 ! 
 !	DEFINE PROCESS RMS DATA AREA 
 ! 
  
 !...$PRDDEF	
 MACRO		PRD_G_FAB	= 0,0,0,0%; 		! PROCESS FAB 
 LITERAL	PRD_S_FAB	= 80; 
 MACRO		PRD_G_NAM	= 80,0,0,0%; 		! PROCESS NAME BLOCK 
 LITERAL	PRD_S_NAM	= 96; 
 MACRO		PRD_G_INPRAB	= 176,0,0,0%; 		! INPUT RAB 
 LITERAL	PRD_S_INPRAB	= 68; 
 MACRO		PRD_G_ALTINPRAB	= 244,0,0,0%; 		! ALTERNATE INPUT RAB 
 LITERAL	PRD_S_ALTINPRAB	= 68; 
 MACRO		PRD_G_ALTOUTRAB	= 312,0,0,0%; 		! ALTERNATE OUTPUT RAB 
 LITERAL	PRD_S_ALTOUTRAB	= 68; 
 MACRO		PRD_G_OUTRAB	= 380,0,0,0%; 		! OUTPUT RAB 
 LITERAL	PRD_S_OUTRAB	= 68; 
 MACRO		PRD_G_XABTRM	= 448,0,0,0%; 		! TERMINAL XAB 
 LITERAL	PRD_S_XABTRM	= 36; 
 MACRO		PRD_G_TRMLIST	= 484,0,0,0%; 		! ITEMLIST FOR TERMINAL XAB 
 LITERAL	PRD_S_TRMLIST	= 48; 
 LITERAL	PRD_C_LENGTH	= 532; 
 LITERAL	PRD_K_LENGTH	= 532; 				! NORMAL LENGTH 
  
 ! 
 ! FOLLOWING EXTENSION USED ON LEVEL 0 TO STORE FID/DID/FNM FOR QUEUING 
 ! THE JOB LOG FILE TO THE JOB CONTROLLER. 
 ! 
 MACRO		PRD_T_OUTDVI	= 532,0,0,0%; 		! DEVICE FOR OUTPUT FILE 
 LITERAL	PRD_S_OUTDVI	= 16; 
 MACRO		PRD_W_OUTFID	= 548,0,0,0%; 		! FILE ID FOR OUTPUT FILE 
 LITERAL	PRD_S_OUTFID	= 6; 
 MACRO		PRD_W_OUTDID	= 554,0,0,0%; 		! DIRECTORY ID FOR OUTPUT FILE 
 LITERAL	PRD_S_OUTDID	= 6; 
 MACRO		PRD_T_OUTFNM	= 560,0,0,0%; 		! OUTPUT FILE NAME 
 LITERAL	PRD_S_OUTFNM	= 20; 
 LITERAL	PRD_C_XLENGTH	= 580; 
 LITERAL	PRD_K_XLENGTH	= 580; 				! LENGTH OF EXTENDED BLOCK 

  
 ! 
 ! OFFSETS OF ITEM IS TERMINAL XAB ITEM LIST. 
 ! 
 !...$ITRMDEF	
 MACRO		ITRM_W_MODLEN	= 0,0,16,0%; 		! TRM$_MODIFIERS ENTRY 
 MACRO		ITRM_W_MODCODE	= 2,0,16,0%;  
 MACRO		ITRM_L_MODIFIERS	= 4,0,32,0%;  
 MACRO		ITRM_L_MODRET	= 8,0,32,0%;  
 MACRO		ITRM_W_PMPTLEN	= 12,0,16,0%; 		! TRM$_PROMPT ENTRY 
 MACRO		ITRM_W_PMPTCODE	= 14,0,16,0%;  
 MACRO		ITRM_L_PMPTADDR	= 16,0,32,0%;  
 MACRO		ITRM_L_PMPTRET	= 20,0,32,0%;  
 LITERAL	ITRM_C_MINLEN	= 24; 
 LITERAL	ITRM_K_MINLEN	= 24; 				! MINIMUM ITRM REQUIRED 
 MACRO		ITRM_W_INILEN	= 24,0,16,0%; 		! TRM$_INISTRING ENTRY 
 MACRO		ITRM_W_INICODE	= 26,0,16,0%;  
 MACRO		ITRM_L_INIADDR	= 28,0,32,0%;  
 MACRO		ITRM_L_INIRET	= 32,0,32,0%;  
 MACRO		ITRM_W_OFFLEN	= 36,0,16,0%; 		! TRM$_INIOFFSET ENTRY 
 MACRO		ITRM_W_OFFCODE	= 38,0,16,0%;  
 MACRO		ITRM_L_OFFSET	= 40,0,32,0%;  
 MACRO		ITRM_L_OFFRET	= 44,0,32,0%;  
 LITERAL	ITRM_C_LENGTH	= 48; 
 LITERAL	ITRM_K_LENGTH	= 48; 	 

  
 ! 
 !	Define command work area (based at R10) 
 ! 
  
 !...$WRKDEF	
  
 ! 
 ! Work area constant and length definitions 
 ! 
 LITERAL	
 $EQULST (WRK_C_,GBL,0,1  
 	,(CMDBUFSIZ,1024) 		! EXPANDED COMMAND BUFFER SIZE IN BYTES 
 	,(INPBUFSIZ,256) 		! INPUT BUFFER SIZE IN BYTES 
 	,(SCRSTKSIZ,512) 		! INTERNAL COMMAND SCRATCH STACK SIZE IN BYTES 
 	,(MSGBUFSIZ,132) 		! OUTPUT MESSAGE BUFFER SIZE IN BYTES 
 	,(RSLBUFSIZ,128*12) 	! RESULT PARSE BUFFER SIZE IN BYTES (128 MAX) 
 	,(RECALLMAX,20) 		! MAXIMUM NUMBER OF COMMANDS THAT CAN BE RECALLED 
 	,(MAXKEYSTATE,255) 		! MAXIMUM SIZE OF A KEYPAD STATE NAME 
 	); 
 				! (NEEDED TO OBTAIN LENGTH DEFINITION) 
 LITERAL	WRK_C_LENGTH	= -2938; 
 LITERAL	WRK_K_LENGTH	= -2938; 			! LENGTH OF COMMAND PARSING WORK AREA 
  
 ! 
 ! Command buffers and pointers 
 ! 
 MACRO		WRK_L_EXPANDPTR	= -2938,0,32,0%; 	! EXPANSION BUFFER CHARACTER POINTER 
 MACRO		WRK_L_MARKPTR	= -2934,0,32,0%; 		! POINTER INTO EXPANSION BUFFER OF THE CURRENT 
 				! SEGMENT BEING PARSED 
 MACRO		WRK_L_CHARPTR	= -2930,0,32,0%; 		! INPUT BUFFER CHARACTER POINTER 
 MACRO		WRK_G_BUFFER	= -2926,0,0,0%; 	! COMMAND EXPANSION BUFFER 
 LITERAL	WRK_S_BUFFER	= 1024; 
 MACRO		WRK_G_INPBUF	= -1898,0,0,0%; 	! COMMAND INPUT BUFFER FOLLOWS EXPANSION BUFFER 
 LITERAL	WRK_S_INPBUF	= 256; 
  
 ! 
 ! Input reading and processing routines and data 
 ! 
 MACRO		WRK_W_PMPTLEN	= -1634,0,16,0%; 	! LENGTH OF CURRENT PROMPT STRING 
 MACRO		WRK_L_PMPTADDR	= -1630,0,32,0%; 	! ADDRESS OF CURRENT PROMPT STRING 
 MACRO		WRK_L_PROMPTRTN	= -1626,0,32,0%; 	! ADDRESS OF PROMPT ROUTINE 
 MACRO		WRK_L_READRTN	= -1622,0,32,0%; 		! ADDRESS OF CONTINUATION INPUT ROUTINE 
 MACRO		WRK_L_ERRORRTN	= -1618,0,32,0%; 	! ADDRESS OF CHARACTER INPUT ERROR ROUTINE 
 MACRO		WRK_L_SPECRTN	= -1614,0,32,0%; 		! ADDRESS OF SPECIAL CHARACTER PROCESSING RTN 
  
 ! 
 ! Restul parse descriptors and pointers 
 ! 
 MACRO		WRK_G_RESULT	= -1610,0,0,0%; 	! RESULT PARSE DESCRIPTOR AREA (96 MAX) 
 LITERAL	WRK_S_RESULT	= 1536; 
 MACRO		WRK_L_RSLEND	= -74,0,32,0%; 	! ADDRESS OF LAST TOKEN DESCRIPTOR 
 MACRO		WRK_L_RSLNXT	= -70,0,32,0%; 	! ADDRESS OF NEXT FREE TOKEN DESCRIPTOR 
  
 ! 
 ! Command definition information 
 ! 
 MACRO		WRK_L_VERB	= -66,0,32,0%; 		! ADDRESS OF ASCIC VERB NAME 
 MACRO		WRK_B_VERBTYP	= -62,0,8,0%; 	! COMMAND VERB TYPE (SEE $CLIVERBDEF) 
 MACRO		WRK_B_CMDOPT	= -61,0,8,0%; 	! QUALIFIER # CAUSING THE FIRST SYNTAX CHANGE 
 MACRO		WRK_B_VALLEV	= -60,0,8,0%; 	! DEPTH OF CURRENT VALUE ON THE COMMAND LINE 
 MACRO		WRK_B_RECALLCNT	= -59,0,8,0%; 	! NUMBER OF RECALL COMMANDS ISSUES 
 MACRO		WRK_L_PROPTR	= -58,0,32,0%; 		! ADDRESS OF PARAMETER ENTITY BLOCK LIST 
 MACRO		WRK_L_QUABLK	= -54,0,32,0%; 		! ADDRESS OF QUALIFIER ENTITY BLOCK LIST 
 MACRO		WRK_B_PARMCNT	= -50,0,8,0%; 	! CURRENT PARAMETER COUNT 
 MACRO		WRK_B_PARMSUM	= -49,0,8,0%; 	! NUMBER OF PARAMETER VALUES 
 MACRO		WRK_B_MAXPARM	= -48,0,8,0%; 	! MAXIMUM NUMBER OF PARAMETERS ALLOWED 
 MACRO		WRK_B_MINPARM	= -47,0,8,0%; 	! MINIMUM NUMBER OF PARAMETERS REQUIRED 
 MACRO		WRK_L_PAROUT	= -46,0,32,0%; 		! ADDRESS OF LISTS OF OUTPUTS 
 MACRO		WRK_L_SIGNALRTN	= -42,0,32,0%; 	! ADDRESS OF ERROR SIGNALING ROUTINE 
 MACRO		WRK_L_TAB_VEC	= -34,0,32,0%; 		! ADDRESS OF COMMAND TABLE VECTOR 
 MACRO		WRK_L_IMAGE	= -30,0,32,0%; 		! ADDRESS OF IMAGE NAME STRING! OR TABLE INDEX 
 MACRO		WRK_L_DISALLOW	= -26,0,32,0%; 	! ADDRESS OF DISALLOW EXPRESSION TREE 
 MACRO		WRK_L_RECALLPTR	= -22,0,32,0%; 	! POINTER INTO THE RECALL BUFFER 
 MACRO		WRK_W_IMGCHAN	= -18,0,16,0%; 	! IMAGE ACTIVATION CHANNEL NUMBER 
  
 ! 
 ! Flags describing the command line 
 ! 
 MACRO		WRK_W_FLAGS	= -16,0,16,0%; 		! COMMAND LEVEL FLAGS 
 			 
 MACRO		WRK_V_RUNDWN	= -16,0,1,0%; 		! RUNDOWN HAS BEEN DONE 
 LITERAL	WRK_M_RUNDWN	= 1^1 - 1^0; 
 MACRO		WRK_V_COMMAND	= -16,1,1,0%; 		! COMMAND (IMAGE) EXECUTION IN PROGRESS 
 LITERAL	WRK_M_COMMAND	= 1^2 - 1^1; 
 				! (SO, AVOID PRINTING ERROR SEGMENT TEXT) 
 MACRO		WRK_V_PROMPT	= -16,2,1,0%; 		! PROMPTING IN PROGRESS 
 LITERAL	WRK_M_PROMPT	= 1^3 - 1^2; 
 MACRO		WRK_V_CONTIN	= -16,3,1,0%; 		! CONTINUATION IN PROGRESS 
 LITERAL	WRK_M_CONTIN	= 1^4 - 1^3; 
 MACRO		WRK_V_QUOTE	= -16,4,1,0%; 		! PROCESSING QUOTED STRING 
 LITERAL	WRK_M_QUOTE	= 1^5 - 1^4; 
 MACRO		WRK_V_STAR	= -16,5,1,0%; 		! ASTERISK IS TERMINATOR 
 LITERAL	WRK_M_STAR	= 1^6 - 1^5; 
 MACRO		WRK_V_VERB	= -16,6,1,0%; 		! PROCESSING VERB 
 LITERAL	WRK_M_VERB	= 1^7 - 1^6; 
 MACRO		WRK_V_INQUIRE	= -16,7,1,0%; 		! INQUIRE COMMAND - READ REQUIRED 
 LITERAL	WRK_M_INQUIRE	= 1^8 - 1^7; 
 MACRO		WRK_V_NOSTAT	= -16,8,1,0%; 		! DON'T STORE SUCCESS STATUS ON COMPLETION 
 LITERAL	WRK_M_NOSTAT	= 1^9 - 1^8; 
 MACRO		WRK_V_TRAILSPC	= -16,9,1,0%; 	! TRAILING SPACES IN CONTINUED LINE 
 LITERAL	WRK_M_TRAILSPC	= 1^10 - 1^9; 
 MACRO		WRK_V_INPSUBST	= -16,10,1,0%; 	! CURRENTLY SUBSTITUTING INPUT RECORD SYMBOLS 
 LITERAL	WRK_M_INPSUBST	= 1^11 - 1^10; 
 MACRO		WRK_V_NOUPCASE	= -16,11,1,0%; 	! DON'T UPCASE CHARACTERS FROM INPUT BUFFER 
 LITERAL	WRK_M_NOUPCASE	= 1^12 - 1^11; 
 MACRO		WRK_V_COMMENT	= -16,12,1,0%; 		! WE ARE WITHIN A COMMENT DURING "INPSUBST" 
 LITERAL	WRK_M_COMMENT	= 1^13 - 1^12; 
 				! (SO, SUPPRESS ANY ERRORS DURING SUBSTITUTION) 
 MACRO		WRK_V_USRMODE	= -16,13,1,0%; 		! USER MODE PARSE IS BEING PERFORMED 
 LITERAL	WRK_M_USRMODE	= 1^14 - 1^13; 
 MACRO		WRK_V_ESCAPE	= -16,14,1,0%; 		! ESCAPE SEQUENCE IS BEING PROCESSED 
 LITERAL	WRK_M_ESCAPE	= 1^15 - 1^14; 
 			
  
 MACRO		WRK_W_FLAGS2	= -14,0,16,0%; 	! MORE COMMAND LEVEL FLAGS 
 			 
 MACRO		WRK_V_CLIRTN	= -14,0,1,0%; 		! COMMAND INVOKES A INTERNAL CLI ROUTINE 
 LITERAL	WRK_M_CLIRTN	= 1^1 - 1^0; 
 MACRO		WRK_V_USERRTN	= -14,1,1,0%; 		! COMMAND INVOKES A USER-SPECIFIED ROUTINE 
 LITERAL	WRK_M_USERRTN	= 1^2 - 1^1; 
 MACRO		WRK_V_CLOSERR	= -14,2,1,0%; 		! SUPPRESS 'CLOSE' ERROR MESSAGE. 
 LITERAL	WRK_M_CLOSERR	= 1^3 - 1^2; 
 			
  
 ! 
 ! Saved context registers 
 ! 
 MACRO		WRK_L_SAVSP	= -12,0,32,0%; 		! SAVED STACK POINTER 
 MACRO		WRK_L_SAVAP	= -8,0,32,0%; 		! SAVED ARGUMENT POINTER 
 MACRO		WRK_L_SAVFP	= -4,0,32,0%; 		! SAVED INITIAL FRAME POINTER 

  
  
 ! 
 !	DEFINE RESULT PARSE POINTERS.  EACH POINTER DESCRIBES 
 !	A TOKEN ON THE COMMAND LINE FROM LEFT TO RIGHT. 
 ! 
  
 !...$PTRDEF	
 MACRO		PTR_L_DESCR	= 0,0,32,0%; 		! FIRST LONGWORD 
 MACRO		PTR_B_VALUE	= 0,0,8,0%; 	! LOW BYTE IS TOKEN LENGTH 
 			 
 MACRO		PTR_V_VALUE	= 0,0,8,0%; 		! ITEM LENGTH 
 MACRO		PTR_V_OFFSET	= 0,8,12,0%; 	! ITEM OFFSET IN BUFFER 
 MACRO		PTR_V_FLAGS	= 0,20,4,0%; 		! ITEM FLAGS 
 MACRO		PTR_V_TERM	= 0,24,4,0%; 		! ITEM TERMINATOR CLASS NUMBER 
 MACRO		PTR_V_TYPE	= 0,28,4,0%; 		! ITEM TYPE 
 			
 					! FLAG BIT DEFINITIONS 
 				 
 MACRO		PTR_V_NEGATE	= 0,20,1,0%; 		! QUALIFIER WAS NEGATED 
 MACRO		PTR_V_KEYWORD	= 0,21,1,0%; 		! VALUE IS A KEYWORD 
 MACRO		PTR_V_SYNTAX	= 0,22,1,0%; 		! CAUSED TRANSITION TO NEW COMMAND SYNTAX 
 			
 LITERAL	
 $EQULST (PTR_K_,GBL,1,1 		! DEFINE TERMINATOR CLASSES, STARTING AT 1 
 	,(BLANK,) 			! BLANK 
 	,(COLON,) 			! COLON 
 	,(SLASH,) 			! SLASH 
 	,(PLUS,) 			! PLUS SIGN 
 	,(COMMA,) 			! COMMA 
 	,(RPAREN,) 			! RIGHT PARENTHESIS 
 	,(LPAREN,) 			! LEFT PARENTHESIS 
 	); 
 LITERAL	
 $EQULST (PTR_K_,GBL,0,1 		! DEFINE TYPE NUMBERS, STARTING AT 0 
 	,(COMDQUAL,) 		! COMMAND QUALIFIER 
 	,(PARMQUAL,) 		! PARAMETER QUALIFIER 
 	,(QUALVALU,) 		! QUALIFIER VALUE 
 	,(PARAMETR,) 		! PARAMETER 
 	,(ENDLINE,) 			! END OF LINE 
 	,(IGNORE,) 			! INVALIDATED DESCRIPTOR 
 	); 
  
 MACRO		PTR_B_LEVEL	= 4,0,8,0%; 		! VALUE LEVEL 
 MACRO		PTR_B_NUMBER	= 5,0,8,0%; 	! KEYWORD NUMBER 
 MACRO		PTR_B_PARMCNT	= 6,0,8,0%; 	! PARAMETR COUNT 
  
 MACRO		PTR_L_ENTITY	= 8,0,32,0%; 		! ENTITY BLOCK ADDRESS 
 LITERAL	PTR_C_LENGTH	= 12; 
 LITERAL	PTR_K_LENGTH	= 12; 			! FIXED LENGTH OF DESCRIPTOR 

  
 ! 
 !	DEFINE PARAMETER LIST MARKER.  EACH MARKER DESCRIBES 
 !	THE STARTING THRU ENDING POINTERS WHICH DESCRIBE A 
 !	GIVEN PARAMETER (INCLUDING QUALIFIERS AND VALUES). 
 ! 
  
 !...$PLMDEF	
 MACRO		PLM_B_NXTDESC	= 0,0,8,0%; 	! NEXT DESCRIPTOR TO BE EXAMINED IN CURRENT LIST 
 MACRO		PLM_B_FSTDESC	= 1,0,8,0%; 	! FIRST DESCRIPTOR IN LIST 
 MACRO		PLM_B_LSTDESC	= 2,0,8,0%; 	! LAST DESCRIPTOR IN LIST 
 			 
 MACRO		PLM_B_TRMDESC	= 3,0,8,0%; 	! TERMINATOR DESCRIPTOR 
 LITERAL	PLM_C_SIZE	= 4; 
 LITERAL	PLM_K_SIZE	= 4; 			! SIZE OF EACH ENTRY 
 			 
 MACRO		PLM_B_QUADESC	= 3,0,8,0%; 	! FIRST POSSIBLE QUALIFIER DESCRIPTOR 

  
 ! 
 !	DEFINE STORAGE USED BY OLD CLI INTERFACE. 
 ! 
 !	THE MEMORY FOR THIS AREA IS SUPPLIED BY THE CALLING PROGRAM. 
 ! 
  
 !...$RPWDEF		! RESULT PARSE WORK AREA 
 MACRO		RPW_L_USERCTX	= 0,0,32,0%; 		! USER CONTEXT LONGWORD 
 MACRO		RPW_L_DCLWRK	= 4,0,32,0%; 		! ADDRESS OF COMMAND WORK AREA 
 MACRO		RPW_B_STRPARM	= 8,0,8,0%; 	! INDEX TO FIRST PARAMETER DESCRIPTOR 
 MACRO		RPW_B_LSTDESC	= 9,0,8,0%; 	! INDEX TO LAST PARAMETER DESCRIPTOR 
 MACRO		RPW_G_BITS	= 32,0,0,0%; 	! 256 BITS, 1 IF PLM PROCESSED BY RESULT PARSE 
 LITERAL	RPW_S_BITS	= 32; 
 LITERAL	RPW_C_HDRSIZ	= 64; 
 LITERAL	RPW_K_HDRSIZ	= 64; 			! SIZE OF FIXED PORTION 
 MACRO		RPW_G_PRMLIM	= 64,0,0,0%; 	! UP TO 16 PARAMETER LIMIT DESCRIPTORS (PLM) 
 LITERAL	RPW_S_PRMLIM	= 64; 
 LITERAL	RPW_C_LENGTH	= 128; 
 LITERAL	RPW_K_LENGTH	= 128; 			! LENGTH OF MAXIMUM SIZE 

  
 ! 
 !	DEFINE STORAGE USED BY NEW CLI INTERFACE 
 ! 
  
 !...$DCLDEF	
 MACRO		DCL_L_PRMLIM	= 0,0,0,0%; 		! Parameter limit descriptors 
 LITERAL	DCL_S_PRMLIM	= 64; 
 LITERAL	DCL_C_CONTEXT	= 7; 			! Number of levels of context 
 MACRO		DCL_L_ENTITY	= 64,0,0,0%; 		! Context entity block addresses 
 LITERAL	DCL_S_ENTITY	= 28; 
 MACRO		DCL_L_TOKEN	= 92,0,0,0%; 		! Context token desc addresses 
 LITERAL	DCL_S_TOKEN	= 28; 
 MACRO		DCL_L_QUAL	= 120,0,32,0%; 			! Address of last qualifier token 
 MACRO		DCL_L_GETVM	= 124,0,32,0%; 			! Address of LIB$GET_VM 
 MACRO		DCL_L_FREEVM	= 128,0,32,0%; 			! Address of LIB$FREE_VM 
 MACRO		DCL_W_DEFLEN	= 132,0,16,0%; 		! Length of default value 
 MACRO		DCL_L_DEFADDR	= 136,0,32,0%; 		! Address of default buffer 
 MACRO		DCL_B_FLAGS	= 140,0,8,0%; 			! Flags byte 
 			 
 MACRO		DCL_V_NOWRKAREA	= 140,0,1,0%; 		! True if invalid WRK area pointer 
 MACRO		DCL_V_NEXTQUAL	= 140,1,1,0%; 		! True if processing DCL$NEXTQUAL 
 			
 MACRO		DCL_W_BUFLEN	= 141,0,16,0%; 		! Length of default value buffer 
 MACRO		DCL_B_PARAM	= 143,0,8,0%; 			! Last parameter # requested 
 LITERAL	DCL_C_SIZE	= 144; 
 LITERAL	DCL_K_SIZE	= 144; 	 

  
 ! 
 !	DEFINE SYMBOL TABLE ENTRY 
 ! 
  
 !...$SYMDEF	
 LITERAL	SYM_C_MAXSTATES	= 64; 		! MAXIMUM NUMBER OF KEYPAD STATES ALLOWED 
 MACRO		SYM_L_FL	= 0,0,32,0%; 		! SYMBOL ENTRY FORWARD LINK 
 MACRO		SYM_L_BL	= 4,0,32,0%; 		! SYMBOL ENTRY BACKWARD LINK 
 MACRO		SYM_W_SIZE	= 8,0,16,0%; 		! SIZE OF SYMBOL TABLE ENTRY 
 MACRO		SYM_B_TYPE	= 10,0,8,0%; 		! TYPE OF SYMBOL 
 LITERAL	
 $EQULST (SYM_K_,GBL,0,1  
 	,(STRING,) 			! VALUE IS VARIABLE LENGTH STRING 
 	,(PERM,) 			! PERMANENT SYMBOL, STRING 
 	,(BINARY,) 			! VALUE IS BINARY LONGWORD VALUE 
 	,(LABEL,) 			! VALUE IS RFA OF LINE WITH LABEL 
 	,(KEYPAD,) 			! KEYPAD SYMBOL 
 	); 
 			 
 MACRO		SYM_B_NONUNIQUE	= 11,0,8,0%; 	! LENGTH OF NAME PORTION WHICH IS NONUNIQUE 
 				! (THAT IS, # CHARS AFTER UNIQUENESS POINT) 
 			 
 MACRO		SYM_B_FLAGS	= 11,0,8,0%; 		! KEYPAD FLAGS 
 			 
 MACRO		SYM_V_ECHO	= 11,0,1,0%; 		! ECHO THE SUBSTITUTED COMMAND 
 LITERAL	SYM_M_ECHO	= 1^1 - 1^0; 
 MACRO		SYM_V_TERMINATE	= 11,1,1,0%; 	! TREAT THE KEY AS A TERMINATOR 
 LITERAL	SYM_M_TERMINATE	= 1^2 - 1^1; 
 MACRO		SYM_V_STATE	= 11,2,1,0%; 		! STATE SHOULD BE SET 
 LITERAL	SYM_M_STATE	= 1^3 - 1^2; 
 MACRO		SYM_V_LOCK	= 11,3,1,0%; 		! SET THE STATE UNTIL EXPLICITLY RESET 
 LITERAL	SYM_M_LOCK	= 1^4 - 1^3; 
 MACRO		SYM_V_ERASE	= 11,4,1,0%; 		! ERASE THE LINE BEFORE EXECUTING THE KEY 
 LITERAL	SYM_M_ERASE	= 1^5 - 1^4; 
 			
 MACRO		SYM_T_SYMBOL	= 12,0,8,0%; 	! ASCIC SYMBOL NAME 
 ! 
 ! SYMBOL VALUE DIRECTLY FOLLOWS: 
 !   FOR STRING: WORD-COUNTED STRING 
 !   FOR BINARY: LONGWORD 
 !   FOR LABELS: WORD OF 6, FOLLOWED BY 6 BYTE RFA 
 !   FOR KEYPAD: WORD-COUNTED STRING OF THE FOLLOWING FORMAT 
 !	WORD - SIZE OF STRING 
 !	WORD - SIZE OF VALUE STRING 
 !	VALUE STRING 
 !	BYTE - SIZE OF STRING DESCRIBING THE STATE WHEN THIS 
 !		SYMBOL IS DEFINED 
 !	STRING DESCRIBING THE STATE WHEN THIS SYMBOL IS DEFINED 
 !	BYTE - SIZE OF STRING DESCRIBING THE STATE THIS SYMBOL SETS 
 !	STRING DESCRIBING THE STATE THIS SYMBOL SETS 
 ! 

  
 ! 
 !	DEFINE INDIRECT STACK FRAME 
 ! 
  
 !...$IDFDEF	
 MACRO		IDF_L_LNK	= 0,0,32,0%; 		! POINTER TO NEXT INDIRECT FILE FRAME 
 MACRO		IDF_W_INPIFI	= 4,0,16,0%; 	! IFI FOR INPUT 
 MACRO		IDF_W_ONLEVEL	= 6,0,16,0%; 	! ON ERROR LEVEL NUMBER 
 MACRO		IDF_L_ONERROR	= 8,0,32,0%; 		! ADDRESS OF ON ERROR COMMAND TEXT 
 MACRO		IDF_L_INPRABCTX	= 12,0,32,0%; 	! CONTENTS OF INPUT RAB CTX LONGWORD 
 MACRO		IDF_Q_LOCAL	= 16,0,0,0%; 		! LOCAL SYMBOL TABLE LISTHEAD 
 LITERAL	IDF_S_LOCAL	= 8; 
 MACRO		IDF_Q_LABEL	= 24,0,0,0%; 		! LABEL SYMBOL TABLE LISTHEAD 
 LITERAL	IDF_S_LABEL	= 8; 
 ! 
 !    OUTIFI, OUTISI, OUTRABCTX, OUTDVI, and OUTFLAGS must be the same in PRC, 
 !    IDF, OUT 
 ! 
 MACRO		IDF_W_OUTIFI	= 32,0,16,0%; 	! IFI FOR OUTPUT 
 MACRO		IDF_W_OUTISI	= 34,0,16,0%; 	! ISI FOR OUTPUT 
 MACRO		IDF_L_OUTRABCTX	= 36,0,32,0%; 	! CONTENTS OF OUTPUT RAB CTX LONGWORD 
 MACRO		IDF_T_OUTDVI	= 40,0,0,0%; 	! INDIRECT OUTPUT DEVICE (ASCIC) 
 LITERAL	IDF_S_OUTDVI	= 16; 
 MACRO		IDF_B_OUTFLAGS	= 56,0,8,0%; 	! FLAGS 
 					! 
 MACRO		IDF_V_OUTCCL	= 56,0,1,0%; 		! CONCEALED OUTPUT DEVICE 
 LITERAL	IDF_M_OUTCCL	= 1^1 - 1^0; 
 MACRO		IDF_V_INPCCL	= 56,1,1,0%; 		! CONCEALED INPUT DEVICE 
 LITERAL	IDF_M_INPCCL	= 1^2 - 1^1; 
 				! 
  
 MACRO		IDF_T_INPDVI	= 60,0,0,0%; 	! INDIRECT INPUT DEVICE (ASCIC) 
 LITERAL	IDF_S_INPDVI	= 16; 
 MACRO		IDF_W_INPFID	= 76,0,0,0%; 	! FILE ID FOR INPUT FILE 
 LITERAL	IDF_S_INPFID	= 6; 
 MACRO		IDF_W_INPDID	= 82,0,0,0%; 	! DIRECTORY ID FOR INPUT FILE 
 LITERAL	IDF_S_INPDID	= 6; 
 MACRO		IDF_W_INPRFA	= 88,0,0,0%; 	! RECORD FILE ADDRESS FOR INPUT 
 LITERAL	IDF_S_INPRFA	= 6; 
 MACRO		IDF_W_FLAG	= 94,0,16,0%; 		! INDIRECT FLAGS 
 			 
 MACRO		IDF_V_INPOPN	= 94,0,1,0%; 		! THIS INPUT OPEN IS REQUIRED 
 MACRO		IDF_V_REMOTE	= 94,1,1,0%; 		! COMMAND PROCEDURE EXISTS ON REMOTE NODE 
 			
 MACRO		IDF_L_ONCTLY	= 96,0,32,0%; 		! SAVED ADDRESS OF ON CONTROL/Y COMMAND 
 MACRO		IDF_L_SEARCHCTX	= 100,0,32,0%; 	! LISTHEAD OF F$SEARCH CONTEXT BLOCKS: 
 				!   1ST LONGWORD = LINK POINTER, 0 TO END 
 				!   2ND LONGWORD = SIZE OF BLOCK IN BYTES 
 MACRO		IDF_L_FILENAME	= 104,0,32,0%; 	! ADDRESS OF ASCIC COMMAND PROCEDURE NAME 
 LITERAL	IDF_C_LENGTH	= 116; 
 LITERAL	IDF_K_LENGTH	= 116; 			! LENGTH OF INDIRECT FRAME 

  
 ! 
 ! TEMPORARY STORAGE USED FOR SPAWNING SUBPROCESSES 
 ! 
  
 !...$SPWNDEF	
  
 MACRO		SPWN_L_LINK	= 0,0,32,0%; 		! POINTER TO NEXT IN CHAIN 
 MACRO		SPWN_W_SIZE	= 4,0,16,0%; 		! SIZE OF BLOCK 
 MACRO		SPWN_W_UNIT	= 8,0,16,0%; 		! TERMINATION MAILBOX UNIT NUMBER 
 MACRO		SPWN_W_CHAN	= 10,0,16,0%; 		! CONTEXT MAILBOX CHANNEL 
 MACRO		SPWN_W_FLAGS	= 12,0,16,0%; 		! FLAGS 
 			 
 MACRO		SPWN_V_LOG	= 12,0,1,0%; 		! /LOG SPECIFIED 
 LITERAL	SPWN_M_LOG	= 1^1 - 1^0; 
 MACRO		SPWN_V_PRCNAM	= 12,1,1,0%; 		! /PROCESS_NAME SPECIFIED 
 LITERAL	SPWN_M_PRCNAM	= 1^2 - 1^1; 
 MACRO		SPWN_V_WAIT	= 12,2,1,0%; 		! /WAIT SPECIFIED 
 LITERAL	SPWN_M_WAIT	= 1^3 - 1^2; 
 MACRO		SPWN_V_AUTOLOGO	= 12,3,1,0%; 	! SILENT LOGOUT AFTER CMDSTR EXECUTED 
 LITERAL	SPWN_M_AUTOLOGO	= 1^4 - 1^3; 
 MACRO		SPWN_V_MODE	= 12,4,1,0%; 		! BATCH/INTERACTIVE MODE OF SUBPROCESS 
 LITERAL	SPWN_M_MODE	= 1^5 - 1^4; 
 MACRO		SPWN_V_CLISYM	= 12,5,1,0%; 		! COPY CLI SYMBOLS TO SUBPROCESS 
 LITERAL	SPWN_M_CLISYM	= 1^6 - 1^5; 
 MACRO		SPWN_V_LOGNAM	= 12,6,1,0%; 		! COPY LOGICAL NAMES TO SUBPROCESS 
 LITERAL	SPWN_M_LOGNAM	= 1^7 - 1^6; 
 MACRO		SPWN_V_ACTIVE	= 12,7,1,0%; 		! PROCESS CURRENTLY BEING SPAWNED 
 LITERAL	SPWN_M_ACTIVE	= 1^8 - 1^7; 
 MACRO		SPWN_V_NOTIFY	= 12,8,1,0%; 		! /NOTIFY SPECIFIED 
 LITERAL	SPWN_M_NOTIFY	= 1^9 - 1^8; 
 MACRO		SPWN_V_PROMPT	= 12,9,1,0%; 		! /PROMPT SPECIFIED 
 LITERAL	SPWN_M_PROMPT	= 1^10 - 1^9; 
 MACRO		SPWN_V_INPUT	= 12,10,1,0%; 		! /INPUT=value SPECIFIED 
 LITERAL	SPWN_M_INPUT	= 1^11 - 1^10; 
 MACRO		SPWN_V_OUTPUT	= 12,11,1,0%; 		! OUTPUT IS SET TO SYS$OUTPUT 
 LITERAL	SPWN_M_OUTPUT	= 1^12 - 1^11; 
 MACRO		SPWN_V_KEYPAD	= 12,12,1,0%; 		! COPY KEYPAD STATE TO SUBPROCESS 
 LITERAL	SPWN_M_KEYPAD	= 1^13 - 1^12; 
 MACRO		SPWN_V_CLI	= 12,13,1,0%; 		! /CLI=value SPECIFIED 
 LITERAL	SPWN_M_CLI	= 1^14 - 1^13; 
 MACRO		SPWN_V_NOCTX	= 12,14,1,0%; 		! PASS/NOPASS CONTEXT TO SUBPROCESS 
 LITERAL	SPWN_M_NOCTX	= 1^15 - 1^14; 
 MACRO		SPWN_V_TABLE	= 12,15,1,0%; 		! /TABLE=value SPECIFIED 
 LITERAL	SPWN_M_TABLE	= 1^16 - 1^15; 
 			
 MACRO		SPWN_B_ACMODE	= 14,0,8,0%; 	! ACCESS MODE TO CALL ASTADR AST ROUTINE 
 				! OR TO PROBE STSADR LONGWORD 
 MACRO		SPWN_B_EFN	= 15,0,8,0%; 		! EVENT FLAG TO SET WHEN SUBPROCESS COMPLETES 
 				! (-1 IF NONE) 
 MACRO		SPWN_Q_MBXNAM	= 16,0,0,0%; 	! DESCRIPTOR OF CONTEXT MAILBOX NAME 
 LITERAL	SPWN_S_MBXNAM	= 8; 
 MACRO		SPWN_Q_PRCNAM	= 24,0,0,0%; 	! DESCRIPTOR OF PROCESS NAME 
 LITERAL	SPWN_S_PRCNAM	= 8; 
 MACRO		SPWN_Q_INPUT	= 32,0,0,0%; 		! DESCRIPTOR OF SUBPROCESS INPUT FILESPEC 
 LITERAL	SPWN_S_INPUT	= 8; 
 MACRO		SPWN_Q_OUTPUT	= 40,0,0,0%; 	! DESCRIPTOR OF SUBPROCESS OUTPUT FILESPEC 
 LITERAL	SPWN_S_OUTPUT	= 8; 
 MACRO		SPWN_Q_CMDSTR	= 48,0,0,0%; 	! DESCRIPTOR OF COMMAND STRING TO BE EXECUTED 
 LITERAL	SPWN_S_CMDSTR	= 8; 
 MACRO		SPWN_Q_IOSB	= 56,0,0,0%; 		! I/O STATUS BLOCK FOR QIO REQUESTS 
 LITERAL	SPWN_S_IOSB	= 8; 
 MACRO		SPWN_L_SUBPID	= 64,0,32,0%; 	! PID OF NEWLY CREATED SUBPROCESS 
 MACRO		SPWN_L_STATUS	= 68,0,32,0%; 	! FINAL STATUS FROM COMPLETED SUBPROCESS 
 MACRO		SPWN_L_PRIB	= 72,0,32,0%; 		! BASE PRIORITY OF SUBPROCESS 
 MACRO		SPWN_L_ASTADR	= 76,0,32,0%; 	! AST ROUTINE TO CALL ON SUBPROCESS 
 				! TERMINATION (ZERO IF NONE) 
 MACRO		SPWN_L_ASTPRM	= 80,0,32,0%; 	! PARAMETER TO AST ROUTINE 
 MACRO		SPWN_L_STSADR	= 84,0,32,0%; 	! ADDRESS OF LONGWORD TO RECEIVE 
 				! TERMINATION STATUS (ZERO IF NONE) 
 MACRO		SPWN_L_OUTOFBAND	= 88,0,32,0%; 	! OUT-OF-BAND AST CHARACTER MASK 
 MACRO		SPWN_L_IMAGCNT	= 92,0,32,0%; 	! PROCESS IMAGE COUNT 
 MACRO		SPWN_G_QUOTAS	= 96,0,0,0%; 	! SPACE FOR SUBPROCESS QUOTA LIST 
 LITERAL	SPWN_S_QUOTAS	= 50; 
 MACRO		SPWN_T_PROCESS	= 146,0,0,0%; 	! ASCIC SUBPROCESS NAME 
 LITERAL	SPWN_S_PROCESS	= 16; 
  
 	! Prompt string must be kept together (and mimicked in PRC and CTX) 
  
 MACRO		SPWN_B_PROMPTLEN	= 162,0,8,0%; 	! LENGTH OF PROMPT STRING 
 MACRO		SPWN_W_PMPTCTRL	= 163,0,16,0%; 	! PROMPT CONTROL CHARACTERS 
 MACRO		SPWN_B_CONTINUE	= 165,0,8,0%; 	! PROMPT CONTINUATION CHARACTER 
 MACRO		SPWN_G_PROMPT	= 166,0,0,0%; 	! PROMPT STRING AREA 
 LITERAL	SPWN_S_PROMPT	= 32; 
 MACRO		SPWN_Q_CLI	= 198,0,0,0%; 		! DESCRIPTOR OF CLI NAME 
 LITERAL	SPWN_S_CLI	= 8; 
 MACRO		SPWN_Q_TABLE	= 206,0,0,0%; 		! DESCRIPTOR OF CLI TABLE NAME 
 LITERAL	SPWN_S_TABLE	= 8; 
  
 LITERAL	SPWN_C_LENGTH	= 214; 
 LITERAL	SPWN_K_LENGTH	= 214; 	 

  
 ! 
 ! FORMAT OF THE CONTEXT MESSAGES WHICH ARE TRANSMITTED FROM THE SPAWN 
 ! COMMAND TO THE SUBPROCESS INITIALIZATION. 
 ! 
  
 !...$CTXDEF	
  
 LITERAL	CTX_C_MAXLEN	= 1024; 		! MAXIMUM RECORD SIZE 
  
 MACRO		CTX_W_TYPE	= 0,0,16,0%; 		! MESSAGE TYPE 
 LITERAL	
 $EQULST (CTX_C_,GBL,0,1  
 	,(HEADER,) 			! HEADER RECORD 
 	,(CMDSTR,) 			! COMMAND STRING 
 	,(LOGNAM,) 			! LOGICAL NAMES 
 	,(CLISYM,) 			! CLI SYMBOLS 
 	,(KEYSTATE,) 		! KEYPAD STATE 
 	,(LNMTABLE,) 		! LOGICAL NAME TABLE 
 	,(LNMNAME,) 			! LOGICAL NAME BLOCK (INITIAL RECORD) 
 	,(LNMNTRAN,) 		! ADDITIONAL TRANSLATIONS (NYI)		 
 	); 
 			 
  
 	! FOR HEADER RECORDS 
  
 MACRO		CTX_Q_PROCPRIV	= 2,0,0,0%; 	! PROCESS PRIVILEGES 
 LITERAL	CTX_S_PROCPRIV	= 8; 
 MACRO		CTX_L_OUTOFBAND	= 10,0,32,0%; 	! OUT-OF-BAND AST CHARACTER MASK 
 			 
 						! SKIP UNUSED CHARACTERS 
 MACRO		CTX_V_CTRLT	= 10,20,1,0%; 		! CONTROL T 
 LITERAL	CTX_M_CTRLT	= 1^21 - 1^20; 
 						! SKIP UNUSED CHARACTERS 
 MACRO		CTX_V_CTRLY	= 10,25,1,0%; 		! CONTROL Y 
 LITERAL	CTX_M_CTRLY	= 1^26 - 1^25; 
 			
 MACRO		CTX_B_FLAGS	= 14,0,8,0%; 		! FLAGS BYTE 
 			 
 MACRO		CTX_V_AUTOLOGO	= 14,0,1,0%; 	! SILENT LOGOUT AFTER COMMAND STRING EXECUTED 
 LITERAL	CTX_M_AUTOLOGO	= 1^1 - 1^0; 
 				! (IF OFF, REVERT TO SYS$INPUT AFTER EXECUTION) 
 MACRO		CTX_V_MODE	= 14,1,1,0%; 		! BATCH/INTERACTIVE MODE BIT 
 LITERAL	CTX_M_MODE	= 1^2 - 1^1; 
 MACRO		CTX_V_VERIFY	= 14,2,1,0%; 		! VERIFICATION FLAG 
 LITERAL	CTX_M_VERIFY	= 1^3 - 1^2; 
 MACRO		CTX_V_VERIMAGE	= 14,3,1,0%; 	! IMAGE VERIFICATION FLAG 
 LITERAL	CTX_M_VERIMAGE	= 1^4 - 1^3; 
 MACRO		CTX_V_WAIT	= 14,4,1,0%; 		! WAIT/NOWAIT SUBPROCESS BIT 
 LITERAL	CTX_M_WAIT	= 1^5 - 1^4; 
 			
  
 	! Prompt string must be kept together (and mimicked in PRC and SPWN) 
  
 MACRO		CTX_B_PROMPTLEN	= 15,0,8,0%; 	! LENGTH OF PROMPT STRING 
 MACRO		CTX_W_PMPTCTRL	= 16,0,16,0%; 	! PROMPT CONTROL CHARACTERS 
 MACRO		CTX_B_CONTINUE	= 18,0,8,0%; 	! PROMPT CONTINUATION CHARACTER 
 MACRO		CTX_G_PROMPT	= 19,0,0,0%; 	! PROMPT STRING AREA 
 LITERAL	CTX_S_PROMPT	= 32; 
  
 LITERAL	CTX_C_HDRLEN	= 51; 
 LITERAL	CTX_K_HDRLEN	= 51; 			! FIXED SIZE OF HEADER RECORD 
  
  
 	! FOR COMMAND STRING RECORDS 
  
 			 
 MACRO		CTX_T_CMDSTR	= 2,0,8,0%; 	! ASCII COMMAND STRING (NO COUNT) 
  
 	! FOR LOGICAL NAME RECORDS 
  
 			 
 MACRO		CTX_W_ENTSIZE	= 2,0,16,0%; 	! SIZE OF ENTRY 
 MACRO		CTX_B_ACMODE	= 4,0,8,0%; 	! ACCESS MODE OF LOGICAL NAME 
 			 
 MACRO		CTX_T_LOGNAM	= 5,0,8,0%; 	! ASCIC LOGICAL NAME 
 				! WORD-COUNTED VALUE STRING FOLLOWS 
  
 	! FOR CLI SYMBOL RECORDS 
  
 			 
 MACRO		CTX_B_SYMTAB	= 4,0,8,0%; 	! SYMBOL TABLE TYPE 
 LITERAL	
 $EQULST (CTX_C_,GBL,0,1  
 	,(GLOBAL,) 	 
 	,(LOCAL,) 	 
 	,(KEYTABL,) 	 
 	); 
 MACRO		CTX_B_SYMTYPE	= 5,0,8,0%; 	! SYMBOL TYPE 
 LITERAL	
 $EQULST (CTX_C_,GBL,0,1  
 	,(STRING,) 			! VALUE IS VARIABLE LENGTH STRING 
 	,(PERM,) 			! PERMANENT SYMBOL, STRING 
 	,(BINARY,) 			! VALUE IS BINARY LONGWORD VALUE 
 	,(LABEL,) 			! DUMMY - LABELS ARE NOT PASSED 
 	,(KEYPAD,) 			! VALUE IS A KEYPAD SYMBOL 
 	); 
 MACRO		CTX_B_NONUNIQUE	= 6,0,8,0%; 	! LENGTH OF NON-UNIQUE PORTION OF NAME 
 				! (I.E. # CHARS AFTER UNIQUENESS POINT) 
 MACRO		CTX_T_SYMBOL	= 7,0,8,0%; 	! ASCIC SYMBOL NAME 
 				! SYMBOL VALUE DIRECTLY FOLLOWS: 
 				!   FOR STRING: WORD-COUNTED STRING 
 				!   FOR BINARY: LONGWORD 
  
 	! FOR KEYPAD STATE RECORD 
  
 			 
 MACRO		CTX_B_KEYLENGTH	= 2,0,8,0%; 	! STATE LENGTH 
 MACRO		CTX_T_KEYSTATE	= 3,0,8,0%; 	! ASCII STATE NAME 
  
 	! FOR LOGICAL NAME TABLE RECORDS (LNMTABLE) 
  
 			 
 MACRO		CTX_B_TFLAGS	= 5,0,8,0%; 	! TABLE FLAGS 
 MACRO		CTX_W_PROT	= 6,0,16,0%; 		! PROTECTION MASK 
 MACRO		CTX_L_QUOTA	= 8,0,32,0%; 		! TABLE QUOTA 
 MACRO		CTX_T_LNMTABLE	= 12,0,8,0%; 	! ASCIC LOGICAL NAME FOR TABLE 
 				! ASCIC PARENT TABLE NAME FOLLOWS 
  
 	! FOR LOGICAL NAME RECORDS (LNMNAME & LNMNTRAN) 
  
 			 
 MACRO		CTX_B_NFLAGS	= 5,0,8,0%; 	! NAME FLAGS OF LOGICAL NAME 
 MACRO		CTX_B_TRANCNT	= 6,0,8,0%; 	! NUMBER OF TRANSLATIONS 
 MACRO		CTX_T_LNMNAME	= 7,0,8,0%; 	! ASCIC PARENT TABLE NAME 
 				! ASCIC LOGICAL NAME FOLLOWS 
 				! ASCIC EQUIVLAENCE NAME(S) FOLLOW 
 				! TERMINATED BY A FLAG BYTE 
  

  
  
 ! 
 ! TERMINATION MAILBOX LIST ITEM 
 ! 
  
 !...$TMBXDEF	
  
 LITERAL	TMBX_C_MAXREFS	= 4; 		! MAXIMUM NUMBER OF SUBPROCESSES USING A 
 				!   SINGLE TERMINATION MAILBOX 
 MACRO		TMBX_L_LINK	= 0,0,32,0%; 		! POINTER TO NEXT ITEM 
 MACRO		TMBX_W_UNIT	= 4,0,16,0%; 		! MAILBOX UNIT NUMBER 
 MACRO		TMBX_W_CHANNEL	= 6,0,16,0%; 	! MAILBOX CHANNEL NUMBER 
 MACRO		TMBX_B_REFS	= 8,0,8,0%; 		! NUMBER OF SUBPROCESSES CURRENTLY USING 
 				!   THIS MAILBOX 
 MACRO		TMBX_W_SIZE	= 10,0,16,0%; 		! SIZE OF BLOCK 
 MACRO		TMBX_L_PRC	= 12,0,32,0%; 		! ADDRESS OF PROCESS WORK AREA 
 LITERAL	TMBX_C_LENGTH	= 16; 
 LITERAL	TMBX_K_LENGTH	= 16; 			! SIZE OF STRUCTURE 

  
  
 ! 
 ! OUTPUT FILE INFORMATION 
 ! 
 !    OUTIFI, OUTISI, OUTRABCTX, OUTDVI, and OUTFLAGS must be the same in PRC, 
 !    IDF, OUT 
 ! 
 !...$OUTDEF	
 MACRO		OUT_W_OUTIFI	= 0,0,16,0%; 	! IFI FOR OUTPUT 
 MACRO		OUT_W_OUTISI	= 2,0,16,0%; 	! ISI FOR OUTPUT 
 MACRO		OUT_L_OUTRABCTX	= 4,0,32,0%; 	! CONTENTS OF OUTPUT RAB CTX LONGWORD 
 MACRO		OUT_T_OUTDVI	= 8,0,0,0%; 	! INDIRECT OUTPUT DEVICE (ASCIC) 
 LITERAL	OUT_S_OUTDVI	= 16; 
 MACRO		OUT_B_OUTFLAGS	= 24,0,8,0%; 	! FLAGS 
 					! 
 MACRO		OUT_V_OUTCCL	= 24,0,1,0%; 		! CONCEALED OUTPUT DEVICE 
 LITERAL	OUT_M_OUTCCL	= 1^1 - 1^0; 
 MACRO		OUT_V_INPCCL	= 24,1,1,0%; 		! CONCEALED INPUT DEVICE 
 LITERAL	OUT_M_INPCCL	= 1^2 - 1^1; 
 				! 
 LITERAL	OUT_C_LENGTH	= 28; 
 LITERAL	OUT_K_LENGTH	= 28; 			! SIZE OF STRUCTURE 
  
  
  
 ! 
 ! EDIT FLAGS 
 ! 
 !...$EDITDEF	
 MACRO		EDIT_B_FLAGS	= 0,0,8,0%; 		! FLAGS BYTE 
 			 
 MACRO		EDIT_V_UNCOMMENT	= 0,0,1,0%;  
 LITERAL	EDIT_M_UNCOMMENT	= 1^1 - 1^0; 
 MACRO		EDIT_V_COMPRESS	= 0,1,1,0%;  
 LITERAL	EDIT_M_COMPRESS	= 1^2 - 1^1; 
 MACRO		EDIT_V_COLLAPSE	= 0,2,1,0%;  
 LITERAL	EDIT_M_COLLAPSE	= 1^3 - 1^2; 
 MACRO		EDIT_V_TRIM	= 0,3,1,0%;  
 LITERAL	EDIT_M_TRIM	= 1^4 - 1^3; 
 MACRO		EDIT_V_UPCASE	= 0,4,1,0%;  
 LITERAL	EDIT_M_UPCASE	= 1^5 - 1^4; 
 MACRO		EDIT_V_LOWERCASE	= 0,5,1,0%;  
 LITERAL	EDIT_M_LOWERCASE	= 1^6 - 1^5; 
 MACRO		EDIT_V_EOL	= 0,6,1,0%;  
 LITERAL	EDIT_M_EOL	= 1^7 - 1^6; 
 			
  
