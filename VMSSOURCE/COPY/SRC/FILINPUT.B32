MODULE filinput (   ! Declarations of input file RMS blocks for file handling utilities
                    LANGUAGE (BLISS32),
                    IDENT = 'V04-000'
                    ) =
BEGIN

!
!****************************************************************************
!*									    *
!*  COPYRIGHT (c) 1978, 1980, 1982, 1984 BY				    *
!*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
!*  ALL RIGHTS RESERVED.						    *
!* 									    *
!*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
!*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
!*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
!*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
!*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
!*  TRANSFERRED.							    *
!* 									    *
!*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
!*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
!*  CORPORATION.							    *
!* 									    *
!*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
!*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
!* 									    *
!*									    *
!****************************************************************************

!++
! FACILITY:	File Handling Utilities
!
! ABSTRACT:
!
!	This module contains declarations of the RMS data storage areas needed
!	for handling input file specifications.
!
! ENVIRONMENT:
!
!	VAX/VMS operating system, unprivileged user mode utility,
!	operates at non-AST level.
!
!--
!++
!
! AUTHOR:	Carol Peters,	CREATION DATE:	25 April 1978 07:56
!
! REVISION HISTORY:
!
!	V03-001	TSK0001		Tamar Krichevsky	29-Feb-1984
!		Remive the declaration and all reference to DUMMY_NAM_BLK.
!		This is part of the conversion to LIB$FIND_FILE for input
!		file processing.
!--

!
! Include files
!

LIBRARY 'SYS$LIBRARY:STARLET.L32';			! System definitions

!
! Global variables
!

GLOBAL
    infile_fab		: $FAB_DECL,			! Space for the input file FAB, which
							!    is filled in at execution time

    infile_rab		: $RAB_DECL,			! Space for the input file RAB, which
							!    is filled in at execution time

    infile_name		: VECTOR [nam$c_maxrss, BYTE],	! Input file name after open

    infile_xname	: VECTOR [nam$c_maxrss, BYTE],	! Input file name before open

    infile_nam_blk	: $NAM (			! Input file name block:
                                RSA = infile_name,	!    Address and length of the input
                                RSS = nam$c_maxrss,	!       file name after open
                                ESA = infile_xname,	!    Address and length of the input
                                ESS = nam$c_maxrss),	!       file name before open

							! Input file XAB chain:
    infile_xabpro	: $XABPRO (),			!    Protection XAB

    infile_xabfhc	: $XABFHC (			!    File header characteristics XAB
                                    NXT = infile_xabpro),

    infile_xabdat	: $XABDAT (			!    Date/time XAB
                                    NXT = infile_xabfhc),

    infile_xaball	: $XABALL (			!    Allocation XAB
                                    NXT = infile_xabdat),

    in_name_desc	:  VECTOR [2]			! Input file name descriptor
                           INITIAL (0, infile_name),

    infile_cli_desc	: $bblock[ DSC$C_S_BLN ] 	! Descriptor for input name on command line
    			  INITIAL( WORD(0), BYTE(0,DSC$K_CLASS_D), LONG(0));

END
ELUDOM
