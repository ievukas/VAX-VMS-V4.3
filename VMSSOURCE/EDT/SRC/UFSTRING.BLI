%TITLE 'EDT$UFSTRING - line-mode string search'
MODULE EDT$UFSTRING (				! Line-mode string search
		IDENT = 'V04-000'			! File: UFSTRING.BLI Edit: JBS1005
		) =
BEGIN
!
!****************************************************************************
!*									    *
!*  COPYRIGHT (c) 1978, 1980, 1982, 1984 BY				    *
!*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
!*  ALL RIGHTS RESERVED.						    *
!* 									    *
!*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
!*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
!*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
!*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
!*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
!*  TRANSFERRED.							    *
!* 									    *
!*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
!*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
!*  CORPORATION.							    *
!* 									    *
!*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
!*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
!* 									    *
!*									    *
!****************************************************************************
!

!++
! FACILITY:	EDT -- The DEC Standard Editor
!
! ABSTRACT:
!
!	Line-mode string search.
!
! ENVIRONMENT:	Runs at any access mode - AST reentrant
!
! AUTHOR: Bob Kushlis, CREATION DATE: February 7, 1978
!
! MODIFIED BY:
!
! 1-001	- Original.  DJS 19-FEB-1981.  This module was created by
!	extracting routine U_F_STRING from module UTIL.
! 1-002	- Regularize headers and remove control C checking.  JBS 11-Mar-1981
! 1-003	- Worry about string truncation.  JBS 05-May-1982
! 1-004 - Put in check for control C. STS 15-Jun-1982
! 1-005	- Remove EDT$$A_STR_CMP.  JBS 16-Jul-1982
!--


%SBTTL 'Declarations'
!
! TABLE OF CONTENTS:
!

REQUIRE 'EDTSRC:TRAROUNAM';

FORWARD ROUTINE
    EDT$$FND_STR;

!
! INCLUDE FILES:
!

REQUIRE 'EDTSRC:EDTREQ';

!
! MACROS:
!
!	NONE
!
! EQUATED SYMBOLS:
!
!	NONE
!
! OWN STORAGE:
!
!	NONE
!
! EXTERNAL REFERENCES:
!
!	In the routine

%SBTTL 'EDT$$FND_STR  - line-mode string search'

GLOBAL ROUTINE EDT$$FND_STR (			! Line-mode string search
    STRING, 					! Pointer to model string
    LEN, 					! Length of model string
    DIR						! Direction of search
    ) =

!++
! FUNCTIONAL DESCRIPTION:
!
!	Line mode string search routine.  Set-up the string which is passed in
!	as the current search string, then work our way through the buffer in
!	the specified direction looking for the string.  If the string is found
!	the buffer position is left at the string, otherwise it will be at the
!	beginning or end depeneding on the direction.
!
! FORMAL PARAMETERS:
!
!  STRING		Pointer to the search string.
!
!  LEN			Length of the search string.
!
!  DIR			Direction of search: 0 = backward, 1 = forward.
!
! IMPLICIT INPUTS:
!
!	EDT$$A_CUR_BUF
!	EDT$$T_SEA_STR
!	EDT$$G_SEA_STRLEN
!	EDT$$A_WK_LN
!	EDT$$G_EXCT_MATCH
!
! IMPLICIT OUTPUTS:
!
!	EDT$$G_CC_DONE
!	EDT$$A_CUR_BUF
!
! ROUTINE VALUE
!
!	0 = string not found
!	1 = string found
!	2 = string invalid
!
! SIDE EFFECTS:
!
!	NONE
!
!--

    BEGIN

    EXTERNAL ROUTINE
	EDT$$CHK_CC,
	EDT$$SET_SEASTR,
	EDT$$RD_NXTLN,
	EDT$$RD_PRVLN,
	EDT$$STR_CMP;				! Match two strings of equal length

    EXTERNAL
	EDT$$A_CUR_BUF : REF TBCB_BLOCK,	! Pointer to current buffer TBCB
	EDT$$G_CC_DONE,				! control C seen flag
	EDT$$T_SEA_STR : BLOCK [CH$ALLOCATION (64)],	! Last search string.
	EDT$$G_SEA_STRLEN,			! Length of above.
	EDT$$A_WK_LN : REF LIN_BLOCK,		! Pointer to the current line
	EDT$$G_EXCT_MATCH;			! The type of string matching

    LOCAL
	CONTROL_C : INITIAL (0),
	SC,
	SOURCE;

!+
! Set up the new search string.
!-

    IF EDT$$SET_SEASTR (.STRING, .LEN)
    THEN
	BEGIN

	WHILE NOT .CONTROL_C DO
	    BEGIN
	    CONTROL_C = EDT$$CHK_CC ();
!+
! If seaching backward, then go back a line.
!-

	    IF ( NOT .DIR)
	    THEN

		IF ( NOT EDT$$RD_PRVLN ()) THEN RETURN (0);

!+
! Get a pointer to the line.
!-
	    SOURCE = EDT$$A_WK_LN [LIN_TEXT];
!+
! Compare at each character in the line.
!-

	    INCR I FROM .EDT$$A_CUR_BUF [TBCB_CHAR_POS] TO 	!
		    (.EDT$$A_WK_LN [LIN_LENGTH] - .EDT$$G_SEA_STRLEN) DO

		IF EDT$$STR_CMP (CH$PTR (.SOURCE, .I), EDT$$T_SEA_STR, .EDT$$G_SEA_STRLEN, .EDT$$G_EXCT_MATCH)

		THEN
		    BEGIN
		    EDT$$A_CUR_BUF [TBCB_CHAR_POS] = .I + .EDT$$G_SEA_STRLEN;
		    RETURN (1);
		    END;

!+
! If the direction is forward, then move forward a line.
!-

	    IF .DIR
	    THEN

		IF ( NOT EDT$$RD_NXTLN ()) THEN RETURN (0);

	    END;

	EDT$$G_CC_DONE = 1;
	RETURN (0);
	END;

    RETURN (2);
    END;					! of routine EDT$$FND_STR

!<BLF/PAGE>

END						! of module EDT$UFSTRING

ELUDOM
