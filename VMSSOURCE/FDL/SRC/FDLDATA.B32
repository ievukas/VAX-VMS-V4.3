%TITLE	'FDL$PARSE'
%SBTTL	'Data Declarations'
MODULE	FDLDATA		( IDENT='V04-000',
			ADDRESSING_MODE ( EXTERNAL = GENERAL ),
			OPTLEVEL=3
			) =

BEGIN

!****************************************************************************
!*									    *
!*  COPYRIGHT (c) 1978, 1980, 1982, 1984 BY				    *
!*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
!*  ALL RIGHTS RESERVED.						    *
!* 									    *
!*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
!*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
!*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
!*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
!*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
!*  TRANSFERRED.							    *
!* 									    *
!*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
!*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
!*  CORPORATION.							    *
!* 									    *
!*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
!*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
!* 									    *
!*									    *
!****************************************************************************

!++
!
! Facility:	VAX-11 FDL Utilities
!
! Abstract:	FDL global data declarations
!
! Environment:
!
!		VAX/VMS Operating System
!
!--

!
! Author:	Keith B Thompson	Creation date:	June-1980
!
!
! Modified by:
!
!	V03-005	KFH0003		Ken Henderson		10 Sep 1983
!		Support for named UICs
!
!	V03-004	KFH0002		Ken Henderson		22 Nov 1982
!		Added references to SDL defined offsets
!		into the FDL$AB_BLOCK vector
!		Added FDL$GL_STNUMPTR
!
!	V03-003	KFH0001		Ken Henderson		6 Oct 1982
!		Removed numtype
!		Added FDL$AB_PRE_PARSE_BLOCK and
!		FDL$AB_FDL_STRING to support FDL STRINGS
!
!	V03-002	KBT0068		Keith B. Thompson	24-Mar-1982
!		Add item descriptor
!
!	V03-001	KBT0028		Keith Thompson		30-Mar-1982
!		Add upcase descriptor and date_time structure also
!		consoladate the globals into a block
!
!****



PSECT
	OWN	= _FDL$OWN	(PIC),
	GLOBAL	= _FDL$GLOBAL	(PIC),
	PLIT	= _FDL$PLIT	(SHARE,PIC),
	CODE	= _FDL$CODE	(SHARE,PIC);

LIBRARY	'SYS$LIBRARY:STARLET';
REQUIRE	'SRC$:FDLUTIL';
REQUIRE	'LIB$:FDLPARDEF';

GLOBAL

	!	General Variables
	!
	FDL$AB_AREA_BKZ		: REF VECTOR [ 256,BYTE ],
	FDL$GL_INVBLK_PTR	: LONG,
	FDL$GL_STNUMPTR		: LONG,
	FDL$GL_MAXLINE		: LONG,
	FDL$AB_BLOCK_BLK	: VECTOR [ 4,LONG ],
	FDL$AB_OUT_STRING	: REF DESC_BLK,
	FDL$AB_FDL_STRING	: DESC_BLK PRESET (
					[ DSC$B_CLASS ] = DSC$K_CLASS_D,
					[ DSC$B_DTYPE ] = DSC$K_DTYPE_T ),

	!	T-Parse Varables
	!
	FDL$AB_TPARSE_BLOCK	: BLOCK [ TPA$K_LENGTH0,BYTE ]
					INITIAL (TPA$K_COUNT0,TPA$M_ABBREV),

	FDL$AB_PRE_PARSE_BLOCK	: BLOCK [ TPA$K_LENGTH0,BYTE ]
					INITIAL (TPA$K_COUNT0,TPA$M_ABBREV),

	!
	! FDL$K_BLOCK_END equals the offset to the last longword in FDL$AL_BLOCK
	!
	FDL$AL_BLOCK		: VECTOR [ FDL$K_BLOCK_END+1,LONG ]
				  INITIAL (REP FDL$K_BLOCK_END+1 OF (0));

GLOBAL BIND
	FDL$AB_CTRL		= FDL$AL_BLOCK [ FDL$L_CTRL ],		! Parse control flags
	FDL$GL_PCALL		= FDL$AL_BLOCK [ FDL$L_PCALL ],		! EDF Parse routine address
	FDL$GL_PRIMARY		= FDL$AL_BLOCK [ FDL$L_PRIMARY ],	! Primary Code
	FDL$GL_PRINUM		= FDL$AL_BLOCK [ FDL$L_PRINUM ],	! Primary Number
	FDL$AB_PRICTRL		= FDL$AL_BLOCK [ FDL$L_PRICTRL ],	! Primary Control Flags
	FDL$GL_SECONDARY	= FDL$AL_BLOCK [ FDL$L_SECONDARY ],	! Secondary Code
	FDL$GL_SECNUM		= FDL$AL_BLOCK [ FDL$L_SECNUM ],	! Secondary Number
	FDL$AB_SECCTRL		= FDL$AL_BLOCK [ FDL$A_SECCTRL ],	! Secondary Control Flags
	FDL$AB_SECCTRLL		= FDL$AL_BLOCK [ FDL$A_SECCTRL ],	! Secondary Control Flags as QUADs
	FDL$GL_QUALIFIER	= FDL$AL_BLOCK [ FDL$L_QUALIFIER ],	! Secondary Qualifier
	FDL$GL_NUMBER		= FDL$AL_BLOCK [ FDL$L_NUMBER ],	! Numeric Value
	FDL$GL_SWITCH		= FDL$AL_BLOCK [ FDL$L_SWITCH ],	! Switch value
	FDL$GL_OWNER_UIC	= FDL$AL_BLOCK [ FDL$L_OWNER_UIC ],	! Owner UIC
	FDL$GL_SPARE1		= FDL$AL_BLOCK [ FDL$L_SPARE1 ],	! Spare1
	FDL$GL_PROTECTION	= FDL$AL_BLOCK [ FDL$L_PROTECTION ],	! File protection mask
	FDL$GL_FID1		= FDL$AL_BLOCK [ FDL$L_FID1 ],		! File ID for positiong (part 1)
	FDL$GL_FID2		= FDL$AL_BLOCK [ FDL$L_FID2 ],		! File ID (part 2)
	FDL$GL_FID3		= FDL$AL_BLOCK [ FDL$L_FID3 ],		! File ID (part 3)
	FDL$AL_DATE_TIME	= FDL$AL_BLOCK [ FDL$Q_DATE_TIME ],	! Date/time quadword
	FDL$AB_STRING		= FDL$AL_BLOCK [ FDL$Q_STRING ],	! String descriptor block
	FDL$AB_COMMENT		= FDL$AL_BLOCK [ FDL$Q_COMMENT ],	! Secondary comment
									! descriptor block
	FDL$AB_LINE		= FDL$AL_BLOCK [ FDL$Q_LINE ],		! Descriptor of the fdl line
	FDL$AB_UPCASED		= FDL$AL_BLOCK [ FDL$Q_UPCASED ],	! DITTO- after upcasing
	FDL$GL_STMNTNUM		= FDL$AL_BLOCK [ FDL$L_STMNTNUM ],	! Statement counter
	FDL$AB_ITEM		= FDL$AL_BLOCK [ FDL$Q_ITEM ],		! Item descriptor
	FDL$GL_GCALL		= FDL$AL_BLOCK [ FDL$L_GCALL ];		! EDF Generate routine address


	! 	Shared messages
	!
	$SHR_MSGDEF	( FDL,180,GLOBAL,
			( BADLOGIC,ERROR ),
			( CLOSEIN,ERROR ),
			( CLOSEOUT,ERROR ),
			( CREATED,INFO ),
			( CREATEDSTM,INFO ),
			( INSVIRMEM,ERROR ),
			( OPENIN,ERROR ),
			( OPENOUT,ERROR ),
			( READERR,ERROR ),
			( VALERR,ERROR ),
			( WRITEERR,ERROR ) );

END ELUDOM
