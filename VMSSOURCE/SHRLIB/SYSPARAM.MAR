;*****************************************************************************
;*                                                                           *
;*                              NOTICE !!!                                   *
;*                                                                           *
;*  $SYIDEF IN MASD$:<VMSLIB.SRC>STARDEFQZ.SDL MUST BE UPDATED WHEN ADDING   *
;*  PARAMETERS - BUT NOT WHEN DELETING PARAMETERS. $SYIDEF CONTAINS THE      *
;*  PUBLIC DEFINITIONS OF THE $GETSYI ITEM-CODES, AND EACH SYSGEN PARAMETER  *
;*  IS AUTOMATICALLY TRANSFORMED INTO A $GETSYI ITEM.                        *
;*  SYITABLE.MAR DEFINES $GETSYI ITEMS WHICH ARE -NOT- SYSGEN PARAMETERS,    *
;*  AND SHOULD NOT BE MODIFIED WHEN ADDING OR SUBTRACTING SYSGEN PARAMETERS. *
;*                                                                           *
;*****************************************************************************

	.IF	DEFINED GETSYISW
	.TITLE	GETSYI - DEFINE SYSTEM PARAMETERS FOR GETSYI
	.IF_FALSE
 	.IF	NDF,PRMSW		;
	.TITLE	SYSPARAM - SYSTEM PARAMETERS
	.IFF				;
	.TITLE	PARAMETER - PARAMETER DESCRIPTORS FOR SYSPARAM
	.ENDC
	.ENDC
	.IDENT	'V04-000'

;
;****************************************************************************
;*									    *
;*  COPYRIGHT (c) 1978, 1980, 1982, 1984 BY				    *
;*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
;*  ALL RIGHTS RESERVED.						    *
;* 									    *
;*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
;*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
;*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
;*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
;*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
;*  TRANSFERRED.							    *
;* 									    *
;*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
;*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
;*  CORPORATION.							    *
;* 									    *
;*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
;*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
;* 									    *
;*									    *
;****************************************************************************
;

;++
; FACILITY:  EXECUTIVE DATA BASE
;
; ABSTRACT:
;	SYSPARAM CONTAINS THE EXECUTIVE CONTROL PARAMETERS AND CERTAIN
;	KEY VARIABLES.
;
; ENVIRONMENT:  
;
; AUTHOR:  R. I. HUSTVEDT, CREATION DATE:  09-OCT-1977
;
; MODIFIED BY:
;
;	V03-080	DWT0238		David W. Thiel		24-Aug-1984
;		Change default value of QDSKINTERVAL to 20 seconds.
;
;	V03-079	MIR0470		Michael I. Rosenblum	13-Aug-1984
;		make tty_defport a specail sysgen parameter
;
;	V03-078	CDS0004		Christian D. Saether	06-Aug-1984
;		Fix bug initializing exe$gl_static_flags
;		introduced by cds0003.
;
;	V03-077	WMC0075		Wayne Cardoza		06-Aug-1984
;		Make SRP default 96.
;
;	V03-076	WMC0074		Wayne Cardoza		30-Jul-1984
;		Raise minimum working set parameters.
;
;	V03-075	DWT0231		David W. Thiel		25-Jul-1984
;		Raise RECNXINTERVAL to 60 seconds.
;
;	V03-074	DWT0230		David W. Thiel		25-Jul-1984
;		Raise RECNXINTERVAL to 20.  Make QDSKINTERVAL non-dynamic.
;
;	V03-073	WMC0073		Wayne Cardoza		23-Jul-1984
;		Raise max VIRTUALPAGECNT.
;
;	V03-072	BLS0334		Benn Schreiber		23-JUL-1984
;		Raise default ENQLM,ASTLM,DIOLM and BIOLM parameters.
;
;	V03-071	WHM0004		Bill Matthews		23-Jul-1984
;		Added a work station flag longword and defined the parameter
;		WS_OPA0. Made LGI_BRK_TERM default to true. Raised paging file
;		quota minimum from 256 to 512.
;
;	V03-070	CDS0003		Christian D. Saether	20-Jul-1984
;		Add one more buffer pool, ACP_DINDXCACHE, to file system caches.
;		Add ACP_REBLDSYSD flag.
;
;	V03-069	ACG0436		Andrew C. Goldstein,	12-Jul-1984  11:50
;		Add LGI_BRK_TERM and LGI_BRK_DISUSER parameters
;
;	V03-069	CDS0002		Christian D. Saether	11-July-1984
;		Raise minimum ACP_HDRCACHE to 3.
;		Change default for ACP_MULTIPLE to 0.
;
;	V03-068	JEJ0047		J E Johnson		06-Jul-1984
;		Change RMS_GBLBUFQUO to be a dynamic parameter.
;
;	V03-067	WMC0067		Wayne Cardoza		06-Jun-1984
;		Fix PQL minimum working set parameters.
;		Raise PHYSICALPAGES limits.
;
;	V03-066	HWS0069		Harold Schultz		24-May-1984
;		Change default size of CLISYMTBL from 40 to 60 pages.
;
;	V03-065	WHM0003		Bill Matthews		20-Apr-1984
;		Removed USESYSPARAMS. Use of the separate parameter file
;		is now required.
;
;	V03-064	MIR0400		Michael I. Rosenblum	10-Apr-1984
;		Add TTY_DEFPORT default port function longword.
;
;	V03-063	RAS0281		Ron Schaefer		09-Apr-1984
;		Add RMS_DFNBC default network block count parameter.
;
;	V03-062	WHM0002		Bill Matthews		04-Apr-1984
;		Added USESYSPARAMS and WRITESYSPARAMS to support the
;		default seperate system parameter file.
;		Changed the default for NPAGEDYN from 64000 to 131072(256 pages)
;		Added support for ascii sysgen parameters longer than 4 bytes.
;		Replaced SCSNODEL and SCSNODEH with SCSNODE.
;		Replaced DISK_QUORUM1-4 with DISK_QUORUM.
;		Changed SAVEDUMP from type SPECIAL to type SYS.
;		Changed the units field for ACP_DATACHECK and ACP_SWPFLAGS
;		from boolean to Bit-mask.
;
;	V03-061	WMC0060		Wayne Cardoza		28-Mar-1984
;		Add MMG$GL_MAXMEM.
;
;	V03-060	JEJ0013		J E Johnson		25-Mar-1984
;		Add RMS_GBLBUFQUO sysgen parameter.
;
;	V03-059	WMC0059		Wayne Cardoza		24-Mar-1984
;		Add ACP_XQP_RES flag
;
;	V03-058	LMPBUILD	L. Mark Pilant,		19-Mar-1984  12:20
;		Make sure that the cells moved in LMP0205 are added with
;		the proper conditionals around them.
;
;	V03-057	LMP0205		L. Mark Pilant,		7-Mar-1984  11:23
;		Move EXE$GL_DYNAMIC_FLAGS and EXE$GL_STATIC_FLAGS from
;		SYSCOMMON.
;
;	V03-056	CDS0001		Christian D. Saether	28-Feb-1984
;		Raise default and min size of pagedyn to account for
;		xqp block caches.  Also SYSMWCNT.
;
;	V03-055	MMD0246		Meg Dumont,	27-Feb-1984  10:45
;		Add support for $MTACCESS installation specific accessibility 
;		routine
;
;	V03-054	SSA0009		Stan Amway		13-Feb-1984
;		Changed default for PFRATL to 0.
;
;	V03-053	TMK0003		Todd M. Katz		02-Feb-1984
;		Change the name of the SCS parameter PAPORTPOLL to PANOPOLL.
;		Also change its address (from SCS$GB_PAPPOOL to SCS$GB_PANOPOLL)
;		and its default value (from 1 to 0).
;
;	V03-052	WHM0001		Bill Matthews		01-Feb-1984
;		Added new type for LGI_ parameters.
;
;	V03-051	TMK0002		Todd M. Katz		30-Jan-1984
;		Add the special parameters PE1,PE2,PE3,PE4,PE5,PE6 for use
;		by the PEDRIVER. 
;
;		Add the SCS parameter PAPORTPOLL. If this boolean parameter is 
;		set the local CI port(s) will poll remote ports. If it isn't it
;		won't.
;
;		Change the following SYSGEN parameters' DEFAULT, MAX, MIN etc..
;
;		1. Change the DEFAULT of MAXBUF from 1568 to 1584.
;		2. Change the DEFAULT of SCSSYSTEMID from 1 to 0.
;		3. Change the MIN of PAMAXPORT from -1 to 0. 
;		4. Change the MAX of PAMAXPORT from -1 to 223.
;		5, Change the ADDRESS of PAMAXPORT from SCS$GW_PAMXPORT to 
;		   SCS$GB_PAMXPORT.
;		6. Change the size of PAMAXPORT from WORD to BYTE.
;
;	V03-050	WMC0048		Wayne Cardoza		16-Jan-1984
;		CJF related parameters must be made SPECIAL and defaulted
;		off.
;
;	V03-049	JLV0328		Jake VanNoy		11-JAN-1984
;		Add TTY_TIMEOUT and TTY_AUTOCHAR.
;
;	V03-048	KTA3097		Kerbey T. Altmann	10-Jan-1984
;		Set date to 1984.
;
;	V03-047	WMC0047		Wayne Cardoza		19-Dec-1983
;		WSMAX max is 64000 not 65280.
;		Make MMG$GW_BIGPFN a new cell.
;
;	V03-046	LMP0177		L. Mark Pilant,		7-Dec-1983  11:32
;		Add a dymanic parameter to control whether or not
;		non-discretionary classification checks are to be performed.
;
;	V03-045	SSA0003		Stan Amway		 5-Dec-1983
;		Added DORMANTWAIT to support outswap scheduling changes.
;		Changed units and default for LONGWAIT.
;
;	V03-044	DWT0150		David W. Thiel		18-Nov-1983
;		Add LOCKDIRWT and QDSKVOTES parameters.  Deleted old
;		VAXCLUSTER bit and define new VAXLCUSTER as a byte.
;		Reorder cluster parameters.  Make ALLOCLASS non-dynamic.
;		Change PAPOLLINTERVAL default from 15 to 5 seconds.
;		Chanage SCSMAXMSG default from 96 to 112.
;		Change SRPSIZE default from 96 to 128 to close hole
;		between SRP and IRP allocation pending a more complete
;		examination of pool allocation.
;
;	V03-043	TMK0001		Todd M. Katz		12-Oct-1983  
;		Add PQL_DJTQUOTA and PQL_MJTQUOTA - the default and minimum
;		byte creation quotas for job-wide logical name tables.
;
;	V03-042	ACG0360		Andrew C. Goldstein,	21-Sep-1983  16:25
;		Change defaults for LGI_xxx breakin parameters
;
;	V03-041	ACG0350		Andrew C. Goldstein,	19-Aug-1983  17:56
;		Raise MAXBUF minimum to 1200 to allow BACKUP to work
;
;	V03-040	GAS0162		Gerry Smith		30-Jul-1983
;		Add LGI_PWD_TMO, the system password drop dead time.
;
;	V03-039	NPK3030		N. Kronenberg		29-Jul-1983
;		Change PAMAXPORT maximum from 223 to -1.
;
;	V03-038	RAS0179		Ron Schaefer		29-Jul-1983
;		Delete LOGPHASHTBL,LOGGHASHTBL,LOGSHASHTBL.
;		Change default of IMGIOCNT from 32 to 64.
;		Change default of RMS_EXTEND from 80 to 0.
;
;	V03-037	KFH0004		Ken Henderson		28 Jul 1983
;		Add MAXQUEPRI, DEFQUEPRI, QDSKINTERVAL
;		Remove JOBQUEUES, REINITQUE, MAXPRINTSYMB
;		Change VMS_CLUSTER to VAXCLUSTER
;		Modify default of RECNXINTERVAL from 3 to 10
;
;	V03-036	NPK3029		N. Kronenberg		26-Jul-1983
;		Tune up the SCS and PA parameters.  Remove PASTRETRY.
;		Add PAMXPORT, PASANITY.
;
;	V03-035 MSH0002		Maryann Hinden		08-Jul-1983
;		Add cluster quorum disk parameters.
;
;	V03-034	GAS0142		Gerry Smith		20-Jun-1983
;		Add the login security parameters.
;
;	V03-033	PCA1015		Paul C. Anagnostopoulos 13-Jun-1983
;		Fix the valid ranges for the STARTUP_Pn parameters.
;
;	V03-032	TCM0002		Trudy C. Matthews	1-Jun-1983
;		Add ALLOCLASS parameter, a cluster parameter that defines
;		the device allocation class for this system.
;
;	V03-031	SRB0086		Steve Beckhardt		24-May-1983
;		Made LOCKIDTBL_MAX dynamic.
;
;	V03-030	JSV0295		Joost Verhofstad	20-MAY-1983
;		Add SYSGEN parameters CJFLOAD and CJFSYSRUJ
;
;	V03-029	KFH0003		Ken Henderson		20 May 1983
;		Increased default values:
;		SPTREQ		720 -> 896
;		GBLPAGES	3072 -> 4096
;		GBLSECTIONS	80 -> 128
;
;	V03-028	KDM0044		Kathleen D. Morse	03-May-1983
;		Add EXE$GL_ARCHFLAG.
;
;	V03-027	PCA1015		Paul C. Anagnostopoulos 28-Apr-1983
;		Add TAILORED parameter to specify whether or not this system
;		is tailored (has a library disk).
;		Add STARTUP_Pn parameters for passing information to the
;		system startup procedure.
;
;	V03-026	SRB0081		Steve Beckhardt		28-Apr-1983
;		Added new parameter LOCKIDTBL_MAX.
;
;	V03-025	RNG0025		Rod Gamache		21-Apr-1983
;		Change default value of MAXBUF to be more flexible
;		for the DEUNA device driver.
;
;	V03-024	KFH0002		Ken Henderson		14 Apr 1983
;		Modify call to SYI_ITEM_CODE to
;		support Ascii sysnodename.
;
;	V03-023	MIR0030		Michael I. Rosenblunm	14-Apr-1983
;		Make line editing the default
;
;	V03-022	TCM0001		Trudy C. Matthews	8-Apr-1983
;		Allow WSMAX to grow to 65280.
;
;	V03-021 MSH0001		Maryann Hinden		25-Mar-1983
;		Add ASCII type.  Correct default for SCSNODEH.
;
;	V03-020	DWT0080		David W. Thiel		1-Mar-1983
;		Define cluster class of parameters containing
;		QUORUM, VOTES, and CNXRETRYINT.
;
;	V03-019	JWH0191		Jeffrey W. Horn		28-Feb-1983
;		Change default value for PIOPAGES.
;
;	V03-018	KFH0001		Ken Henderson		15 Feb 1983
;		Added conditionals for GETSYISW, to let
;		this file be used to define the sysboot
;		parameters for SYS$GETSYI/F$GETSYI/LIB$GETSYI
;		****************************************************
;		ONE SIDE EFFECT OF THIS MOD IS TO REQUIRE THAT ALL
;		ALLOCATION OF MEMORY CELLS BE CONDITIONALIZED TO NOT
;		HAPPEN IF GETSYISW IS DEFINED.
;		****************************************************
;
;	V03-017	RNG0017		Rod N. Gamache		11-Feb-1983
;		Change default value for PHYSICALPAGES.
;
;	V03-016	DWT0071		David W. Thiel		28-Jan-1983
;		Add VMS_CLUSTER parameter and corresponding
;		LOADCLUSTR bit in SGN$GL_LOADFLAGS.
;		Add PRCPOLINTERVAL parameter with global name
;		SCS$GW_PRCPOLINT.
;
;	V03-015	STJ3053		Steven T. Jeffreys	21-Jan-1983
;		Added LOADERAPAT and LOADCHKPRT parameters, and defined
;		SGN$GL_LOADFLAGS, a system global longword to control
;		the loading of various pieces of the EXEC.
;
;	V03-014	KTA3029		Kerbey T. Altmann	11-Jan-1983
;		Set date to 1983.
;
;	V03-013	SRB0057		Steve Beckhardt		16-Dec-1982
;		Increased maximum size of LOCKIDTBL to 65535.
;
;	V03-012	DMW4016		DMWalp			15-Dec-1982
;		Added parameters for size of new logical name hash tables 
;
;	V03-011	JWH0117		Jeffrey W. Horn		29-Oct-1982
;		Add PIOPAGES CTLPAGES, and CTLIMGLIM.
;		Change maximum of PHYSICALPAGES to 65536.
;		Change default of SCSSYSTEMIDH to 0.
;
;	V03-010	KTA3016		Kerbey T. Altmann	21-Oct-1982
;		Add SCSNODENAME.
;
;	V03-009	HRJ0064		Herb Jacobs		21-Apr-1982
;		Fix default values of RMS_DFMBC, RMS_EXTEND, MPW_LOLIMIT.
;
;	V03-008	JLV0208		Jake Vannoy		15-Apr-1982
;		Fix default values for TTY_SILOTIME, WSINC, WSDEC.
;
;	V03-007	JLV0207		Jake VanNoy		 5-APR-1982
;		Add some smarts to PARAMETER macro to ignore dynamic
;		bits if they are not in EXE$GL_DEFFLAGS. This prevents
;		the dynamic bits in STJ0249 from being included in
;		PRM$M_DYNFLAGS.
;
;	V03-006	STJ0249		Steven T. Jeffreys	01-Apr-1982
;		Add global longword for system message flags.  Define
;		EXE$V_MOUNTMSG and EXE$V_DISMOUMSG to control operator
;		notification of mounts and dismounts, respectively.
;		By default, both are disabled.
;
;	V03-005	MLJ0085		Martin L. Jack		01-Apr-1982
;		Add EXE$V_JOBQUEUES, EXE$V_REINITQUE to control initialization
;		of JBCSYSQUE by job controller.
;
;	V03-004	PHL0041		Peter H. Lipman		01-Apr-1982
;		Default setting for SAVEDUMP must be off.
;
;	V03-003	HRJ0061		Herb Jacobs		28-Mar-1982
;		Fix categories for /MAJOR, /SYS, /SYSGEN, correct
;		some default values, and change global name of SWPFILCNT.
;
;	V03-002	PHL0040		Peter H. Lipman		22-Mar-1982
;		Add EXE$V_PAGFILDMP, EXE$V_SAVEDUMP, EXE$GW_PGFL_FID
;		to support the dump file in the page file.
;
;	V03-001	JLV0193		Jake VanNoy		15-MAR-1982
;		Add TTY_SILOTIME. Change defaults for TTY_OWNER and TTY_PROT
;		and PQL_ENQLM. Change names of TTYSCANDELTA to TTY_SCANDELTA
;		and DIALTYPE to TTY_DIALTYPE. 
;
;--
	.PAGE
	.SBTTL	DECLARATIONS
;
; INCLUDE FILES:
;
	$SYIDEF				; DEFINE SYS$GETSYI ITEM CODES
	$PQLDEF				; DEFINE QUOTA LIST CODES
	$PRMDEF				; DEFINE PARAMETER DESCRIPTOR
	$SGNDEF				; SYSGEN CONSTANTS
	$TTDEF				; DEFINE TERMINAL CHARACTERISTICS
	$TT2DEF				; DEFINE MORE TERMINAL DEFINTIONS

;
; MACRO TO GENERATE PARAMETER DESCRIPTOR IF PRMSW IS TRUE OTHERWISE
; SIMPLY DEFINE PARAMETERS
;
;
; MACROS:
;

	.MACRO	PFNALC	SIZ,SYMLST
	.IRP	SYM,<SYMLST>
	DEFINE	PFN$A'SIZ'_'SYM
	.ENDR
	.ALIGN	LONG
	.LONG	0	
	.ENDM	PFNALC

	.MACRO	PARAMETER,ADDRESS,NAME,TYPE=STATIC,DEFAULT=0,MIN=-1,MAX=-1,-
		UNIT,SIZE=LONG,BIT	;

;
; When GETSYISW is defined, the macro PARAMETER becomes a conduit to
; a lower level macro SYI_ITEM_CODE. In the fashion of JPI_ITEM_CODE and
; DVI_ITEM_CODE, SYI_ITEM_CODE is called multiple times (once per item)
; by the larger macro SYI_GENERATE_TABLE. This file becomes the definition
; of SYI_GENERATE_TABLE when GETSYISW is defined.
;
	OUTLEN = 4
	.IIF	IDENTICAL <SIZE><BYTE>,	OUTLEN = 1
	.IIF	IDENTICAL <SIZE><WORD>,	OUTLEN = 2
	.IIF	IDENTICAL <SIZE><LONG>,	OUTLEN = 4
	.IIF	IDENTICAL <SIZE><QUAD>,	OUTLEN = 8
	.IIF	IDENTICAL <SIZE><OCTA>,	OUTLEN = 16

	.IF	DEFINED GETSYISW

	.IF	BLANK BIT

	.IF	NOT_DEFINED SYI$_'NAME
	.WARN ; SYI$_'NAME SHOULD BE DEFINED IN STARDEFQZ.SDL (EXE-SECT)
	.ENDC

	.IF	IDENTICAL <UNIT><Ascii>

	SYI_ITEM_CODE	EXE,-		; TABLE BASE - EXEC CELLS
			<NAME>,-	; ITEM NAME
			<ADDRESS>,-	; SOURCE
			PADSTR,-	; DTYPE = PADDED STRING
			0,-		; BITPOS
			PRM$C_'SIZE',-	; BITSIZ
			OUTLEN		; OUTLEN

	.IF_FALSE

	SYI_ITEM_CODE	EXE,-		; TABLE BASE - EXEC CELLS
			<NAME>,-	; ITEM NAME
			<ADDRESS>,-	; SOURCE
			DECNUM,-	; DTYPE = DECIMAL NUMBER
			0,-		; BITPOS
			PRM$C_'SIZE',-	; BITSIZ
			OUTLEN		; OUTLEN

	.ENDC		; IDENTICAL <UNIT><Ascii>

	.IF_FALSE	; BLANK BIT

	.IF	NOT_DEFINED SYI$_'NAME
	.WARN ; SYI$_'NAME SHOULD BE DEFINED IN STARDEFQZ.SDL (FLD-SECT)
	.ENDC

	SYI_ITEM_CODE	FLD,-		; TABLE BASE - FIELD DATA
			<NAME>,-
			<ADDRESS>,-
			BITVAL,-
			<BIT>,-
			1,-
			1

	.ENDC		; BLANK BIT

	.IF_FALSE	; DEFINED GETSYISW

	.IF	DF,PRMSW		; DO IF CREATING PARAMETER DESCRIPTOR
PRMSAV...=.				; SAVE LOC COUNTER
	.PSECT	$$$918,LONG		;
	BAS...=.			; SET BASE FOR THIS DESCRIPTOR
	.BLKB	PRM$C_LENGTH		; GENERATE SPACE
	SAV...=.			;
	PRM	L_ADDR			;
	.LONG	ADDRESS			;
	PRM	L_DEFAULT		;
	.LONG	DEFAULT			;
	PRM	L_MIN			;
	.LONG	MIN			;
	PRM	L_MAX			;
	.LONG	MAX			;
	.IF	GREATER		<%LENGTH(NAME)-PRM$C_MAXNAMLEN>
	.ERROR	; The parameter called NAME has too many characters
	.ENDC
	PRM	T_NAME			;
	.ASCIC	%'NAME'%		;
	.IF	GREATER		<%LENGTH(UNIT)-PRM$C_MAXUNILEN>
	.ERROR	; The quantity called UNIT has too many characters
	.ENDC
	PRM	T_UNIT			;
	.ASCIC	%'UNIT'%		;
	PRM	B_SIZE			; SET FIELD SIZE
	.IF	B,BIT			;
	.BYTE	PRM$C_'SIZE		;
	.IFF				;
	.BYTE	1			;
	PRM	B_POS			;
	.BYTE	BIT			;
	.ENDC				;
	PRM	L_FLAGS			;
	TYP...=0			;
	.IRP	TYPNAM,<TYPE>		;
	TYP...=TYP...!PRM$M_'TYPNAM	;

	.IF NB BIT			; DEFINE PRM$M_DYNFLAGS
	.IF EQ PRM$M_'TYPNAM-PRM$M_DYNAMIC
	.IF IDN ADDRESS,EXE$GL_DEFFLAGS
	PRM$M_DYNFLAGS == PRM$M_DYNFLAGS!<1@BIT>
	.ENDC
	.ENDC
	.ENDC

	.ENDR				;
	.LONG	TYP...			;
	.=SAV...			; REPOSITION LOCATION COUNTER
	.PSECT	$$$917A,PAGE		; BACK TO NORMAL PSECT
	.=PRMSAV...			; RESTORE LOCATION COUNTER
	.IFF				;
	.IF	B,BIT			;
	.IF	GT,OUTLEN-4		; IF LENGTH >4 FORCE LONGWORD ALIGNMENT
	.ALIGN	LONG			;
	.IFF
	.ALIGN	'SIZE'			;
	.ENDC
ADDRESS'::				; DEFINE GLOBAL VALUE
	.ENDC				;
	.ENDC				;
	.IF	B,BIT			;
	.IF	GT,OUTLEN-4		; IF LENGTH >4 FORCE LONGWORD ALIGNMENT
	.ALIGN	LONG			;
	.LONG	DEFAULT			; GENERATE DEFAULT QUAD VALUE
	.LONG	DEFAULT			;
	.IF	GT,OUTLEN-8		;
	.LONG	DEFAULT			; GENERATE DEFAULT OCTA VALUE
	.LONG	DEFAULT			;
	.ENDC				;
	.IFF				;
	.ALIGN	'SIZE'			;
	.'SIZE'	DEFAULT			; GENERATE DEFAULT VALUE
	.ENDC
	.ENDC				;

	.ENDC		; DEFINED GETSYISW

	.ENDM	PARAMETER		;

	.MACRO	PRM,OFFSET		;
	.IF	NOT_DEFINED GETSYISW
	.=BAS...+PRM$'OFFSET		;
	.ENDC
	.ENDM	PRM			;

;
; MACRO TO CONDITIONALLY DEFINE LABELS
;
	.MACRO	DEFINE,LABEL		;
	.IF	NOT_DEFINED GETSYISW
	.IF	NDF,PRMSW		;
LABEL'::				;
	.IFF				;
LABEL':					;
	.ENDC				;
	.ENDC	; NOT_DEFINED GETSYISW
	.ENDM	DEFINE			;
;
;	MACRO TO GENERATE PROCESS QUOTA LIST TABLES
;
;	PQL	QUOTA_NAME,DEFAULT,MIN,FLAG,UNIT,DYNAMIC_STATE
;
	.MACRO	PQL Q,DEFLT=0,MINIM=0,FLAG=0,UNT,DYNAMIC_FLAG=DYNAMIC
	.IF	NOT_DEFINED GETSYISW
	.IF	NDF,PRMSW		;
	.PSECT	$$$917,PAGE
	.IFF				;
	.PSECT	$$$917A,PAGE		;
	.ENDC				;
	PQLSAV...=.			; SAVE LOCATION COUNTER
	.=PQL$AL_DEFAULT+<4*PQL$_'Q>	; POINT INTO DEFAULT TABLE
	.ENDC	; NOT_DEFINED GETSYISW
	PARAMETER	ADDRESS=PQL$GD'Q,-	;
			DEFAULT=DEFLT,-		;
			NAME=PQL_D'Q,-	;
			SIZE=LONG,-		;
			TYPE=<PQL,SYSGEN,DYNAMIC_FLAG>,-	;
			UNIT=UNT		;
	.IF	NOT_DEFINED GETSYISW
	.IF	NDF,PRMSW		;
	.PSECT	$$$917,PAGE		;
	.IFF
	.PSECT	$$$917A,PAGE		;
	.ENDC				;
PQLSAV...=.				;
	.=PQL$AL_MIN+<4*PQL$_'Q>	; POINT INTO MINIMUM VALUE TABLE
	.ENDC	; NOT_DEFINED GETSYISW
	PARAMETER	ADDRESS=PQL$GM'Q,-	;
			DEFAULT=MINIM,-		;
			NAME=PQL_M'Q,-	;
			SIZE=LONG,-		;
			TYPE=<PQL,SYSGEN,DYNAMIC_FLAG>,-	;
			UNIT=UNT		;
	.IF	NOT_DEFINED GETSYISW
	.IF	NDF,PRMSW
	.PSECT	$$$917,PAGE		;
	.IFF
	.PSECT	$$$917A,PAGE
	.ENDC				;
PQLSAV...=.				;
	.=PQL$AB_FLAG+PQL$_'Q		; POINT INTO FLAG BYTE FOR QUOTA
	.BYTE	FLAG			; AND FILL IN FLAG
	.=PQLSAV...			; RESTORE LOCATION COUNTER
	.ENDC	; NOT_DEFINED GETSYISW
	.ENDM	PQL			;

;
; EQUATED SYMBOLS:
;
PQL_V_DEDUCT=0				; DEDUCTIBILE QUOTA FLAG

PQL_M_DEDUCT=1				; FLAG VALUE FOR DEDUCTIBLE QUOTA
DEDUCTIBLE=PQL_M_DEDUCT			; NAME FOR READIBILITY

.IF	DF,PRMSW			; DO IF PARAMETER
PRM$M_DYNFLAGS == 0
.ENDC

;
; DEFINE THE SYSTEM CONTROL FLAGS.  ANY FLAGS ADDED SHOULD BE PLACED
; IN THE FIELD DEFINITION THAT CORRESPONDS TO THE CELL IN SYSCOMMON FROM
; WHICH THE FLAGS ARE REFERENCED.  (THIS WAS ORIGINALLY EXE$GL_FLAGS, BUT
; OVER TIME WILL SPLIT INTO EXE$GL_DYNAMIC_FLAGS, EXE$GL_STATIC_FLAGS, AND
; EXE$GL_STATE_FLAGS.)
;
	$GBLINI	GLOBAL
	$VIELD	EXE,0,<-		; DEFINITION FOR EXE$GL_FLAGS
		SYSWRTABL,-		; LEAVE SYSTEM READ ONLY CODE WRITABLE
		NOAUTOCNF,-		; NO AUTOMATIC CONFIGURATION OF UBA
		SYSPAGING,-		; ENABLE SYSTEM PAGING
		POOLPGING,-		; ENABLE DYNAMIC POOL PAGING
		SIMULATOR,-		; RUNNING ON SIMULATOR
		NOCLOCK,-		; DO NOT TURN ON CLOCK
		CRDENABL,-		; ENABLE CRD ERROR DETECTION
		SBIERR,-		; ENABLE SBI ERROR INTERRUPT
		INIT,-			; RMS AND FILE SYSTEM INITIALIZED
		SETTIME,-		; FORCE SOLICITATION OF TIME
		FATAL_BUG,-		; FORCE ALL BUG CHECKS FATAL
		MULTACP,-		; USE MULTIPLE FILE ACP'S
		NOCLUSTER,-		; TURN OFF PAGE FAULT CLUSTERING
		BUGREBOOT,-		; AUTO REBOOT ON BUGCHECK
		SYSUAFALT,-		; ALTERNATE LOGICAL NAME FOR SYSUAF
		SHRF11ACP,-		; MAKE F11ACP SHARABLE AT BOOT TIME
		BUGDUMP,-		; TAKE SYSTEM DUMP ON BUGCHECK
		RESALLOC,-		; ENABLE RESOURCE ALLOCATION CHECKS
		CONCEALED,-		; ENABLE USE OF CONCEALED DEVICES
		SSINHIBIT,-		; INHIBIT SYSTEM SERVICES PER-PROCESS
		EXPLICITP,-		; IF SET TODAY IS CONSIDERED PRIMARY
		EXPLICITS,-		; IF SET TODAY IS CONSIDERED SECONDARY
		PGFLFRAG,-		; SET IF PAGE FILE FRAGMENTED MSG ISSUED
		PGFLCRIT,-		; SET IF PAGE FILE FULL MSG ISSUED
		TBCHK,-			; SET IF PROCESSOR REGISTER TBCHK PRESENT
		PAGFILDMP,-		; SET IF DUMP IS IN PAGE FILE
		SAVEDUMP,-		; SET TO SAVE DUMP UNTIL ANALYZED
		JOBQUEUES,-		; Set if JOBCTL to enable queues
		REINITQUE,-		; Set if JOBCTL to reinitialize JBCSYSQUE
		CJFLOAD,-		; Set if CJF is to be loaded at boot time
		CJFSYSRUJ,-		; Set if a recovery unit journal exists for system disk
	>
;	$VIELD	EXE,0,<-		; DEFINITION FOR EXE$GL_STATE_FLAGS
;	>

	.IF	NOT_DEFINED GETSYISW

;
; OWN STORAGE:
;
	.IF	NDF,PRMSW		;
	.PSECT	$$$917,PAGE		; PAGE ALIGNED
	.IFF				;
	.PSECT	$$$917A,PAGE
	.ENDC				;
	DEFINE	EXE$A_SYSPARAM		; SYSTEM PARAMETER BASE
	.IF	DF,PRMSW		;
BOO$A_SYSPARAM::			; BASE OF DEFAULTS
	.PSECT	$$$918,LONG		; PARAMETER DESCRIPTOR LIST
BOO$A_PRMBLK::				;
	.ENDC				;
	.IF	NDF,PRMSW		;
	.PSECT	$$$917,PAGE		;
	.IFF
	.PSECT	$$$917A,PAGE
	.ENDC

	.PAGE
	.SBTTL	SYSTEM TIME VARIABLES
;
;		SYSTEM TIME VARIABLES
;
	DEFINE	EXE$GQ_TODCBASE		; TIME OF DAY CLOCK BASE (BOOT TIME)
	.QUAD	^X008C473766070000	; 01-JAN-1984 00:00:00.00
;
	DEFINE	EXE$GL_TODR		; TIME OF DAY REGISTER VALUE CORRESPONDING
	.LONG	1@28			; TO EXE$GQ_TODCBASE; IT'S NOT ZERO
					; BECAUSE ANYTHING LESS THAN 1@28
					; IS USED TO INDICATE CLOCK LOST POWER

	.ENDC	; NOT_DEFINED GETSYISW
	.PAGE
	.SBTTL	SYSGEN PARAMETERS	
;
;	SYSGEN PARAMETERS
;

; When the code in SYS$GETSYI/F$GETSYI/LIB$GETSYI invokes the SYI_GENERATE_TABLE
; macro once, the PARAMETER macro (and therefore the SYI_ITEM_CODE macro)
; will be invoked many times, generating the item-code control tables used
; by the above peices of code.

	; Start the definition of the macro

	.MACRO	SYI_GENERATE_TABLE

	; Define the GETSYI item-code which are Not SYSBOOT params

	.IIF	DEFINED GETSYISW,	SYI_ITEMTABLES

;
; DEFAULT PAGE FAULT CLUSTER SIZE - SPECIFIES THE MAXIMUM NUMBER OF 
;	PAGES WHICH WILL BE READ FROM SECTIONS NOT SPECIFYING A CLUSTER FACTOR.
;	THIS ALSO APPLIES TO PAGE FILE PAGES.
;
	PARAMETER	ADDRESS=SGN$GW_DFPFC,-	;
			DEFAULT=32,-		;
			MIN=0,-			;
			MAX=127,-		;
			NAME=PFCDEFAULT,-	;
			SIZE=WORD,-		;
			TYPE=<DYNAMIC,SYS,MAJOR>,-	;
			UNIT=Pages
;
; DEFAULT PAGE TABLE PAGE FAULT CLUSTER SIZE - SPECIFIES THE MAXIMUM NUMBER OF
; 	OF PAGE TABLES TO ATTEMPT TO READ TO SATISFY A FAULT FOR A NON-RESIDENT
;	PAGE TABLE.
;
	PARAMETER	ADDRESS=SGN$GB_PGTBPFC,-	;
			DEFAULT=2,-		;
			MIN=0,-			;
			MAX=127,-		;
			NAME=PAGTBLPFC,-	;
			SIZE=BYTE,-		;
			TYPE=<DYNAMIC,SPECIAL>,-	;
			UNIT=Pages
;
;	PAGE FAULT CLUSTER FOR SYSTEM PAGING
;
	PARAMETER	ADDRESS=SGN$GB_SYSPFC,-	;
			DEFAULT=1,-		;
			MIN=0,-			;
			MAX=127,-		;
			NAME=SYSPFC,-		;
			SIZE=BYTE,-		;
			TYPE=<SPECIAL>,-	;
			UNIT=Pages
;
; NUMBER OF KNOWN FILE LISTS - ESTABLISHES THE MAXIMUM NUMBER OF KNOWN
;	FILE LISTS THAT CAN BE MADE KNOWN TO THE SYSTEM.
;
	PARAMETER	ADDRESS=SGN$GB_KFILSTCT,-	;
			DEFAULT=4,-		;
			MIN=2,-			;
			MAX=255,-		;
			NAME=KFILSTCNT,-	;
			SIZE=BYTE,-		;
			TYPE=<SYSGEN,SYS>,-	;
			UNIT=Slots

	.IIF	NOT_DEFINED GETSYISW,	.ALIGN	WORD
;
; GLOBAL SECTION COUNT - DETERMINES THE MAXIMUM NUMBER OF GLOBAL SECTIONS
;	WHICH CAN BE MADE KNOWN TO THE SYSTEM BY ALLOCATING THE NECESSARY 
;	STORAGE FOR THE GST ENTRIES.
;
	PARAMETER	ADDRESS=SGN$GW_GBLSECNT,-	;
			DEFAULT=128,-		;
			MIN=20,-		;
			NAME=GBLSECTIONS,-	;
			SIZE=WORD,-		;
			TYPE=<SYSGEN,SYS,MAJOR>,-	;
			UNIT=Sections
;
; GLOBAL PAGE COUNT - ESTABLISHES THE SIZE OF THE GLOBAL PAGE TABLE AND THE
;	LIMIT FOR THE TOTAL NUMBER OF GLOBAL PAGES THAT CAN BE CREATED.
;

	PARAMETER	ADDRESS=SGN$GL_MAXGPGCT,-	;
			DEFAULT=4096,-		;
			MIN=512,-		;
			NAME=GBLPAGES,-		;
			SIZE=LONG,-		;
			TYPE=<SYSGEN,SYS,MAJOR>,-		;
			UNIT=Pages
;
; GLOBAL PAGE PAGE FILE PAGE LIMIT - ESTABLISHES THE MAXIMUM NUMBER OF GLOBAL 
; PAGES WITH PAGE FILE BACKING STORE THAT CAN BE CREATED.
;

	PARAMETER	ADDRESS=SGN$GL_GBLPAGFIL,-	;
			DEFAULT=1024,-		;
			MIN=128,-		;
			NAME=GBLPAGFIL,-		;
			SIZE=LONG,-		;
			TYPE=<SYS>,-		;
			UNIT=Pages

;
; MAXIMUM PROCESS COUNT - DETERMINES THE MAXIMUM NUMBER OF PROCESSES 
;
	PARAMETER	ADDRESS=SGN$GW_MAXPRCCT,-	;
			DEFAULT=72,-		;
			MIN=12,-		;
			MAX=8192,-		;
			NAME=MAXPROCESSCNT,-	;
			SIZE=WORD,-		;
			TYPE=<SYSGEN,SYS,MAJOR>,-		;
			UNIT=Processes

;
; PROCESS SCAN COUNT - DETERMINES THE MAXIMUM NUMBER OF PROCESSES TO SCAN
; FOR PRIORITY BOOSTING.
;
	PARAMETER	ADDRESS=SGN$GW_PIXSCAN,-;
			DEFAULT=1,-		;
			MIN=0,-			;
			MAX=8192,-		;
			NAME=PIXSCAN,-		;
			SIZE=WORD,-		;
			TYPE=<SPECIAL,DYNAMIC>,-;
			UNIT=Processes

;
; PROCESS SECTION COUNT - GUARANTEED NUMBER OF PROCESS SECTIONS THAT CAN
;	BE CREATED.  DEPENDING ON SIZE OF WORKING SET, THE ACTUAL NUMBER
;	OF SECTIONS CAN ACTUALLY BE GREATER.
;
	PARAMETER	ADDRESS=SGN$GW_MAXPSTCT,-	;
			DEFAULT=32,-		;
			MIN=5,-			;
			MAX=1024,-		;
			NAME=PROCSECTCNT,-	;
			SIZE=WORD,-		;
			TYPE=<SYSGEN,SYS>,-		;
			UNIT=Sections


;
; MINIMUM WORKING SET SIZE - ESTABLISHES THE SMALLEST SIZE THAT ADJWSL WILL
;	SET A PROCESS' WORKING SET.
;
	PARAMETER	ADDRESS=SGN$GW_MINWSCNT,-	;
			DEFAULT=20,-		;
			MIN=10,-		;
			NAME=MINWSCNT,-		;
			SIZE=WORD,-		;
			TYPE=<STATIC,SYSGEN,SYS>,-	;
			UNIT=Pages


;
; NUMBER OF PAGING FILES - DETERMINES THE MAXIMUM NUMBER OF PAGING FILES
;	THAT CAN BE MADE KNOW TO THE SYSTEM.
;
	PARAMETER	ADDRESS=SGN$GW_PAGFILCT,-	;
			DEFAULT=2,-		;
			MIN=1,-			;
			MAX=63,-		;
			NAME=PAGFILCNT,-	;
			SIZE=WORD,-		;
			TYPE=<SYS,SYSGEN>,-	;
			UNIT=Files

;
; NUMBER OF SWAP FILES - ESTABLISHES THE MAXIMUM NUMBER OF SWAPFILES THAT
;	CAN BE MADE KNOWN TO THE SYSTEM.
;
	PARAMETER	ADDRESS=SGN$GW_SWPFILES,-	;
			DEFAULT=2,-		;
			MIN=0,-			;
			MAX=63,-		;
			NAME=SWPFILCNT,-	;
			SIZE=WORD,-		;
			TYPE=<SYS,SYSGEN>,-	;
			UNIT=Files


;
; SYSTEM WORKING SET COUNT - ESTABLISHES THE NUMBER OF PAGES FOR THE WORKING
;	SET CONTAINING THE CURRENTLY RESIDENT PAGES OF PAGABLE SYSTEM SPACE.
;
	PARAMETER	ADDRESS=SGN$GW_SYSDWSCT,-	;
			DEFAULT=250,-		;
			MIN=40,-		;
			MAX=16384,-		;
			NAME=SYSMWCNT,-		;
			SIZE=WORD,-		;
			TYPE=<SYSGEN,SYS,MAJOR>,-	;
			UNIT=Pages

;
; INTERRUPT STACK SIZE - ESTABLISHES THE SIZE OF THE INTERRUPT STACK IN PAGES
;
	PARAMETER	ADDRESS=SGN$GW_ISPPGCT,-	;
			DEFAULT=2,-			;
			MIN=1,-				;
			NAME=INTSTKPAGES,-		;
			SIZE=WORD,-			;
			TYPE=<SYS,SYSGEN>,-		;
			UNIT=Pages
;
; AMOUNT OF EXTRA INTERRUPT STACK TO LEAVE WHEN DOING DEADLOCK SEARCH
;
	PARAMETER	ADDRESS=LCK$GL_EXTRASTK,-	;
			DEFAULT=512,-			;
			MIN=256,-			;
			NAME=DLCKEXTRASTK,-		;
			SIZE=LONG,-			;
			TYPE=<SPECIAL>,-		;
			UNIT=Bytes			;

;
; BALANCE SET COUNT - DETERMINES THE MAXIMUM NUMBER OF PROCESS THAT CAN BE
;	BE CONCURRENTLY RESIDENT. 
;
	PARAMETER	ADDRESS=SGN$GL_BALSETCT,-	;
			DEFAULT=36,-	;
			MIN=4,-		;
			MAX=1024,-	;
			NAME=BALSETCNT,-	;
			SIZE=LONG,-	;
			TYPE=<SYSGEN,SYS,MAJOR>,-	;
			UNIT=Slots
;
; COUNT OF PRE-ALLOCATED I/O PACKETS - DETERMINES THE NUMBER OF I/O PACKETS
;	TO BE PRE-ALLOCATED AND LINKED TOGETHER FOR FAST ALLOCATION AND
;	DEALLOCATION.
;
	PARAMETER	ADDRESS=SGN$GL_IRPCNT,-	;
			DEFAULT=60,-		;
			MIN=0,-			;
			MAX=32768,-		;
			NAME=IRPCOUNT,-		;
			SIZE=LONG,-		;
			TYPE=<SYSGEN,MAJOR,SYS>,-	;
			UNIT=Packets
;
; NUMBER OF PACKETS TO WHICH THE IRPLIST MAY BE EXTENDED.
;
	PARAMETER	ADDRESS=SGN$GL_IRPCNTV,-;
			DEFAULT=1000,-		;
			MIN=0,-			;
			MAX=32768,-		;
			NAME=IRPCOUNTV,-	;
			SIZE=LONG,-		;
			TYPE=<SYSGEN,SYS>,-	;
			UNIT=Packets
;
; MAXIMUM SIZE OF PROCESS WORKING SET. DETERMINES THE SYSTEM WIDE MAXIMUM
;	SIZE OF A PROCESS WORKING SET REGARDLESS OF PROCESS QUOTA.
;
	PARAMETER	ADDRESS=SGN$GL_MAXWSCNT,-	;
			DEFAULT=1024,-		;
			MIN=60,-		;
			MAX=64000,-		;
			NAME=WSMAX,-		;
			SIZE=LONG,-		;
			TYPE=<SYSGEN,SYS,MAJOR>,-	;
			UNIT=Pages

;
; NON-PAGED DYNAMIC POOL - DETERMINES THE NUMBER OF BYTES TO ALLOCATE FOR
;	THE NON-PAGED DYNAMIC POOL.
;
	PARAMETER	ADDRESS=SGN$GL_NPAGEDYN,-	;
			DEFAULT=131072,-	; 256 pages
			MIN=16384,-		;
			NAME=NPAGEDYN,-		;
			SIZE=LONG,-		;
			TYPE=<SYSGEN,SYS,MAJOR>,-	;
			UNIT=Bytes
;
; NON-PAGED DYNAMIC POOL - DETERMINES THE NUMBER OF BYTES TO WHICH 
;	THE NON-PAGED DYNAMIC POOL MAY BE EXTENDED.  THIS PARAMETER
;	IS USED TO ALLOCATE THE NECESSARY PAGE TABLE ENTRIES.
;
	PARAMETER	ADDRESS=SGN$GL_NPAGEVIR,-	;
			DEFAULT=400000,-		;
			MIN=16384,-		;
			NAME=NPAGEVIR,-		;
			SIZE=LONG,-		;
			TYPE=<SYSGEN,SYS>,-	;
			UNIT=Bytes
;
; PAGED DYNAMIC POOL - DETERMINES THE NUMBER OF BYTES TO ALLOCATE FOR THE
;	PAGED DYNAMIC POOL.
;
	PARAMETER	ADDRESS=SGN$GL_PAGEDYN,-	;
			DEFAULT=190000,-	;
			MIN=10240,-		;
			NAME=PAGEDYN,-		;
			SIZE=LONG,-		;
			TYPE=<SYSGEN,SYS,MAJOR>,-		;
			UNIT=Bytes

;
; MAXIMUM VIRTUAL PAGE COUNT - DETERMINES THE TOTAL NUMBER OF PAGES THAT
;	CAN BE MAPPED FOR A PROCESS, WHICH CAN BE DIVIDED IN ANY FASHION
;	BETWEEN P0 AND P1 SPACE.
;
	PARAMETER	ADDRESS=SGN$GL_MAXVPGCT,-	;
			DEFAULT=8192,-		;
			MIN=512,-		;
			MAX=300000,-		; MORE THAN 128 MEGABYTES
			NAME=VIRTUALPAGECNT,-	;
			SIZE=LONG,-		;
			TYPE=<SYSGEN,SYS,MAJOR>,-	;
			UNIT=Pages

;
; REQUESTED SPT EXTENSION - NUMBER OF ADDITIONAL SPT SLOT TO ALLOW
;
	PARAMETER	ADDRESS=SGN$GL_SPTREQ,-	;
			DEFAULT=896,-		;
			NAME=SPTREQ,-		;
			SIZE=LONG,-		;
			TYPE=<SYS,SYSGEN>,-	;
			UNIT=Pages
;
; EXTRA USER STACK AUTOMATICALLY PROVIDED BY THE IMAGE ACTIVATOR
;	SO THAT THE OPERATING SYSTEM CAN RECOVER FROM A STACK OVERFLOW.
;
	PARAMETER	ADDRESS=SGN$GL_EXUSRSTK,- ;
			DEFAULT=<2*512>,-	;
			MIN=<2*512>,-		;
			NAME=EXUSRSTK,-		;
			SIZE=LONG,-		;
			TYPE=<SPECIAL>,-	;
			UNIT=<Pages*512>	;
;
; NUMBER OF LARGE REQUEST PACKETS TO ALLOCATE TO THE LRP LOOK ASIDE LIST
;
	PARAMETER	ADDRESS=SGN$GL_LRPCNT,-	;
			DEFAULT=4,-		;
			MIN=0,-			;
			MAX=4096,-		;
			NAME=LRPCOUNT,-		;
			SIZE=LONG,-		;
			TYPE=<SYS,SYSGEN,MAJOR>,-	;
			UNIT=<Packets>		;
;
; NUMBER OF LARGE REQUEST PACKETS TO WHICH THE LRP LOOK ASIDE LIST
; MAY BE EXTENDED.  USED TO ALLOCATE THE APPROPRIATE VIRTUAL SPACE.
;
	PARAMETER	ADDRESS=SGN$GL_LRPCNTV,-;
			DEFAULT=80,-		;
			MIN=0,-			;
			MAX=4096,-		;
			NAME=LRPCOUNTV,-		;
			SIZE=LONG,-		;
			TYPE=<SYS,SYSGEN>,-	;
			UNIT=<Packets>		;
;
; SIZE OF LARGE REQUEST PACKETS (BYTES)
;
	PARAMETER	ADDRESS=SGN$GL_LRPSIZE,-;
			DEFAULT=576,-		;
			MIN=256,-		;
			MAX=16384,-		;
			NAME=LRPSIZE,-		;
			SIZE=LONG,-		;
			TYPE=<SYS,SYSGEN>,-	;
			UNIT=<Bytes>		;
;
; MINIMUM ALLOCATION REQUEST FOR LARGE REQUEST PACKETS (BYTES)
;
	PARAMETER	ADDRESS=SGN$GL_LRPMIN,-;
			DEFAULT=480,-		;
			MIN=256,-		;
			MAX=16384,-		;
			NAME=LRPMIN,-		;
			SIZE=LONG,-		;
			TYPE=<SPECIAL>,-	;
			UNIT=<Bytes>		;
;
; NUMBER OF SMALL REQUEST PACKETS TO ALLOCATE TO THE SRP LOOK ASIDE LIST
;
	PARAMETER	ADDRESS=SGN$GL_SRPCNT,-;
			DEFAULT=120,-		;
			MIN=0,-			;
			MAX=4096,-		;
			NAME=SRPCOUNT,-		;
			SIZE=LONG,-		;
			TYPE=<SYS,SYSGEN,MAJOR>,-	;
			UNIT=<Packets>		;
;
; NUMBER OF SMALL REQUEST PACKETS TO WHICH THE SRP LOOK ASIDE LIST
; MAY BE EXTENDED.  USED TO ALLOCATE THE APPROPRIATE VIRTUAL SPACE.
;
	PARAMETER	ADDRESS=SGN$GL_SRPCNTV,-;
			DEFAULT=1000,-		;
			MIN=0,-			;
			MAX=131072,-		;
			NAME=SRPCOUNTV,-	;
			SIZE=LONG,-		;
			TYPE=<SYS,SYSGEN>,-	;
			UNIT=<Packets>		;
;
; SIZE OF SMALL REQUEST PACKETS (BYTES)
;
	PARAMETER	ADDRESS=SGN$GL_SRPSIZE,-;
			DEFAULT=96,-		;
			MIN=96,-		;
			MAX=144,-		;
			NAME=SRPSIZE,-		;
			SIZE=LONG,-		;
			TYPE=<SPECIAL>,-	;
			UNIT=<Bytes>		;
;
; MINIMUM ALLOCATION REQUEST FOR SMALL REQUEST PACKETS (BYTES)
;
	PARAMETER	ADDRESS=SGN$GL_SRPMIN,-;
			DEFAULT=32,-		;
			MIN=0,-			;
			MAX=144,-		;
			NAME=SRPMIN,-		;
			SIZE=LONG,-		;
			TYPE=<SPECIAL>,-	;
			UNIT=<Bytes>		;
;
;	PERMANENT I/O CHANNEL COUNT - SPECIFES THE NUMBER OF PERMANENT I/O
;	CHANNELS TO PROVIDE.
;
	PARAMETER	ADDRESS=SGN$GW_PCHANCNT,-	;
			DEFAULT=127,-		;
			MIN=31,-		;
			MAX=2047,-		;
			NAME=CHANNELCNT,-	;
			SIZE=WORD,-		;
			TYPE=<SPECIAL>,-	;
			UNIT=Channels
;
;	PROCESS I/O PAGES - SPECIFIES THE NUMBER OF PAGES OF PROCESS
;	I/O ADDRESS SPACE FOR PRCSTRT TO CREATE.
;
	PARAMETER	ADDRESS=SGN$GW_PIOPAGES, - ;
			DEFAULT=120, - 		;
			MIN=10, -   		;
			NAME=PIOPAGES, -	;
			SIZE=WORD, -		;
			TYPE=<SPECIAL>, -	;
			UNIT=Pages

;
;	CONTROL REGION IMPURE PAGES - SPECIFIES THE NUMBER OF PAGES OF
;	PROCESS ALLOCATION REGION SPACE FOR PRCSTRT TO CREATE.
;
	PARAMETER	ADDRESS=SGN$GW_CTLPAGES, - ;
			DEFAULT=50, -		;
			MIN=10, -		;
			NAME=CTLPAGES, -	;
			SIZE=WORD, -		;
			TYPE=<SPECIAL>, -	;
			UNIT=Pages

;
; LIMIT ON USE OF THE PROCESS ALLOCATION REGION BY IMAGE REQUESTS
;
	PARAMETER	ADDRESS=SGN$GW_CTLIMGLIM, - ;
			DEFAULT=35,-		;
			MIN=0, -		;
			NAME=CTLIMGLIM, -	;
			SIZE=WORD, -		;
			TYPE=<SPECIAL>, -	;
			UNIT=Pages
;
; DEFAULT NUMBER OF PAGES OF IMAGE I/O ADDRESS SPACE USED BY
;	THE IMAGE ACTIVATOR IF NOT SPECIFIED AT PROGRAM LINK TIME.
;
	PARAMETER	ADDRESS=SGN$GW_IMGIOCNT,-	;
			DEFAULT=64,-		;
			MIN=32,-		;
			NAME=IMGIOCNT,-		;
			SIZE=WORD,-		;
			TYPE=<DYNAMIC,SPECIAL>,-	;
			UNIT=Pages
	.PAGE
	.SBTTL	CONTROL PARAMETERS	

	.IIF	NOT_DEFINED GETSYISW,	.ALIGN	WORD

;
;	GENERAL SYSTEM CONTROL PARAMETERS
;
	PARAMETER	ADDRESS=SCH$GW_QUAN,-	; PROCESS QUANTUM
			DEFAULT=-20,-		; NEGATED
			MIN=2,-			;
			MAX=32767,-		;
			NAME=QUANTUM,-		;
			SIZE=WORD,-		;
			TYPE=<DYNAMIC,SYS,NEG,MAJOR>,-	;
			UNIT=10Ms		;
;
;	MODIFIED PAGE WRITER CONTROL PARAMETERS
;
	DEFINE	MPW$AW_INITVAL
;
;	PAGE WRITE CLUSTER FACTOR - SPECIFIES THE NUMBER OF PAGES TO ATTEMPT
;	TO WRITE AS A SINGLE I/O TRANSFER TO CONTIGUOUS DISK.
;
	PARAMETER	ADDRESS=MPW$GW_MPWPFC,-	;
			DEFAULT=96,-		;
			MIN=16,-		;
			MAX=120,-		;
			NAME=MPW_WRTCLUSTER,-	;
			SIZE=WORD,-		;
			TYPE=<SYSGEN,SYS>,-	;
			UNIT=Pages
;
;	MODIFIED PAGE LIST HIGH LIMIT - THRESHOLD AT WHICH TO BEGIN WRITING
;	MODIFIED PAGES.
;
	PARAMETER	ADDRESS=MPW$GW_HILIM,-	;
			DEFAULT=500,-		;
			MIN=0,-			;
			MAX=16384,-		;
			NAME=MPW_HILIMIT,-	;
			SIZE=WORD,-		;
			TYPE=<SYSGEN,SYS>,-	;
			UNIT=Pages
;
;	MODIFIED PAGE LIST LOW LIMIT - THRESHOLD AT WHICH MODIFIED PAGE WRITING
;	WILL NORMALLY STOP.  WRITING STARTED AT THE HIGH LIMIT AND PAGES
;	ARE WRITTEN IN CHUNKS CONTROLLED BY THE CLUSTER FACTOR. WHEN THE
;	LENGTH OF THE MODIFIED PAGE LIST HAS BEEN REDUCED BELOW THE LOW LIMIT,
;	WRITING CEASES UNTIL ENOUGH PAGES HAVE BEEN ADDED TO EXCEED THE 
;	HIGH LIMIT.
;
	PARAMETER	ADDRESS=MPW$GW_LOLIM,-	;
			DEFAULT=32,-		;
			MIN=0,-			;
			MAX=16384,-		;
			NAME=MPW_LOLIMIT,-	;
			SIZE=WORD,-		;
			TYPE=<SYSGEN,SYS>,-	;
			UNIT=Pages
;
; MODIFIED PAGE WRITER I/O PRIORITY.  THIS PARAMETER SETS THE PRIORITY OF
; I/O TRANSFERS INITIATED BY THE MODIFIED PAGE WRITER.
;
	PARAMETER	ADDRESS=MPW$GB_PRIO,-	;
			DEFAULT=4,-		;
			MIN=0,-			;
			MAX=31,-		;
			NAME=MPW_PRIO,-		;
			SIZE=BYTE,-		;
			TYPE=<SPECIAL,DYNAMIC>	;
;
; SWAPPER I/O PRIORITY.  THIS PARAMETER SETS THE PRIORITY OF
; I/O TRANSFERS INITIATED BY THE SWAPPER.
;
	PARAMETER	ADDRESS=SWP$GB_PRIO,-	;
			DEFAULT=4,-		;
			MIN=0,-			;
			MAX=31,-		;
			NAME=SWP_PRIO,-	;
			SIZE=BYTE,-		;
			TYPE=<SPECIAL,DYNAMIC>	;
;
; MODIFIED PAGE WRITER LOWER LIMIT THRESHOLD STOPPING USE OF MODIFIED PAGE
; WRITER FROM BEING USED AS PRIMARY MECHANISM TO RECOVER MEMORY.
;
	PARAMETER	ADDRESS=MPW$GL_THRESH,-	;
			DEFAULT=200,-		;
			MIN=0,-			;
			MAX=16384,-		;
			NAME=MPW_THRESH,-	;
			SIZE=LONG,-		;
			TYPE=<SYS,DYNAMIC>	;
;
; MODIFIED PAGE WRITER BUSY WAIT LIMIT.  THIS IS USED AS A THRESHOLD OF
; WHEN TO PUT A PROCESS INTO RESOURCE WAIT IF IT IS GENERATING A MODIFIED
; PAGE AND THE SIZE OF THE MODIFIED LIST IS GREATER THAN THIS PARAMETER.
;
	PARAMETER	ADDRESS=MPW$GL_WAITLIM,-;
			DEFAULT=500,-		;
			MIN=0,-			;
			MAX=16384,-		;
			NAME=MPW_WAITLIMIT,-	;
			SIZE=LONG,-		;
			TYPE=<SYS,DYNAMIC>	;
;
; MAXIMUM NUMBER OF WORKING SET LIST ENTRIES THAT MAY BE SKIPPED WHILE
; SCANNING FOR A "GOOD" ENTRY TO DISCARD.  SET TO 0 TO DISABLE SKIPPING.
;
	PARAMETER	ADDRESS=SGN$GW_WSLMXSKP,-	;
			DEFAULT=8,-		;
			MIN=0,-			;
			MAX=512,-		;
			NAME=TBSKIPWSL,-		;
			SIZE=WORD,-		;
			TYPE=<DYNAMIC,SPECIAL>,-	;
			UNIT=Pages

;
; Maximum number of physical pages to be used - permits testing of smaller
; memory configurations without actually removing memory boards.
;
	PARAMETER	ADDRESS=MMG$GL_PHYPGCNT,-	;
			DEFAULT=262144,-	;
			MIN=2048,-	;
			MAX=262144,-	;
			NAME=PHYSICALPAGES,-	;
			SIZE=LONG,-	;
			TYPE=<SPECIAL>,-	;
			UNIT=Pages
;
; Page fault rate lower threshold.  This parameter sets the lower page fault rate
; threshold for automatic working set size adjustment.
;
	PARAMETER	ADDRESS=SCH$GL_PFRATL,-	;
			DEFAULT=0,-	;
			MIN=0,-	;
			NAME=PFRATL,-	;
			SIZE=LONG,-	;
			TYPE=<SYS,DYNAMIC,MAJOR>,-	;
			UNIT=Flts/10Sec	;
;
; Page fault rate high threshold.  This parameter sets the upper page fault
; rate threshold for automatic working set adjustment.
;
	PARAMETER	ADDRESS=SCH$GL_PFRATH,-	;
			DEFAULT=120,-	;
			MIN=0,-	;
			NAME=PFRATH,-	;
			SIZE=LONG,-	;
			TYPE=<SYS,DYNAMIC,MAJOR>,-	;
			UNIT=Flts/10Sec	;
;
; Page fault rate system threshold.  This parameter sets the target system page
; fault threshold.
;
	PARAMETER	ADDRESS=SCH$GL_PFRATS,-	;
			DEFAULT=0,-	;
			MIN=0,-	;
			NAME=PFRATS,-	;
			SIZE=LONG,-	;
			TYPE=<SPECIAL,DYNAMIC>,-	;
			UNIT=Flts/10Sec	;
;
; Working set increment.  This parameter sets the number of pages to increase the
; working set size to compensate for a high page fault rate.
;
	PARAMETER	ADDRESS=SCH$GL_WSINC,-	;
			DEFAULT=150,-	;
			MIN=0,-	;
			NAME=WSINC,-	;
			SIZE=LONG,-	;
			TYPE=<SYS,DYNAMIC,MAJOR>,-	;
			UNIT=Pages	;
;
; Working set decrement.  This parameter sets the number of pages to decrease
; the working set to compensate for a page fault rate below the lower threshold.
;
	PARAMETER	ADDRESS=SCH$GL_WSDEC,-	;
			DEFAULT=35,-	;
			MIN=0,-	;
			NAME=WSDEC,-	;
			SIZE=LONG,-	;
			TYPE=<SYS,DYNAMIC,MAJOR>,-	;
			UNIT=Pages	;
;
; Working set minimum. Sets the minimum working set size to ever be set
; by the automatic adjustment logic.
;
	PARAMETER	ADDRESS=SCH$GW_AWSMIN,-	;
			DEFAULT=50,-	;
			MIN=0,-		;
			NAME=AWSMIN,-	;
			SIZE=WORD,-	;
			TYPE=<SYS,DYNAMIC>,-;
			UNIT=Pages	;
;
; Working set measurement interval.  Sets the minimum interval of compute
; time for the measurement of page fault rate.
;
	PARAMETER	ADDRESS=SCH$GL_AWSTIME,-	;
			DEFAULT=20,-	;
			MIN=1,-		;
			NAME=AWSTIME,-	;
			SIZE=LONG,-	;
			TYPE=<SYS,DYNAMIC>,-;
			UNIT=10Ms	;
;
; Swap rate control.  This parameter sets the swapping rate and serves to limit
; the consumption of disk bandwidth by swapping.
;
	PARAMETER	ADDRESS=SCH$GL_SWPRATE,-	;
			DEFAULT=500,-	;
			MIN=0,-	;
			NAME=SWPRATE,-	;
			SIZE=LONG,-	;
			TYPE=<SPECIAL,DYNAMIC>,-	;
			UNIT=10Ms/Swap	;
;
; Desired process page count for an outswap swap.  This parameter sets the
; number of pages to attempt to reduce a working set to before starting the
; outswap.
;
	PARAMETER	ADDRESS=SWP$GL_SWPPGCNT,-	;
			DEFAULT=60,-	;
			MIN=0,-	;
			NAME=SWPOUTPGCNT,-	;
			SIZE=LONG,-	;
			TYPE=<SYS,DYNAMIC>,-	;
			UNIT=Pages	;
;
; Swap file allocation increment value.  The size in blocks to use to backup
; swap file space allocation in the swap or page file.  Space in the file will
; be allocated multiples of this unit up to wsquota to guarantee swap space.
;
	PARAMETER	ADDRESS=SWP$GW_SWPINC,-	;
			DEFAULT=96,-		;
			MIN=16,-		;
			NAME=SWPALLOCINC,-	;
			SIZE=WORD,-		;
			TYPE=<SPECIAL>,-	;
			UNIT=Blocks		;
;
;	I/O time allowance.  This parameter sets the number of 10 millisecond
;	units to charge the current residence quantum for each voluntary wait.
;	The correct value approximates the cost of a disk I/O neglecting wait time.
;
	PARAMETER	ADDRESS=SCH$GW_IOTA,-	;
			DEFAULT=2,-	;
			MIN=0,-	;
			MAX=32767,-	;
			NAME=IOTA,-	;
			SIZE=WORD,-	;
			TYPE=<SPECIAL,DYNAMIC>,-	;
			UNIT=10Ms	;
;
;	Elapsed realtime to cause a HIB or LEF process to look like it is in
;	longwait.  This parameter sets the number of 1 second units
;	that need to have elapsed.  Longwait processes are one of the most
;	eligible to attempt to recover pages from when a shortage is detected.
;
	PARAMETER	ADDRESS=SCH$GW_LONGWAIT,-	;
			DEFAULT=30,-	;
			MIN=0,-	;
			MAX=65535,-	;
			NAME=LONGWAIT,-	;
			SIZE=WORD,-	;
			TYPE=<SYS,DYNAMIC>,-	;
			UNIT=Seconds	;
;
;	Elapsed realtime to cause a low priority COM process to look like it is
;	dormant. This parameter sets the number of 1 second units
;	that need to have elapsed.  Dormant processes are one of the most
;	eligible to attempt to recover pages from when a shortage is detected.
;
	PARAMETER	ADDRESS=SCH$GW_DORMANTWAIT,-	;
			DEFAULT=10,-	;
			MIN=0,-	;
			MAX=65535,-	;
			NAME=DORMANTWAIT,-	;
			SIZE=WORD,-	;
			TYPE=<SYS,DYNAMIC>,-	;
			UNIT=Seconds	;
;
;	Swap fail count. This parameter sets the number of consecutive swap
;	schedule failures to occur before the swap schedule algorithm changes
;	to ignore the swap quantum protection.
;
	PARAMETER	ADDRESS=SCH$GW_SWPFAIL,-	;
			DEFAULT=20,-	;
			MIN=0,-	;
			MAX=32767,-	;
			NAME=SWPFAIL,-	;
			SIZE=WORD,-	;
			TYPE=<SPECIAL,DYNAMIC>	;

;
;	These are reserved parameters for undefined use by either Digital
;	or user written system services.
;
;
;	This is the start of the Digital reserved parameters.
;

	PARAMETER	ADDRESS=SGN$GL_VMSD1,-	;
			DEFAULT=0,-	;
			MIN=0,-	;
			NAME=VMSD1,-	;
			SIZE=LONG,-	;
			TYPE=<SPECIAL,DYNAMIC>	;
;
	PARAMETER	ADDRESS=SGN$GL_VMSD2,-	;
			DEFAULT=0,-	;
			MIN=0,-	;
			NAME=VMSD2,-	;
			SIZE=LONG,-	;
			TYPE=<SPECIAL,DYNAMIC>	;
;
	PARAMETER	ADDRESS=SGN$GL_VMSD3,-	;
			DEFAULT=0,-	;
			MIN=0,-	;
			NAME=VMSD3,-	;
			SIZE=LONG,-	;
			TYPE=<SPECIAL,DYNAMIC>	;
;
	PARAMETER	ADDRESS=SGN$GL_VMSD4,-	;
			DEFAULT=0,-	;
			MIN=0,-	;
			NAME=VMSD4,-	;
			SIZE=LONG,-	;
			TYPE=<SPECIAL,DYNAMIC>	;
;
	PARAMETER	ADDRESS=SGN$GL_VMS5,-	;
			DEFAULT=0,-	;
			MIN=0,-	;
			NAME=VMS5,-	;
			SIZE=LONG,-	;
			TYPE=<SPECIAL>	;
;
	PARAMETER	ADDRESS=SGN$GL_VMS6,-	;
			DEFAULT=0,-	;
			MIN=0,-	;
			NAME=VMS6,-	;
			SIZE=LONG,-	;
			TYPE=<SPECIAL>	;
;
	PARAMETER	ADDRESS=SGN$GL_VMS7,-	;
			DEFAULT=0,-	;
			MIN=0,-	;
			NAME=VMS7,-	;
			SIZE=LONG,-	;
			TYPE=<SPECIAL>	;
;
	PARAMETER	ADDRESS=SGN$GL_VMS8,-	;
			DEFAULT=0,-	;
			MIN=0,-	;
			NAME=VMS8,-	;
			SIZE=LONG,-	;
			TYPE=<SPECIAL>	;

;
;	This is the start of the user reserved sysgen parameters.
;
	PARAMETER	ADDRESS=SGN$GL_USERD1,-	;
			DEFAULT=0,-	;
			MIN=0,-	;
			NAME=USERD1,-	;
			SIZE=LONG,-	;
			TYPE=<DYNAMIC>	;
;
	PARAMETER	ADDRESS=SGN$GL_USERD2,-	;
			DEFAULT=0,-	;
			MIN=0,-	;
			NAME=USERD2,-	;
			SIZE=LONG,-	;
			TYPE=<DYNAMIC>	;
;
	PARAMETER	ADDRESS=SGN$GL_USER3,-	;
			DEFAULT=0,-	;
			MIN=0,-	;
			NAME=USER3,-	;
			SIZE=LONG,-	;
			TYPE=<>		;
;
	PARAMETER	ADDRESS=SGN$GL_USER4,-	;
			DEFAULT=0,-	;
			MIN=0,-	;
			NAME=USER4,-	;
			SIZE=LONG,-	;
			TYPE=<>		;

;
;	Extra CPU time.  This parameter sets the number of 10 millisecond
;	units to be allowed as an extension when CPU time expires.  One
; 	extension is allowed for each access mode.
;
	PARAMETER	ADDRESS=SGN$GL_EXTRACPU,-	;
			DEFAULT=1000,-	; 10 Seconds
			MIN=0,-		;
			NAME=EXTRACPU,-	;
			SIZE=LONG,-	;
			TYPE=<SYS,DYNAMIC>,-	;
			UNIT=10Ms	;

;
; Maximum group code for system UIC
;
	PARAMETER	ADDRESS=EXE$GL_SYSUIC,-	;
			DEFAULT=8,-	;
			MIN=1,-		;
			MAX=32768,-	;
			NAME=MAXSYSGROUP,-	;
			SIZE=LONG,-	;
			TYPE=<SYS,DYNAMIC>,-	;
			UNIT=<UIC Group>
;
; Maximum time for a device to languish in mount verification before giving up.
;
	PARAMETER	ADDRESS=IOC$GW_MVTIMEOUT,-
			DEFAULT=600,-			; 10 minute default
			MIN=1,-
			MAX=64000,-			; 
			NAME=MVTIMEOUT,-		; 
			SIZE=WORD,-
			TYPE=<SYS,DYNAMIC>,-
			UNIT=Seconds
;
; Maximum allowable buffered I/O request size
;
	PARAMETER	ADDRESS=IOC$GW_MAXBUF,-	;
			DEFAULT=1584,-	;
			MIN=1200,-	;
			MAX=64000,-	;
			NAME=MAXBUF,-	;
			SIZE=WORD,-	;
			TYPE=<SYS,DYNAMIC>,-	;
			UNIT=Bytes
;
; Default buffer quota for Mailbox creation
;
	PARAMETER	ADDRESS=IOC$GW_MBXBFQUO,-	;
			DEFAULT=1056,-	;
			MIN=256,-	;
			MAX=64000,-	;
			NAME=DEFMBXBUFQUO,-	;
			SIZE=WORD,-	;
			TYPE=<SYS,DYNAMIC>,-	;
			UNIT=Bytes
;
; Default maximum message size for Mailbox creation
;
	PARAMETER	ADDRESS=IOC$GW_MBXMXMSG,-	;
			DEFAULT=256,-	;
			MIN=64,-	;
			MAX=64000,-	;
			NAME=DEFMBXMXMSG,-	;
			SIZE=WORD,-	;
			TYPE=<SYS,DYNAMIC>,-	;
			UNIT=Bytes
;
; Default number of messages for Mailbox creation
;
	PARAMETER	ADDRESS=IOC$GW_MBXNMMSG,-	;
			DEFAULT=16,-	;
			MIN=1,-		;
			NAME=DEFMBXNUMMSG,-	;
			SIZE=WORD,-	;
			TYPE=<SYS,DYNAMIC>,-	;
			UNIT=Messages
;
;	DESIRED FREE LIST LENGTH - SPECIFIES THE NUMBER OF FREE PAGES TO
;			BE MAINTAINED AVAILABLE BY THE SWAPPER.
;
	PARAMETER	ADDRESS=SGN$GL_FREELIM,-	;
			DEFAULT=32,-		;
			MIN=16,-		;
			NAME=FREELIM,-		;
			SIZE=LONG,-		;
			TYPE=<SYS,SYSGEN,MAJOR>,-	;
			UNIT=Pages
;
;	Target free list length - specifies the number of free pages 
;			that the swapper will attempt to make available
;			when correcting for free list < FREELIM.
;
	PARAMETER	ADDRESS=SGN$GL_FREEGOAL,-	;
			DEFAULT=200,-		;
			MIN=16,-		;
			NAME=FREEGOAL,-		;
			SIZE=LONG,-		;
			TYPE=<SYS,MAJOR>,-	;
			UNIT=Pages
;
;	DESIRED FREE LIST LENGTH THAT MUST EXIST TO ALLOW PROCESSES
;			TO GROW PAST WSQUOTA.
;
	PARAMETER	ADDRESS=SCH$GL_GROWLIM,-;
			DEFAULT=63,-		;
			MIN=0,-			;
			NAME=GROWLIM,-		;
			SIZE=LONG,-		;
			TYPE=<SYS,DYNAMIC,MAJOR>,-	;
			UNIT=Pages
;
;	DESIRED FREE LIST LENGTH THAT MUST EXIST TO ALLOW PROCESSES
;			TO GROW PAST WSQUOTA.
;
	PARAMETER	ADDRESS=SCH$GL_BORROWLIM,-	;
			DEFAULT=300,-		;
			MIN=0,-			;
			NAME=BORROWLIM,-	;
			SIZE=LONG,-		;
			TYPE=<SYS,DYNAMIC,MAJOR>,-	;
			UNIT=Pages
;
; NUMBER OF RETRIES TO PERFORM WHEN TRYING TO LOCK A MULTI-PROCESSOR
; DATA STRUCTURE
;
	PARAMETER	ADDRESS=EXE$GL_LOCKRTRY,-	;
			DEFAULT=100000,-	;
			MIN=1,-			;
			NAME=LOCKRETRY,-	;
			SIZE=LONG,-		;
			TYPE=<SPECIAL,DYNAMIC>,-;
			UNIT=Retries
;
; Maximum DR32 data rate
;
	PARAMETER	ADDRESS=IOC$GW_XFMXRATE,-	;
			DEFAULT=236,-		;
			MIN=0,-			;
			MAX=255,-		;
			NAME=XFMAXRATE,-	;
			SIZE=WORD,-		;
			TYPE=<SYS,DYNAMIC>,-	;
			UNIT=Special
;
; Number of Unibus map registers to preallocate for LPA11
;
	PARAMETER	ADDRESS=IOC$GW_LAMAPREG,-	;
			DEFAULT=0,-		;
			MIN=0,-			;
			MAX=255,-		;
			NAME=LAMAPREGS,-	;
			SIZE=WORD,-		;
			TYPE=<SYS,SYSGEN>,-		;
			UNIT=Mapregs

;
; Number of SPT entries to preallocate for use by real time processes
; connecting to devices via the connect to interrupt driver.
;

	PARAMETER	ADDRESS=EXE$GL_RTIMESPT,-
			DEFAULT=0,-
			MIN=0,-
			NAME=REALTIME_SPTS,-
			SIZE=LONG,-
			TYPE=<SYS,SYSGEN>,-
			UNIT=Pages

;
; Number of pages created for command interpreter symbol table.
;

	PARAMETER	ADDRESS=EXE$GL_CLITABL,-
			DEFAULT=60,-
			MIN=10,-
			MAX=128,-
			NAME=CLISYMTBL,-
			SIZE=LONG,-
			TYPE=<SYS,SYSGEN,DYNAMIC>,-
			UNIT=Pages

;
; Initial size of lock id table (and growing increment).
;

	PARAMETER	ADDRESS=LCK$GL_IDTBLSIZ,-
			DEFAULT=200,-
			MIN=40,-
			MAX=65535,-
			NAME=LOCKIDTBL,-
			SIZE=LONG,-
			TYPE=<SYS,SYSGEN,MAJOR>,-
			UNIT=Entries

;
; Maximum size of lock id table.
;

	PARAMETER	ADDRESS=LCK$GL_IDTBLMAX,-
			DEFAULT=800,-
			MIN=200,-
			MAX=65535,-
			NAME=LOCKIDTBL_MAX,-
			SIZE=LONG,-
			TYPE=<SYS,SYSGEN,MAJOR,DYNAMIC>,-
			UNIT=Entries

;
; Size of resource hash table.
;

	PARAMETER	ADDRESS=LCK$GL_HTBLSIZ,-
			DEFAULT=64,-
			MIN=1,-
			MAX=8192,-
			NAME=RESHASHTBL,-
			SIZE=LONG,-
			TYPE=<SYS,SYSGEN,MAJOR>,-
			UNIT=Entries

;
; Deadlock detection timeout period
;

	PARAMETER	ADDRESS=LCK$GL_WAITTIME,-
			DEFAULT=10,-
			MIN=0,-
			NAME=DEADLOCK_WAIT,-
			SIZE=LONG,-
			TYPE=<SYS,DYNAMIC>,-
			UNIT=Seconds

;
; SCS allocation counts - Buffer Descriptor Table entries
;
	PARAMETER	ADDRESS=SCS$GW_BDTCNT,-
			DEFAULT=50,-
			MIN=0,-
			MAX=32767,-
			NAME=SCSBUFFCNT,-
			SIZE=WORD,-
			TYPE=<SYSGEN,SCS>,-
			UNIT=Entries

;
; SCS allocation counts - Connect Descriptor Table entries
;
	PARAMETER	ADDRESS=SCS$GW_CDTCNT,-
			DEFAULT=40,-
			MIN=2,-
			MAX=32767,-
			NAME=SCSCONNCNT,-
			SIZE=WORD,-
			TYPE=<SYSGEN,SCS>,-
			UNIT=Entries

;
; SCS allocation counts - Response Descriptor Table entries
;
	PARAMETER	ADDRESS=SCS$GW_RDTCNT,-
			DEFAULT=100,-
			MIN=0,-
			MAX=32767,-
			NAME=SCSRESPCNT,-
			SIZE=WORD,-
			TYPE=<SYSGEN,SCS>,-
			UNIT=Entries

;
; SCS maximum datagram size
;

	PARAMETER	ADDRESS=SCS$GW_MAXDG,-
			DEFAULT=576,-
			MIN=28,-
			MAX=985,-
			NAME=SCSMAXDG,-
			SIZE=WORD,-
			TYPE=<SYSGEN,SCS>,-
			UNIT=Bytes

;
; SCS maximum sequenced message size
;

	PARAMETER	ADDRESS=SCS$GW_MAXMSG,-
			DEFAULT=112,-
			MIN=52,-
			MAX=985,-
			NAME=SCSMAXMSG,-
			SIZE=WORD,-
			TYPE=<SYSGEN,SCS>,-
			UNIT=Bytes

;
; SCS flow control cushion
;

	PARAMETER	ADDRESS=SCS$GW_FLOWCUSH,-
			DEFAULT=1,-
			MIN=0,-
			MAX=16,-
			NAME=SCSFLOWCUSH,-
			SIZE=WORD,-
			TYPE=<SCS,DYNAMIC>,-
			UNIT=Credits

;
; SCS system id (unique 48 bit number per system)
;

	PARAMETER	ADDRESS=SCS$GB_SYSTEMID,-
			DEFAULT=0,-
			NAME=SCSSYSTEMID,-
			SIZE=LONG,-
			TYPE=<SYSGEN,SCS>,-
			UNIT=Pure-number

	PARAMETER	ADDRESS=SCS$GB_SYSTEMIDH,-
			DEFAULT=0,-
			NAME=SCSSYSTEMIDH,-
			SIZE=LONG,-
			TYPE=<SYSGEN,SCS>,-
			UNIT=Pure-number

;
; SCS system node name
;

	PARAMETER	ADDRESS=SCS$GB_NODENAME,-
			DEFAULT=<^A/    />,-
			MIN=<^A/    />,-
			MAX=<^A/ZZZZ/>,-
			NAME=SCSNODE,-
			SIZE=QUAD,-
			TYPE=<ASCII,SYSGEN,SCS>,-
			UNIT=Ascii

;
; SCA process poller - polling interval
;

	PARAMETER	ADDRESS=SCS$GW_PRCPOLINT,-
			DEFAULT=15,-
			MIN=1,-
			MAX=32767,-
			NAME=PRCPOLINTERVAL,-
			SIZE=WORD,-
			TYPE=<SCS,DYNAMIC>,-
			UNIT=Seconds

;
; CI port - timeout for START/STACK sequence, also basic driver wakeup interval
;

	PARAMETER	ADDRESS=SCS$GW_PASTMOUT,-
			DEFAULT=5,-
			MIN=1,-
			MAX=99,-
			NAME=PASTIMOUT,-
			SIZE=WORD,-
			TYPE=<SCS,DYNAMIC>,-
			UNIT=Seconds

;
; CI port - number of DG buffers to queue for START handshake
;

	PARAMETER	ADDRESS=SCS$GW_PAPPDDG,-
			DEFAULT=4,-
			MIN=1,-
			MAX=16,-
			NAME=PASTDGBUF,-
			SIZE=WORD,-
			TYPE=<SCS>,-
			UNIT=Buffers

;
; CI port - number of ports to poll each interval (for future expansion)
;

	PARAMETER	ADDRESS=SCS$GB_PANPOLL,-
			DEFAULT=16,-
			MIN=1,-
			MAX=223,-
			NAME=PANUMPOLL,-
			SIZE=BYTE,-
			TYPE=<SCS,DYNAMIC>,-
			UNIT=Ports

;
; CI port - maximum port # to poll each interval (for future expansion)
;

	PARAMETER	ADDRESS=SCS$GB_PAMXPORT,-
			DEFAULT=15,-
			MIN=0,-
			MAX=223,-
			NAME=PAMAXPORT,-
			SIZE=BYTE,-
			TYPE=<SCS,DYNAMIC>,-
			UNIT=Port-number
;
; CI port - time between poll initiates
;

	PARAMETER	ADDRESS=SCS$GW_PAPOLINT,-
			DEFAULT=5,-
			MIN=1,-
			MAX=32767,-
			NAME=PAPOLLINTERVAL,-
			SIZE=WORD,-
			TYPE=<SCS,DYNAMIC>,-
			UNIT=Seconds

;
; CI port - time between check for SYSAP's waiting for pool
;

	PARAMETER	ADDRESS=SCS$GW_PAPOOLIN,-
			DEFAULT=15,-
			MIN=1,-
			MAX=32767,-
			NAME=PAPOOLINTERVAL,-
			SIZE=WORD,-
			TYPE=<SCS,DYNAMIC>,-
			UNIT=Seconds

;
; CI port - Flags including sanity timer enable/disable
;

	PARAMETER	ADDRESS=SCS$GB_PASANITY,-
			DEFAULT=1,-
			MIN=0,-
			MAX=1,-
			NAME=PASANITY,-
			SIZE=BYTE,-
			TYPE=<SCS,DYNAMIC>,-
			UNIT=Boolean

;
; CI port - Flags including CI remote port polling enable/disable
;

	PARAMETER	ADDRESS=SCS$GB_PANOPOLL,-
			DEFAULT=0,-
			MIN=0,-
			MAX=1,-
			NAME=PANOPOLL,-
			SIZE=BYTE,-
			TYPE=<SCS,DYNAMIC>,-
			UNIT=Boolean

;
; This is the start of the PEDRIVER reserved SYSGEN parameters.
;

	PARAMETER	ADDRESS=SGN$GL_PE1,-
			DEFAULT=0,-
			MIN=0,-
			NAME=PE1,-
			SIZE=LONG,-
			TYPE=<SPECIAL,DYNAMIC>

	PARAMETER	ADDRESS=SGN$GL_PE2,-
			DEFAULT=0,-
			MIN=0,-
			NAME=PE2,-
			SIZE=LONG,-
			TYPE=<SPECIAL,DYNAMIC>

	PARAMETER	ADDRESS=SGN$GL_PE3,-
			DEFAULT=0,-
			MIN=0,-
			NAME=PE3,-
			SIZE=LONG,-
			TYPE=<SPECIAL,DYNAMIC>

	PARAMETER	ADDRESS=SGN$GL_PE4,-
			DEFAULT=0,-
			MIN=0,-
			NAME=PE4,-
			SIZE=LONG,-
			TYPE=<SPECIAL,DYNAMIC>

	PARAMETER	ADDRESS=SGN$GL_PE5,-
			DEFAULT=0,-
			MIN=0,-
			NAME=PE5,-
			SIZE=LONG,-
			TYPE=<SPECIAL>

	PARAMETER	ADDRESS=SGN$GL_PE6,-
			DEFAULT=0,-
			MIN=0,-
			NAME=PE6,-
			SIZE=LONG,-
			TYPE=<SPECIAL>

;
;	Time prompt timeout - this parameter sets the amount of time to wait
;	for the time of day to be entered when booting.  The default value
;	of -1 gives the behavior of V2 and earlier.  
;
	PARAMETER	ADDRESS=SGN$GW_TPWAIT,-
			DEFAULT=-1,-
			MIN=0,-
			NAME=TIMEPROMPTWAIT,-
			SIZE=WORD,-
			TYPE=<SYS>,-
			UNIT=uFortnights	; Close enough to seconds

;
; UDA port - UDABURSTRATE is one less than the maximum number of longwords
;		the host is willing to allow per NPR transfer.  Zero implies
;		the port should use its own default.  Both the port's
;		default and the maximum the port will accept are Controller
;		dependent.
;

	PARAMETER	ADDRESS=SCS$GB_UDABURST,-
			DEFAULT=0,-
			MIN=0,-
			MAX=31,-
			NAME=UDABURSTRATE,-
			SIZE=BYTE,-
			TYPE=<SYSGEN,SCS>,-
			UNIT=Longwords


;
; NOTE: The following two entries must be contiguous and in order!!!!
;
; Size of SYSTEM space logical name hash table.
;

	PARAMETER	ADDRESS=LNM$GL_HTBLSIZS,-
			DEFAULT=128,-
			MIN=1,-
			MAX=16383,-
			NAME=LNMSHASHTBL,-
			SIZE=LONG,-
			TYPE=<SYS,SYSGEN>,-
			UNIT=Entries

;
; Size of PROCESS space logical name hash table.
;

	PARAMETER	ADDRESS=LNM$GL_HTBLSIZP,-
			DEFAULT=128,-
			MIN=1,-
			MAX=16383,-
			NAME=LNMPHASHTBL,-
			SIZE=LONG,-
			TYPE=<SYS,SYSGEN>,-
			UNIT=Entries

	.IF	NOT_DEFINED GETSYISW
;
;	PERMANENT DEFAULT SYSTEM FLAGS
;
	.ALIGN	LONG			;
	.IF	NDF,PRMSW		;
EXE$GL_DEFFLAGS::			;
	.ENDC				;
	.LONG	<1@EXE$V_SYSPAGING>-	; ENABLE SYSTEM CODE PAGING
		!<1@EXE$V_POOLPGING>-	; ENABLE SYSTEM POOL PAGING
		!<1@EXE$V_SBIERR>-	; SBI ERROR DETECTION
		!<1@EXE$V_BUGREBOOT>-	; AUTOMATIC REBOOT ON BUGCHECK
		!<1@EXE$V_CRDENABL>-	; ENABLE CRD ERROR DETECTION
		!<1@EXE$V_BUGDUMP>-	; SYSTEM DUMP ON BUGCHECK
		!<1@EXE$V_CONCEALED>-	; ENABLE USE OF CONCEALED DEVICES
		!<1@EXE$V_JOBQUEUES>-	; Enable job controller queues
		!<1@EXE$V_SHRF11ACP>	; SHARE F11ACP

	.ENDC	; NOT_DEFINED GETSYISW

;
;	BUGCHECK REBOOT - ENABLES AUTOMATIC REBOOT ON BUGCHECK
;
	.LIST	ME
	.NLIST	CND
	PARAMETER	ADDRESS=EXE$GL_DEFFLAGS,-	;
			DEFAULT=1,-	;
			MAX=1,-		;
			MIN=0,-		;
			NAME=BUGREBOOT,-;
			BIT=EXE$V_BUGREBOOT,-	;
			TYPE=<DYNAMIC,SYS>,-	;
			UNIT=Boolean
	.NLIST	ME
	.LIST	CND
;
;	CRD ERROR ENABLE - ENABLES DETECTION AND LOGGING OF MEMORY CRD ERRORS
;
	PARAMETER	ADDRESS=EXE$GL_DEFFLAGS,-	;
			DEFAULT=1,-	;
			MAX=1,-		;
			MIN=0,-		;
			NAME=CRDENABLE,-;
			BIT=EXE$V_CRDENABL,-;
			TYPE=<SYS,SYSGEN>,-;
			UNIT=Boolean
;
;	BUGCHECK DUMP ENABLE - ENABLE SYSTEM DUMP ON BUGCHECK
;
	PARAMETER	ADDRESS=EXE$GL_DEFFLAGS,-	;
			DEFAULT=1,-	;
			MAX=1,-		;
			MIN=0,-		;
			NAME=DUMPBUG,-	;
			BIT=EXE$V_BUGDUMP,-	;
			TYPE=<SYS>,-
			UNIT=Boolean
;
;	FATAL BUGCHECK - TURNS ALL CONTINUABLE BUGCHECKS INTO FATAL BUGCHECKS
;
	PARAMETER	ADDRESS=EXE$GL_DEFFLAGS,-	;
			DEFAULT=0,-	;
			MAX=1,-		;
			MIN=0,-		;
			NAME=BUGCHECKFATAL,-;
			BIT=EXE$V_FATAL_BUG,-	;
			TYPE=<SYS,DYNAMIC>,-;
			UNIT=Boolean
;
;	MULTIPLE ACP - SPECIFIES THAT SEPARATE ACPS ARE TO BE CREATED FOR
;		       EACH CLASS OF DISK.

	PARAMETER	ADDRESS=EXE$GL_DEFFLAGS,-;
			DEFAULT=0,-	;
			MAX=1,-		;
			MIN=0,-		;
			NAME=ACP_MULTIPLE,-	;
			BIT=EXE$V_MULTACP,-	;
			TYPE=<ACP,DYNAMIC>,-	;
			UNIT=Boolean
;
;	AUTO CONFIGURATION INHIBIT - INHIBITS THE AUTOMATIC CONFIGURATION
;		OF DEVICES.
;
	PARAMETER	ADDRESS=EXE$GL_DEFFLAGS,-;
			DEFAULT=0,-	;
			MAX=1,-		;
			MIN=0,-		;
			NAME=NOAUTOCONFIG,-
			BIT=EXE$V_NOAUTOCNF,-	;
			TYPE=<SPECIAL,DYNAMIC>,-;
			UNIT=Boolean
;
;	NO CLOCK - INHIBITS THE STARTING OF THE INTERVAL TIMER FOR DEBUGGING
;		PURPOSES.
;
	PARAMETER	ADDRESS=EXE$GL_DEFFLAGS,-	;
			DEFAULT=0,-	;
			MAX=1,-		;
			MIN=0,-		;
			NAME=NOCLOCK,-	;
			BIT=EXE$V_NOCLOCK,-	;
			TYPE=<SPECIAL>,-	;
			UNIT=Boolean
;
;	CLUSTERING INHIBIT - INHIBITS ALL PAGE READ CLUSTERING
;
	PARAMETER	ADDRESS=EXE$GL_DEFFLAGS,-	;
			DEFAULT=0,-	;
			MAX=1,-		;
			MIN=0,-		;
			NAME=NOCLUSTER,-	;
			BIT=EXE$V_NOCLUSTER,-	;
			TYPE=<SPECIAL>,-	;
			UNIT=Boolean
;
;	ENABLE PAGING OF PAGED DYNAMIC POOL
;
	PARAMETER	ADDRESS=EXE$GL_DEFFLAGS,-	;
			DEFAULT=1,-	;	
			MAX=1,-		;
			MIN=0,-		;
			NAME=POOLPAGING,-	;
			BIT=EXE$V_POOLPGING,-	;
			TYPE=<SPECIAL>,-;
			UNIT=Boolean
;
;	SBI ERROR DETECTION ENABLE
;
	PARAMETER	ADDRESS=EXE$GL_DEFFLAGS,-	;
			DEFAULT=1,-	;
			MAX=1,-		;
			MIN=0,-		;
			NAME=SBIERRENABLE,-	;
			BIT=EXE$V_SBIERR,-	;
			TYPE=<SPECIAL>,-	;
			UNIT=Boolean
;
;	FORCE ENTRY OF TIME AT SYSTEM BOOT
;
	PARAMETER	ADDRESS=EXE$GL_DEFFLAGS,-	;
			DEFAULT=0,-	;
			MAX=1,-		;
			MIN=0,-		;
			NAME=SETTIME,-	;
			BIT=EXE$V_SETTIME,-	;
			TYPE=<SYS,SYSGEN>,-;
			UNIT=Boolean
;
;	ENABLE SHARING OF F11ACP
;
	PARAMETER	ADDRESS=EXE$GL_DEFFLAGS,-	;
			DEFAULT=1,-	;
			MAX=1,-		;
			MIN=0,-		;
			NAME=ACP_SHARE,-;
			BIT=EXE$V_SHRF11ACP,-	;
			TYPE=<ACP>,-;
			UNIT=Boolean
;
;	ENABLE PAGING OF SYSTEM CODE
;
	PARAMETER	ADDRESS=EXE$GL_DEFFLAGS,-;
			DEFAULT=1,-	;
			MAX=1,-		;
			MIN=0,-		;
			NAME=SYSPAGING,-;
			BIT=EXE$V_SYSPAGING,-	;
			TYPE=<SPECIAL>,-	;
			UNIT=Boolean
;
;	SELECT ALTERNATE AUTHORIZATION FILE - CAUSES SYSINIT TO MAKE A LOGICAL
;		NAME REDIRECTING SYSUAF TO SYSUAFALT.
;
	PARAMETER	ADDRESS=EXE$GL_DEFFLAGS,-	;
			DEFAULT=0,-	;
			MAX=1,-		;
			MIN=0,-		;
			NAME=UAFALTERNATE,-	;
			BIT=EXE$V_SYSUAFALT,-	;
			TYPE=<SYS,SYSGEN>,-	;
			UNIT=Boolean
;
;	LEAVE SYSTEM WRITABLE - FOR DEBUGGING PURPOSES LEAVES SYSTEM CODE
;		WRITABLE.
	PARAMETER	ADDRESS=EXE$GL_DEFFLAGS,-	;
			DEFAULT=0,-	;
			MAX=1,-		;
			MIN=0,-		;
			NAME=WRITABLESYS,-;
			BIT=EXE$V_SYSWRTABL,-;
			TYPE=<SPECIAL>,-	;
			UNIT=Boolean
;
;
;	Enable resource allocation checking
;

	PARAMETER	ADDRESS=EXE$GL_DEFFLAGS,-	;
			DEFAULT=0,-			;
			MAX=1,-				;
			MIN=0,-				;
			NAME=RESALLOC,-			;
			BIT=EXE$V_RESALLOC,-		;
			TYPE=<SPECIAL>,-		;
			UNIT=Boolean

;
;	SET TO INHIBIT SYSTEM SERVICES ON A PER PROCESS BASIS
;
	PARAMETER	ADDRESS=EXE$GL_DEFFLAGS,-	;
			DEFAULT=0,-	;
			MAX=1,-		;
			MIN=0,-		;
			NAME=SSINHIBIT,-;
			BIT=EXE$V_SSINHIBIT,-;
			TYPE=<SPECIAL>,-	;
			UNIT=Boolean

;
;	RESET TO DISABLE THE USE OF CONCEALED DEVICES
;
	PARAMETER	ADDRESS=EXE$GL_DEFFLAGS,-	;
			DEFAULT=1,-	;
			MAX=1,-		;
			MIN=0,-		;
			NAME=CONCEAL_DEVICES,-;
			BIT=EXE$V_CONCEALED,-;
			TYPE=<SPECIAL>,-	;
			UNIT=Boolean
;
;	SAVEDUMP - IF THE DUMP IS IN THE PAGE FILE, SAVE IT UNTIL IT IS
;		ANALYZED AND COPIED.
;
	PARAMETER	ADDRESS=EXE$GL_DEFFLAGS,-	;
			DEFAULT=0,-	;
			MAX=1,-		;
			MIN=0,-		;
			NAME=SAVEDUMP,-	;
			BIT=EXE$V_SAVEDUMP,-	;
			TYPE=<SYS>,-	;
			UNIT=Boolean
;
;	CJFLOAD - Force CJF to be loaded as part of VMS during STARTUP
;**JNL** this parameter is temporarily special and off
;
	PARAMETER	ADDRESS=EXE$GL_DEFFLAGS,-	;
;*JNL**			DEFAULT=1,-	;
			DEFAULT=0,-	;
			MAX=1,-		;
			MIN=0,-		;
			NAME=CJFLOAD,-;
			BIT=EXE$V_CJFLOAD,-	;
;**JNL**		TYPE=<SYS>,-	;
			TYPE=<SPECIAL>,-	;
			UNIT=Boolean
;
;	CJFSYSRUJ - Force creation of Recovery Unit journal for system disk
;			during STARTUP. Recovery will take place during creation
;			of this journal.
;**JNL** this parameter is temporarily special 
;
	PARAMETER	ADDRESS=EXE$GL_DEFFLAGS,-	;
			DEFAULT=0,-	;
			MAX=1,-		;
			MIN=0,-		;
			NAME=CJFSYSRUJ,-;
			BIT=EXE$V_CJFSYSRUJ,-	;
;**JNL**		TYPE=<SYS>,-	;
			TYPE=<SPECIAL>,-	;
			UNIT=Boolean

	.IF	NOT_DEFINED GETSYISW
;
; DYNAMIC SYSTEM CONTROL FLAGS.
;
	.ALIGN	LONG			;
	.IF	NDF,PRMSW		;
EXE$GL_DYNAMIC_FLAGS::			; Dynamic SYSGEN flags
	.ENDC	; NDF,PRMSW
	.LONG	<1@EXE$V_WRITESYSPARAMS>!-
		<1@EXE$V_BRK_TERM>;
	.ENDC	; NOT_DEFINED GETSYISW

	$VIELD	EXE,0,<-		; DEFINITION FOR EXE$GL_DYNAMIC_FLAGS
		CLASS_PROT,-		; Do non-discretionary classification check
		WRITESYSPARAMS,-	; Write the active parameters to the system .PAR file
		BRK_TERM,-		; Associate on terminal in breakin detection
		BRK_DISUSER,-		; Disable user account on breakin
	>

;
;	CLASS_PROT -	Perform the non-discretionary classification
;			checks.  This also is looked at by the XQP to
;			determine of a classification block should be
;			added to the header of any created files.
;
	PARAMETER	ADDRESS=EXE$GL_DYNAMIC_FLAGS,-	;
			DEFAULT=0,-	;
			MAX=1,-		;
			MIN=0,-		;
			NAME=CLASS_PROT,-;
			BIT=EXE$V_CLASS_PROT,-	;
			TYPE=<DYNAMIC,SYS>,-	;
			UNIT=Boolean

;
;
;	WRITESYSPARAMS - Set by SYSBOOT if a USE DEFAULT, USE "file", or a
;			SET command is executed. Cleared if a USE CURRENT or
;			WRITE CURRENT command is executed. If set STARTUP.COM
;			will issue a WRITE CURRENT SYSGEN command.
;
	PARAMETER	ADDRESS=EXE$GL_DYNAMIC_FLAGS,-	;
			DEFAULT=1,-	;
			MAX=1,-		;
			MIN=0,-		;
			NAME=WRITESYSPARAMS,-;
			BIT=EXE$V_WRITESYSPARAMS,-;
			TYPE=<DYNAMIC,SPECIAL>,-;
			UNIT=Boolean

;
;	LGI_BRK_TERM -	Use the terminal name in the association string
;			used in LOGIN's breakin detection.  If not set,
;			breakin detection associates on username alone
;			for terminal logins.
;
	PARAMETER	ADDRESS=EXE$GL_DYNAMIC_FLAGS,-	;
			DEFAULT=1,-	;
			MAX=1,-		;
			MIN=0,-		;
			NAME=LGI_BRK_TERM,-;
			BIT=EXE$V_BRK_TERM,-;
			TYPE=<DYNAMIC,LGI>,-;
			UNIT=Boolean

;
;	LGI_BRK_DISUSER - If enabled, set the DISUSER flag in the user's
;			UAF record if a breakin attempt is detected.
;			This assures a permanent lockout of the user
;			until re-enabled by the system manager.
;
	PARAMETER	ADDRESS=EXE$GL_DYNAMIC_FLAGS,-	;
			DEFAULT=0,-	;
			MAX=1,-		;
			MIN=0,-		;
			NAME=LGI_BRK_DISUSER,-;
			BIT=EXE$V_BRK_DISUSER,-;
			TYPE=<DYNAMIC,LGI>,-;
			UNIT=Boolean


	.IF	NOT_DEFINED GETSYISW
;
; STATIC SYSTEM CONTROL FLAGS.
;
	.ALIGN	LONG			;
	.IF	NDF,PRMSW		;
EXE$GL_STATIC_FLAGS::			; Static SYSGEN flags
	.ENDC	; NDF,PRMSW
	.LONG	<1@EXE$V_XQP_RESIDENT>!<1@EXE$V_REBLDSYSD>
	.ENDC	; NOT_DEFINED GETSYISW

	$VIELD	EXE,0,<-		; DEFINITION FOR EXE$GL_STATIC_FLAGS
		XQP_RESIDENT,-		; MEMORY RESIDENT XQP
		REBLDSYSD,-		; REBUILD SYSTEM DISK IN SYSMOUNT
	>

;
	.PAGE
	.SBTTL	SYSTEM MESSAGE PARAMETERS
;
; DEFINE THE CONTROL BITS IN EXE$GL_MSGFLAGS
;
	$GBLINI	GLOBAL
	$VIELD	EXE,0,<-
		MOUNTMSG,-		; ENABLE MOUNT NOTIFICATION
		DISMOUMSG,-		; ENABLE DISMOUNT NOTIFICATION
	>

	.IF	NOT_DEFINED GETSYISW
;
; DEFINE THE EXE$GL_MSGFLAGS LONGWORD AND ITS INITIAL VALUE.
;
	.ALIGN	LONG			;
	.IF	NDF,PRMSW		;
EXE$GL_MSGFLAGS::			;
	.ENDC				;
	.LONG	0

	.ENDC	; NOT_DEFINED GETSYISW

;
;	MOUNTMSG - CONTROLS OPERATOR NOTIFICATION OF VOLUME MOUNTING
;
	PARAMETER	ADDRESS=EXE$GL_MSGFLAGS,-	;
			DEFAULT=0,-	;
			MAX=1,-		;
			MIN=0,-		;
			NAME=MOUNTMSG,-	;
			BIT=EXE$V_MOUNTMSG,-	;
			TYPE=<SYS,DYNAMIC>,-	;
			UNIT=Boolean
;
;	DISMOUMSG - Controls operator notification of volume dismounting
;
	PARAMETER	ADDRESS=EXE$GL_MSGFLAGS,-	;
			DEFAULT=0,-	;
			MAX=1,-		;
			MIN=0,-		;
			NAME=DISMOUMSG,-	;
			BIT=EXE$V_DISMOUMSG,-	;
			TYPE=<SYS,DYNAMIC>,-	;
			UNIT=Boolean
	.PAGE
	.SBTTL	SYSTEM LOADABLE CODE PARAMETERS
;
; DEFINE THE CONTROL BITS IN SGN$GL_LOADFLAGS
;
	$GBLINI	GLOBAL
	$VIELD	SGN,0,<-
		LOADERAPAT,-		; LOAD ERASE PATTERN GENERATOR
		LOADCHKPRT,-		; LOAD PROTECTION CHECK ROUTINE
		LOADMTACCESS,-		; LOAD INSTALLATION ACCESSIBIITY ROUTINE
	>

	.IF	NOT_DEFINED GETSYISW

;
; DEFINE THE SGN$GL_LOADFLAGS LONGWORD AND ITS INITIAL VALUE.
;
	.ALIGN	LONG			;
	.IF	NDF,PRMSW		;
SGN$GL_LOADFLAGS::			;
	.ENDC				;
	.LONG	0

	.ENDC	; NOT_DEFINED GETSYISW

;
;	LOADERAPAT- CONTROLS LOADING OF ALTERNATE ERASE PATTERN GENERATOR
;
	PARAMETER	ADDRESS=SGN$GL_LOADFLAGS,-	;
			DEFAULT=0,-	;
			MAX=1,-		;
			MIN=0,-		;
			NAME=LOADERAPT,-	;
			BIT=SGN$V_LOADERAPAT,-	;
			TYPE=<SPECIAL>,-	;
			UNIT=Boolean
;
;	LOADCHKPRT - CONTROLS LOADING OF ALTERNATE PROTECTION CHECK ROUTINE
;
	PARAMETER	ADDRESS=SGN$GL_LOADFLAGS,-	;
			DEFAULT=0,-	;
			MAX=1,-		;
			MIN=0,-		;
			NAME=LOADCHKPRT,-	;
			BIT=SGN$V_LOADCHKPRT,-	;
			TYPE=<SPECIAL>,-	;
			UNIT=Boolean
;
;	LOADMTACCESS - CONTROLS LOADING OF INSTALLATION SPECIFIC ACCESSIBILITY ROUTINE
;
	PARAMETER	ADDRESS=SGN$GL_LOADFLAGS,-
			DEFAULT=0,-
			MAX=1,-
			MIN=0,-
			NAME=LOADMTACCESS,-
			BIT=SGN$V_LOADMTACCESS,-
			TYPE=<SPECIAL>,-
			UNIT=Boolean
	.PAGE
	.SBTTL	TERMINAL DRIVER SYSTEM PARAMETERS
;
;	DIALUP SUPPORT CONTROL PARAMETERS
;
; DELTA TIME FOR DIALUP TIMER SCAN
;
	PARAMETER	ADDRESS=TTY$GL_DELTA,-	;
			DEFAULT=<100000*100>,-	;
			MIN=100000,-		;
			NAME=TTY_SCANDELTA,-	;
			SIZE=LONG,-		;
			TYPE=<TTY>,-		;
			UNIT=100Ns		;
;
; FLAGS FOR DIALUP
;
;	BIT 0 is 0 => NORMAL, 1 => UNITED KINGDOM
;	BIT 1 SPECIFIES ALTERNATE MODEM PROTOCOL
;
	PARAMETER	ADDRESS=TTY$GB_DIALTYP,-	;
			DEFAULT=0,-		;
			MIN=0,-			;
			MAX=<^X0FF>,-		;
			NAME=TTY_DIALTYPE,-	;
			TYPE=<TTY>,-		;
			SIZE=BYTE,-		;
			UNIT=Bit-Encoded	;
;
; NOTE ALIGNMENT!
;
; TERMINAL CANONICAL CHARACTERISTICS
;
;
;	DEFAULT SPEED FOR TERMINALS
;
	PARAMETER	ADDRESS=TTY$GB_DEFSPEED,-; DEFAULT SPEED FOR TERMINALS AND PARITY
			DEFAULT=TT$C_BAUD_9600,-; 9600 BAUD - NO PARITY
			MIN=1,-			;
			MAX=16,-		;
			NAME=TTY_SPEED,-	;
			SIZE=BYTE,-		;
			TYPE=<TTY>,-		;
			UNIT=Special		; TT$C_BAUD VALUES
;
;	DEFAULT RECEIVE SPEED
;
	PARAMETER	ADDRESS=TTY$GB_RSPEED,-	;THE RECEIVE SPEED FOR A TERMINAL
			DEFAULT=0,-		;USE THE DEFAULT SPEED
			MIN=0,-			;
			MAX=16,-		;
			NAME=TTY_RSPEED,-	;
			SIZE=BYTE,-		;
			TYPE=<TTY>,-		;
			UNIT=Special		; TT$C_BAUD VALUES AND 0
;
;	DEFAULT PARITY
;
	PARAMETER	ADDRESS=TTY$GB_PARITY,-	;THE PARITY OF THE TERMINALS
			DEFAULT=24,-		;NO PARITY EIGHT BITS.
			MIN=0,-			;
			NAME=TTY_PARITY,-	;
			SIZE=BYTE,-		;
			TYPE=<TTY>,-		;
			UNIT=Special		;
;
;	DEFAULT TERMINAL LINE WIDTH
;
	PARAMETER	ADDRESS=TTY$GW_DEFBUF,-	; DEFAULT BUFFER SIZE
			DEFAULT=80,-	;
			MIN=0,-		;
			MAX=65535,-	;
			NAME=TTY_BUF,-	;
			SIZE=WORD,-	;
			TYPE=<TTY>,-	;
			UNIT=Characters
;
;	DEFAULT TERMINAL CHARACTERISTICS
;
	PARAMETER	ADDRESS=TTY$GL_DEFCHAR,-; DEFAULT CHARACTERISTICS
	DEFAULT=<<24@TT$V_PAGE>+TT$M_TTSYNC+TT$M_WRAP+TT$M_LOWER+TT$M_SCOPE>,-
			MIN=0,-			;
			NAME=TTY_DEFCHAR,-	;
			SIZE=LONG,-		;
			TYPE=<TTY>,-		;
			UNIT=Bit-Encoded
;
; Device characteristics second word.
;
	PARAMETER	ADDRESS=TTY$GL_DEFCHAR2,-;
			DEFAULT=TT2$M_EDITING!TT2$M_AUTOBAUD,-; SET AUTOBAUD FOR DEFAULT
			MIN=0,-
			NAME=TTY_DEFCHAR2,-
			SIZE=LONG,-
			TYPE=<TTY>,-
			UNIT=Bit-Encoded

;
; SIZE OF TYPEAHEAD BUFFER
;
	PARAMETER	ADDRESS=TTY$GW_TYPAHDSZ,-	;
			DEFAULT=78,-			;
			MIN=0,-				;
			NAME=TTY_TYPAHDSZ,-		;
			SIZE=WORD,-			;
			TYPE=<TTY>,-			;
			UNIT=Bytes
;
; Alternate Typeahead size.
;
	PARAMETER	ADDRESS=TTY$GW_ALTYPAHD,-	;
			DEFAULT=200,-			;
			MIN=0,-
			NAME=TTY_ALTYPAHD,-
			SIZE=WORD,-
			TYPE=<TTY>,-
			UNIT=Bytes
;
; Alternate Typehaead buffer alarm size.
;
	PARAMETER	ADDRESS=TTY$GW_ALTALARM,-	;
			DEFAULT=64,-			;ASSUME WORST CASE
			MIN=0,-
			NAME=TTY_ALTALARM,-
			SIZE=WORD,-
			TYPE=<TTY>,-
			UNIT=Bytes
;
; DMA size
;
	PARAMETER	ADDRESS=TTY$GW_DMASIZE,-	;
			DEFAULT=64,-
			MIN=0,-
			NAME=TTY_DMASIZE,-
			SIZE=WORD,-
			TYPE=<TTY,DYNAMIC>,-
			UNIT=Bytes

;
; DEFAULT TERMINAL ALLOCATION PROTECTION
;
	PARAMETER	ADDRESS=TTY$GW_PROT,-		; PROTECTION CLASSES
			DEFAULT=<^X0FFF0>,-		; SYSTEM ONLY
			MIN=0,-				;
			NAME=TTY_PROT,-			;
			SIZE=WORD,-			;
			TYPE=<TTY>,-			;
			UNIT=Protection			;

	PARAMETER	ADDRESS=TTY$GL_OWNUIC,-		; OWNER UIC
			DEFAULT=<^X00010004>,-		; SYSTEM OWNER
			MIN=0,-				;
			NAME=TTY_OWNER,-		;
			SIZE=LONG,-			;
			TYPE=<TTY>-			;
			UNIT=UIC			;
;
;	DEFAULT TERMINAL CLASS NAME PREFIX
;
	PARAMETER	ADDRESS=TTY$GW_CLASSNAM,-	; 
			DEFAULT=<^A/TT/>,-	;
			MIN=<^A/AAAA/>,-	;
			MAX=<^A/ZZZZ/>,-	;
			NAME=TTY_CLASSNAME,-	;
			SIZE=WORD,-		;
			TYPE=<ASCII,TTY>,-	;
			UNIT=Ascii
;
;	DEFAULT SILO TIMEOUT VALUE FOR DMF32
;
	PARAMETER	ADDRESS=TTY$GB_SILOTIME,-	; 
			DEFAULT=8,-	;
			MIN=0,-		;
			MAX=255,-	;
			NAME=TTY_SILOTIME,-	;
			SIZE=BYTE,-	;
			TYPE=<TTY>,-	;
			UNIT=Ms
;
; DISCONNECTED VIRTUAL TERMINAL TIMEOUT.
;
	PARAMETER	ADDRESS=TTY$GL_TIMEOUT,-	; 
			DEFAULT=60*15,-	; 15 minute default
			MIN=0,-		; 
			NAME=TTY_TIMEOUT,-	;
			SIZE=LONG,-	;
			TYPE=<TTY,DYNAMIC>,-	;
			UNIT=Seconds
;
; AUTOBAUD RATE RECOGNITION CHARACTER
;
	PARAMETER	ADDRESS=TTY$GB_AUTOCHAR,-	; 
			DEFAULT=7,-	; Default is ^G (Bell)
			MIN=0,-		;
			MAX=255,-	;
			NAME=TTY_AUTOCHAR,-	;
			SIZE=BYTE,-	;
			TYPE=<TTY,DYNAMIC>,-	;
			UNIT=Character
;
;	default port functions.
;
	PARAMETER	ADDRESS=TTY$GL_DEFPORT,-; DEFAULT PORT CHARACTERISTICS
			DEFAULT=0,-
			MIN=0,-			;
			NAME=TTY_DEFPORT-	;
			SIZE=LONG,-		;
			TYPE=<TTY,SPECIAL>,-	;
			UNIT=Bit-Encoded
;
; END OF TERMINAL SYSTEM PARAMETERS
;
;
	.PAGE
	.SBTTL	RMS DEFAULT PARAMETERS
;
;  RMS DEFAULT PARAMETERS
;
	PARAMETER	ADDRESS=SYS$GB_DFMBC,-	;
			DEFAULT=16,-	; DEFAULT MULTI-BLOCK COUNT
			MIN=1,-			;
			MAX=127,-		;
			NAME=RMS_DFMBC,-	;
			SIZE=BYTE,-		;
			TYPE=<RMS,DYNAMIC>,-	;
			UNIT=Blocks
;
; DEFAULT MULTI-BUFFER COUNT FOR SEQUENTIAL . DISK
;
	PARAMETER	ADDRESS=SYS$GB_DFMBFSDK,-	;
			DEFAULT=0,-		;
			MIN=0,-			;
			MAX=127,-		;
			NAME=RMS_DFMBFSDK,-	;
			SIZE=BYTE,-		;
			TYPE=<RMS,DYNAMIC>,-	;
			UNIT=Blocks
;
; DEFAULT MULTI_BUFFER COUNT FOR MAGTAPE
;
	PARAMETER	ADDRESS=SYS$GB_DFMBFSMT,-	;
			DEFAULT=0,-		;
			MIN=0,-			;
			MAX=127,-		;
			NAME=RMS_DFMBFSMT,-	;
			SIZE=BYTE,-		;
			TYPE=<RMS,DYNAMIC>,-	;
			UNIT=Blocks
;
;	DEFAULT MULTI-BUFFER COUNT FOR UNIT RECORD DEVICES.
;
	PARAMETER	ADDRESS=SYS$GB_DFMBFSUR,-	;
			DEFAULT=0,-		;
			MIN=0,-			;
			MAX=127,-		;
			NAME=RMS_DFMBFSUR,-	;
			SIZE=BYTE,-		;
			TYPE=<RMS,DYNAMIC>,-	;
			UNIT=Buffers
;
; DEFAULT MULTI-BUFFER COUNT FOR RELATIVE FILES
;
	PARAMETER	ADDRESS=SYS$GB_DFMBFREL,-	;
			DEFAULT=0,-		;
			MIN=0,-			;
			MAX=127,-		;
			NAME=RMS_DFMBFREL,-	;
			SIZE=BYTE,-		;
			TYPE=<RMS,DYNAMIC>,-	;
			UNIT=Buffers
;
; DEFAULT MULTI-BUFFER COUNT INDEXED FILES
;
	PARAMETER	ADDRESS=SYS$GB_DFMBFIDX,-	;
			DEFAULT=0,-		;
			MIN=0,-			;
			MAX=127,-		;
			NAME=RMS_DFMBFIDX,-	;
			SIZE=BYTE,-		;
			TYPE=<RMS,DYNAMIC>,-	;
			UNIT=Buffers
;
; DEFAULT MULTI-BUFFER COUNT HASHED
;
	PARAMETER	ADDRESS=SYS$GB_DFMBFHSH,-	;
			DEFAULT=0,-		;
			MIN=0,-			;
			MAX=127,-		;
			NAME=RMS_DFMBFHSH,-	;
			SIZE=BYTE,-		;
			TYPE=<RMS,DYNAMIC>,-	;
			UNIT=Buffers

;
; Default rms Prologue
;
	PARAMETER	ADDRESS = SYS$GB_RMSPROLOG,-
			DEFAULT = 0,-		; 0, 2 and 3 are valid, only
			MIN = 0,-
			MAX = 3,-
			NAME = RMS_PROLOGUE,-
			SIZE = BYTE,-
			TYPE = <RMS,DYNAMIC>,-
			UNIT = Prolog-Lvl

;
; Default file extend quantity
;

	PARAMETER	ADDRESS = SYS$GW_RMSEXTEND,-
			DEFAULT = 0,-
			MIN = 0,-
			MAX = 65535,-
			NAME = RMS_EXTEND_SIZE,-
			SIZE = WORD,-
			TYPE = <RMS,DYNAMIC>,-
			UNIT = Blocks
;
; Default file protection
;

	PARAMETER	ADDRESS = SYS$GW_FILEPROT,-
			DEFAULT = <^XFA00>,-
			MIN = 0,-
			MAX = <^XFFFF>,-
			NAME = RMS_FILEPROT,-
			SIZE = WORD,-
			TYPE = RMS,-
			UNIT = Prot-mask

;
; Global buffer quota - This parameter determines the maximum number
; of global buffers that may be in use in the system at any one time.
;
	PARAMETER	ADDRESS=SYS$GW_GBLBUFQUO,-
			DEFAULT=1024,-
			MIN=0,-
			MAX=32767,-
			SIZE=WORD,-
			NAME=RMS_GBLBUFQUO,-
			TYPE=<RMS,DYNAMIC>,-
			UNIT=<Gbl bufs>

;
; Network block count - This parameter determines the number
; of blocks to use for RMS DAP network record-mode transfers.
; This parameter determines the maximum record size that can be
; sent over the network.
;
	PARAMETER	ADDRESS=SYS$GB_DFNBC,-
			DEFAULT=8,-
			MIN=1,-
			MAX=127,-
			SIZE=BYTE,-
			NAME=RMS_DFNBC,-
			TYPE=<RMS,DYNAMIC>,-
			UNIT=<Blocks>

	.IF	NOT_DEFINED GETSYISW

	.ALIGN	LONG
;
;  END OF RMS DEFAULT PARAMETERS
;
	.PAGE
	.SBTTL	PROCESS QUOTA DEFAULTS AND MINIMA
	.=.-4				;
	DEFINE	PQL$AL_DEFAULT		;
	.=.+4				;
	.BLKL	PQL$_LENGTH		;
	.=.-4				;
	DEFINE	PQL$AL_MIN		;
	.=.+4				;
	.BLKL	PQL$_LENGTH		;
	.=.-1				;
	DEFINE	PQL$AB_FLAG		;
	.=.+1				;
	.BLKB	PQL$_LENGTH		;

	.ENDC	; NOT_DEFINED GETSYISW

;
;	DEFINE PROCESS QUOTA DEFAULTS AND MINIMA
;

	PQL	ASTLM,-			; AST LIMIT
		DEFLT=24,-		;
		MINIM=4,-		;
		UNT=Ast			;

	PQL	BIOLM,-			; BUFFERED I/O LIMIT
		DEFLT=18,-		;
		MINIM=4,-		;
		UNT=I/O			;

	PQL	BYTLM,-			; BUFFERED I/O BYTE COUNT LIMIT
		DEFLT=8192,-		;
		FLAG=DEDUCTIBLE,-	;
		MINIM=1024,-	;
		UNT=Bytes		;

	PQL	CPULM,-			; CPU TIME LIMIT
		DEFLT=0,-		;
		FLAG=DEDUCTIBLE,-	;
		MINIM=0,-		;
		UNT=10Ms		;

	PQL	DIOLM,-			; DIRECT I/O LIMIT
		DEFLT=18,-		;
		MINIM=4,-		;
		UNT=I/O			;

	PQL	FILLM,-			; OPEN FILE LIMIT
		DEFLT=16,-		;
		FLAG=DEDUCTIBLE,-	;
		MINIM=2,-		;
		UNT=Files		;

	PQL	PGFLQUOTA,-		; PAGING FILE QUOTA
		DEFLT=2048,-		;
		FLAG=DEDUCTIBLE,-	;
		MINIM=512,-		;
		UNT=Pages		;

	PQL	PRCLM,-			; SUB-PROCESS LIMIT
		DEFLT=8,-		;
		FLAG=DEDUCTIBLE,-	;
		MINIM=0,-		;
		UNT=Processes

	PQL	TQELM,-			; TIMER QUEUE ENTRY LIMIT
		DEFLT=8,-		;
		FLAG=DEDUCTIBLE,-	;
		MINIM=0,-		;
		UNT=Timers

	PQL	WSDEFAULT,-		; WORKING SET DEFAULT SIZE
		DEFLT=100,-		;
		MINIM=60,-		;
		UNT=Pages,-		;
		DYNAMIC_FLAG=STATIC

;
; DEFAULT WORKING SET SIZE - SIZE OF SHELL WORKING SET
;
	.IF	NOT_DEFINED GETSYISW
	.IF	NDF,PRMSW		;
SGN$GW_DFWSCNT==PQL$GDWSDEFAULT		; SYNONYM
	.ENDC				;
	.ENDC	; NOT_DEFINED GETSYISW
	PQL	WSQUOTA,-		; WORKING SET QUOTA
		DEFLT=200,-		; 
		MINIM=60,-		;
		UNT=Pages		;

	PQL	WSEXTENT,-		; WORKING SET EXTENT
		DEFLT=200,-		; 
		MINIM=10,-		;
		UNT=Pages		;

	PQL	ENQLM,-			; ENQUEUE LIMIT
		DEFLT=30,-		;
		FLAG=DEDUCTIBLE,-	;
		MINIM=4,-		;
		UNT=Locks		;

	PQL	JTQUOTA,-		; JOB-WIDE LOGICAL NAME TABLE QUOTA
		DEFLT=1024,-		;
		MINIM=0,-		;
		UNT=Bytes		;

	.PAGE
	.SBTTL	FILE ACP CONFIGURATION DATA

;+
;
; File ACP configuration data. These parameters are used whenever an ACP is
; started up (or, in the case of per volume data, when a volume is mounted).
;
;-

;
; Number of blocks in bitmap cache.
;
	PARAMETER	ADDRESS=ACP$GW_MAPCACHE,-	;
			DEFAULT=8,-	;
			MIN=1,-		;
			NAME=ACP_MAPCACHE,-	;
			SIZE=WORD,-	;
			TYPE=<ACP,DYNAMIC>,-	;
			UNIT=Pages	;
;
; Number of blocks in file header cache.
;
	PARAMETER	ADDRESS=ACP$GW_HDRCACHE,-	;
			DEFAULT=128,-	;
			MIN=3,-		;
			NAME=ACP_HDRCACHE,-	;
			SIZE=WORD,-	;
			TYPE=<ACP,DYNAMIC>,-	;
			UNIT=Pages	;
;
; Number of blocks in file system directory data block cache.
;
	PARAMETER	ADDRESS=ACP$GW_DIRCACHE,-	;
			DEFAULT=80,-	;
			MIN=2,-		;
			NAME=ACP_DIRCACHE,-	;
			SIZE=WORD,-	;
			TYPE=<ACP,DYNAMIC>,-	;
			UNIT=Pages	;
;
; Number of pages in file system directory index cache.
;
	PARAMETER	ADDRESS=ACP$GW_DINDXCACHE,-	;
			DEFAULT=25,-	;
			MIN=2,-		;
			NAME=ACP_DINDXCACHE,-	;
			SIZE=WORD,-	;
			TYPE=<ACP,DYNAMIC>,-	;
			UNIT=Pages	;
;
; ACP working set in pages (0 means maximal)
;
	PARAMETER	ADDRESS=ACP$GW_WORKSET,-	;
			DEFAULT=0,-	;
			MIN=0,-		;
			NAME=ACP_WORKSET,-	;
			SIZE=WORD,-	;
			TYPE=<ACP,DYNAMIC>,-	;
			UNIT=Pages	;
;
; The following parameters are applied on a per volume basis.
;
;
; Number of cached index file slots
;
	PARAMETER	ADDRESS=ACP$GW_FIDCACHE,-	;
			DEFAULT=64,-	;
			MIN=0,-		;
			NAME=ACP_FIDCACHE,-	;
			SIZE=WORD,-	;
			TYPE=<ACP,DYNAMIC>,-	;
			UNIT=File-Ids	;
;
; Number of cached disk extents
;
	PARAMETER	ADDRESS=ACP$GW_EXTCACHE,-	;
			DEFAULT=64,-	;
			MIN=0,-		;
			NAME=ACP_EXTCACHE,-	;
			SIZE=WORD,-	;
			TYPE=<ACP,DYNAMIC>,-	;
			UNIT=Extents	;
;
; Maximum fraction of disk to cache in tenths of percent
;
	PARAMETER	ADDRESS=ACP$GW_EXTLIMIT,-	;
			DEFAULT=100,-	;
			MIN=0,-		;
			MAX=1000,-	;
			NAME=ACP_EXTLIMIT,-	;
			SIZE=WORD,-	;
			TYPE=<ACP,DYNAMIC>,-	;
			UNIT=<Percent/10>	;

;
; Number of quota file entries to cache
;
	PARAMETER	ADDRESS=ACP$GW_QUOCACHE,-
			DEFAULT=64,-
			MIN=0,-
			MAX=-1,-
			NAME=ACP_QUOCACHE,-
			SIZE=WORD,-
			TYPE=<ACP,DYNAMIC>,-
			UNIT=Users
;
; Default access for system volumes
;
	PARAMETER	ADDRESS=ACP$GW_SYSACC,-	;
			DEFAULT=8,-	;
			MIN=0,-		;
			NAME=ACP_SYSACC,-	;
			SIZE=WORD,-		;
			TYPE=<ACP,DYNAMIC>,-	;
			UNIT=Directories
;
; Maximum number of blocks to read at once for directories.
;
	PARAMETER	ADDRESS=ACP$GB_MAXREAD,-	;
			DEFAULT=32,-	;
			MIN=1,-		;
			MAX=64,-	;
			NAME=ACP_MAXREAD,-	;
			SIZE=BYTE,-	;
			TYPE=<ACP,DYNAMIC>,-	;
			UNIT=Blocks	;
;
; Default window size for system volumes.
;
	PARAMETER	ADDRESS=ACP$GB_WINDOW,-	;
			DEFAULT=7,-	;
			MIN=1,-		;
			NAME=ACP_WINDOW,-	;
			SIZE=BYTE,-	;
			TYPE=<ACP,DYNAMIC>,-	;
			UNIT=Pointers	;
;
; Deferred cache writeback enable.
;
	PARAMETER	ADDRESS=ACP$GB_WRITBACK,-
			DEFAULT=1,-
			MIN=0,-
			MAX=1,-
			NAME=ACP_WRITEBACK,-
			SIZE=BYTE,-
			TYPE=<ACP,DYNAMIC>,-
			UNIT=Boolean
;
; ACP datacheck enable flags.
;
	PARAMETER	ADDRESS=ACP$GB_DATACHK,-
			DEFAULT=2,-
			MIN=0,-
			MAX=3,-
			NAME=ACP_DATACHECK,-
			SIZE=BYTE,-
			TYPE=<ACP,DYNAMIC>,-
			UNIT=Bit-mask
;
; Containing the following flags:
;
	.IF	NDF,PRMSW		; Only for exec version of sysparam
	$GBLINI	GLOBAL
	$VIELD	ACP,0,<-
		<READCHK>-		; do datachecks on reads
		<WRITECHK>-		; do datachecks on writes
		>
	.ENDC				;
;
; The following parameters apply per ACP.
;
;
; ACP base priority
;
	PARAMETER	ADDRESS=ACP$GB_BASEPRIO,-	;
			DEFAULT=8,-	;
			MIN=4,-		;
			MAX=31,-	;
			NAME=ACP_BASEPRIO,-	;
			SIZE=BYTE,-	;
			TYPE=<ACP,DYNAMIC>,-	;
			UNIT=Priority
;
; ACP Swap flags
;
	PARAMETER	ADDRESS=ACP$GB_SWAPFLGS,-	;
			DEFAULT=<^B1111>,-	;.
			MIN=0,-		;
			MAX=15,-	;
			NAME=ACP_SWAPFLGS,-	;
			SIZE=BYTE,-	;
			TYPE=<ACP,DYNAMIC>-	;
			UNIT=Bit-mask
					; swappable, as follows:
	.IF	NDF,PRMSW		; Only for exec version of sysparam
	$GBLINI	GLOBAL
	$VIELD	ACP,0,<-
		<SWAPSYS>-		; /SYSTEM
		<SWAPGRP>-		; /GROUP
		<SWAPPRV>-		; other (private mount)
		<SWAPMAG>-		; magtape
		>
	.ENDC				;
;
; XQP memory resident control flag
;
	PARAMETER	ADDRESS=EXE$GL_STATIC_FLAGS,-
			DEFAULT=1,-
			MIN=0,-
			MAX=1,-
			NAME=ACP_XQP_RES,-
			BIT=EXE$V_XQP_RESIDENT,-
			TYPE=<ACP,STATIC>,-
			UNIT=Boolean
;
; System disk rebuild flag.
;
	PARAMETER	ADDRESS=EXE$GL_STATIC_FLAGS,-
			DEFAULT=1,-
			MIN=0,-
			MAX=1,-
			NAME=ACP_REBLDSYSD,-
			BIT=EXE$V_REBLDSYSD,-
			TYPE=<ACP,STATIC>,-
			UNIT=Boolean

	.IIF	NOT_DEFINED GETSYISW,	.ALIGN	LONG

	.PAGE
	.SBTTL	Job Controller Parameters
;
; Default Priority for Job Initiations
;
	PARAMETER	SYS$GB_DEFPRI,-	;
			DEFAULT=4,-	;
			MIN=1,-		;
			MAX=31,-	;
			NAME=DEFPRI,-	;
			SIZE=BYTE,-	;
			TYPE=<SYS,JBC,DYNAMIC>,-	;
			UNIT=Priority
;
; Limit for interactive Jobs
;
	PARAMETER	ADDRESS=SYS$GW_IJOBLIM,-	;
			DEFAULT=64,-	;
			MIN=1,-		;
			MAX=1024,-	;
			NAME=IJOBLIM,-	;	
			SIZE=WORD,-	;
			TYPE=<JBC,DYNAMIC>,-	;
			UNIT=Jobs
;
; Limit for batch Jobs
;
	PARAMETER	ADDRESS=SYS$GW_BJOBLIM,-	;
			DEFAULT=16,-	;
			MIN=0,-		;
			MAX=1024,-	;
			NAME=BJOBLIM,-	;
			SIZE=WORD,-	;
			TYPE=<JBC,DYNAMIC>,-	;
			UNIT=Jobs

;
; Limit for network Jobs
;
	PARAMETER	ADDRESS=SYS$GW_NJOBLIM,-	;
			DEFAULT=16,-	;
			MIN=0,-		;
			MAX=1024,-	;
			NAME=NJOBLIM,-	;
			SIZE=WORD,-	;
			TYPE=<JBC,DYNAMIC>,-	;
			UNIT=Jobs
;
; Limit for Remote Terminal Jobs
;
	PARAMETER	ADDRESS=SYS$GW_RJOBLIM,-	;
			DEFAULT=16,-	;
			MIN=0,-		;
			MAX=254,-	;
			NAME=RJOBLIM,-	;
			SIZE=WORD,-	;
			TYPE=<JBC,DYNAMIC>,-	;
			UNIT=Jobs
;
;	DEFQUEPRI - Default Queue Priority
;
	PARAMETER	ADDRESS=SYS$GB_DEFQUEPRI,-
			DEFAULT=4,-
			MAX=255,-
			MIN=0,-
			NAME=DEFQUEPRI,-
			TYPE=<JBC,DYNAMIC>,-
			UNIT=Priority
;
;	MAXQUEPRI - Maximum Queue Priority
;
	PARAMETER	ADDRESS=SYS$GB_MAXQUEPRI,-
			DEFAULT=4,-
			MAX=255,-
			MIN=0,-
			NAME=MAXQUEPRI,-
			TYPE=<JBC,DYNAMIC>,-
			UNIT=Priority

	.PAGE
	.SBTTL	Login Security Parameters
;
; Number of seconds that a dialup user has in which to enter the system 
; password before LOGINOUT goes away
;
	PARAMETER	ADDRESS=SYS$GB_PWD_TMO,-
			DEFAULT=30,-
			MIN=0,-
			MAX=255,-
			NAME=LGI_PWD_TMO,-
			SIZE=BYTE,-
			TYPE=<DYNAMIC,LGI>,-
			UNIT=Seconds

;
; Number of retries an interactive user has before the process goes away
;
	PARAMETER	ADDRESS=SYS$GB_RETRY_LIM,-
			DEFAULT=3,-
			MIN=0,-
			MAX=255,-
			NAME=LGI_RETRY_LIM,-
			SIZE=BYTE,-
			TYPE=<DYNAMIC,LGI>,-
			UNIT=Tries

;
; Number of seconds that a user has in which to attempt another login
; before the process goes away
;
	PARAMETER	ADDRESS=SYS$GB_RETRY_TMO,-
			DEFAULT=20,-
			MIN=0,-
			MAX=255,-
			NAME=LGI_RETRY_TMO,-
			SIZE=BYTE,-
			TYPE=<DYNAMIC,LGI>,-
			UNIT=Seconds

;
; Number of consecutive login failures before LOGINOUT begins evasive action
;
	PARAMETER	ADDRESS=SYS$GB_BRK_LIM,-
			DEFAULT=5,-
			MIN=0,-
			MAX=255,-
			NAME=LGI_BRK_LIM,-
			SIZE=BYTE,-
			TYPE=<DYNAMIC,LGI>,-
			UNIT=Failures

;
; Number of seconds that a suspect must be free of login failures before it is
; taken off the suspect list
;
	PARAMETER	ADDRESS=SYS$GL_BRK_TMO,-
			DEFAULT=300,-
			MIN=0,-
			MAX=-1,-
			NAME=LGI_BRK_TMO,-
			SIZE=LONG,-
			TYPE=<DYNAMIC,LGI>,-
			UNIT=Seconds

;
; Number of seconds that LOGINOUT should practice evasive action on an intruder
;
	PARAMETER	ADDRESS=SYS$GL_HID_TIM,-
			DEFAULT=300,-
			MIN=0,-
			MAX=-1,-
			NAME=LGI_HID_TIM,-
			SIZE=LONG,-
			TYPE=<DYNAMIC,LGI>,-
			UNIT=Seconds

	.PAGE
	.SBTTL	Cluster Parameters

;
;	VAXCLUSTER - Controls loading of cluster code
;		0: Never load
;		1: Load if SCSLOA is being loaded
;		2: Always load (and also load SCSLOA)
;
	PARAMETER	ADDRESS=CLU$GB_VAXCLUSTER, -	;
			DEFAULT=1,-	;
			MAX=2,-		;
			MIN=0,-		;
			NAME=VAXCLUSTER,-	;
			SIZE=BYTE,-	;
			TYPE=<CLUSTER>,-	;
			UNIT=Coded-value

;
; Quorum for an operable cluster
;
	PARAMETER	ADDRESS=CLU$GW_QUORUM,-
			DEFAULT=1,-
			MIN=1,-
			MAX=32767,-
			NAME=QUORUM,-
			SIZE=WORD,-
			TYPE=<CLUSTER>,-
			UNIT=Votes

;
; Number of votes this system contributes to quorum
;
	PARAMETER	ADDRESS=CLU$GW_VOTES,-
			DEFAULT=1,-
			MIN=0,-
			MAX=127,-
			NAME=VOTES,-
			SIZE=WORD,-
			TYPE=<CLUSTER>,-
			UNIT=Votes

;
; Interval during which to attempt reconnection to a remote system
;
	PARAMETER	ADDRESS=CLU$GW_RECNXINT,-
			DEFAULT=60,-
			MIN=1,-
			MAX=32767,-
			NAME=RECNXINTERVAL,-
			SIZE=WORD,-
			TYPE=<CLUSTER,DYNAMIC>,-
			UNIT=Seconds

;
; The cluster quorum disk name
;
	PARAMETER	ADDRESS=CLU$GB_QDISK,-
			DEFAULT=<^A/    />,-
			MIN=<^A/    />,-
			MAX=<^A/ZZZZ/>,-
			NAME=DISK_QUORUM,-
			SIZE=OCTA,-
			TYPE=<ASCII,CLUSTER>,-
			UNIT=Ascii

;
; Number of votes contributed by quorum disk
;
	PARAMETER	ADDRESS=CLU$GW_QDSKVOTES,-
			DEFAULT=1,-
			MIN=0,-
			MAX=127,-
			NAME=QDSKVOTES,-
			SIZE=WORD,-
			TYPE=<CLUSTER>,-
			UNIT=Votes

;
; Disk Quorum Inverval
;
	PARAMETER	ADDRESS=CLU$GW_QDSKINTERVAL,-
			DEFAULT=20,-
			MIN=1,-
			MAX=32767,-
			NAME=QDSKINTERVAL,-
			SIZE=WORD,-
			TYPE=<CLUSTER>,-
			UNIT=Seconds

;
; Define a parameter which determines the device allocation class for
; this system.  The device allocation class is used to derive a common
; lock resource name for multiple access paths to the same device.
;
	PARAMETER	ADDRESS=CLU$GL_ALLOCLS, -
			NAME=ALLOCLASS, -
			TYPE=<CLUSTER>, -
			DEFAULT=0, -
			MIN=0, -
			MAX=255, -
			UNIT=Pure-number

;
; Lock manager directory system weight.  Determines portion of lock
; manger directory entires which will be handled by this system.
;
	PARAMETER	ADDRESS=CLU$GW_LCKDIRWT,-
			DEFAULT=1,-
			MIN=0,-
			MAX=255,-
			NAME=LOCKDIRWT,-
			SIZE=WORD,-
			TYPE=<CLUSTER>,-
			UNIT=Pure-number

;
; Define a parameter which tells us whether or not this system is tailored
; (i.e., has a library disk).  This is the right way to determine tailoring
; now that many different system disks can be tailored.
;
	PARAMETER	ADDRESS=SGN$GB_TAILORED,-
			DEFAULT=0,-
			MAX=1,-
			MIN=0,-
			NAME=TAILORED,-
			SIZE=BYTE,-
			TYPE=<SYS>,-
			UNIT=Boolean

	.IF	NOT_DEFINED GETSYISW
;
; WORK STATION FLAGS.
;
	.ALIGN	LONG			;
	.IF	NDF,PRMSW		;
EXE$GL_WSFLAGS::			; Work station SYSGEN flags
	.ENDC	; NDF,PRMSW
	.LONG	0;
	.ENDC	; NOT_DEFINED GETSYISW

	$VIELD	EXE,0,<-		; DEFINITION FOR EXE$GL_DYNAMIC_FLAGS
		OPA0,-			; Reserve a window for OPA0
	>

;
;	WS_OPA0 -	If set reserve the first 24 scan lines for an OPA0 window
;
	PARAMETER	ADDRESS=exe$gl_wsflags,-;
			DEFAULT=0,-	;
			MAX=1,-		;
			MIN=0,-		;
			NAME=WS_OPA0,-	;
			BIT=EXE$V_OPA0,-;
			TYPE=<DYNAMIC,SYS>,-;
			UNIT=Boolean

;
; Define eight parameters which are used to pass information to the system
; startup procedure (STARTUP.COM).
;
	PARAMETER	ADDRESS=SGN$GB_STARTUP_P1,-
			DEFAULT=<^A/    />,-
			MIN=<^A/    />,-
			MAX=<^A/zzzz/>,-
			NAME=STARTUP_P1,-
			SIZE=LONG,-
			TYPE=<ASCII,SYS>,-
			UNIT=Ascii
	PARAMETER	ADDRESS=SGN$GB_STARTUP_P2,-
			DEFAULT=<^A/    />,-
			MIN=<^A/    />,-
			MAX=<^A/zzzz/>,-
			NAME=STARTUP_P2,-
			SIZE=LONG,-
			TYPE=<ASCII,SYS>,-
			UNIT=Ascii
	PARAMETER	ADDRESS=SGN$GB_STARTUP_P3,-
			DEFAULT=<^A/    />,-
			MIN=<^A/    />,-
			MAX=<^A/zzzz/>,-
			NAME=STARTUP_P3,-
			SIZE=LONG,-
			TYPE=<ASCII,SYS>,-
			UNIT=Ascii
	PARAMETER	ADDRESS=SGN$GB_STARTUP_P4,-
			DEFAULT=<^A/    />,-
			MIN=<^A/    />,-
			MAX=<^A/zzzz/>,-
			NAME=STARTUP_P4,-
			SIZE=LONG,-
			TYPE=<ASCII,SYS>,-
			UNIT=Ascii
	PARAMETER	ADDRESS=SGN$GB_STARTUP_P5,-
			DEFAULT=<^A/    />,-
			MIN=<^A/    />,-
			MAX=<^A/zzzz/>,-
			NAME=STARTUP_P5,-
			SIZE=LONG,-
			TYPE=<ASCII,SYS>,-
			UNIT=Ascii
	PARAMETER	ADDRESS=SGN$GB_STARTUP_P6,-
			DEFAULT=<^A/    />,-
			MIN=<^A/    />,-
			MAX=<^A/zzzz/>,-
			NAME=STARTUP_P6,-
			SIZE=LONG,-
			TYPE=<ASCII,SYS>,-
			UNIT=Ascii
	PARAMETER	ADDRESS=SGN$GB_STARTUP_P7,-
			DEFAULT=<^A/    />,-
			MIN=<^A/    />,-
			MAX=<^A/zzzz/>,-
			NAME=STARTUP_P7,-
			SIZE=LONG,-
			TYPE=<ASCII,SYS>,-
			UNIT=Ascii
	PARAMETER	ADDRESS=SGN$GB_STARTUP_P8,-
			DEFAULT=<^A/    />,-
			MIN=<^A/    />,-
			MAX=<^A/zzzz/>,-
			NAME=STARTUP_P8,-
			SIZE=LONG,-
			TYPE=<ASCII,SYS>,-
			UNIT=Ascii

	.IF	NOT_DEFINED GETSYISW

	.PAGE
	.SBTTL	COMPUTED VALUES
	.ALIGN	LONG			;
	DEFINE	SWP$GL_SHELLSIZ		; PAGES REQUIRED FOR SHELL
	.LONG	0			;

	DEFINE	SWP$GW_BAKPTE		; PHD PAGES FOR BAK+WSLX+LCK+VAL
	.WORD	0			;

	DEFINE	SWP$GW_EMPTPTE		; EMPTY PHDPAGES
	.WORD	0			;

	DEFINE	SWP$GW_WSLPTE		; PHD PAGES FOR FIXED+WSL+PST
	.WORD	0			;

	DEFINE	SWP$GB_SHLP1PT		; P1 PAGE TABLES REQUIRED FOR SHELL
	.BYTE	0			;

	.BYTE	0			; SPARE

	DEFINE	SWP$GL_BSLOTSZ		; SIZE OF BALANCE SLOT
	.LONG	0			;

	DEFINE	SWP$GL_MAP		; SWAPPER MAP POINTER
	.LONG	0			;

	DEFINE	SWP$GL_PHDBASVA		; BASE ADDRESS OF PHD WINDOW
	.LONG	0			;

	DEFINE	SGN$GL_PHDAPCNT		; TOTAL SHELL HEADER PAGES
	.LONG	0			;

	DEFINE	SGN$GL_PHDLWCNT		; COUNT OF LONGWORDS IN PHD
	.LONG	0			;

	DEFINE	SGN$GL_P1LWCNT		; COUNT OF LW TO END OF P1 PAGETABLE
	.LONG	0			;

	DEFINE	SGN$GL_PHDPAGCT		; TOTAL PHD PAGES LESS PAGE TABLES
	.LONG	0			;

	DEFINE	SGN$GL_PTPAGCNT		; TOTAL PAGE TABLE COUNT
	.LONG	0			;

	DEFINE	MMG$GL_CTLBASVA		; BASE ADDRESS IN CONTROL REGION
	.LONG	0			;

;
;	THE FOLLOWING TWO CELLS MUST BE ADJACENT
;
	DEFINE	EXE$AL_STACKS		; ARRAY OF KERNEL MODE SYSTEM SPACE STACKS
	.LONG	SWP$A_KSTK		; SWAPPER STACK (ADJACENT TO NULL STACK)
	DEFINE	EXE$GL_INTSTK		; BASE OF INTERRUPT STACK
	.LONG	0			;
;
;	THE PRECEDING TWO LONG WORDS MUST BE ADJACENT.
;

	DEFINE	MMG$GL_GPTBASE		; GLOBAL PAGE TABLE BASE ADDRESS
	.LONG	0			;

	DEFINE	MMG$GL_GPTE		; BASE ADDRESS OF SPT PTES FOR GPT
	.LONG	0			; PAGES

	DEFINE	MMG$GL_MAXGPTE		; HIGHEST GPTE ADDRESS
	.LONG	0			;

	DEFINE	MMG$GL_MAXSYSVA		; HIGHEST SYSTEM VA (+1)
	DEFINE	MMG$GL_FRESVA		; SYNONYM
	.LONG	0			;

	DEFINE	MMG$GL_SPTBASE		; BASE ADDRESS OF SPT (VIRTUAL)
	.LONG	0			;

	DEFINE	MMG$GL_SPTLEN		; LENGTH OF SYSTEM PAGE TABLE
	.LONG	0			;

	DEFINE	MMG$GL_SYSPHD		; VA OF SYSTEM PHD
	.LONG	0			;

	DEFINE	MMG$GL_SYSPHDLN		; SIZE OF SYSTEM PHD IN BYTES
	.LONG	0			;

	DEFINE	SWP$GL_BALBASE		; BASE VA OF BALANCE SLOTS FOR 
	.LONG	0			; PROCESS HEADERS

	DEFINE	SWP$GL_BALSPT		; BASE VA IN SPT FOR MAPPING BALANCE
	.LONG	0			; SLOTS

	DEFINE	MMG$GL_SBR		; SYSTEM BASE REGISTER
	.LONG	0			;

	DEFINE	MMG$GL_NPAGEDYN		; VA OF NON-PAGED POOL
	.LONG	0			;

	DEFINE	MMG$GL_NPAGNEXT		; NEXT VA FOR NON-PAGED POOL EXTENSION
	.LONG	0			;

	DEFINE	MMG$GL_IRPNEXT		; NEXT VA FOR IRP LIST EXTENSION
	.LONG	0			;

	DEFINE	MMG$GL_LRPNEXT		; NEXT VA FOR LRP LIST EXTENSION
	.LONG	0			;

	DEFINE	MMG$GL_SRPNEXT		; NEXT VA FOR SRP LIST EXTENSION
	.LONG	0			;

	DEFINE	MMG$GL_PAGEDYN		; VA OF PAGED POOL
	.LONG	0			;

	DEFINE	MMG$GL_MAXPFN		; MAXIMUM PFN FOR SYSTEM
	.LONG	0			;

	DEFINE	MMG$GL_MINPFN		; MINIUMUM PFN IN PFN DATABASE
	.LONG	0			;

	DEFINE	MMG$GL_MAXMEM		; HIGHEST PFN MAPPED BY SYSBOOT
	.LONG	0			; INCLUDES PAGES NOT IN PFN DATABASE

	DEFINE	EXE$GL_RPB		; VIRTUAL ADDRESS OF RESTART PARAMETER BLK
	.LONG	0			;

	DEFINE	BOO$GL_SPTFREL		; LOWER VPN OF SPT FREE AREA
	.LONG	0			;

	DEFINE	BOO$GL_SPTFREH		; HIGHER VPN OF SPT FREE AREA
	.LONG	0			;

	DEFINE	EXE$GL_SCB		; VIRTUAL ADDRESS OF SCB
	.LONG	0			;

	DEFINE	EXE$GL_ARCHFLAG		; ARCHITECTURAL FLAGS (BITS DEFINED
	.LONG	0			; BY $ARCDEF

	DEFINE	EXE$GB_CPUDATA		; 16 BYTES OF DATA ABOUT THE CPU
	.LONG	0,0,0,0			; 4 BYTES FOR SID, REST CPU SPECIFIC

	DEFINE	EXE$GB_CPUTYPE		; CPU TYPE READ FROM SID
	.BYTE	0			;

	.IF	NDF,PRMSW		; SIZE OF PFN DATA BASE IN BYTES 
	PFN$C_WORD_LEN == 18		;  ... with word length FLINK and BLINK
	PFN$C_LONG_LEN == 22		;  ... with longword length FLINK and BLINK
	.ENDC				;

	DEFINE	PFN$GB_LENGTH		; Number of bytes per page in PFN data base
	.BYTE	PFN$C_WORD_LEN		; Defaults to word length FLINK and BLINK

	DEFINE	MMG$GW_BIGPFN 		; Flag to indicate size of PFN FLINK, BLINK
	.WORD	0			; word for historical reasons

	DEFINE	EXE$GW_PGFL_FID		; FILE ID OF PAGEFILE.SYS
	.WORD	0,0,0			; IF FILE IS IN PAGE FILE

	.ALIGN	LONG			; LONWORD ALIGN POINTERS
	DEFINE	PFN$A_BASE		; BASE OF PFN POINTERS
	PFNALC	L,PTE			; ADDRESS OF PAGE TABLE ENTRY
	PFNALC	L,BAK			; BACKING STORE ADDRESS
	PFNALC	W,REFCNT		; REFERENCE COUNT
	PFNALC	x,<FLINK,-		; FORWARD LINK
		SHRCNT>			; ALSO USED AS GLOBAL SHARE COUNT
	PFNALC	x,<BLINK,-		; BACK LINK
		WSLX>			; ALSO USED AS WORKING SET LIST INDEX
	PFNALC	W,SWPVBN		; SWAP IMAGE VIRTUAL BLOCK OFFSET
	PFNALC	B,STATE			; STATE OF PAGE
	PFNALC	B,TYPE			; TYPE OF PAGE

	DEFINE	EXE$GT_STARTUP		; NAME OF STARTUP COMMAND FILE
	.ASCIC	/SYS$SYSTEM:STARTUP.COM/; DEFAULT VALUE
	.BLKB	<32-<.-EXE$GT_STARTUP>>	; ALLOW FOR 31 BYTES + COUNT
	.IF	NDF,PRMSW		; IF EXEC VERSION
EXE$C_SYSPARSZ==.-EXE$A_SYSPARAM	; SIZE OF SYSTEM PARAMETERS
	.IFF				;
	.PSECT	$$$918,LONG		;
	.LONG	0			; FLAG TO MARK END
	.ENDC				;

	.PAGE
	.SUBTITLE	MMG$GL_PGDCOD	Boundary of pageable exec
;-
;  The cells in this module between the definition of EXE$C_SYSPARSZ and
;  the definition of BOO$C_SYSPARSZ are used for communication between
;  SYSBOOT and SYS.EXE without interference from the SYSGEN USE and WRITE
;  commands. SYSBOOT uses BOO$C_SYSPARSZ as the size of the parameter area.
;  SYSGEN uses EXE$C_SYSPARSZ as its size constant and so SYSGEN commands
;  do not affect the contents of cells that follow the definition of
;  EXE$C_SYSPARSZ. 
;  
;  The cell called MMG$GL_PGDCOD contains the address of the boundary
;  between the nonpaged and pageable exec routines. This cell is used by
;  both INIT and SYSBOOT. It is initialized by SYSBOOT to point to the
;  beginning of the second page of patch area that lies between nonpaged
;  and pageable exec routines. If it is necessary to add another page of
;  nonpaged patch space, then this cell (from BOO$GL_PGDCOD in SYSBOOT) and
;  the first longword of the descriptor for the nonpaged read-only patch area
;  must have 512 added to their contents. 
;-

	.IF	NDF,PRMSW
	.PSECT	$$$917
	.IFF
	.PSECT	$$$917A
	.ENDC

	DEFINE		MMG$GL_PGDCOD	; CELL THAT CONTAINS BOUNDARY
	DEFINE		PAT$GL_EXP_NPG2	; (SYNONYM)
	.LONG	0

	.IF	NDF,PRMSW

BOO$C_SYSPARSZ==.-EXE$A_SYSPARAM	; SIZE OF PARAMETER AREA READ BY SYSBOOT

;
;  Bound pagable exec code to page boundary and define
;  starting virtual address of this region.
;

	.PSECT	Y$$$BEGIN_PAGEDCODE,PAGE
	.ENDC

	.ENDC		; NOT_DEFINED GETSYISW

;
; Terminate the definition of the macro
;
	.ENDM	SYI_GENERATE_TABLE

;
; Invoke the macro just defined (if this isn't getsyi)
;
	.IIF	NOT_DEFINED GETSYISW,	SYI_GENERATE_TABLE

	.IIF	NOT_DEFINED GETSYISW,	.END	; PREFIX FILE, IF GETSYISW
