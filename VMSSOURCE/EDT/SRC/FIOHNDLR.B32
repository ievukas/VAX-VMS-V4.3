%TITLE 'EDT$FIOHNDLR - file I/O condition handler'
MODULE EDT$FIOHNDLR (				! file I/O condition hanndler
		IDENT = 'V04-000'			! File: FIOHNDLR.B32 Edit: JBS1016
		) =
BEGIN
!
!****************************************************************************
!*									    *
!*  COPYRIGHT (c) 1978, 1980, 1982, 1984 BY				    *
!*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
!*  ALL RIGHTS RESERVED.						    *
!* 									    *
!*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
!*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
!*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
!*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
!*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
!*  TRANSFERRED.							    *
!* 									    *
!*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
!*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
!*  CORPORATION.							    *
!* 									    *
!*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
!*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
!* 									    *
!*									    *
!****************************************************************************
!

!++
! FACILITY:	EDT -- The DEC Standard Editor
!
! ABSTRACT:
!
!	Condition handler enabled for all file I/O
!
! ENVIRONMENT:	Runs on Vax/Vms
!
! AUTHOR: Shelly T. Solomon, CREATION DATE: 04-Jan-1982
!
! MODIFIED BY:
!
! 1-001	- Original.  STS 04-Jan-1982
! 1-002 - Fixed command file error.  STS 14-Jan-1982
! 1-003 - Catch open errors. STS 25-Feb-1982
! 1-004 - Add literals for callablre parameters. STS 08-Mar-1982
! 1-005	- Change EDT$$G_CMD to EDT$$V_OPTIONS.  JBS 18-Mar-1982
! 1-006	- If we unwind, make sure there is a bad status code in R0.  JBS 26-mar-1982
! 1-007	- Revise offsets into the signal args to reflect the new signaling
!	   in FILEIO -- the RMS STS is now always in the fourth longword.  JBS 29-Mar-1982
! 1-008	- Put in lots more error checking.  JBS 29-Mar-1982
! 1-009 - Catch read and write errors and unwind. STS 14-Jul-1982
! 1-010 - Set abort write flag if error on get. STS 05-Aug-1982
! 1-011 - Make use of bit masks for options word. STS 17-Aug-1982
! 1-012	- Fix up references to EDT$M_ symbols.  JBS 23-Aug-1982
! 1-013	- Don't alter returned R0 when unwinding.  JBS 23-Feb-1983
! 1-014	- If we resignal, arrange to rebuild the screen if we are continued.  JBS 22-Mar-1983
! 1-015	- Remove some unreachable code.  JBS 23-Mar-1983
! 1-016	- Improve the appearance of the listing.  JBS 14-Jun-1983
!--


%SBTTL 'Declarations'
!
! TABLE OF CONTENTS:
!

REQUIRE 'EDTSRC:TRAROUNAM';

FORWARD ROUTINE
    EDT$$FIOHNDLR;

!
! INCLUDE FILES:
!

REQUIRE 'EDTSRC:EDTREQ';

REQUIRE 'EDTSRC:SYSSYM';

!
! MACROS:
!
!	NONE
!
! EQUATED SYMBOLS:
!
!	NONE
!
! FIELDS:
!
!	NONE
!
! OWN STORAGE:
!
!  in the routine
!
! EXTERNAL REFERENCES:
!
! in the routine
!

%SBTTL 'EDT$$FIOHNDLR - condition handler for file I/O'

GLOBAL ROUTINE EDT$$FIOHNDLR (			! Condition handler for file I/O
    SIG, 					! Signal arguments
    MECH, 					! Mechanism arguments
    ENBL					! Enable arguments
    ) =

!++
! FUNCTIONAL DESCRIPTION:
!
!	This is the condition handler for file I/O.  It intercepts
!	the non-fatal conditions, such as file not found, and unwinds
!	to the caller of EDT$$CALLFIO.  Errors not recognized are
!	resignaled to the caller to EDT$EDIT.  Just in case that caller
!	has a handler which does a continue, arrange to reset and rebuild
!	the screen if the screen updater regains control, and stop the
!	working message so it won't interfere with whatever the user
!	may have in mind.
!
! FORMAL PARAMETERS:
!
!	Usual for condition handlers.
!
! IMPLICIT INPUTS:
!
!	NONE
!
! IMPLICIT OUTPUTS:
!
!	EDT$$G_IOFI_NFND	1 = error was "file not found"
!	EDT$$G_ABT_WRITE	1 = abort the current WRITE or EXIT operation.
!	EDT$$G_SCR_CHGD		2 = reset and rebuild screen on continue
!
! COMPLETION STATUS:
!
!	As usual for condition handlers
!
! SIDE EFFECTS:
!
!	NONE
!
!--

    BEGIN

    EXTERNAL ROUTINE
	EDT$$STOP_WKINGMSG : NOVALUE;		! Stop the WORKING message

    EXTERNAL
	EDT$$G_ABT_WRITE,
	EDT$$A_IO_FNAM,
	EDT$$G_IO_STS,
	EDT$$G_IO_STV,
	EDT$$G_IOFI_NFND,
	EDT$$G_SCR_REBUILD;

    EXTERNAL LITERAL
	EDT$K_COMMAND_FILE,
	EDT$K_INPUT_FILE,
	EDT$K_INCLUDE_FILE,
	EDT$K_WRITE_FILE,
	EDT$K_OUTPUT_FILE,
	EDT$K_PUT,
	EDT$K_GET,
	EDT$K_OPEN_INPUT,
	EDT$K_OPEN_OUTPUT_NOSEQ,
	EDT$K_OPEN_OUTPUT_SEQ;

    MAP
	SIG : REF VECTOR,
	MECH : REF VECTOR,
	ENBL : REF VECTOR;

    BIND
	FCODE = .ENBL [2],
	RET_VALUE = MECH [3],
	STREAM = .ENBL [1];

    LOCAL
	STATUS;

    IF ((.SIG [0] EQL 1) AND (.SIG [1] EQL SS$_UNWIND))
    THEN
	BEGIN
!+
! We are unwinding.
!-
	RETURN (SS$_CONTINUE);
	END;

    IF ((.SIG [0] NEQ 7) OR (.SIG [2] NEQ 1))
    THEN
	BEGIN
!+
! If we are continued, reset and rebuild the screen.  There is no telling
! what a user might do in his own handler before continuing us.
!-
	EDT$$G_SCR_REBUILD = 2;
!+
! Also, stop the working message, so it won't interfere with whatever the
! user may have in mind.
!-
	EDT$$STOP_WKINGMSG ();
	RETURN (SS$_RESIGNAL);
	END;

!+
! This is probably a signal from the file I/O routine.
! Set up the message vector for the call to EDT$$IO_ERRMSG
! and save the filename signalled with
!-
    EDT$$G_IO_STS = .SIG [4];
    EDT$$G_IO_STV = .SIG [5];
    EDT$$A_IO_FNAM = .SIG [3];

    SELECTONE .STREAM OF
	SET

	[EDT$K_COMMAND_FILE] :
	    BEGIN

	    IF (.SIG [4] EQL RMS$_FNF)		! File not found
	    THEN
		BEGIN
		EDT$$G_IOFI_NFND = 1;		! set file not found flag
		SETUNWIND ();			! everything O.K., continue (caller will print message)
		RETURN (SS$_CONTINUE);
		END
	    ELSE
!+
! Not "file not found", resignal the error.
!-
		BEGIN
!+
! If we are continued, reset and rebuild the screen.  There is no telling
! what a user might do in his own handler before continuing us.
!-
		EDT$$G_SCR_REBUILD = 2;
!+
! Also, stop the working message, so it won't interfere with whatever the
! user may have in mind.
!-
		EDT$$STOP_WKINGMSG ();
		RETURN (SS$_RESIGNAL);
		END;

	    END;

	[EDT$K_INPUT_FILE] :
	    BEGIN

	    IF (.SIG [4] EQL RMS$_FNF)
	    THEN
		BEGIN
		EDT$$G_IOFI_NFND = 1;		! set file not found flag
		SETUNWIND ();			! everything O.K., continue
		RETURN (SS$_CONTINUE);
		END
	    ELSE

		IF (.FCODE EQL EDT$K_GET)
		THEN
		    BEGIN
		    EDT$$G_ABT_WRITE = 1;
		    SETUNWIND ();
		    RETURN (SS$_CONTINUE);
		    END
		ELSE
		    BEGIN
!+
! If we are continued, reset and rebuild the screen.  There is no telling
! what a user might do in his own handler before continuing us.
!-
		    EDT$$G_SCR_REBUILD = 2;
!+
! Also, stop the working message, so it won't interfere with whatever the
! user may have in mind.
!-
		    EDT$$STOP_WKINGMSG ();
		    RETURN (SS$_RESIGNAL);
		    END;

	    END;

	[EDT$K_INCLUDE_FILE, EDT$K_WRITE_FILE, EDT$K_OUTPUT_FILE] :
	    BEGIN
!+
! Any error opening any of the above files is not considered fatal.
!-

	    IF ((.FCODE EQL EDT$K_OPEN_INPUT) OR 	!
		(.FCODE EQL EDT$K_OPEN_OUTPUT_NOSEQ) OR 	!
		(.FCODE EQL EDT$K_OPEN_OUTPUT_SEQ))
	    THEN
		BEGIN
!+
! If the error is "file not found" (only possible with INCLUDE) then
! give a more-specific message.
!-

		IF (.SIG [4] EQL RMS$_FNF) THEN EDT$$G_IOFI_NFND = 1;

		SETUNWIND ();
		RETURN (SS$_CONTINUE);
		END
	    ELSE

		IF ((.FCODE EQL EDT$K_PUT) OR (.FCODE EQL EDT$K_GET))
		THEN
		    BEGIN
		    EDT$$G_ABT_WRITE = 1;
		    SETUNWIND ();
		    RETURN (SS$_CONTINUE);
		    END
		ELSE
		    BEGIN
!+
! If we are continued, reset and rebuild the screen.  There is no telling
! what a user might do in his own handler before continuing us.
!-
		    EDT$$G_SCR_REBUILD = 2;
!+
! Also, stop the working message, so it won't interfere with whatever the
! user may have in mind.
!-
		    EDT$$STOP_WKINGMSG ();
		    RETURN (SS$_RESIGNAL);
		    END;

	    END;

	[OTHERWISE] :
	    BEGIN
!+
! If we are continued, reset and rebuild the screen.  There is no telling
! what a user might do in his own handler before continuing us.
!-
	    EDT$$G_SCR_REBUILD = 2;
!+
! Also, stop the working message, so it won't interfere with whatever the
! user may have in mind.
!-
	    EDT$$STOP_WKINGMSG ();
	    RETURN (SS$_RESIGNAL);
	    END;
	TES;

    END;					! of routine EDT$$FIOHNDLR

!<BLF/PAGE>

END						! of module EDT$FIOHNDLR

ELUDOM
