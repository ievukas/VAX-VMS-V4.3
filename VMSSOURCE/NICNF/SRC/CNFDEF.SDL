{	CNFDEF.SDL
{	Ident 'V04-000'
{
{****************************************************************************
{*									    *
{*  COPYRIGHT (c) 1978, 1980, 1982, 1984 BY				    *
{*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
{*  ALL RIGHTS RESERVED.						    *
{* 									    *
{*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
{*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
{*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
{*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
{*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
{*  TRANSFERRED.							    *
{* 									    *
{*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
{*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
{*  CORPORATION.							    *
{* 									    *
{*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
{*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
{* 									    *
{*									    *
{****************************************************************************
{
{   CREATED BY:		Bob Grosso	CREATION DATE:	15-Oct-1982
{
{   MODIFIED BY:
{
{

module CNFDEF;

	constant (

	    NICE
	    ,TRACE
	    ,VM

	    ) equals 0 increment 1 prefix DBG tag $C;


{
{	Define incoming request block
{

  aggregate IRBDEF structure prefix IRB$;

    LINK 	longword;				/* link to next in chain
    BLINK 	longword;				/* back link

    SIZE 	word;					/* 
    CHAN 	word;					/* 

    IOSB 	word;					/* First word of IO Status Block
    IOSB1 	word;					/* second word of IO Status Block
    IOSB2 	longword;				/* Second longword of IOSB

    BNR_FLINK	longword;				/* Forward link to bufferred NICE responses
    BNR_BLINK	longword;				/* Backward link to bufferred NICE responses

    NICE_LEN	word;					/* Length of last NICE message transmitted
    FREE_LEN	word;					/* Length to deallocate
    NICE_ADR	longword;				/* Address of last NICE message transmitted

    NCBLEN 	byte;					/* Length of Network Control Block
    NCB 	character length 64;			/* NCB
       constant MAXNCBLEN equals 64 prefix IRB$ tag C;	/* maximum length of NCB

    REQUEST 	character length 250;			/* request
       constant MAXRQSTLEN equals 250 prefix IRB$ tag C;
       constant "LENGTH" equals . prefix IRB$ tag C;	/* length of block

  end IRBDEF;


{
{	Define Bufferred NICE Responses
{

  aggregate BNRDEF structure prefix BNR$;

    FLINK 	longword;				/* link to next in chain
    BLINK 	longword;				/* back link

    "LENGTH" 	word;					/* size of header and message
    FREE_LEN	word;
    ADDRESS	longword;

       constant "LENGTH" equals . prefix BNR$ tag C;	/* length of block

  end BNRDEF;

{
{	Define Circuit surveillance block
{

  aggregate CIRDEF structure prefix CIR$;

    LINK	longword;				/* link to next in chain
    BLINK	longword;				/* back link

    SIZE	word;					/* 
    SURVEIL	byte;					/* Mark that surveillance is enabled
	/* Use NMA$C_SUR_ENA and NMA$C_SUR_DIS
    SPARE	byte;					/* Mark that surveillance QIO has been cancelled

    IOSB	word;					/* IO status block
    IOSB1	word;
    IOSB2	longword;

    CHAN	word;					/* Channel for read QIO
    CIRNAMLEN 	word;					/* Length of Network Control Block
    CIRNAM	character length 16;			/* NCB
       constant MAXCIRLEN equals 16 prefix CIR$ tag C;	/* maximum length of NCB
    DEVNAMLEN word;					/* Length of Network Control Block
    DEVNAM	character length 6;			/* NCB
       constant MAXDEVLEN equals 6 prefix CIR$ tag C;	/* maximum length of NCB
    ELAPSDTIM	quadword;				/* Ammount of time circuit has been under surveillance

    SYSIDMBUF	longword;				/* Buffer to contain System Id Message
    ADRTYPBUF	longword;				/* Pointer to buffer to contain current address and message protocol type
    SIDFLINK	longword;				/* List head for system id information gathered
    SIDBLINK   	longword;				/* List tail for system id information gathered
       constant "LENGTH" equals . prefix CIR$ tag C;	/* length of block

  end CIRDEF;

{
{	Define System ID storage
{	The pointer to list of SID's is contained in the CIR
{

  aggregate SIDDEF structure prefix SID$;

    LINK	longword;				/* link to next in chain
    BLINK	longword;				/* back link
    SIZE	word;					/* 

    HRDWADR	character length 6;			/* Hardware address
    CURADR	character length 6;			/* Current address
       constant ADRLEN equals 6 prefix SID$ tag C;	/* 
    LSTREPORT	quadword;				/* Time when last System ID was recieved
    MOPVER	byte;					/* MOP version
    MOPECO	byte;					/* MOP ECO
    MOPUSRECO	byte;					/* MOP User ECO
    NUMFUNC	byte;					/* 
    FUNCTIONS	word;					/* 
	constant MAXFUNC equals 16 prefix SID$ tag C;	/* Maximum number of Function codes permitted
    DEVICE	byte;					/* 
       constant "LENGTH" equals . prefix SID$ tag C;	/* length of block

  end SIDDEF;


{
{	Describe the System ID Message buffer contents.
{

	constant MOPVERTYP equals 1 prefix SIM$ tag C;		/* 
	constant FUNCTNTYP equals 2 prefix SIM$ tag C;		/* 
	constant HDWADRTYP equals 7 prefix SIM$ tag C;		/* 
	constant DEVICETYP equals 100 prefix SIM$ tag C;	/* 


end_module CNFDEF;
