	.TITLE	'CHGSYSPAR, propogate certain SYSGEN parameters from V3 to V4'
	.IDENT	/V04-000/
	.PSECT	$CODE,RD,WRT,EXE,LONG

;
;****************************************************************************
;*									    *
;*  COPYRIGHT (c) 1978, 1980, 1982, 1984 BY				    *
;*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
;*  ALL RIGHTS RESERVED.						    *
;* 									    *
;*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
;*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
;*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
;*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
;*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
;*  TRANSFERRED.							    *
;* 									    *
;*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
;*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
;*  CORPORATION.							    *
;* 									    *
;*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
;*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
;* 									    *
;*									    *
;****************************************************************************

;++
;
; FACILITY:
;
; ABSTRACT:
;		This program alters the setting of the V4 SYSGEN parameter
;		SCSSYSTEMID to the previous V3 setting.
;
; ENVIRONMENT:	VAX/VMS OPERATING SYSTEM
;
;--

;
; AUTHOR:	J E Johnson		CREATION DATE:	11-Jul-1984
;
; MODIFIED BY:
;

;********************************************************************
;********************************************************************
;
;	THIS IS A TEMPORARY PROGRAM TO ASSIST THE V3 -> V4
;	UPGRADE IN A CLUSTER ENVIRONMENT.
;
;	DESTROY AFTER V4.0....
;
;********************************************************************
;********************************************************************

	$SSDEF

;
; EQUATES
;

V4PARLEN =	15 * 512		; V4 SYSGEN parameter file byte length
V3PARLEN =	 9 * 512		; V3 SYSGEN parameter file byte length

;
; OWN STORAGE
;

V4PAR_BUF:	.BLKB	V4PARLEN		; V4 parameter file storage
V3PAR_BUF:	.BLKB	V3PARLEN		; V3 parameter file storage

V4PAR_FAB:	$FAB	FNM = <CHGSCS$V4_PARFILE>,-
			FAC = <GET,PUT,UPD,BIO>

V3PAR_FAB:	$FAB	FNM = <CHGSCS$V3_PARFILE>,-
			FAC = <GET,BIO>

V4PAR_RAB:	$RAB	FAB = V4PAR_FAB,-
			ROP = <UIF,BIO>,-
			UBF = V4PAR_BUF,-
			RBF = V4PAR_BUF,-
			USZ = V4PARLEN,-
			RSZ = V4PARLEN,-
			BKT = 1

V3PAR_RAB:	$RAB	FAB = V3PAR_FAB,-
			UBF = V3PAR_BUF,-
			USZ = V3PARLEN,-
			BKT = 1

SCSSYSTEMID:	.ASCII	/SCSSYSTEMID/
SCSSYSTEMID_LEN	=	.-SCSSYSTEMID

	.ENTRY	SET_VAXVMSSYS,^M<>

	MOVAB	V3PAR_RAB,R11
	MOVAB	V4PAR_RAB,R10
;
; Open the V3 parameter file
;

	$OPEN	FAB = V3PAR_FAB
	BLBS	R0,10$
	BRW	EXIT
10$:	$CONNECT RAB = R11
	BLBS	R0,20$
	BRW	EXIT

;
; Open the V4 parameter file
;

20$:	$OPEN	FAB = V4PAR_FAB
	BLBS	R0,30$
	BRW	EXIT
30$:	$CONNECT RAB = R10
	BLBC	R0,EXIT

;
; Read in the V3 parameter file, find the setting of
; SCSSYSTEMID, and close the V3 parameter file.
;
	$READ	RAB = R11
	BLBC	R0,EXIT

	MOVAB	V3PAR_BUF,R2			; V3 parameter buffer
	MOVZWL	#V3PARLEN,R3			; length of the V3 parameter buf
	MOVAB	SCSSYSTEMID,R4			; string we're looking for
	MOVL	#SCSSYSTEMID_LEN,R5		; and its length
	BSBB	FIND_SYSGEN_PARAM		; find the parameter
	MOVL	R0,R8				; Store ptr into V3 parameters

	$DISCONNECT -
		RAB = R11			; Now we're
	BLBC	R0,EXIT				; done with the
	$CLOSE	FAB = V3PAR_FAB			; V3 file.
	BLBC	R0,EXIT

;
; Read in the V4 parameter file, find the location of
; SCSSYSTEMID, and propogate the V3 setting.
;

	$READ	RAB = R10
	BLBC	R0,EXIT

	MOVAB	V4PAR_BUF,R2			; V4 parameter buffer address
	MOVZWL	#V4PARLEN,R3			; V4 param buffer length
	BSBB	FIND_SYSGEN_PARAM		; and find the same string

	MOVL	V3PAR_BUF(R8),V4PAR_BUF(R0)	; Copy SCSSYSTEMID values.

;
; Finally write out the modified data close the file.
;
	$WRITE	RAB = R10
	BLBC	R0,EXIT

	$DISCONNECT -
		RAB = R10
	BLBC	R0,EXIT
	$CLOSE	FAB = V4PAR_FAB

EXIT:	$EXIT_S	R0

;
; Find a sysgen parameter in a parameter buffer.
;

FIND_SYSGEN_PARAM:

	MOVL	#32,R0				; Bump past the startup.com
10$:
	CMPB	(R2)[R0],R5			; Is the length the same?
	BNEQ	50$				; Branch if not.
	PUSHL	R0
	PUSHR	#^M<R2,R3,R4,R5>
	CMPC3	R5,1(R2)[R0],(R4)		; Are the strings the same?
	BNEQ	40$				; Branch if not.
	POPR	#^M<R2,R3,R4,R5>		; restore registers.
	POPL	R0
	ADDL	#16,R0				; Point past string part
	RSB					; and return
40$:	POPR	#^M<R2,R3,R4,R5>
	POPL	R0
50$:	ACBL	R3,#20,R0,10$			; On to the next parameter

	$EXIT_S	#SS$_ABORT			; Wasn't here, flag an error.


	.END	SET_VAXVMSSYS
