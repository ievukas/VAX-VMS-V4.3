MODULE PAS$EOLN2 ( %TITLE 'Inquire if end-of-line'
		IDENT = '1-001'			! File: PASEOLN2.B32 Edit: SBL1001
		) =
BEGIN
!
!****************************************************************************
!*									    *
!*  COPYRIGHT (c) 1978, 1980, 1982, 1984 BY				    *
!*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
!*  ALL RIGHTS RESERVED.						    *
!* 									    *
!*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
!*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
!*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
!*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
!*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
!*  TRANSFERRED.							    *
!* 									    *
!*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
!*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
!*  CORPORATION.							    *
!* 									    *
!*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
!*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
!* 									    *
!*									    *
!****************************************************************************
!

!++
! FACILITY:	Pascal Language Support
!
! ABSTRACT:
!
!	This procedure implements the Pascal EOLN procedure.  It
!	is not called directly from compiled code, but rather can
!	be passed as a procedure by users.
!
! ENVIRONMENT:	User mode - AST reentrant
!
! AUTHOR: Steven B. Lionel, CREATION DATE: 1-April-1981
!
! MODIFIED BY:
!
! 1-001	- Original.  SBL 1-April-1981
!--


%SBTTL 'Declarations'
!
! PROLOGUE DEFINITIONS:
!

REQUIRE 'RTLIN:PASPROLOG';			! Externals, linkages, PSECTs, structures


!
! TABLE OF CONTENTS:
!

FORWARD ROUTINE
    PAS$EOLN2;					! Inquire if end-of-line

!
! MACROS:
!
!	NONE
!
! EQUATED SYMBOLS:
!
!	NONE
!
! FIELDS:
!
!	NONE
!
! OWN STORAGE:
!
!	NONE

%SBTTL 'PAS$EOLN2 - Inquire if end-of-file'
GLOBAL ROUTINE PAS$EOLN2 (			! Inquire if end-of-file
	PFV: REF $PAS$PFV_FILE_VARIABLE 	! File variable
    ) =

!++
! FUNCTIONAL DESCRIPTION:
!
!	This procedure returns a boolean value TRUE if the given file
!	is at end-of-line, FALSE otherwise.
!
! CALLING SEQUENCE:
!
!	Eoln.wv.v = PAS$EOLN2 (PFV.mr.r)
!
! FORMAL PARAMETERS:
!
!	PFV		- The Pascal File Variable (PFV) passed by reference.
!			  The structure of the PFV is defined in PASPFV.REQ.
!
! IMPLICIT INPUTS:
!
!	NONE
!
! IMPLICIT OUTPUTS:
!
!	NONE
!
! ROUTINE VALUE:
!
!	Boolean TRUE (1) if file is at end-of-file.
!	Boolean FALSE (0) if file is not at end-of-file.
!
! SIDE EFFECTS:
!
!	Resolves any lazy lookahead in progress, possibly opening the file.
!
! SIGNALLED ERRORS:
!
!	FILNOTOPE - file not open
!	FILNOTTEX - file is not a textfile
!
!--

    BEGIN

    LOCAL
	FCB: REF $PAS$FCB_CONTROL_BLOCK,! File control block
	RESULT,				! Function result
	PFV_ADDR: VOLATILE,		! Enable argument
	UNWIND_ACT: VOLATILE;		! Enable argument

    ENABLE
	PAS$$IO_HANDLER (PFV_ADDR, UNWIND_ACT);

    !+
    ! Set enable argument for PFV address.
    !-

    PFV_ADDR = PFV [PFV$R_PFV];	! Set enable argument

    !+
    ! Validate and lock PFV.
    !-

    PAS$$VALIDATE_PFV (PFV [PFV$R_PFV]; FCB);

    !+
    ! Set unwind action to unlock file.
    !-

    UNWIND_ACT = PAS$K_UNWIND_UNLOCK;

    !+
    ! Call PAS$$LOOK_AHEAD to resolve lazy lookahead.
    !-

    IF NOT .PFV [PFV$V_VALID]
    THEN
	PAS$$LOOK_AHEAD (PFV [PFV$R_PFV], FCB [FCB$R_FCB]; FCB);

    !+
    ! Verify that file is open.
    !-

    IF NOT .PFV [PFV$V_OPEN]	! Not open
    THEN
	$PAS$IO_ERROR (PAS$_FILNOTOPE,0);

    !+
    ! Verify that this is a textfile
    !-

    IF NOT .FCB [FCB$V_TEXT]
    THEN
	$PAS$IO_ERROR (PAS$_FILNOTTEX,0);

    !+
    ! Determine if EOLN
    !-

    RESULT = .PFV [PFV$V_EOLN];

    !+
    ! Indicate successful completion
    ! Unlock file and return.
    !-

    FCB [FCB$L_STATUS] = 0;
    PFV [PFV$V_LOCK] = 0;

    RETURN .RESULT;

    END;					! End of routine PAS$EOLN2

!<BLF/PAGE>

END						! End of module PAS$EOLN2

ELUDOM
