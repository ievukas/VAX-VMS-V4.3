; 
; ****************************************************************************
; *									    *
; *  Copyright (c) 1982, 1983		                                    *
; *  by DIGITAL Equipment Corporation, Maynard, Mass.			    *
; * 									    *
; *  This software is furnished under a license and may be used and  copied  *
; *  only  in  accordance  with  the  terms  of  such  license and with the  *
; *  inclusion of the above copyright notice.  This software or  any  other  *
; *  copies  thereof may not be provided or otherwise made available to any  *
; *  other person.  No title to and ownership of  the  software  is  hereby  *
; *  transferred.							    *
; * 									    *
; *  The information in this software is subject to change  without  notice  *
; *  and  should  not  be  construed  as  a commitment by DIGITAL Equipment  *
; *  Corporation.							    *
; * 									    *
; *  DIGITAL assumes no responsibility for the use or  reliability  of  its  *
; *  software on equipment which is not supplied by DIGITAL.		    *
; *									    *
; ****************************************************************************
; *********************************************************************************************************************************
;  Created 15-SEP-1984 22:54:22  by  VAX-11 SDL V2.0       Source: 15-SEP-1984 22:49:17 _$255$DUA28:[RMS.SRC]RMSFWADEF.SDL;1       
; *********************************************************************************************************************************
 
 
	.MACRO	$FWADEF,$GBL
	$DEFINI	FWA,$GBL
; ++
; 
;  Flags
; 
; --
$EQU	FWA$M_DUPOK	1
$EQU	FWA$M_NOCOPY	2
$EQU	FWA$M_SL_PASS	4
$EQU	FWA$M_RLF_PASS	8
$EQU	FWA$M_FNA_PASS	16
$EQU	FWA$M_NAM_DVI	32
$EQU	FWA$M_EXP_NODE	64
$EQU	FWA$M_VERSION	2048
$EQU	FWA$M_TYPE	4096
$EQU	FWA$M_NAME	8192
$EQU	FWA$M_DIR	16384
$EQU	FWA$M_DEVICE	32768
$EQU	FWA$M_EXP_VER	65536
$EQU	FWA$M_EXP_TYPE	131072
$EQU	FWA$M_EXP_NAME	262144
$EQU	FWA$M_WC_VER	524288
$EQU	FWA$M_WC_TYPE	1048576
$EQU	FWA$M_WC_NAME	2097152
$EQU	FWA$M_EXP_DIR	4194304
$EQU	FWA$M_EXP_DEV	8388608
$EQU	FWA$M_WILDCARD	16777216
$EQU	FWA$M_NODE	33554432
$EQU	FWA$M_QUOTED	67108864
$EQU	FWA$M_GRPMBR	134217728
$EQU	FWA$M_WILD_DIR	268435456
$EQU	FWA$M_DIR_LVLS	-536870912
$EQU	FWA$C_ALL	248
; 
;  constant for all flags that vary per parsing pass
; 
$EQU	FWA$C_ALLPASS	25
; ++
; 
;  Misc. Fields
; 
; --
$EQU	FWA$C_BID	40              ;  bid of fwa 
$EQU	FWA$C_MAXNODNAM	6               ;  max node name size 
$EQU	FWA$C_MAXLNDNAM	15              ;  max logical node name size 
$EQU	FWA$C_MAXNODLST	127             ;  max node spec list size (concatenated node specs) 
; 
;         device name descriptor
; 
$EQU	FWA$C_MAXDEVICE	255             ;  max device name size 
$EQU	FWA$C_MAXCDIR	8               ;  max number of concealed directories 
$EQU	FWA$C_MAXSUBDIR	7               ;  max number of sub directories 
$EQU	FWA$C_MAXDIRLEN	255             ;  max size of total directory spec 
;   should be:  top + subdir   39 * 8
;               dots between      7
;               delimiters        2
;               -------------------
;               total           321
; 
; 	The filename, filetype and fileversion descriptors MUST be contiguous
; 
;         file name descriptor
; 
$EQU	FWA$C_MAXNAME	39              ;  max file name size 
$EQU	FWA$C_MAXQUOTED	255             ;  max quoted string size 
; 
;         file type descriptor
; 
$EQU	FWA$C_MAXTYPE	39              ;  max file type size 
; 
;         file version number descriptor
; 
$EQU	FWA$C_MAXVER	6               ;  maximum version 
$EQU	FWA$C_MAXRNS	86              ;  max resultant name string size 
$EQU	FWA$C_STATBLK	10              ;  define length of statistics block 
$EQU	FWA$K_BLN_FWA	500             ;  length of fwa 
$EQU	FWA$C_BLN_FWA	500             ;  length of fwa 
$EQU	FWA$C_MAXSUBNOD	7               ;  max number of secondary (sub) node specs 
; ++
; 
;   buffers for parsed filename elements
; 
; --
$EQU	FWA$C_FIBLEN	76              ;  fib buffer size 
$EQU	FWA$C_DIRBUFSIZ	39              ;  size of each directory buffer 
; 
;   rooted directory name buffers
; 
;   NOTE:  These buffers must be contiguous
; 
$EQU	FWA$K_BLN_BUF	2364            ;  length of fwa and buffers 
$EQU	FWA$C_BLN_BUF	2364            ;  length of fwa and buffers 
$EQU	FWA$K_BLN	2364            ;  length of fwa and buffers 
$EQU	FWA$C_BLN	2364            ;  length of fwa and buffers 
$EQU	FWA$S_FLAGS	8
$EQU	FWA$Q_FLAGS	0               ;  various parse status flags 
$EQU	FWA$B_PASSFLGS	0               ;  flags for pass only 
$EQU	FWA$B_FLDFLGS	1               ;  flags for fields seen 
$EQU	FWA$B_WILDFLGS	2               ;  flags for wild cards 
$EQU	FWA$B_PARSEFLGS	3               ;  flags for parse results 
$EQU	FWA$B_DIRFLGS	4               ;  flags primarily for directory spec 
$EQU	FWA$B_DIRWCFLGS	5               ;  directory wild flags 
$EQU	FWA$B_LNFLGS	6               ;  logical name flag byte 
$EQU	FWA$B_SLFLGS	7               ;  search list + rooted directory flags 
; 
;  flags for pass
; 
$EQU	FWA$V_DUPOK	0               ;  discard duplicate element 
$EQU	FWA$V_NOCOPY	1               ;  do not copy this field 
$EQU	FWA$V_SL_PASS	2               ;  search list pass 
$EQU	FWA$V_RLF_PASS	3               ;  set if applying related file defaults 
$EQU	FWA$V_FNA_PASS	4               ;  set if primary name string parse pass 
$EQU	FWA$V_NAM_DVI	5               ;  set if open by name block 
$EQU	FWA$V_EXP_NODE	6               ;  explicit node has been seen, null or normal 
; 
;  flags for fields seen
; 
$EQU	FWA$V_VERSION	11              ;  set if version seen 
$EQU	FWA$V_TYPE	12              ;  set if type seen 
$EQU	FWA$V_NAME	13              ;  set if name seen 
$EQU	FWA$V_DIR	14              ;  set if directory spec seen 
$EQU	FWA$V_DEVICE	15              ;  set if device seen 
; 
;  flags for wild cards
; 
$EQU	FWA$V_EXP_VER	16              ;  set if explicit version 
$EQU	FWA$V_EXP_TYPE	17              ;  set if explicit type 
$EQU	FWA$V_EXP_NAME	18              ;  set if explicit name 
$EQU	FWA$V_WC_VER	19              ;  set if wildcard (*) version 
$EQU	FWA$V_WC_TYPE	20              ;  " type 
$EQU	FWA$V_WC_NAME	21              ;  " name 
$EQU	FWA$V_EXP_DIR	22              ;  set if explicit directory 
$EQU	FWA$V_EXP_DEV	23              ;  set if explicit device 
; 
;  flags for parse results
; 
$EQU	FWA$V_WILDCARD	24              ;  set if any wildcard seen 
$EQU	FWA$V_NODE	25              ;  set if node name seen 
$EQU	FWA$V_QUOTED	26              ;  set is quoted string seen 
$EQU	FWA$V_GRPMBR	27              ;  set if directory in [grp,mbr] format 
$EQU	FWA$V_WILD_DIR	28              ;  inclusive or of directory wild cards 
$EQU	FWA$S_DIR_LVLS	3
$EQU	FWA$V_DIR_LVLS	29              ;  ! of directory sublevels (0 = ufd only) 
;  (valid only if node set and no fldflgs)
; 
;  flags primarily for directory spec
; 
$EQU	FWA$V_DIR1	32              ;  ufd level directory or group seen 
$EQU	FWA$V_DIR2	33              ;  sfd level 1 directory or member seen 
; 
;  directory wild flags
; 
$EQU	FWA$V_WILD_UFD	40              ;  the dir1 spec was a wild card 
$EQU	FWA$V_WILD_SFD1	41              ;  the dir2 spec was a wild card 
$EQU	FWA$V_WILD_GRP	40              ;  the grp spec contained a wild card 
$EQU	FWA$V_WILD_MBR	41              ;  the mbr spec contained a wild card 
; 
;  logical name flag and miscellaneous byte
; 
$EQU	FWA$V_LOGNAME	48              ;  a logical name has been seen this pass 
;   (note: this byte is saved as context
;   when processing [.dir-list] format)
$EQU	FWA$V_OBJTYPE	49              ;  set if quoted string is of the 
;   "objecttype=..." form
;   (valid only if quoted set)
$EQU	FWA$V_NETSTR	50              ;  set if quoted string is of the 
;   "objecttype=taskname/..." form
;   (valid only if quoted and objtype set)
$EQU	FWA$V_DEV_UNDER	51              ;  device name was prefixed with an underscore 
$EQU	FWA$V_FILEFOUND	52              ;  true if at least one file found by search 
$EQU	FWA$V_REMRESULT	53              ;  use resultant string returned by fal 
$EQU	FWA$V_SYNTAX_CHK	54      ;  syntax-only checking is requested (NAM$V_SYNCHK set)
; 
;  search list and rooted directory flag byte
; 
$EQU	FWA$V_SLPRESENT	56              ;  search list present 
$EQU	FWA$V_CONCEAL_DEV	57      ;  concealed device present 
$EQU	FWA$V_ROOT_DIR	58              ;  root directory present 
$EQU	FWA$V_DFLT_MFD	59              ;  default MFD string inserted, due to [-] 
$EQU	FWA$V_EXP_ROOT	60              ;  explicit root directory 
; 
;  Value for all filename elements except node
; 
$EQU	FWA$B_BID	8               ;  bid 
$EQU	FWA$B_BLN	9               ;  bln 
$EQU	FWA$B_DIRTERM	10              ;  directory spec terminator (']' or '>') 
$EQU	FWA$B_ROOTERM	11              ;  root directory spec terminator (']' or '>') 
$EQU	FWA$L_ESCSTRING	12              ;  escape equivalence string 
$EQU	FWA$B_ESCFLG	12              ;  set to the char <esc> if an escape string 
;  seen, zero otherwise
$EQU	FWA$B_ESCTYP	13              ;  escape 'type' byte 
$EQU	FWA$W_ESCIFI	14              ;  escape ifi value 
$EQU	FWA$S_FIB	8
$EQU	FWA$Q_FIB	16              ;  fib descriptor 
$EQU	FWA$L_DEVBUFSIZ	24              ;  device buffer size 
$EQU	FWA$L_DEV_CLASS	28              ;  device class
$EQU	FWA$L_RECSIZ	32              ;  blocked record size 
$EQU	FWA$L_UNIT	36              ;  device unit number 
$EQU	FWA$L_UIC	40              ;  file owner uic 
$EQU	FWA$W_PRO	44              ;  file protection word 
$EQU	FWA$B_DIRLEN	46              ;  overall directory spec length 
$EQU	FWA$B_SUBNODCNT	47              ;  number of secondary (sub) node specs found 
$EQU	FWA$L_DIRBDB	48              ;  address of directory file bdb 
$EQU	FWA$L_LOOKUP	52              ;  address of new directory cache node 
$EQU	FWA$L_DEVNODADR	56              ;  address of device directory cache node 
$EQU	FWA$S_DIR	8
$EQU	FWA$Q_DIR	60              ;  directory name scratch buffer 
$EQU	FWA$L_UCHAR	68              ;  user characteristics longword 
$EQU	FWA$W_UCHAR	68
$EQU	FWA$L_FWA_PTR	72              ;  pointer to second fwa if any ($RENAME) 
$EQU	FWA$L_SWB_PTR	76              ;  pointer to swb
$EQU	FWA$L_BUF_PTR	80              ;  address of temporary buffer 
$EQU	FWA$L_IMPURE_AREA	84      ;  saved R11 (rm$xpfn only) 
$EQU	FWA$L_ATR_WORK	88              ;  pointer to work area for ACP attributes
;   (zero if one not currently allocated)    
; ++
; 
;  Logical name and search list fields
; 
; --
; 
;  Item list block for logical name services
; 
$EQU	FWA$S_ITMLST	64
$EQU	FWA$T_ITMLST	92              ;  logical name item list 
$EQU	FWA$S_ITM_INDEX	12
$EQU	FWA$T_ITM_INDEX	92              ;  index 
$EQU	FWA$S_ITM_ATTR	12
$EQU	FWA$T_ITM_ATTR	104             ;  attributes 
$EQU	FWA$S_ITM_STRING	12
$EQU	FWA$T_ITM_STRING	116     ;  string 
$EQU	FWA$S_ITM_MAX_INDEX	12
$EQU	FWA$T_ITM_MAX_INDEX	128     ;  max index 
$EQU	FWA$L_ITM_END	140             ;  terminating longword 
; 
;  Logical name translation fields
; 
$EQU	FWA$B_BUFFLG	156             ;  flag for which translation buffer is in use 
;  (0 = buf2 in use, -1 = buf1 in use)
$EQU	FWA$B_XLTMODE	157             ;  mode of translation on input to $TRNLNM
;  mode of equivalence string on output from $TRNLNM
$EQU	FWA$W_XLTSIZ	158             ;  length of equivalence string 
$EQU	FWA$L_XLTBUFF1	160             ;  primary translation buffer descriptor 
$EQU	FWA$L_XLTBUFF2	164             ;  secondary translation buffer descriptor 
; 
;  SLBH and SLB pointers
; 
$EQU	FWA$L_SLBH_PTR	168             ;  current SLB list 
$EQU	FWA$L_SLB_PTR	172             ;  current SLB list 
$EQU	FWA$L_SLBH_FLINK	176     ;  SLBH que fwd link 
$EQU	FWA$L_SLBH_BLINK	180     ;  SLBH que back link 
; 
;  Fake SLB -   NOTE:        This MUST be the size of SLB$C_BLN
;                         The field FWA$B_LEVEL must be at the same offset
;                         as SLB$Q_LEVEL would be.  (It sounds like a real
;                         hack but it works very nicely)
; 
$EQU	FWA$S_SLB	24
$EQU	FWA$T_SLB	184             ;  space for SLB$C_BLN 
$EQU	FWA$B_LEVEL	195             ;  recursion level 
; 
;  Logical name descriptor
; 
$EQU	FWA$S_LOGNAM	8
$EQU	FWA$Q_LOGNAM	208             ;  logical name descriptor 
; ++
; 
;   descriptors for parsed filename elements
; 
; 
;         The descriptors are defined as:
; 
;         -------------------------------------------------
;         |        flags           |             length   |
;         |-----------------------------------------------|
;         |                     address                   |
;         -------------------------------------------------
; 
; 
;         The flags are defined by FSCB$V_flag in $FSCBDEF
; 
; --
$EQU	FWA$S_NODE	8
$EQU	FWA$Q_NODE	216             ;  node name (actually node spec list) descriptor 
;  (the associated buffer is fwa$t_nodebuf)
$EQU	FWA$S_DEVICE	8
$EQU	FWA$Q_DEVICE	224             ;  device name descriptor 
$EQU	FWA$S_CONCEAL_DEV	8
$EQU	FWA$Q_CONCEAL_DEV	232     ;  concealed device descriptor 
; 
;         directory name descriptors   NOTE:  The two sets of directory
;                                             descriptors must be contigous
;                                             or RM$SETDID will break
; 
$EQU	FWA$S_CDIR1	8
$EQU	FWA$Q_CDIR1	240             ;  concealed top directory descriptors 
$EQU	FWA$S_CDIR2	8
$EQU	FWA$Q_CDIR2	248             ;  concealed subdirectory 1 
$EQU	FWA$S_CDIR3	8
$EQU	FWA$Q_CDIR3	256             ;  " " 2 
$EQU	FWA$S_CDIR4	8
$EQU	FWA$Q_CDIR4	264             ;  " " 3 
$EQU	FWA$S_CDIR5	8
$EQU	FWA$Q_CDIR5	272             ;  " " 4 
$EQU	FWA$S_CDIR6	8
$EQU	FWA$Q_CDIR6	280             ;  " " 5 
$EQU	FWA$S_CDIR7	8
$EQU	FWA$Q_CDIR7	288             ;  " " 6 
$EQU	FWA$S_CDIR8	8
$EQU	FWA$Q_CDIR8	296             ;  " " 7 
$EQU	FWA$S_DIR1	8
$EQU	FWA$Q_DIR1	304             ;  top level directory descriptors 
$EQU	FWA$S_DIR2	8
$EQU	FWA$Q_DIR2	312             ;  subdirectory 1 
$EQU	FWA$S_DIR3	8
$EQU	FWA$Q_DIR3	320             ;  " 2 
$EQU	FWA$S_DIR4	8
$EQU	FWA$Q_DIR4	328             ;  " 3 
$EQU	FWA$S_DIR5	8
$EQU	FWA$Q_DIR5	336             ;  " 4 
$EQU	FWA$S_DIR6	8
$EQU	FWA$Q_DIR6	344             ;  " 5 
$EQU	FWA$S_DIR7	8
$EQU	FWA$Q_DIR7	352             ;  " 6 
$EQU	FWA$S_DIR8	8
$EQU	FWA$Q_DIR8	360             ;  " 7 
$EQU	FWA$S_NAME	8
$EQU	FWA$Q_NAME	368             ;  file name descriptor 
$EQU	FWA$S_QUOTED	8
$EQU	FWA$Q_QUOTED	368             ;  quoted string descriptor 
$EQU	FWA$S_TYPE	8
$EQU	FWA$Q_TYPE	376             ;  file type descriptor 
$EQU	FWA$S_VERSION	8
$EQU	FWA$Q_VERSION	384             ;  file version descriptor 
$EQU	FWA$S_RNS	8
$EQU	FWA$Q_RNS	392             ;  resultant name string descriptor 
$EQU	FWA$S_SHRFIL	8
$EQU	FWA$Q_SHRFIL	400             ;  shared file device descriptor (readable form) 
$EQU	FWA$S_SHRFIL_LCK	8
$EQU	FWA$Q_SHRFIL_LCK	408     ;  shared file device descriptor (unreadable form - used for lock name) 
$EQU	FWA$S_AS_SHRFIL	8
$EQU	FWA$Q_AS_SHRFIL	416             ;  secondary device descriptor (readable form) 
$EQU	FWA$S_STATBLK	10
$EQU	FWA$T_STATBLK	424             ;  
$EQU	FWA$L_SBN	424             ;  starting lbn if contiguous 
$EQU	FWA$L_HBK	428             ;  high vbn 
; 
;   node descriptors
; 
$EQU	FWA$S_NODE1	8
$EQU	FWA$Q_NODE1	436             ;  primary node spec descriptor 
;  (the associated buffer is fwa$t_nodebuf)
$EQU	FWA$S_NODE2	8
$EQU	FWA$Q_NODE2	444             ;  secondary (sub) node spec descriptors (1-7) 
$EQU	FWA$S_NODE3	8
$EQU	FWA$Q_NODE3	452             ;  note: bytes 2-3 of each of these descriptors 
$EQU	FWA$S_NODE4	8
$EQU	FWA$Q_NODE4	460             ;  contains the flags word that is output 
$EQU	FWA$S_NODE5	8
$EQU	FWA$Q_NODE5	468             ;  from nxtfld subroutine in rm0xpfn 
$EQU	FWA$S_NODE6	8
$EQU	FWA$Q_NODE6	476             ;  note: fwa$q_node1 thru 'fwa$q_node8' 
$EQU	FWA$S_NODE7	8
$EQU	FWA$Q_NODE7	484             ;  describe the same string as does 
$EQU	FWA$S_NODE8	8
$EQU	FWA$Q_NODE8	492             ;  fwa$q_node 
$EQU	FWA$S_FIBBUF	76
$EQU	FWA$T_FIBBUF	500             ;  fib buffer 
$EQU	FWA$S_RNM_FID	6
$EQU	FWA$T_RNM_FID	576             ;  saved fid for rename directory check 
; 
;   directory name buffers
; 
;   NOTE:  These buffers must be contiguous
; 
$EQU	FWA$S_DIR1BUF	39
$EQU	FWA$T_DIR1BUF	582             ;  ufd level (or group) 
$EQU	FWA$S_DIR2BUF	39
$EQU	FWA$T_DIR2BUF	621             ;  1st sfd level (or member) 
$EQU	FWA$S_DIR3BUF	39
$EQU	FWA$T_DIR3BUF	660             ;  subdirectory 2 
$EQU	FWA$S_DIR4BUF	39
$EQU	FWA$T_DIR4BUF	699             ;  subdirectory 3 
$EQU	FWA$S_DIR5BUF	39
$EQU	FWA$T_DIR5BUF	738             ;  subdirectory 4 
$EQU	FWA$S_DIR6BUF	39
$EQU	FWA$T_DIR6BUF	777             ;  subdirectory 5 
$EQU	FWA$S_DIR7BUF	39
$EQU	FWA$T_DIR7BUF	816             ;  subdirectory 6 
$EQU	FWA$S_DIR8BUF	39
$EQU	FWA$T_DIR8BUF	855             ;  subdirectory 7 
$EQU	FWA$S_CDIR1BUF	39
$EQU	FWA$T_CDIR1BUF	894             ;  ufd level (or group) 
$EQU	FWA$S_CDIR2BUF	39
$EQU	FWA$T_CDIR2BUF	933             ;  1st sfd level (or member) 
$EQU	FWA$S_CDIR3BUF	39
$EQU	FWA$T_CDIR3BUF	972             ;  subdirectory 2 
$EQU	FWA$S_CDIR4BUF	39
$EQU	FWA$T_CDIR4BUF	1011            ;  subdirectory 3 
$EQU	FWA$S_CDIR5BUF	39
$EQU	FWA$T_CDIR5BUF	1050            ;  subdirectory 4 
$EQU	FWA$S_CDIR6BUF	39
$EQU	FWA$T_CDIR6BUF	1089            ;  subdirectory 5 
$EQU	FWA$S_CDIR7BUF	39
$EQU	FWA$T_CDIR7BUF	1128            ;  subdirectory 6 
$EQU	FWA$S_CDIR8BUF	39
$EQU	FWA$T_CDIR8BUF	1167            ;  subdirectory 7 
; 
;   NOTES: 1. The following buffers must be contiguous as eventually the
;              type and version are appended to the name string
; 
;           2. The name buffer and the type buffer must be 1 byte larger then
;              the max name and type size (resp) because xpfn writes the
;              name and type terminators in the buffer at the end of the string
; 
$EQU	FWA$S_NAMEBUF	256
$EQU	FWA$T_NAMEBUF	1206            ;  file name/quoted string buffer 
$EQU	FWA$S_TYPEBUF	40
$EQU	FWA$T_TYPEBUF	1462            ;  file type buffer 
$EQU	FWA$S_VERBUF	6
$EQU	FWA$T_VERBUF	1502            ;  file version buffer 
$EQU	FWA$L_UCBSTS	1508            ;  ucb$l_sts field for prim device
$EQU	FWA$B_UNDER_DEV	1512            ;  character "_" stored here 
$EQU	FWA$S_DEVICEBUF	255
$EQU	FWA$T_DEVICEBUF	1513            ;  device name buffer 
$EQU	FWA$S_CDEVICEBUF	256
$EQU	FWA$T_CDEVICEBUF	1768    ;  concealed device name buffer 
$EQU	FWA$B_UNDER_NOD	2024            ;  character "_" stored here 
$EQU	FWA$S_NODEBUF	127
$EQU	FWA$T_NODEBUF	2025            ;  node name buffer 
$EQU	FWA$S_WILD	48
$EQU	FWA$T_WILD	2152            ;  scratch field used by RM0WILD 
;    size =       count      1
;                 name      39
;                 .dir;*     6
;                 spare      2
;                 ------------
;                           48
$EQU	FWA$S_SHRFILBUF	16
$EQU	FWA$T_SHRFILBUF	2200            ;  shared file device id buffer (readable form) 
$EQU	FWA$S_SHRFIL_LCKNAM	16
$EQU	FWA$T_SHRFIL_LCKNAM	2216    ;  shared file device id buffer (unreadable form - used for lock name) 
$EQU	FWA$S_AS_SHRFILBUF	16
$EQU	FWA$T_AS_SHRFILBUF	2232    ;  secondary device id buffer (readable form) 
$EQU	FWA$S_BIJNL	8
$EQU	FWA$Q_BIJNL	2248            ;  descriptor of BI journal name 
$EQU	FWA$S_AIJNL	8
$EQU	FWA$Q_AIJNL	2256            ;  descriptor of AI journal name 
$EQU	FWA$S_ATJNL	8
$EQU	FWA$Q_ATJNL	2264            ;  descriptor of AT journal name 
$EQU	FWA$S_BIACE	20
$EQU	FWA$T_BIACE	2272            ;  BI journal name ACE 
$EQU	FWA$S_BIJNLN	16
$EQU	FWA$T_BIJNLN	2276
$EQU	FWA$S_AIACE	20
$EQU	FWA$T_AIACE	2292            ;  AI journal name ACE 
$EQU	FWA$S_AIJNLN	16
$EQU	FWA$T_AIJNLN	2296
$EQU	FWA$S_ATACE	20
$EQU	FWA$T_ATACE	2312            ;  AT journal name ACE 
$EQU	FWA$S_ATJNLN	16
$EQU	FWA$T_ATJNLN	2316
$EQU	FWA$S_IDACE	32
$EQU	FWA$T_IDACE	2332            ;  Journal ID ACE 
$EQU	FWA$S_JNLID	28
$EQU	FWA$T_JNLID	2336            ;  complete journal ID 
$EQU	FWA$S_VOLNAM	12
$EQU	FWA$T_VOLNAM	2336            ;  volume lable of media file resides on 
$EQU	FWA$S_FID	6
$EQU	FWA$T_FID	2348            ;  file-id 
$EQU	FWA$S_ID_DATE	8
$EQU	FWA$Q_ID_DATE	2356            ;  id time stamp 
	$DEFEND	FWA,$GBL,DEF
	.ENDM
 
	.MACRO	$SLBHDEF,$GBL
	$DEFINI	SLBH,$GBL
; 
;         SLBH        - Search List Header Block
; 
$EQU	SLBH$C_BID	43              ;  ID 
$EQU	SLBH$K_BLN	20              ;  length of SLBH 
$EQU	SLBH$C_BLN	20              ;  length of SLBH 
$EQU	SLBH$L_FLINK	0               ;  forward link 
$EQU	SLBH$L_BLINK	4               ;  backward link 
$EQU	SLBH$B_BID	8               ;  block ID 
$EQU	SLBH$B_BLN	9               ;  length 
$EQU	SLBH$B_PASSFLGS	10              ;  flags for FWA$B_PASSFLGS
$EQU	SLBH$B_STR_LEN	11              ;  string length
$EQU	SLBH$L_SLB_QUE	12              ;  ptr to SLB queue
$EQU	SLBH$L_NAM_FNB	16              ;  saved FNB from RLF file
$EQU	SLBH$T_STRING	20              ;  start of string
	$DEFEND	SLBH,$GBL,DEF
	.ENDM
 
	.MACRO	$SLBDEF,$GBL
	$DEFINI	SLB,$GBL
; 
;         SLB        - Search List Block
; 
$EQU	SLB$C_BID	41              ;  ID 
$EQU	SLB$M_REALSLB	1
$EQU	SLB$K_BLN	24              ;  length of SLB 
$EQU	SLB$C_BLN	24              ;  length of SLB 
$EQU	SLB$L_FLINK	0               ;  forward link 
$EQU	SLB$L_BLINK	4               ;  backward link 
$EQU	SLB$B_BID	8               ;  block ID 
$EQU	SLB$B_BLN	9               ;  length 
$EQU	SLB$B_FLAGS	10              ;  flags 
$EQU	SLB$V_REALSLB	0               ;  "Real" SLB as opposed to the fake FWA one 
$EQU	SLB$B_LEVEL	11              ;  recursion level 
$EQU	SLB$L_INDEX	12              ;  translation index 
$EQU	SLB$L_MAX_INDEX	16              ;  max translation index 
$EQU	SLB$L_ATTR	20              ;  attributes flags 
	$DEFEND	SLB,$GBL,DEF
	.ENDM
 
	.MACRO	$FSCBDEF,$GBL
	$DEFINI	FSCB,$GBL
; 
;         FSCB - FileScan control block
; 
;         This block is passed to PARSE_STRING from XPFN and RMS$FILESCAN
; 
; 
;         The descriptors are defined as:
; 
;         -------------------------------------------------
;         |        flags          |        length         |
;         |-----------------------------------------------|
;         |                     address                   |
;         -------------------------------------------------
; 
; 
; 
;         descriptor flags
; 
;         These flags are used through out the RMS file name parsing routines.
;         The flags can be found in all of the field descriptors.
; 
;         NOTE: The flag ELIPS must be the first bit in the second word.
;               It is referenced this way in RM0WILD and other places
; 
$EQU	FSCB$M_ELIPS	65536
$EQU	FSCB$M_WILD	131072
$EQU	FSCB$M_ACS	262144
$EQU	FSCB$M_QUOTED	524288
$EQU	FSCB$M_NULL	1048576
$EQU	FSCB$M_PWD	2097152
$EQU	FSCB$M_GRPMBR	4194304
$EQU	FSCB$M_MINUS	8388608
$EQU	FSCB$M_CONCEAL	16777216
$EQU	FSCB$M_MFD	33554432
$EQU	FSCB$M_ROOTED	67108864
$EQU	FSCB$V_ELIPS	16              ;  elipssis was detected in directory (dir) 
$EQU	FSCB$V_WILD	17              ;  a wild card was detected (dir,name,type,ver) 
$EQU	FSCB$V_ACS	18              ;  access control string in node name (node) 
$EQU	FSCB$V_QUOTED	19              ;  quoted file spec (name) 
$EQU	FSCB$V_NULL	20              ;  field was null (terminator only) (all) 
$EQU	FSCB$V_PWD	21              ;  password masked out (set in xpfn) (node) 
$EQU	FSCB$V_GRPMBR	22              ;  group,member format directory (dir) 
$EQU	FSCB$V_MINUS	23              ;  minus directory field (dir) 
$EQU	FSCB$V_CONCEAL	24              ;  name was concealed (dev) 
$EQU	FSCB$V_MFD	25              ;  MFD directory (set in xpfn) (dir) 
$EQU	FSCB$V_ROOTED	26              ;  directory was a root directory (dir) 
; 
;         FSCB
; 
$EQU	FSCB$M_NODE	1
$EQU	FSCB$M_DEVICE	2
$EQU	FSCB$M_ROOT	4
$EQU	FSCB$M_DIRECTORY	8
$EQU	FSCB$M_NAME	16
$EQU	FSCB$M_TYPE	32
$EQU	FSCB$M_VERSION	64
$EQU	FSCB$C_MAXNODE	8               ;  max number of node descriptors 
$EQU	FSCB$C_MAXROOT	8               ;  max number of root descriptors 
$EQU	FSCB$K_BLN	260
$EQU	FSCB$C_BLN	260
$EQU	FSCB$C_MAXDIR	8               ;  max number of directory descriptors 
$EQU	FSCB$B_FLDFLAGS	0               ;  field flags 
$EQU	FSCB$V_NODE	0
$EQU	FSCB$V_DEVICE	1
$EQU	FSCB$V_ROOT	2
$EQU	FSCB$V_DIRECTORY	3
$EQU	FSCB$V_NAME	4
$EQU	FSCB$V_TYPE	5
$EQU	FSCB$V_VERSION	6
$EQU	FSCB$B_NODES	1               ;  number of nodes in spec 
$EQU	FSCB$B_ROOTS	2               ;  number of root directories in spec 
$EQU	FSCB$B_DIRS	3               ;  number of directories in spec 
$EQU	FSCB$S_FILESPEC	8
$EQU	FSCB$Q_FILESPEC	4               ;  full file spec 
$EQU	FSCB$S_NODE	8
$EQU	FSCB$Q_NODE	12              ;  full node list spec 
$EQU	FSCB$S_DEVICE	8
$EQU	FSCB$Q_DEVICE	20              ;  device spec 
$EQU	FSCB$S_ROOT	8
$EQU	FSCB$Q_ROOT	28              ;  full root directory list spec 
$EQU	FSCB$S_DIRECTORY	8
$EQU	FSCB$Q_DIRECTORY	36      ;  full directory list spec 
$EQU	FSCB$S_NAME	8
$EQU	FSCB$Q_NAME	44              ;  file name 
$EQU	FSCB$S_TYPE	8
$EQU	FSCB$Q_TYPE	52              ;  file type 
$EQU	FSCB$S_VERSION	8
$EQU	FSCB$Q_VERSION	60              ;  file version 
$EQU	FSCB$S_NODE1	8
$EQU	FSCB$Q_NODE1	68              ;  the NODEn descriptors must be contiguous 
$EQU	FSCB$S_NODE2	8
$EQU	FSCB$Q_NODE2	76
$EQU	FSCB$S_NODE3	8
$EQU	FSCB$Q_NODE3	84
$EQU	FSCB$S_NODE4	8
$EQU	FSCB$Q_NODE4	92
$EQU	FSCB$S_NODE5	8
$EQU	FSCB$Q_NODE5	100
$EQU	FSCB$S_NODE6	8
$EQU	FSCB$Q_NODE6	108
$EQU	FSCB$S_NODE7	8
$EQU	FSCB$Q_NODE7	116
$EQU	FSCB$S_NODE8	8
$EQU	FSCB$Q_NODE8	124
$EQU	FSCB$S_ROOT1	8
$EQU	FSCB$Q_ROOT1	132             ;  the ROOTn descriptors must be contiguous 
$EQU	FSCB$S_ROOT2	8
$EQU	FSCB$Q_ROOT2	140
$EQU	FSCB$S_ROOT3	8
$EQU	FSCB$Q_ROOT3	148
$EQU	FSCB$S_ROOT4	8
$EQU	FSCB$Q_ROOT4	156
$EQU	FSCB$S_ROOT5	8
$EQU	FSCB$Q_ROOT5	164
$EQU	FSCB$S_ROOT6	8
$EQU	FSCB$Q_ROOT6	172
$EQU	FSCB$S_ROOT7	8
$EQU	FSCB$Q_ROOT7	180
$EQU	FSCB$S_ROOT8	8
$EQU	FSCB$Q_ROOT8	188
$EQU	FSCB$S_DIRECTORY1	8
$EQU	FSCB$Q_DIRECTORY1	196     ;  the DIRECTORYn descriptors must be contiguous 
$EQU	FSCB$S_DIRECTORY2	8
$EQU	FSCB$Q_DIRECTORY2	204
$EQU	FSCB$S_DIRECTORY3	8
$EQU	FSCB$Q_DIRECTORY3	212
$EQU	FSCB$S_DIRECTORY4	8
$EQU	FSCB$Q_DIRECTORY4	220
$EQU	FSCB$S_DIRECTORY5	8
$EQU	FSCB$Q_DIRECTORY5	228
$EQU	FSCB$S_DIRECTORY6	8
$EQU	FSCB$Q_DIRECTORY6	236
$EQU	FSCB$S_DIRECTORY7	8
$EQU	FSCB$Q_DIRECTORY7	244
$EQU	FSCB$S_DIRECTORY8	8
$EQU	FSCB$Q_DIRECTORY8	252
	$DEFEND	FSCB,$GBL,DEF
	.ENDM
 
	.MACRO	$SWBDEF,$GBL
	$DEFINI	SWB,$GBL
; 
;  Directory string work buffer for wild card directory processing
; 
$EQU	SWB$M_ELLIPSIS	1
$EQU	SWB$M_BOUNDED	2
$EQU	SWB$M_WILD	4
$EQU	SWB$M_DELIMITER	8
$EQU	SWB$M_TRAVERSE	16
$EQU	SWB$M_FIRST	32
$EQU	SWB$M_ELLIPSIS_EXISTS	64
$EQU	SWB$M_VALID_DID	128
$EQU	SWB$C_BID	42              ;  ID 
$EQU	SWB$K_BLN	328
$EQU	SWB$C_BLN	328
;   wild dir spec
$EQU	SWB$B_FLAGS	0               ;  flags (must be first) 
$EQU	SWB$V_ELLIPSIS	0               ;  ellipsis 
$EQU	SWB$V_BOUNDED	1               ;  ellipsis bounded 
$EQU	SWB$V_WILD	2               ;  wild name 
$EQU	SWB$V_DELIMITER	3               ;  following delimiter 
$EQU	SWB$V_TRAVERSE	4               ;  should skip subtree 
$EQU	SWB$V_FIRST	5               ;  first time through 
$EQU	SWB$V_ELLIPSIS_EXISTS	6       ;  dir spec contains ... 
$EQU	SWB$V_VALID_DID	7               ;  FIB DID is valid 
$EQU	SWB$B_PATLEN	1               ;  length of current token 
$EQU	SWB$B_PPOS	2               ;  position in pattern 
$EQU	SWB$B_TOKENS_LEFT	3       ;  number of non ... tokens left 
$EQU	SWB$B_MINIMUM	4               ;  minimum level for success 
$EQU	SWB$B_MAXIMUM	5               ;  maximum level for success 
$EQU	SWB$B_FIRST_E	6               ;  token ! of first ellipsis 
$EQU	SWB$B_DIRWCFLGS	7               ;  FWA$B_DIRWCFLGS on entry 
$EQU	SWB$B_BID	8               ;  block ID 
$EQU	SWB$B_BLN	9               ;  length 
$EQU	SWB$S_PATTERN	8
$EQU	SWB$Q_PATTERN	12              ;  descriptor of pattern 
$EQU	SWB$L_SCRATCH_PAT	20      ;  scratch copy of first longword
$EQU	SWB$S_SCRATCH_BUF	48
$EQU	SWB$T_SCRATCH_BUF	24      ;  scratch temp buffer (same size as FWA$T_WILD)
$EQU	SWB$S_PATTERN_BUF	256
$EQU	SWB$T_PATTERN_BUF	72      ;  should be: FWA$C_MAXDIRLEN-2, 
	$DEFEND	SWB,$GBL,DEF
	.ENDM
