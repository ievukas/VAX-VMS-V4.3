	.TITLE	TRANSFER  Transfer vectors for Symiont Services Routines
	.IDENT	'V04-000'
;
;****************************************************************************
;*									    *
;*  COPYRIGHT (c) 1978, 1980, 1982, 1984 BY				    *
;*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
;*  ALL RIGHTS RESERVED.						    *
;* 									    *
;*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
;*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
;*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
;*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
;*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
;*  TRANSFERRED.							    *
;* 									    *
;*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
;*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
;*  CORPORATION.							    *
;* 									    *
;*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
;*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
;* 									    *
;*									    *
;****************************************************************************
;
;++
;   FACILITY:
;
;	Symbiont Services Facility
;
;   ABSTRACT:
;
;	This module provides universal transfer vectors for the
;	shareable symbiont services.
;
;   ENVIRONMENT:
;
;	Native mode, user mode
;
;   AUTHOR:
;
;	Greg Robert	27-Apr-1983
;
;   MODIFIED BY:
;
;	V03-010	GRR0010		Gregory R. Robert	16-May-1984
;		Move hangup flag from task_flags to stream_flags
;
;	V03-009	GRR0009		Gregory R. Robert	29-Sep-1983
;		Changed library module name from smbdef to prtsmbdef.
;
;	V03-008	GRR0007		Gregory R. Robert	27-Sep-1983
;		Alter PSECT attributes so that transfer image section
;		is at front of image.
;
;	V3B-007	GRR3007		Gregory R. Robert	23-Aug-1983
;		Bugfixes, page_setup_modules, form_setup_modules,
;		sheet_feed, symbiont initiated pause_task and stop_stream,
;		hangup code, read and write item services
;
;	V3B-006	GRR3006		Gregory R. Robert	03-Aug-1983
;		Changed HANGUP_AST to PSM$HANGUP_AST
;
;	V3B-005	GRR3005		Gregory R. Robert	29-Jul-1983
;		Added FT1 transfer entries.
;
;	V3B-004	GRR3004		Gregory R. Robert	27-Jun-1983
;		Added HANGUP routine transfer table
;
;	V3B-003	GRR3003		Gregory R. Robert	27-May-1983
;		Removed obsolete transfers, added SEND_RESPONSE.
;
;	V3B-002	GRR3002		Gregory R. Robert	27-May-1983
;		Added new transfer, renamed old ones.
;
;--

;
; DECLARATIONS
;
	$PRTSMBDEF


	.PSECT	$SMBSHR_TRANFER, NOWRT, NOEXE, SHR, NOPIC, NOVEC

;
; Define macro to set up transfer vectors
;

	.MACRO	transfer entry_point
	.TRANSFER	entry_point
	.MASK		entry_point		;Entry point mask
	JMP		entry_point+2		;Go to main routine code
	.ENDM	transfer

;
; NOTE: These transfer vectors cannot change.  Add new vectors at the
;       end -- replace obsolete vectors with dummy entries.
;

SMBSHR_TRANSFER:
    transfer	SMB$CHECK_FOR_MESSAGE	; Check for a job controller message
    transfer	PSM$REPORT	; Complete asynchronous service
    transfer	PSM$FILE_FLAG		; File flag/burst page
    transfer	PSM$FILE_TRAILER	; File trailer page
    transfer	SMB$READ_MESSAGE_ITEM	; Get next item from message
    transfer	PSM$INCLUDE_MODULES	; Include library modules
    transfer	SMB$INITIALIZE	; Initialize symbiont
    transfer	PSM$JOB_FLAG		; Job flag/burst page
    transfer	PSM$JOB_TRAILER		; Job trailer page
    transfer	PSM$PAGE_HEADER		; Page header routine
    transfer	PSM$PAGE_SETUP		; Page setup routine
    transfer	PSM$PRINT	; Standard print symbiont
    transfer	PSM$REPLACE	; Provide a user service routine
    transfer	PSM$READ_ITEM_DX	; Read an SCB item by descriptor
    transfer	PSM$READ_ITEM_R		; Read an SCB item by reference
    transfer	SMB$READ_MESSAGE	; Read a job controller message
    transfer	SMB$SEND_TO_JOBCTL	; Send a job controller message
    transfer	PSM$WRITE_ITEM_DX	; Write an SCB item by descriptor
    transfer	PSM$WRITE_ITEM_R	; Write an SCB item by reference


	.PSECT	CODE LONG,NOWRT

;
; Hangup dispatch table
;

PSM$HANGUP_DISPATCH_TABLE::
	index	= 0
	.repeat	PSM$K_MAXSTREAMS		;One entry for each stream

		.WORD	0			;Save nothing
		MOVZBL	#index,R0		;Set stream index
		BRW	DISPATCH		;Dispatch

		index	= index + 1		;Advance macro index
	.endr

;
;  Globally declare dispatch entry size
;
PSM$S_HANGUP_DISPATCH_ENTRY == -
    <. - PSM$HANGUP_DISPATCH_TABLE> / PSM$K_MAXSTREAMS


;
; Mark the stream as hungup
;

DISPATCH:
	MOVL	PSM$GL_SCBVEC[R0],R0		; SCB address
	BBSS	#PSM$V_HANGUP, -		; Set the HANGUP flag
		PSM$L_STREAM_FLAGS(R0),10$
10$:	RET

.END
