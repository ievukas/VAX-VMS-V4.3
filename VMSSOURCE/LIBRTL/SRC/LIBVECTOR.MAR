	.TITLE	LIB$VECTOR - Entry vectors for LIBRTL.EXE
	.IDENT	/1-011/			; File: LIBVECTOR.MAR Edit:LEB1011

;
;****************************************************************************
;*									    *
;*  COPYRIGHT (c) 1978, 1980, 1982, 1984 BY				    *
;*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
;*  ALL RIGHTS RESERVED.						    *
;* 									    *
;*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
;*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
;*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
;*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
;*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
;*  TRANSFERRED.							    *
;* 									    *
;*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
;*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
;*  CORPORATION.							    *
;* 									    *
;*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
;*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
;* 									    *
;*									    *
;****************************************************************************
;

;++
; FACILITY: Run-Time Library - General Utility Procedures
;
; ABSTRACT:
;
;	This module contains the entry vector definitions for the
;	VAX-11 Run-Time Library shareable image LIBRTL.EXE
;
; ENVIRONMENT: User mode, AST Reentrant
;
; AUTHOR: Steven B. Lionel, CREATION DATE: 28-October-1982
;
; MODIFIED BY:
;
; 1-001	- Original. SBL 28-October-1982
; 1-002 - Make FOR$CNV_OUT_x entries separate - they were improperly declared
;	  as aliases of OTS$CVT_L_Tx routines.  SBL 29-Nov-1982
; 1-003 - Add LIB$GETxxI routines.  SBL 19-Jan-1983
; 1-004 - Add OTS$$RET_A_CVT_TAB_R1, OTS$$CVT_MUL and LIB$SIG_TO_STOP.
;	  FM 20-MAY-1983.
; 1-005 - Add remaining LIB$, OTS$ and STR$ routines that were previously
;	  non-shared.  LEB 23-May-1983.
; 1-006 - Cleanup.  LEB 24-May-1983.
; 1-007 - Add OTS$CVT_L_TU, OTS$CVT_TU_L.  SBL 26-May-1983
; 1-008 - Add STR$MATCH_WILD and LIB$DAY_OF_WEEK.  LEB 9-Jan-1984
; 1-009 - Add LIB$FIND_IMAGE_SYMBOL, LIB$FIND_FILE_END and
;	  LIB$FILE_SCAN_END.  LEB 25-Feb-1984
; 1-010 - Add OTS$DIV_PKSHORT and OTS$DIV_PK_LONG.  DG 5-Mar-1984
; 1-011 - Add LIB$CREATE_DIR.  LEB 11-Apr-1984
;--

	.SBTTL	DECLARATIONS
;
; LIBRARY MACRO CALLS:
;
;	LIB$:LIBRTL.MLB required
;
; EXTERNAL DECLARATIONS:
;
	.DSABL	GBL		; Force all external symbols to be declared
;
; MACROS:
;

;+
; Macro to define an entry vector for a CALL entry point
;-

	.MACRO	VCALL	NAME
	.EXTRN		NAME
	.ALIGN	QUAD
	.TRANSFER	NAME
	.MASK		NAME
	JMP		NAME+2
	.ENDM

;+
; Macro to define an entry vector for a JSB entry point
;-

	.MACRO	VJSB	NAME
	.EXTRN		NAME
	.ALIGN	QUAD
	.TRANSFER	NAME
	JMP		NAME
	.BLKB		2
	.ENDM

;+
; Macro to define a table that is included in the vector.  The macros
; invoked by VTAB are in LIB$:LIBRTL.MLB.
;-

	.MACRO	VTAB	NAME
	.ALIGN	QUAD
	.TRANSFER	NAME
NAME::	$'NAME
	.ENDM

;+
; Macro to define an alias for the next vectored entry point
;-

	.MACRO	ALIAS	NAME
	.TRANSFER	NAME
	.ENDM


;
; EQUATED SYMBOLS:
;
;	NONE
;
; OWN STORAGE:
;
;	NONE
;
; PSECT DECLARATIONS:
;
	.PSECT $LIB$VECTOR PIC, USR, CON, REL, LCL, SHR, -
			   EXE, RD, NOWRT, QUAD


	.SBTTL	LIBRTL Vector

;+
; Define vectored entry points for the General Utility Procedures 
; by module in alphabetical order.
;
; Any additions to this file should be reflected in
; COM$:LIBRTLVEC.DAT.  All new entry points must be appended to the end
; of the list.  NEVER change existing entries unless you are sure that
; what you do won't break existing programs.
;-

; Module LIB$AB_ASC_EBC

	VTAB	LIB$AB_ASC_EBC

; Module LIB$AB_EBC_ASC

	VTAB	LIB$AB_EBC_ASC

; Module LIB$AB_UPCASE

	VTAB	LIB$AB_UPCASE

; Module LIB$ANALYZE_SDESC

	VCALL	LIB$ANALYZE_SDESC
	VJSB	LIB$ANALYZE_SDESC_R2

; Module LIB$AST_IN_PROG

	VCALL	LIB$AST_IN_PROG

; Module LIB$ATTACH

	VCALL	LIB$ATTACH

; Module LIB$CLI_CALLBACK

	VCALL	LIB$DELETE_LOGICAL
	VCALL	LIB$DELETE_SYMBOL
	VCALL	LIB$DISABLE_CTRL
	VCALL	LIB$ENABLE_CTRL
	VCALL	LIB$GET_SYMBOL
	VCALL	LIB$SET_LOGICAL
	VCALL	LIB$SET_SYMBOL

; Module LIB$CRC

	VCALL	LIB$CRC

; Module LIB$CRC_TABLE

	VCALL	LIB$CRC_TABLE

; Module LIB$CURRENCY

	VCALL	LIB$CURRENCY

; Module LIB$CVTDF

	VCALL	LIB$CVTDF

; Module LIB$CVT_ATB

	VCALL	LIB$CVT_DTB
	VCALL	LIB$CVT_HTB
	VCALL	LIB$CVT_OTB

; Module LIB$DEC_OVER

	VCALL	LIB$DEC_OVER

; Module LIB$DELETE_FILE

	VCALL	LIB$DELETE_FILE

; Module LIB$DIGIT_SEP

	VCALL	LIB$DIGIT_SEP

; Module LIB$EF

	VCALL	LIB$FREE_EF
	VCALL	LIB$GET_EF
	VCALL	LIB$RESERVE_EF

; Module LIB$ESTABLISH

	VCALL	LIB$ESTABLISH

; Module LIB$EXTV

	VCALL	LIB$EXTV

; Module LIB$EXTZV

	VCALL	LIB$EXTZV

; Module LIB$FFC

	VCALL	LIB$FFC

; Module LIB$FFS

	VCALL	LIB$FFS

; Module LIB$FILESCAN

	VCALL	LIB$FILE_SCAN
	VCALL	LIB$FIND_FILE

; Module LIB$FIXUP_FLT

	VCALL	LIB$FIXUP_FLT

; Module LIB$FLT_UNDER

	VCALL	LIB$FLT_UNDER

; Module LIB$GET_INPUT

	VCALL	LIB$GET_COMMAND
	VCALL	LIB$GET_INPUT

; Module LIB$GET_OPCODE

	VCALL	LIB$GET_OPCODE

; Module LIB$INDEX

	VCALL	LIB$INDEX

; Module LIB$INSV

	VCALL	LIB$INSV

; Module LIB$INT_OVER

	VCALL	LIB$INT_OVER

; Module LIB$LOCC

	VCALL	LIB$LOCC

; Module LIB$LP_LINES

	VCALL	LIB$LP_LINES

; Module LIB$LUN

	VCALL	LIB$FREE_LUN
	VCALL	LIB$GET_LUN

; Module LIB$MATCHC

	VCALL	LIB$MATCHC

; Module LIB$MATCH_COND

	VCALL	LIB$MATCH_COND

; Module LIB$MOVTC

	VCALL	LIB$MOVTC

; Module LIB$MOVTUC

	VCALL	LIB$MOVTUC

; Module LIB$PUT_OUTPUT

	VCALL	LIB$PUT_OUTPUT

; Module LIB$RADIX_POINT

	VCALL	LIB$RADIX_POINT

; Module LIB$RENAME_FILE

	VCALL	LIB$RENAME_FILE

; Module LIB$REVERT

	VCALL	LIB$REVERT

; Module LIB$SCANC

	VCALL	LIB$SCANC

; Module LIB$SCOPY

	VCALL	LIB$SCOPY_DXDX
	VJSB	LIB$SCOPY_DXDX6
	VCALL	LIB$SCOPY_R_DX
	VJSB	LIB$SCOPY_R_DX6
	VCALL	LIB$SFREE1_DD
	VJSB	LIB$SFREE1_DD6
	VCALL	LIB$SFREEN_DD
	VJSB	LIB$SFREEN_DD6
	VCALL	LIB$SGET1_DD
	VJSB	LIB$SGET1_DD_R6

; Module LIB$SIGNAL

	VCALL	LIB$SIGNAL
	VCALL	LIB$STOP

; Module LIB$SIG_TO_RET

	VCALL	LIB$SIG_TO_RET

; Module LIB$SKPC

	VCALL	LIB$SKPC

; Module LIB$SPANC

	VCALL	LIB$SPANC

; Module LIB$SPAWN

	VCALL	LIB$SPAWN

; Module LIB$STAT_VM

	VCALL	LIB$SHOW_VM
	VCALL	LIB$STAT_VM

; Module LIB$TPARSE

	VCALL	LIB$TPARSE

; Module LIB$TRA_ASC_EBC

	VCALL	LIB$TRA_ASC_EBC

; Module LIB$TRA_EBC_ASC

	VCALL	LIB$TRA_EBC_ASC

; Module LIB$VM

	VCALL	LIB$FREE_VM
	VCALL	LIB$GET_VM

; Module LIB$WAIT

	VCALL	LIB$WAIT

; Module OTS$$CVTDT

	VJSB	OTS$$CVT_D_T_R8
	VJSB	OTS$$CVT_F_T_R8

; Module OTS$$CVTRT

	VJSB	OTS$$CVT_G_T_R8
	VJSB	OTS$$CVT_H_T_R8

; Module OTS$CVTLT

	VCALL	OTS$CVT_L_TB
	VCALL	OTS$CVT_L_TI
	VCALL	OTS$CVT_L_TL
	VCALL	OTS$CVT_L_TO
	VCALL	OTS$CVT_L_TZ
	; See below for FOR$CNV_OUT_x alternate entries

; Module OTS$CVTTF

	VCALL	OTS$CVT_T_F

; Module OTS$CVTTIL

	ALIAS	FOR$CNV_IN_I
	VCALL	OTS$CVT_TI_L

; Module OTS$CVTTLL

	ALIAS	FOR$CNV_IN_L
	VCALL	OTS$CVT_TL_L

; Module OTS$CVTTOL

	VCALL	OTS$CVT_TB_L
	ALIAS	FOR$CNV_IN_O
	VCALL	OTS$CVT_TO_L
	ALIAS	FOR$CNV_IN_Z
	VCALL	OTS$CVT_TZ_L

; Module OTS$CVTTR

	ALIAS	FOR$CNV_IN_DEFG
	VCALL	OTS$CVT_T_D
	VCALL	OTS$CVT_T_G
	VCALL	OTS$CVT_T_H

; Module OTS$MOVE

	VCALL	OTS$MOVE3
	VJSB	OTS$MOVE3_R5
	VCALL	OTS$MOVE5
	VJSB	OTS$MOVE5_R5

; Module OTS$SCOPY

	VCALL	OTS$SCOPY_DXDX
	VJSB	OTS$SCOPY_DXDX6
	VCALL	OTS$SCOPY_R_DX
	VJSB	OTS$SCOPY_R_DX6
	VCALL	OTS$SFREE1_DD
	VJSB	OTS$SFREE1_DD6
	VCALL	OTS$SFREEN_DD
	VJSB	OTS$SFREEN_DD6
	VCALL	OTS$SGET1_DD
	VJSB	OTS$SGET1_DD_R6

; Module STR$ANALYZE_SDESC

	VCALL	STR$ANALYZE_SDESC
	VJSB	STR$ANALYZE_SDESC_R1

; Module STR$APPEND

	VCALL	STR$APPEND

; Module STR$COMPARE

	VCALL	STR$COMPARE

; Module STR$COMPARE_CASE_BLIND

	VCALL	STR$CASE_BLIND_COMPARE

; Module STR$COMPARE_EQL

	VCALL	STR$COMPARE_EQL

; Module STR$CONCAT

	VCALL	STR$CONCAT

; Module STR$COPY

	VCALL	STR$COPY_DX
	VJSB	STR$COPY_DX_R8
	VCALL	STR$COPY_R
	VJSB	STR$COPY_R_R8

; Module STR$DUPL_CHAR

	VCALL	STR$DUPL_CHAR
	VJSB	STR$DUPL_CHARR8

; Module STR$FIND_FIRST

	VCALL	STR$FIND_FIRST_IN_SET
	VCALL	STR$FIND_FIRST_NOT_IN_SET

; Module STR$FIND_FIRST_SUBSTRING

	VCALL	STR$FIND_FIRST_SUBSTRING

; Module STR$GET_FREE

	VCALL	STR$FREE1_DX
	VJSB	STR$FREE1_DX_R4
	VCALL	STR$GET1_DX
	VJSB	STR$GET1_DX_R4

; Module STR$LEFT

	VCALL	STR$LEFT
	VJSB	STR$LEFT_R8

; Module STR$LEN_EXTR

	VCALL	STR$LEN_EXTR
	VJSB	STR$LEN_EXTR_R8

; Module STR$POSITION

	VCALL	STR$POSITION
	VJSB	STR$POSITION_R6

; Module STR$POS_EXTR

	VCALL	STR$POS_EXTR
	VJSB	STR$POS_EXTR_R8

; Module STR$PREFIX

	VCALL	STR$PREFIX

; Module STR$REPLACE

	VCALL	STR$REPLACE
	VJSB	STR$REPLACE_R8

; Module STR$RIGHT

	VCALL	STR$RIGHT
	VJSB	STR$RIGHT_R8

; Module STR$TRANSLATE

	VCALL	STR$TRANSLATE

; Module STR$TRIM

	VCALL	STR$TRIM

; Module STR$UPCASE

	VCALL	STR$UPCASE

;+
; End of initial LIBRTL vector.  All subsequent additions must be made
; after this point.
;-

; Module OTS$CVTLT (continued)

	VCALL	FOR$CNV_OUT_I	; Use OTS$CVT_L_TI instead
	VCALL	FOR$CNV_OUT_L	; Use OTS$CVT_L_TL instead
	VCALL	FOR$CNV_OUT_O	; Use OTS$CVT_L_TO instead
	VCALL	FOR$CNV_OUT_Z	; Use OTS$CVT_L_TZ instead

; Module LIB$GETDVI

	VCALL	LIB$GETDVI

; Module LIB$GETJPI

	VCALL	LIB$GETJPI

; Module LIB$GETSYI

	VCALL	LIB$GETSYI

; Module LIB$SIGSTOP

	VCALL	LIB$SIG_TO_STOP

; Module OTS$$CVTRT

	VJSB	OTS$$RET_A_CVT_TAB_R1
	VJSB	OTS$$CVT_MUL

;+
; Add all the remaining LIB$, STR$ and OTS$ modules that were previously
; non-shared. 
;-
; Module LIB$ADDX

	VCALL	LIB$ADDX
	VCALL	LIB$SUBX

; Module LIB$ASN_WTH_MBX

	VCALL	LIB$ASN_WTH_MBX

; Module LIB$BBCCI

	VCALL	LIB$BBCCI

; Module LIB$BBSSI

	VCALL	LIB$BBSSI

; Module LIB$BINARY_TREE

	VCALL	LIB$INSERT_TREE
	VCALL	LIB$LOOKUP_TREE
	VCALL	LIB$TRAVERSE_TREE

; Module LIB$CALLG

	VCALL	LIB$CALLG

; Module LIB$CHAR

	VCALL	LIB$CHAR

; Module LIB$COMMON

	VCALL	LIB$GET_COMMON
	VCALL	LIB$PUT_COMMON

; Module LIB$DATE_TIME

	VCALL	LIB$DATE_TIME

; Module LIB$DAY

	VCALL	LIB$DAY

; Module LIB$DO_COMMAND

	VCALL	LIB$DO_COMMAND

; Module LIB$EDIV

	VCALL	LIB$EDIV

; Module LIB$EMODD

	VCALL	LIB$EMODD

; Module LIB$EMODF

	VCALL	LIB$EMODF

; Module LIB$EMODG

	VCALL	LIB$EMODG

; Module LIB$EMODH

	VCALL	LIB$EMODH

; Module LIB$EMUL

	VCALL	LIB$EMUL

; Module LIB$GET_FOREIGN

	VCALL	LIB$GET_FOREIGN

; Module LIB$ICHAR

	VCALL	LIB$ICHAR

; Module LIB$INSQHI

	VCALL	LIB$INSQHI

; Module LIB$INSQTI

	VCALL	LIB$INSQTI

; Module LIB$LEN

	VCALL	LIB$LEN

; Module LIB$LOOKUP_KEY

	VCALL	LIB$LOOKUP_KEY

; Module LIB$MOVC3

	VCALL	LIB$MOVC3

; Module LIB$MOVC5

	VCALL	LIB$MOVC5

; Module LIB$POLYD

	VCALL	LIB$POLYD

; Module LIB$POLYF

	VCALL	LIB$POLYF

; Module LIB$POLYG

	VCALL	LIB$POLYG

; Module LIB$POLYH

	VCALL	LIB$POLYH

; Module LIB$REMQHI

	VCALL	LIB$REMQHI

; Module LIB$REMQTI

	VCALL	LIB$REMQTI

; Module LIB$RUN_PROGRAM

	VCALL	LIB$RUN_PROGRAM

; Module LIB$SYS_ASCTIM

	VCALL	LIB$SYS_ASCTIM

; Module LIB$SYS_FAO

	VCALL	LIB$SYS_FAO

; Module LIB$SYS_FAOL

	VCALL	LIB$SYS_FAOL

; Module LIB$SYS_GETMSG

	VCALL	LIB$SYS_GETMSG

; Module LIB$SYS_TRNLOG

	VCALL	LIB$SYS_TRNLOG

; Module LIB$TIMER

	VCALL	LIB$FREE_TIMER
	VCALL	LIB$INIT_TIMER
	VCALL	LIB$SHOW_TIMER
	VCALL	LIB$STAT_TIMER

; Module LIB$TRIM_FILESPEC

	VCALL	LIB$TRIM_FILESPEC

; Module OTS$CNVOUT

	ALIAS	COB$CNVOUT
	VCALL	OTS$CNVOUT
	VCALL	OTS$CNVOUT_G
	VCALL	OTS$CNVOUT_H

; Module OTS$CVTDP_R9

	ALIAS	COB$CVTDP_R9
	VJSB	OTS$CVTDP_R9

; Module OTS$CVTFP_R9

	ALIAS	COB$CVTFP_R9
	VJSB	OTS$CVTFP_R9

; Module OTS$CVTGP_R9

	VJSB	OTS$CVTGP_R9

; Module OTS$CVTHP_R9

	VJSB	OTS$CVTHP_R9

; Module OTS$CVTPD_R9

	ALIAS	COB$CVTPD_R9
	VJSB	OTS$CVTPD_R9

; Module OTS$CVTPF_R9

	ALIAS	COB$CVTPF_R9
	VJSB	OTS$CVTPF_R9

; Module OTS$CVTPG_R9

	VJSB	OTS$CVTPG_R9

; Module OTS$CVTPH_R9

	VJSB	OTS$CVTPH_R9

; Module OTS$CVTRDP_R9

	ALIAS	COB$CVTRDP_R9
	VJSB	OTS$CVTRDP_R9

; Module OTS$CVTRFP_R9

	ALIAS	COB$CVTRFP_R9
	VJSB	OTS$CVTRFP_R9

; Module OTS$CVTRGP_R9

	VJSB	OTS$CVTRGP_R9

; Module OTS$CVTRHP_R9

	VJSB	OTS$CVTRHP_R9

; Module STR$ARITH

	VCALL	STR$ADD
	VCALL	STR$DIVIDE
	VCALL	STR$MUL	
	VCALL	STR$RECIP
	VCALL	STR$ROUND

; Module OTS$CVTLT

	VCALL	OTS$CVT_L_TU

; Module OTS$CVTTIL

	VCALL	OTS$CVT_TU_L


; Module STR$MATCH

	VCALL	STR$MATCH_WILD


; Module LIB$DAY_OF_WEEK

	VCALL	LIB$DAY_OF_WEEK

; Module LIB$FILESCAN

	VCALL	LIB$FIND_FILE_END
	VCALL	LIB$FILE_SCAN_END

; Module LIB$FIND_IMAGE

	VCALL	LIB$FIND_IMAGE_SYMBOL

; Module OTS$DIV_PKSHORT

	VCALL	OTS$DIV_PKSHORT

; Module OTS$DIV_PK_LONG

	VCALL	OTS$DIV_PK_LONG

; Module LIB$CREATE_DIR

	VCALL	LIB$CREATE_DIR

	.END					; End of module LIB$VECTOR

