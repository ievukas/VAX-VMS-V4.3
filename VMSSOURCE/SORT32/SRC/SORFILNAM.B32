MODULE SOR$FILE_NAME (IDENT = 'V04-000') =
BEGIN
!
!****************************************************************************
!*									    *
!*  COPYRIGHT (c) 1978, 1980, 1982, 1984 BY				    *
!*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
!*  ALL RIGHTS RESERVED.						    *
!* 									    *
!*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
!*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
!*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
!*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
!*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
!*  TRANSFERRED.							    *
!* 									    *
!*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
!*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
!*  CORPORATION.							    *
!* 									    *
!*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
!*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
!* 									    *
!*									    *
!****************************************************************************
!

!++
!
! FACILITY:	VAX-11 SORT/MERGE
!
! ABSTRACT:
!
!	This module contains routines to copy file names.
!
! ENVIRONMENT:	VAX/VMS user mode
!
! AUTHOR: Peter D Gilbert, CREATION DATE: 14-Oct-1982
!
! MODIFIED BY:
!
!	T03-015		Original
!	T03-016	Changes for hostile environment. PDG 3-Feb-1983
!--

LIBRARY	'SYS$LIBRARY:STARLET';
REQUIRE 'SRC$:COM';

FORWARD ROUTINE
	SOR$$COPY_FILE_NAME:	CAL_CTXREG NOVALUE,
	SOR$$BEST_FILE_NAME:	CAL_CTXREG NOVALUE,
	SOR$$FREE_FILE_NAME:	CAL_CTXREG NOVALUE;
EXTERNAL ROUTINE
	SOR$$ALLOCATE:		CAL_CTXREG,		! Allocate storage
	SOR$$DEALLOCATE:	CAL_CTXREG NOVALUE,	! Deallocate storage
	SOR$$ERROR;

GLOBAL ROUTINE SOR$$BEST_FILE_NAME
	(
	FAB:	REF $FAB_DECL,
	RES:	REF VECTOR[2]
	): CAL_CTXREG NOVALUE =
!++
!
! FUNCTIONAL DESCRIPTION:
!
!	This routine determines the best file name available after an OPEN
!	or CREATE, and stores the result string into a length/address vector.
!
! FORMAL PARAMETERS:
!
!	FAB	Pointer to FAB
!	RES	Length/address of the string
!
! IMPLICIT INPUTS:
!
!	NONE
!
! IMPLICIT OUTPUTS:
!
!	NONE
!
! ROUTINE VALUE:
!
!	NONE
!
!--
    BEGIN
    EXTERNAL REGISTER
	CTX =	COM_REG_CTX:	REF CTX_BLOCK;
    BIND
	NAM = .FAB[FAB$L_NAM]:	$NAM_DECL;
    LOCAL
	LEN,
	ADR;

    ! Get the length/address of the best available file name string
    !
    ADR = .NAM[NAM$L_RSA];
    IF (LEN = .NAM[NAM$B_RSL]) NEQ 0
    THEN
	0
    ELIF (LEN = .NAM[NAM$B_ESL]) NEQ 0
    THEN
	0
    ELSE
	BEGIN
	LEN = .FAB[FAB$B_FNS];
	ADR = .FAB[FAB$L_FNA];
	END;

    IF .LEN NEQ .RES[0]
    THEN
	BEGIN

	! Free the old string
	!
	SOR$$DEALLOCATE(.RES[0], RES[1]);

	! Allocate space for the new string
	!
	RES[0] = .LEN;
	RES[1] = SOR$$ALLOCATE(.LEN);
	END;

    ! Move the string
    !
    CH$MOVE(.LEN, .ADR, .RES[1]);

    END;

GLOBAL ROUTINE SOR$$COPY_FILE_NAME
	(
	DESC:	REF BLOCK[,BYTE],
	RES:	REF VECTOR[2]
	): CAL_CTXREG NOVALUE =
!++
!
! FUNCTIONAL DESCRIPTION:
!
!	This routine copies a file name (as passed by a user)
!	to a length/address vector.  Note that various descriptor classes
!	are supported (via ANALYZE_SDESC).
!
! FORMAL PARAMETERS:
!
!	DESC	String descriptor
!	RES	Length/address of the string
!
! IMPLICIT INPUTS:
!
!	NONE
!
! IMPLICIT OUTPUTS:
!
!	NONE
!
! ROUTINE VALUE:
!
!	NONE
!
!--
    BEGIN
    EXTERNAL REGISTER
	CTX =	COM_REG_CTX:	REF CTX_BLOCK;
    LOCAL
	LEN,
	ADR,
	STATUS;

    LEN = 0;
    %IF HOSTILE
    %THEN
	LEN = .DESC[DSC$W_LENGTH];
	ADR = .DESC[DSC$A_POINTER];
    %ELSE
	BEGIN
	EXTERNAL ROUTINE
	    LIB$ANALYZE_SDESC:	ADDRESSING_MODE(GENERAL);
	STATUS = LIB$ANALYZE_SDESC(DESC[BASE_], LEN, ADR);
	IF NOT .STATUS THEN SOR$$ERROR(SOR$_SHR_SYSERROR, 0, .STATUS);
	END;
    %FI

    RES[0] = .LEN;
    RES[1] = SOR$$ALLOCATE(.LEN);

    CH$MOVE(.LEN, .ADR, .RES[1]);
    END;

GLOBAL ROUTINE SOR$$FREE_FILE_NAME
	(
	RES:	REF VECTOR[2]
	): CAL_CTXREG NOVALUE =
!++
!
! FUNCTIONAL DESCRIPTION:
!
!	This routine releases the storage used to hold a file name string.
!
! FORMAL PARAMETERS:
!
!	RES	Length/address of the string
!
! IMPLICIT INPUTS:
!
!	NONE
!
! IMPLICIT OUTPUTS:
!
!	NONE
!
! ROUTINE VALUE:
!
!	NONE
!
!--
    BEGIN
    EXTERNAL REGISTER
	CTX =	COM_REG_CTX:	REF CTX_BLOCK;

    SOR$$DEALLOCATE(.RES[0], RES[1]);
    END;

END
ELUDOM
