MODULE	OPC$UNKNOWN	(
			 LANGUAGE (BLISS32),
			 IDENT = 'V04-000'
			) =

!****************************************************************************
!*									    *
!*  COPYRIGHT (c) 1978, 1980, 1982, 1984 BY				    *
!*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
!*  ALL RIGHTS RESERVED.						    *
!* 									    *
!*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
!*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
!*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
!*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
!*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
!*  TRANSFERRED.							    *
!* 									    *
!*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
!*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
!*  CORPORATION.							    *
!* 									    *
!*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
!*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
!* 									    *
!*									    *
!****************************************************************************

!++
! FACILITY:
!
!	OPCOM
!
! ABSTRACT:
!
!	This module contains the specialized logic to service
!	a particular type of request sent by a user to OPCOM.
!
! Environment:
!
!	VAX/VMS operating system.
!
! Author:
!
!	Steven T. Jeffreys
!
! Creation date:
!
!	March 10, 1981
!
! Revision history:
!
!	V03-001	CWH3001		CW Hobbs			30-Jul-1983
!		Various and sundry things to make OPCOM distributed
!		across the cluster.
!
!--

BEGIN						! Start of UNKNOWN

LIBRARY	'SYS$LIBRARY:LIB.L32';
LIBRARY 'LIB$:OPCOMLIB';

FORWARD ROUTINE
	UNKNOWN_HANDLER	: NOVALUE;

BUILTIN

	INSQUE,					! Insert entry onto a queue
	REMQUE;					! Remove entry from a queue

GLOBAL ROUTINE UNKNOWN_HANDLER (BUFFER_DESC) : NOVALUE =

!++
! Functional description:
!
! 	This routine is the handler for all unrecognized messages
!	received by OPCOM.  This routine will keep a log of these
!	messages and then return, effectively ignoring the message.
!
! Input:
!
!	BUFFER_DESC : The address of a quadword buffer descriptor pointing
!		      describes the buffer containing the message.
!
! Implicit Input:
!
!	None.
!
! Output:
!
!	None.
!
! Implict output:
!
!	Some accounting data will be updated.
!
! Side effects:
!
!	The message is ignored, and OPCOM will 
!	porceed as if it had never received it.
!
! Routine value:
!
!	None.
!--

BEGIN						! Start of UNKNOWN_HANDLER

MAP
	BUFFER_DESC		: $ref_bblock;

EXTERNAL ROUTINE
	DUMP_LOG_FILE;

EXTERNAL
	UNKNOWN_MESSAGE_COUNT	: LONG;		! Count of all unknown messages received

!
! Increment the count of unknown messages received.
!
UNKNOWN_MESSAGE_COUNT = .UNKNOWN_MESSAGE_COUNT + 1;

!
! Dump the message in the log file
!
DUMP_LOG_FILE (.BUFFER_DESC, %ASCID '-  Unknown message received');

END;						! End of UNKNOWN_HANDLER

END						! End of UNKNOWN
ELUDOM
