! 
! ****************************************************************************
! *									    *
! *  Copyright (c) 1982, 1983		                                    *
! *  by DIGITAL Equipment Corporation, Maynard, Mass.			    *
! * 									    *
! *  This software is furnished under a license and may be used and  copied  *
! *  only  in  accordance  with  the  terms  of  such  license and with the  *
! *  inclusion of the above copyright notice.  This software or  any  other  *
! *  copies  thereof may not be provided or otherwise made available to any  *
! *  other person.  No title to and ownership of  the  software  is  hereby  *
! *  transferred.							    *
! * 									    *
! *  The information in this software is subject to change  without  notice  *
! *  and  should  not  be  construed  as  a commitment by DIGITAL Equipment  *
! *  Corporation.							    *
! * 									    *
! *  DIGITAL assumes no responsibility for the use or  reliability  of  its  *
! *  software on equipment which is not supplied by DIGITAL.		    *
! *									    *
! ****************************************************************************
! *********************************************************************************************************************************
!  Created 15-SEP-1984 22:42:43  by  VAX-11 SDL V2.0       Source: 15-SEP-1984 22:41:29 _$255$DUA28:[CJFV4.SRC]CJFRUFMAC.SDL;1     
! *********************************************************************************************************************************
 
 
!*** MODULE STARLET ***
! 
!  CJF AND RUF SERVICE MACRO DEFINITIONS
! 
! 
!  $ALLJDR
! 
!  ALLOCATE A DISK OR TAPE DRIVE FOR JOURNALING
! 
!      DEVNAM	- ADDRESS OF A CHARACTER STRING DESCRIPTOR FOR THE DEVICE
!     		  NAME STRING.
!     [RSLLEN]	- ADDRESS OF A WORD TO RECEIVE THE LENGTH OF THE ALLOCATED
!     		  DEVICE NAME STRING.
!     [RSLBUF]	- ADDRESS OF A CHARACTER STRING DESCRIPTOR FOR RECEIVING THE
!     		  PHYSICAL DEVICE NAME STRING.
!     [JNLACP]	- ADDRESS OF A DESCRIPTOR FOR A JOURNAL ACP PROCESS NAME.
! 
%if not %declared(%quote SDL$STARLET_REQ) %then
! MACRO to emit warning and default to 0 if required argument is missing
!
macro
SDL$STARLET_REQ(ARG1, arg2) =
    %IF not %NULL(ARG1) %THEN ARG1
    %else
	%warn(%string('REQUIRED ARGUMENT ', %NAME(ARG2), ' MISSING')) 0
    %FI %;
%fi
 
%if not %declared(%quote SDL$STARLET_OPT) %then
! Defaults omitted arguments to 0 if followed by additional arguments
!
macro
SDL$STARLET_OPT[ARG] =
    %IF %NULL(ARG)
    %THEN
	%IF NOT %NULL(%REMAINING)
	%THEN
	    0
	%FI
    %ELSE
	ARG
    %FI %;
%fi
 
%if not %declared(%quote SDL$STARLET_CONCAT) %then
! Eliminates trailing null arguments
!
macro
SDL$STARLET_CONCAT[ARG] =
    %IF NOT %NULL(ARG) %THEN ARG %FI %;
%fi
 
!             ***********************************	
 
KEYWORDMACRO $ALLJDR (DEVNAM,RSLLEN=0,RSLBUF=0,JNLACP=0) =
   BEGIN
   EXTERNAL ROUTINE CJF$ALLJDR : BLISS ADDRESSING_MODE (GENERAL);
	   CJF$ALLJDR (SDL$STARLET_CONCAT( SDL$STARLET_REQ(DEVNAM, %QUOTE DEVNAM) ,
	   RSLLEN, RSLBUF, JNLACP))
   END %;
 
! 
!  $ASSJNL
! 
!  ASSIGN A CHANNEL TO A JOURNAL
! 
!      CHAN	- ADDRESS OF A WORD TO RECEIVE THE CHANNEL NUMBER ASSIGNED.
!      JNLTYP	- TYPE OF JOURNAL.
!     [JNLNAM]	- ADDRESS OF A CHARACTER STRING DESCRIPTOR FOR THE JOURNAL
!     		  NAME STRING.
!     [ACMODE]	- ADDRESS OF A BYTE CONTAINING THE ACCESS MODE TO BE ASSOCIATED
!     		  WITH CHANNEL.
!     [PROT]	- ADDRESS OF A WORD CONTAINING THE PROTECTION MASK GIVEN TO
!     		  ENTRIES WRITTEN OVER CHANNEL.
!     [FACCOD]	- ADDRESS OF A WORD CONTAINING THE FACILITY CODE VALUE GIVEN TO
!     		  ENTRIES.
!     [FLAGS] 	- FLAGS FOR CHANNEL.
!     [DEVNAM]	- ADDRESS OF A CHARACTER STRING DESCRIPTOR FOR THE DEVICE
!     		  NAME STRING.
!     [OBJUIC]	- ADDRESS OF A LONGWORD CONTAINING OBJECTS UIC
!     [SESSID]	- ADDRESS OF A STRING DESCRIPTOR FOR SESSION ID
! 
KEYWORDMACRO $ASSJNL (CHAN,JNLTYP,JNLNAM=0,ACMODE=0,PROT=0,FACCOD=0
		,FLAGS=0,DEVNAM=0,OBJUIC=0,SESSID=0) =
   BEGIN
   EXTERNAL ROUTINE CJF$ASSJNL : BLISS ADDRESSING_MODE (GENERAL);
	   CJF$ASSJNL (SDL$STARLET_CONCAT( SDL$STARLET_REQ(CHAN, %QUOTE CHAN) ,
	   SDL$STARLET_REQ(JNLTYP, %QUOTE JNLTYP) , JNLNAM, ACMODE, PROT,
	   FACCOD, FLAGS, DEVNAM, OBJUIC, SESSID))
   END %;
 
! 
!  $CREJNL
! 
!  CREATE A JOURNAL
! 
!      CHAN	- ADDRESS OF A WORD TO RECEIVE THE CHANNEL NUMBER ASSIGNED.
!      JSB	- ADDRESS OF THE JOURNAL SPECIFICATION BLOCK.
!     [ACMODE]	- ADDRESS OF A BYTE CONTAINING THE ACCESS MODE TO BE ASSOCIATED
!     		  WITH CHANNEL.
!     [PROT]	- ADDRESS OF A WORD CONTAINING THE PROTECTION MASK GIVEN TO
!     		  ENTRIES WRITTEN OVER CHANNEL.
!     [FACCOD]	- ADDRESS OF A WORD CONTAINING THE FACILITY CODE VALUE GIVEN TO
!     		  ENTRIES.
!     [FLAGS]	- FLAGS FOR CHANNEL.
!     [OBJUIC]	- ADDRESS OF A LONGWORD CONTAINING OBJECTS UIC
!     [SESSID]	- ADDRESS OF A STRING DESCRIPTOR FOR SESSION ID
!     [IOSB]	- ADDRESS OF A IOSB
! 
KEYWORDMACRO $CREJNL (CHAN,JSB,ACMODE=0,PROT=0,FACCOD=0,FLAGS=0
		,OBJUIC=0,SESSID=0,IOSB=0) =
   BEGIN
   EXTERNAL ROUTINE CJF$CREJNL : BLISS ADDRESSING_MODE (GENERAL);
	   CJF$CREJNL (SDL$STARLET_CONCAT( SDL$STARLET_REQ(CHAN, %QUOTE CHAN) ,
	   SDL$STARLET_REQ(JSB, %QUOTE JSB) , ACMODE, PROT, FACCOD, FLAGS,
	   OBJUIC, SESSID, IOSB))
   END %;
 
! 
!  $DEASJNL
! 
!  DEASSIGN A CHANNEL TO A JOURNAL
! 
!     CHAN	- NUMBER OF THE I/O CHANNEL TO BE DEASSIGNED.
!     IOSB	- ADDRESS OF AN IOSB
! 
KEYWORDMACRO $DEASJNL (CHAN,IOSB=0) =
   BEGIN
   EXTERNAL ROUTINE CJF$DEASJNL : BLISS ADDRESSING_MODE (GENERAL);
	   CJF$DEASJNL (SDL$STARLET_CONCAT( SDL$STARLET_REQ(CHAN, %QUOTE CHAN) ,
	   IOSB))
   END %;
 
! 
!  $DEALJDR
! 
!  DEALLOCATE A JOURNAL DISK OR TAPE DRIVE.
! 
!     DEVNAM	- ADDRESS OF A CHARACTER STRING DESCRIPTOR FOR THE DEVICE
!     		  NAME STRING.
! 
KEYWORDMACRO $DEALJDR (DEVNAM) =
   BEGIN
   EXTERNAL ROUTINE CJF$DEALJDR : BLISS ADDRESSING_MODE (GENERAL);
	   CJF$DEALJDR (SDL$STARLET_CONCAT( SDL$STARLET_REQ(DEVNAM, %QUOTE DEVNAM) ))
   END %;
 
! 
!  $DELJNL
! 
!  DELETE A JOURNAL
! 
!      CHAN	- NUMBER OF THE I/O CHANNEL TO THE JOURNAL TO BE DELETED.
!     [FLAGS]	- FLAGS FOR CHANNEL.
! 
KEYWORDMACRO $DELJNL (CHAN,FLAGS=0) =
   BEGIN
   EXTERNAL ROUTINE CJF$DELJNL : BLISS ADDRESSING_MODE (GENERAL);
	   CJF$DELJNL (SDL$STARLET_CONCAT( SDL$STARLET_REQ(CHAN, %QUOTE CHAN) ,
	   FLAGS))
   END %;
 
! 
!  $DMTJMD AND $DMTJMDW
! 
!  DISMOUNT A JOURNAL MEDIUM
! 
!     [DEVNAM]	- ADDRESS OF A CHARACTER STRING DESCRIPTOR FOR THE DEVICE
!     		  NAME STRING.
!     [GRPNAM]	- ADDRESS OF A CHARACTER STRING DESCRIPTOR FOR THE TAPE
!     		  SHADOW GROUP.
!     [FLAGS]	- 32 BIT VALUE OF FLAGS.
!     [EFN]	- NUMBER OF EVENT FLAG TO BE SET UPON COMPLETION.
!     [IOSB]	- ADDRESS OF QUADWORD I/O STATUS BLOCK THAT IS TO RECEIVE
!     		  FINAL COMPLETION STATUS.
!     [ASTADR]	- ADDRESS OF THE ENTRY MASK OF AN AST SERVICE ROUTINE TO BE
!     		  EXECUTED WHEN THE DISMOUNT COMPLETES.
!     [ASTPRM]	- AST PARAMETER LONGWORD TO BE PASSED TO THE AST ROUTINE.
! 
KEYWORDMACRO $DMTJMD (DEVNAM=0,GRPNAM=0,FLAGS=0,EFN=0,IOSB=0,ASTADR=0
		,ASTPRM=0) =
   BEGIN
   EXTERNAL ROUTINE CJF$DMTJMD : BLISS ADDRESSING_MODE (GENERAL);
	   CJF$DMTJMD (SDL$STARLET_CONCAT( DEVNAM, GRPNAM, FLAGS, EFN, IOSB,
	   ASTADR, ASTPRM))
   END %;
 
KEYWORDMACRO $DMTJMDW (DEVNAM=0,GRPNAM=0,FLAGS=0,EFN=0,IOSB=0
		,ASTADR=0,ASTPRM=0) =
   BEGIN
   EXTERNAL ROUTINE CJF$DMTJMDW : BLISS ADDRESSING_MODE (GENERAL);
	   CJF$DMTJMDW (SDL$STARLET_CONCAT( DEVNAM, GRPNAM, FLAGS, EFN, IOSB,
	   ASTADR, ASTPRM))
   END %;
 
! 
!  $FORCEJNL AND $FORCEJNLW
! 
!  FORCE THE JOURNAL'S CURRENT BUFFERS OUT TO SECONDARY STORAGE
! 
!      CHAN	- NUMBER OF A CHANNEL TO THE JOURNAL.
!     [SEQNO]	- HIGHEST SEQUENCE NUMBER TO FORCE TO.
!     [EFN]	- NUMBER OF EVENT FLAG TO BE SET UPON COMPLETION.
!     [IOSB]	- ADDRESS OF QUADWORD I/O STATUS BLOCK THAT IS TO RECEIVE
!     		  FINAL COMPLETION STATUS.
!     [ASTADR]	- ADDRESS OF THE ENTRY MASK OF AN AST SERVICE ROUTINE TO BE
!     		  EXECUTED UPON COMPLETION.
!     [ASTPRM]	- AST PARAMETER LONGWORD TO BE PASSED TO THE AST ROUTINE.
! 
KEYWORDMACRO $FORCEJNL (CHAN,SEQNO=0,EFN=0,IOSB=0,ASTADR=0,ASTPRM=0) =
   BEGIN
   EXTERNAL ROUTINE CJF$FORCEJNL : BLISS ADDRESSING_MODE (GENERAL);
	   CJF$FORCEJNL (SDL$STARLET_CONCAT( SDL$STARLET_REQ(CHAN, %QUOTE CHAN) ,
	   SEQNO, EFN, IOSB, ASTADR, ASTPRM))
   END %;
 
KEYWORDMACRO $FORCEJNLW (CHAN,SEQNO=0,EFN=0,IOSB=0,ASTADR=0,ASTPRM=0) =
   BEGIN
   EXTERNAL ROUTINE CJF$FORCEJNLW : BLISS ADDRESSING_MODE (GENERAL);
	   CJF$FORCEJNLW (SDL$STARLET_CONCAT( SDL$STARLET_REQ(CHAN, %QUOTE CHAN) ,
	   SEQNO, EFN, IOSB, ASTADR, ASTPRM))
   END %;
 
! 
!  $GETJNL
! 
!  GET THE DEFAULT JOURNAL NAME FOR A DEVICE-UIC PAIR
! 
!      DEVNAM	- ADDRESS OF A CHARACTER STRING DESCRIPTOR FOR THE DEVICE
!     		  NAME STRING.
!      UIC	- UIC OF THE OWNER OF THE OBJECT TO BE JOURNALED.
!      JNLTYP	- TYPE OF JOURNAL.
!      JNLNAM	- ADDRESS OF DESRCIPTOR TO RECEIVE THE JOURNAL NAME.
!     [RSLLEN]	- ADDRESS OF A WORD TO RECEIVE THE LENGTH OF THE RESULTANT
!     		  NAME STRING.
! 
KEYWORDMACRO $GETJNL (DEVNAM,UIC,JNLTYP,JNLNAM,RSLLEN=0) =
   BEGIN
   EXTERNAL ROUTINE CJF$GETJNL : BLISS ADDRESSING_MODE (GENERAL);
	   CJF$GETJNL (SDL$STARLET_CONCAT( SDL$STARLET_REQ(DEVNAM, %QUOTE DEVNAM) ,
	   SDL$STARLET_REQ(UIC, %QUOTE UIC) , SDL$STARLET_REQ(JNLTYP, %QUOTE JNLTYP) ,
	   SDL$STARLET_REQ(JNLNAM, %QUOTE JNLNAM) , RSLLEN))
   END %;
 
! 
!  $GETRUI
! 
!  GET RECOVERY UNIT INFORMATION
! 		Note: One of [RUID,DEVNAM] must be specified, but for SDL's
! 		      purposes they must both be considered optional
!     [RUID]	- ADDRESS OF AN OCTAWORD RECOVERY UNIT ID.
!     [DEVNAM]	- ADDRESS OF A CHARACTER STRING DESCRIPTOR FOR THE DEVICE
!     		  NAME STRING.
!      RSLBUF	- ADDRESS OF A CHARACTER STRING DESCRIPTOR FOR THE BUFFER
!     		  TO RECEIVE THE RU STRUCTURES (RUS's).
!     [RSLCNT]	- ADDRESS OF A WORD TO RECEIVE THE NUMBER OF RUS's RETURNED.
!     [FLAGS]   - 32 BIT VALUE OF FLAGS.
! 
KEYWORDMACRO $GETRUI (RUID=0,DEVNAM=0,RSLBUF,RSLCNT=0,FLAGS=0) =
   BEGIN
   EXTERNAL ROUTINE CJF$GETRUI : BLISS ADDRESSING_MODE (GENERAL);
	   CJF$GETRUI (SDL$STARLET_CONCAT( RUID, DEVNAM, SDL$STARLET_REQ(RSLBUF, %QUOTE RSLBUF) ,
	   RSLCNT, FLAGS))
   END %;
 
! 
!  $MNTJMD
! 
!  MOUNT A JOURNAL DISK OR TAPE MEDIUM
! 
!      ITMLST	- ADDRESS OF A ZERO-TERMINATED LIST OF INPUT PARAMETERS.
!     [JNLACP]	- ADDRESS OF A DESCRIPTOR FOR A JOURNAL ACP PROCESS NAME.
!     [SGB]	- ADDRESS OF A ZERO-TERMINATED SHADOW GROUP BLOCK.
! 
KEYWORDMACRO $MNTJMD (ITMLST,JNLACP=0,SGB=0) =
   BEGIN
   EXTERNAL ROUTINE CJF$MNTJMD : BLISS ADDRESSING_MODE (GENERAL);
	   CJF$MNTJMD (SDL$STARLET_CONCAT( SDL$STARLET_REQ(ITMLST, %QUOTE ITMLST) ,
	   JNLACP, SGB))
   END %;
 
! 
!  $MODFLT AND $MODFLTW
! 
!  MODIFY A FILTER
! 
!      CHAN	- NUMBER OF A CHANNEL TO THE JOURNAL.
!      FLTLST	- ADDRESS OF A ZERO-TERMINATED LIST OF POINTERS TO FILTERS.
!      FLAGS	- 32 BIT VALUE OF FLAGS.
!     [EFN]	- NUMBER OF EVENT FLAG TO BE SET UPON COMPLETION.
!     [IOSB]	- ADDRESS OF QUADWORD I/O STATUS BLOCK THAT IS TO RECEIVE
!     		  FINAL COMPLETION STATUS.
!     [ASTADR]	- ADDRESS OF THE ENTRY MASK OF AN AST SERVICE ROUTINE TO BE
!     		  EXECUTED UPON COMPLETION.
!     [ASTPRM]	- AST PARAMETER LONGWORD TO BE PASSED TO THE AST ROUTINE.
! 
KEYWORDMACRO $MODFLT (CHAN,FLTLST,FLAGS=0,EFN=0,IOSB=0,ASTADR=0
		,ASTPRM=0) =
   BEGIN
   EXTERNAL ROUTINE CJF$MODFLT : BLISS ADDRESSING_MODE (GENERAL);
	   CJF$MODFLT (SDL$STARLET_CONCAT( SDL$STARLET_REQ(CHAN, %QUOTE CHAN) ,
	   SDL$STARLET_REQ(FLTLST, %QUOTE FLTLST) , FLAGS, EFN, IOSB, ASTADR,
	   ASTPRM))
   END %;
 
KEYWORDMACRO $MODFLTW (CHAN,FLTLST,FLAGS=0,EFN=0,IOSB=0,ASTADR=0
		,ASTPRM=0) =
   BEGIN
   EXTERNAL ROUTINE CJF$MODFLTW : BLISS ADDRESSING_MODE (GENERAL);
	   CJF$MODFLTW (SDL$STARLET_CONCAT( SDL$STARLET_REQ(CHAN, %QUOTE CHAN) ,
	   SDL$STARLET_REQ(FLTLST, %QUOTE FLTLST) , FLAGS, EFN, IOSB, ASTADR,
	   ASTPRM))
   END %;
 
! 
!  $POSJNL AND $POSJNLW	
! 
!  POSITION A FILTER PRIOR TO READING
! 
!      CHAN	- NUMBER OF A CHANNEL TO THE JOURNAL.
!      FLTLST	- ADDRESS OF A ZERO-TERMINATED LIST OF POINTERS TO FILTERS.
!     [FLAGS]	- 32 BIT VALUE OF FLAGS.
!     [EFN]	- NUMBER OF EVENT FLAG TO BE SET UPON COMPLETION.
!     [IOSB]	- ADDRESS OF QUADWORD I/O STATUS BLOCK THAT IS TO RECEIVE
!     		  FINAL COMPLETION STATUS.
!     [ASTADR]	- ADDRESS OF THE ENTRY MASK OF AN AST SERVICE ROUTINE TO BE
!     		  EXECUTED UPON COMPLETION.
!     [ASTPRM]	- AST PARAMETER LONGWORD TO BE PASSED TO THE AST ROUTINE.
! 
KEYWORDMACRO $POSJNL (CHAN,FLTLST,FLAGS=0,EFN=0,IOSB=0,ASTADR=0
		,ASTPRM=0) =
   BEGIN
   EXTERNAL ROUTINE CJF$POSJNL : BLISS ADDRESSING_MODE (GENERAL);
	   CJF$POSJNL (SDL$STARLET_CONCAT( SDL$STARLET_REQ(CHAN, %QUOTE CHAN) ,
	   SDL$STARLET_REQ(FLTLST, %QUOTE FLTLST) , FLAGS, EFN, IOSB, ASTADR,
	   ASTPRM))
   END %;
 
KEYWORDMACRO $POSJNLW (CHAN,FLTLST,FLAGS=0,EFN=0,IOSB=0,ASTADR=0
		,ASTPRM=0) =
   BEGIN
   EXTERNAL ROUTINE CJF$POSJNLW : BLISS ADDRESSING_MODE (GENERAL);
	   CJF$POSJNLW (SDL$STARLET_CONCAT( SDL$STARLET_REQ(CHAN, %QUOTE CHAN) ,
	   SDL$STARLET_REQ(FLTLST, %QUOTE FLTLST) , FLAGS, EFN, IOSB, ASTADR,
	   ASTPRM))
   END %;
 
! 
!  $READJNL AND $READJNLW
! 
!  READ THE NEXT ENTRY FROM A JOURNAL
! 
!      CHAN	- NUMBER OF A CHANNEL TO THE JOURNAL.
!     [RSLBUF]	- ADDRESS OF DESCRIPTOR OF RESULT BUFFER.
!     [ATRLST]	- ADDRESS OF A ZERO-TERMINATED LIST OF ATTRIBUTE DESCRIPTORS.
!     [EFN]	- NUMBER OF EVENT FLAG TO BE SET UPON COMPLETION.
!     [IOSB]	- ADDRESS OF QUADWORD I/O STATUS BLOCK THAT IS TO RECEIVE
!     		  FINAL COMPLETION STATUS.
!     [ASTADR]	- ADDRESS OF THE ENTRY MASK OF AN AST SERVICE ROUTINE TO BE
!     		  EXECUTED UPON COMPLETION.
!     [ASTPRM]	- AST PARAMETER LONGWORD TO BE PASSED TO THE AST ROUTINE.
! 
KEYWORDMACRO $READJNL (CHAN,RSLBUF=0,ATRLST=0,EFN=0,IOSB=0,ASTADR=0
		,ASTPRM=0) =
   BEGIN
   EXTERNAL ROUTINE CJF$READJNL : BLISS ADDRESSING_MODE (GENERAL);
	   CJF$READJNL (SDL$STARLET_CONCAT( SDL$STARLET_REQ(CHAN, %QUOTE CHAN) ,
	   RSLBUF, ATRLST, EFN, IOSB, ASTADR, ASTPRM))
   END %;
 
KEYWORDMACRO $READJNLW (CHAN,RSLBUF=0,ATRLST=0,EFN=0,IOSB=0,ASTADR=0
		,ASTPRM=0) =
   BEGIN
   EXTERNAL ROUTINE CJF$READJNLW : BLISS ADDRESSING_MODE (GENERAL);
	   CJF$READJNLW (SDL$STARLET_CONCAT( SDL$STARLET_REQ(CHAN, %QUOTE CHAN) ,
	   RSLBUF, ATRLST, EFN, IOSB, ASTADR, ASTPRM))
   END %;
 
! 
!  $RECOVER AND $RECOVERW
! 
!  PERFORM A GENERAL ROLLBACK OR ROLLFORWARD RECOVERY OPERATION
! 
!      FUNC	- TYPE OF RECOVERY TO PERFORM.
!      OBJECT	- ADDRESS OF A ZERO-TERMINATED LIST OF RECOVERY OBJECT DESCRIPTORS.
!     [FLTLST]	- ADDRESS OF A ZERO-TERMINATED LIST OF POINTERS TO FILTERS.
!     [ACMODE]	- ADDRESS OF A BYTE CONTAINING THE ACMODE TO BE USED.
!     [EFN]	- NUMBER OF EVENT FLAG TO BE SET UPON COMPLETION.
!     [IOSB]	- ADDRESS OF QUADWORD I/O STATUS BLOCK THAT IS TO RECEIVE
!     		  FINAL COMPLETION STATUS.
!     [ASTADR]	- ADDRESS OF THE ENTRY MASK OF AN AST SERVICE ROUTINE TO BE
!     		  EXECUTED UPON COMPLETION.
!     [ASTPRM]	- AST PARAMETER LONGWORD TO BE PASSED TO THE AST ROUTINE.
!     [LOGMBX]	- ADDRESS OF A STRING DESCRIPTOR POINTING TO THE LOGICAL
!     		  NAME OF THE MAILBOX TO RECEIVE LOG MESSAGES FROM THE RCP
! 
KEYWORDMACRO $RECOVER (FUNC,OBJECT,FLTLST=0,ACMODE=0,EFN=0,IOSB=0
		,ASTADR=0,ASTPRM=0,LOGMBX=0) =
   BEGIN
   EXTERNAL ROUTINE CJF$RECOVER : BLISS ADDRESSING_MODE (GENERAL);
	   CJF$RECOVER (SDL$STARLET_CONCAT( SDL$STARLET_REQ(FUNC, %QUOTE FUNC) ,
	   SDL$STARLET_REQ(OBJECT, %QUOTE OBJECT) , FLTLST, ACMODE, EFN, IOSB,
	   ASTADR, ASTPRM, LOGMBX))
   END %;
 
KEYWORDMACRO $RECOVERW (FUNC,OBJECT,FLTLST=0,ACMODE=0,EFN=0,IOSB=0
		,ASTADR=0,ASTPRM=0,LOGMBX=0) =
   BEGIN
   EXTERNAL ROUTINE CJF$RECOVERW : BLISS ADDRESSING_MODE (GENERAL);
	   CJF$RECOVERW (SDL$STARLET_CONCAT( SDL$STARLET_REQ(FUNC, %QUOTE FUNC) ,
	   SDL$STARLET_REQ(OBJECT, %QUOTE OBJECT) , FLTLST, ACMODE, EFN, IOSB,
	   ASTADR, ASTPRM, LOGMBX))
   END %;
 
! 
!  $WRITEJNL AND $WRITEJNLW
! 
!  WRITE AN ENTRY TO THE JOURNAL
! 
!      CHAN	- NUMBER OF A CHANNEL TO THE JOURNAL.
!      WRTBUF	- ADDRESS OF DESCRIPTOR OF THE BUFFER HOLDING THE ENTRY TO BE 
!     		  WRITTEN.
!     [MODIF]	- MODIFIERS AFFECTING THE WRITE OPERATION.
!     [ENTMSK]	- KEY WHICH PERMITS WRITING THIS ENTRY ONLY IF CORRESPONDING 
!     		  BITS ARE SET IN THE JOURNAL'S MASK.
!     [ENTATR]	- VALUE WRITTEN TO THE JOURNAL AS AN ENTRY ATTRIBUTE.
!     [EFN]	- NUMBER OF EVENT FLAG TO BE SET UPON COMPLETION.
!     [IOSB]	- ADDRESS OF QUADWORD I/O STATUS BLOCK THAT IS TO RECEIVE
!     		  FINAL COMPLETION STATUS.
!     [ASTADR]	- ADDRESS OF THE ENTRY MASK OF AN AST SERVICE ROUTINE TO BE
!     		  EXECUTED UPON COMPLETION.
!     [ASTPRM]	- AST PARAMETER LONGWORD TO BE PASSED TO THE AST ROUTINE.
! 
KEYWORDMACRO $WRITEJNL (CHAN,WRTBUF,MODIF=0,ENTMSK=0,ENTATR=0
		,EFN=0,IOSB=0,ASTADR=0,ASTPRM=0) =
   BEGIN
   EXTERNAL ROUTINE CJF$WRITEJNL : BLISS ADDRESSING_MODE (GENERAL);
	   CJF$WRITEJNL (SDL$STARLET_CONCAT( SDL$STARLET_REQ(CHAN, %QUOTE CHAN) ,
	   SDL$STARLET_REQ(WRTBUF, %QUOTE WRTBUF) , MODIF, ENTMSK, ENTATR,
	   EFN, IOSB, ASTADR, ASTPRM))
   END %;
 
KEYWORDMACRO $WRITEJNLW (CHAN,WRTBUF,MODIF=0,ENTMSK=0,ENTATR=0
		,EFN=0,IOSB=0,ASTADR=0,ASTPRM=0) =
   BEGIN
   EXTERNAL ROUTINE CJF$WRITEJNLW : BLISS ADDRESSING_MODE (GENERAL);
	   CJF$WRITEJNLW (SDL$STARLET_CONCAT( SDL$STARLET_REQ(CHAN, %QUOTE CHAN) ,
	   SDL$STARLET_REQ(WRTBUF, %QUOTE WRTBUF) , MODIF, ENTMSK, ENTATR,
	   EFN, IOSB, ASTADR, ASTPRM))
   END %;
 
! 
!  $CRENWV
! 
!  CREATE A NEW JOURNAL FILE VERSION
! 
!      CHAN	- ADDRESS OF A WORD TO RECEIVE THE CHANNEL NUMBER ASSIGNED.
!      LSTADR	- ADDRESS OF A LIST OF ITEM LIST ADDRESSES.
!     [WRTBUF]	- ADDRESS OF DESCRIPTOR FOR A BUFFER CONTAINING THE LAST
! 		  ENTRY TO BE WRITTEN TO THE CURRENT VERSION(S)
!     [IOSB]	- ADDRESS OF AN IOSB FOR THE WRITE OF THE LAST ENTRY
! 
KEYWORDMACRO $CRENWV (CHAN,LSTADR,WRTBUF=0,IOSB=0) =
   BEGIN
   EXTERNAL ROUTINE CJF$CRENWV : BLISS ADDRESSING_MODE (GENERAL);
	   CJF$CRENWV (SDL$STARLET_CONCAT( SDL$STARLET_REQ(CHAN, %QUOTE CHAN) ,
	   SDL$STARLET_REQ(LSTADR, %QUOTE LSTADR) , WRTBUF, IOSB))
   END %;
 
! 
!  $CONJNLF
! 
!  CONNECT AN OLD VERSION OF THE JOURNAL FILE
! 
!      CHAN	- ADDRESS OF A WORD TO RECEIVE THE CHANNEL NUMBER ASSIGNED.
!      ITMLST	- ADDRESS OF THE ITEM LIST SPECIFYING THE OLD JOURNAL FILE VERSION
! 
KEYWORDMACRO $CONJNLF (CHAN,ITMLST) =
   BEGIN
   EXTERNAL ROUTINE CJF$CONJNLF : BLISS ADDRESSING_MODE (GENERAL);
	   CJF$CONJNLF (SDL$STARLET_CONCAT( SDL$STARLET_REQ(CHAN, %QUOTE CHAN) ,
	   SDL$STARLET_REQ(ITMLST, %QUOTE ITMLST) ))
   END %;
 
! 
!  $DCNJNLF
! 
!  DISCONNECT A (SET OF) OLD JOURNAL FILE VERSIONS
! 
!      CHAN	- ADDRESS OF A WORD TO RECEIVE THE CHANNEL NUMBER ASSIGNED.
!     [ITMLST]	- ADDRESS OF THE JOURNAL SPECIFICATION BLOCK.
! 
KEYWORDMACRO $DCNJNLF (CHAN,ITMLST=0) =
   BEGIN
   EXTERNAL ROUTINE CJF$DCNJNLF : BLISS ADDRESSING_MODE (GENERAL);
	   CJF$DCNJNLF (SDL$STARLET_CONCAT( SDL$STARLET_REQ(CHAN, %QUOTE CHAN) ,
	   ITMLST))
   END %;
 
! 
!  $GETCJI
! 
!  GET COMMON JOURNALING INFORMATION
! 
!      CHAN	- NUMBER OF A CHANNEL TO THE JOURNAL.
!      ITMLST	- ADDRESS OF A ZERO TERMINTATED ITEM LIST
! 
KEYWORDMACRO $GETCJI (CHAN,ITMLST) =
   BEGIN
   EXTERNAL ROUTINE CJF$GETCJI : BLISS ADDRESSING_MODE (GENERAL);
	   CJF$GETCJI (SDL$STARLET_CONCAT( SDL$STARLET_REQ(CHAN, %QUOTE CHAN) ,
	   SDL$STARLET_REQ(ITMLST, %QUOTE ITMLST) ))
   END %;
 
! 
!  $CANCELRU
! 
!  CANCEL A RECOVERY UNIT
! 
! 
KEYWORDMACRO $CANCELRU =
   BEGIN
   EXTERNAL ROUTINE RUF$CANCELRU : BLISS ADDRESSING_MODE (GENERAL);
	RUF$CANCELRU()
   END %;
! 
!  $CANRUH
! 
!  CANCEL RECOVERY UNIT HANDLER
! 
!  HID 	- HANDLER IDENTIFIER (AS GIVEN BY $DCLRUH)
! 
KEYWORDMACRO $CANRUH (HID) =
   BEGIN
   EXTERNAL ROUTINE RUF$CANRUH : BLISS ADDRESSING_MODE (GENERAL);
	   RUF$CANRUH (SDL$STARLET_CONCAT( SDL$STARLET_REQ(HID, %QUOTE HID) ))
   END %;
 
! 
!  $DCLRUH
! 
!  DECLARE RECOVERY UNIT HANDLER
! 
!      ADDR	- ADDRESS OF RECOVERY UNIT HANDLER
!     [PARAM]	- VALUE OF THE PARAMETER PASSED TO THE HANDLER WHEN CALLED
!     [HID]	- ADDRESS TO RECEIVE HANDLER ID ASSIGNED BY RUF
! 
KEYWORDMACRO $DCLRUH (ADDR,PARAM=0,HID=0) =
   BEGIN
   EXTERNAL ROUTINE RUF$DCLRUH : BLISS ADDRESSING_MODE (GENERAL);
	   RUF$DCLRUH (SDL$STARLET_CONCAT( SDL$STARLET_REQ(ADDR, %QUOTE ADDR) ,
	   PARAM, HID))
   END %;
 
! 
!  $ENDRU
! 
!  SUCCESSFULLY COMPLETE A RECOVERY UNIT
! 
! 
KEYWORDMACRO $ENDRU =
   BEGIN
   EXTERNAL ROUTINE RUF$ENDRU : BLISS ADDRESSING_MODE (GENERAL);
	RUF$ENDRU()
   END %;
! 
!  $MARKPOINTRU
! 
!  ESTABLISH INTERMEDIATE MARKPOINT FOR RECOVERY UNIT
! 
!     [MARKID]	- ADDRESS OF LONGWORD TO RECEIVE MARK IDENTIFIER
! 	
KEYWORDMACRO $MARKPOINTRU (MARKID=0) =
   BEGIN
   EXTERNAL ROUTINE RUF$MARKPOINTRU : BLISS ADDRESSING_MODE (GENERAL);
	   RUF$MARKPOINTRU (SDL$STARLET_CONCAT( MARKID))
   END %;
 
! 
!  $PHASE1
! 
!  SUCCESSFULLY COMPLETE PHASE1 FOR A RECOVERY UNIT
! 
! 
KEYWORDMACRO $PHASE1 =
   BEGIN
   EXTERNAL ROUTINE RUF$PHASE1 : BLISS ADDRESSING_MODE (GENERAL);
	RUF$PHASE1()
   END %;
! 
!  $PHASE2
! 
!  SUCCESSFULLY COMPLETE PHASE1 FOR A RECOVERY UNIT
! 
! 
KEYWORDMACRO $PHASE2 =
   BEGIN
   EXTERNAL ROUTINE RUF$PHASE2 : BLISS ADDRESSING_MODE (GENERAL);
	RUF$PHASE2()
   END %;
! 
!  $RESETRU
! 
!  RESTORE RECOVERY UNIT STATE TO THE STATE OF GIVEN MARKPOINT 
! 
!      MARKID	- ADDRESS OF LONGWORD TO RECEIVE MARK IDENTIFIER
! 	
KEYWORDMACRO $RESETRU (MARKID) =
   BEGIN
   EXTERNAL ROUTINE RUF$RESETRU : BLISS ADDRESSING_MODE (GENERAL);
	   RUF$RESETRU (SDL$STARLET_CONCAT( SDL$STARLET_REQ(MARKID, %QUOTE MARKID) ))
   END %;
 
! 
!  $STARTRU
! 
!  START A RECOVERY UNIT
! 
!     [RUFID]	- ADDRESS OF OCTAWORD TO RECEIVE RECOVERY UNIT IDENTIFIER
! 	
KEYWORDMACRO $STARTRU (RUFID=0) =
   BEGIN
   EXTERNAL ROUTINE RUF$STARTRU : BLISS ADDRESSING_MODE (GENERAL);
	   RUF$STARTRU (SDL$STARLET_CONCAT( RUFID))
   END %;
 
! 
!  $RUSTATUS
! 
!  GET THE STATUS OF A RECOVERY UNIT
! 
!     [RUFID]	- ADDRESS OF OCTAWORD TO RECEIVE RECOVERY UNIT IDENTIFIER
! 	
KEYWORDMACRO $RUSTATUS (RUFID=0) =
   BEGIN
   EXTERNAL ROUTINE RUF$RUSTATUS : BLISS ADDRESSING_MODE (GENERAL);
	   RUF$RUSTATUS (SDL$STARLET_CONCAT( RUFID))
   END %;
 
