{	CLUMBX.SDL
{
{ Version:	'V04-000'
{
{****************************************************************************
{*									    *
{*  COPYRIGHT (c) 1978, 1980, 1982, 1984 BY				    *
{*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
{*  ALL RIGHTS RESERVED.						    *
{* 									    *
{*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
{*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
{*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
{*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
{*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
{*  TRANSFERRED.							    *
{* 									    *
{*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
{*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
{*  CORPORATION.							    *
{* 									    *
{*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
{*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
{* 									    *
{*									    *
{****************************************************************************

{++
{
{ FACILITY:  SYSLOA - System loadable code
{
{ ABSTRACT:
{
{        This file contains the SDL source for the definition of the cluster
{	 state change messages sent to OPCOM.
{
{ ENVIRONMENT:
{
{        n/a
{
{--
{
{
{ AUTHOR:  Dave Thiel		CREATION DATE:  24-Aug-1983
{
{ MODIFIED BY:
{
{	V03-002	DWT0213		David W. Thiel		09-Apr-1984
{		Add ST_COMPLETE and ST_QUORUM subtype codes.
{		Mark ST_FORM and ST_RECNFIG subtype codes obsolete.
{
{	V03-001	DWT0129		David W. Thiel		8-Sep-1983
{		Add ST_NOQUORUM and ST_FORNDISK subtype codes.
{

module $CLUMBXDEF;
/*+
/* CLUMBX - CLUSTER STATE CHANGE MAILBOX MESSAGE
/*
/*	THIS DEFINES THE FORMAT OF A CLUSTER STATE CHANGE MESSAGE
/*	WHICH IS SENT TO THE OPCOM MAILBOX
/*-

aggregate CLUMBXDEF structure prefix CLUMBX$;

    MSGTYPE word unsigned;		/* MESSAGE ID (MSG$_CLUMBX)
    SUBTYPE word unsigned;		/* MESSAGE SUB-TYPE
	constant (			/*  DEFINE CLUSTER MESSAGE SUB-TYPES
		ST_NEWSYS,		/*	DISCOVERED NEW SYSTEM
		ST_CNX,			/*	CONNECTED TO SYSTEM
		ST_RECNX,		/*	RECONNECTED TO SYSTEM
		ST_LOSTCNX,		/*	LOST CONNECTION TO SYSTEM
		ST_TIMCNX,		/*	TIMED-OUT BROKEN CONNECTION
		ST_INIFORM,		/*	INITIATING CLUSTER FORMATION
		ST_INIADD,		/*	INITIATING NODE ADDITION
		ST_INIRECNFIG,		/*	INITIATING CLUSTER RECONFIGURATION
		ST_MEMREQ,		/*	REQUESTING CLUSTER MEMBERSHIP
		ST_ABORT,		/*	ABORTING CLUSTER STATE TRANSITION
		ST_FORM,		/*	NEW CLUSTER FORMED (OBSOLETE)
		ST_ADD,			/*	NODE ADDED TO CLUSTER
		ST_RECNFIG,		/*	CLUSTER RECONFIGURED (OBSOLETE)
		ST_NEWNODE,		/*	MEMBER OF NEW CLUSTER
		ST_DROPNODE,		/*	NODE REMOVED FROM CLUSTER
		ST_FORNCLUS,		/*	FOREIGN CLUSTER SEEN
		ST_INQUORUM,		/*	QUORUM REGAINED
		ST_LOSTDISK,		/*	CONNECTION TO QUORUM DISK LOST
		ST_GAINDISK,		/*	CONNECTION TO QUORUM DISK GAINED
		ST_DISKRDERR,		/*	ERROR READING QUORUM DISK
		ST_DISKWRERR,		/*	ERROR WRITING QUORUM DISK
		ST_DISKINVDAT,		/*	INVALID DATA READ FROM QUORUM DISK
		ST_DISKTIMEOUT,		/*	OPERATION TO QUORUM DISK TIMED-OUT
		ST_LOSTMSG,		/*	MESSAGES LOST
		ST_NOQUORUM,		/*	QUORUM LOST
		ST_FORNDISK,		/*	FOREIGN CLUSTER SEEN VIA QUORUM DISK
		ST_COMPLETE,		/*	CLUSTER STATE TRANSITION COMPLETE
		ST_QUORUM		/*	PROPOSED CHANGE OF QUORUM OR DISK MEMBERSHIP
	    ) equals 1 increment 1;
    DS_VERSION byte unsigned;		/* VERSION OF DATA STRUCTURE
	constant DS_VERSION equals 1;	/*  CURRENT DATA STRUCTURE VERSION
    FLAGS structure byte unsigned;	/* FLAG BITS
	BRDCST bitfield mask;		/*  BROADCAST MESSAGE TO ALL NODES
    end FLAGS;
    LENGTH word unsigned;		/* TOTAL MESSAGE LENGTH
    CSID_L longword unsigned;		/* LOCAL NODE CLUSTER SYSTEM ID
    SYSTEMID_L byte dimension 6;	/* LOCAL NODE SYSTEM ID
    FILL_1 word unsigned fill;		/* PAD TO LONGWORD BOUNDARY
    NODENAME_L character length 16;	/* LOCAL NODE NAME
    CSID_R longword unsigned;		/* REMOTE NODE CLUSTER SYSTEM ID
    SYSTEMID_R byte dimension 6;	/* REMOTE NODE SYSTEM ID
    FILL_2 word unsigned fill;		/* PAD TO LONGWORD BOUNDARY
    NODENAME_R character length 16;	/* REMOTE NODE NAME
    TIME quadword;			/* TIME-STAMP
    constant "LENGTH" equals .;		/* LENGTH OF MESSAGE
end CLUMBXDEF;

END_MODULE $CLUMBXDEF;
