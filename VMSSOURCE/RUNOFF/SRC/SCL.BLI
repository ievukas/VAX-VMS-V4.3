%TITLE 'Shift current word in MRA to the left'
MODULE SCL (
		IDENT = 'V04-000'
%BLISS32[,
	ADDRESSING_MODE(EXTERNAL=LONG_RELATIVE,NONEXTERNAL=LONG_RELATIVE)
	]
		) =
BEGIN
!
!****************************************************************************
!*									    *
!*  COPYRIGHT (c) 1978, 1980, 1982, 1984 BY				    *
!*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
!*  ALL RIGHTS RESERVED.						    *
!* 									    *
!*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
!*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
!*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
!*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
!*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
!*  TRANSFERRED.							    *
!* 									    *
!*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
!*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
!*  CORPORATION.							    *
!* 									    *
!*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
!*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
!* 									    *
!*									    *
!****************************************************************************
!
!++
! FACILITY:	 DSR (Digital Standard RUNOFF) / DSRPLUS
!
! ABSTRACT: Rearrange the MRA by moving the current word to the left.
!
!
! ENVIRONMENT: Transportable
!
! AUTHOR: R.W.Friday	 CREATION DATE: May, 1978
!

%SBTTL 'Revision History'
!
! MODIFIED BY:
!
!	002	REM00002	Ray Marshall	07-Mar-1983
!		Global edit of all modules. Updated module names, idents,
!		copyright dates. Changed require files to BLISS library.
!
!--

%SBTTL 'Module Level Declarations'
!
! TABLE OF CONTENTS:
!
!
! INCLUDE FILES:
!

LIBRARY 'NXPORT:XPORT';			! XPORT Library
REQUIRE 'REQ:RNODEF';			! RUNOFF variant definitions

%IF DSRPLUS %THEN
LIBRARY 'REQ:DPLLIB';			! DSRPLUS BLISS Library
%ELSE
LIBRARY 'REQ:DSRLIB';			! DSR BLISS Library
%FI

!
! MACROS:
!
!
! EQUATED SYMBOLS:
!
!
! OWN STORAGE:
!
!
! EXTERNAL REFERENCES:
!

EXTERNAL
    MRA : REF FIXED_STRING,
    SCA : SCA_DEFINITION,
    TSF : TSF_DEFINITION;

EXTERNAL ROUTINE
    GCSKIP;


%SBTTL 'SCL  --'
GLOBAL ROUTINE scl : NOVALUE =

!++
! FUNCTIONAL DESCRIPTION:
!
! See ABSTRACT for a sufficient explanation.
!
! FORMAL PARAMETERS:	None
!
! IMPLICIT INPUTS:	None
!
! IMPLICIT OUTPUTS:	None
!
! ROUTINE VALUE:
! COMPLETION CODES:	None
!
! SIDE EFFECTS:		None
!
!--

    BEGIN

    LOCAL
	ptr,
	ptr_copy;

    fs_init (mra);				!reset pointers and counters back to start
    tsf_int_hl = 0;				!Nothing in TSF yet.
    tsf_ext_hl = 0;				!...
    tsf_int_vl = 0;				!...

    IF	.sca_wrd_int_l EQL 0  THEN		! If no shift require, then
	RETURN;					!   exit.

    gcskip (.sca_spacing - 1);			!Generate intermediate code for skipping.

    INCR i FROM 1 TO .sca_lm DO
	(fs_wchar (mra, %C' '));		!Fill out left margin with spaces.

    tsf_int_hl = .tsf_int_hl + .sca_lm;
    tsf_ext_hl = .sca_lm;
    ptr = .fs_next (mra);			!The current word will start here eventually.
    ptr_copy = .fs_next (mra);

    INCR i FROM 1 TO (.sca_wrd_int_l) DO
	BEGIN					!move the current word a character at a time.
	! NOTE: This could have been coded using fs_wchar, and forgetting
	!	about using ptr_copy and hold_char; however, that uncovered a
	!	compiler bug.  Also, this generates more efficient object code.

	LOCAL
	    hold_char;

	hold_char = CH$RCHAR_A (sca_wrd_pntr);
	CH$WCHAR_A (.hold_char, ptr_copy);
	fs_length (mra) = .fs_length (mra) + 1;
	END;

    fs_next (mra) = .ptr_copy;
    sca_wrd_pntr = .ptr;				!re-establish pointer to SCA_WRD.
    RETURN;
    END;					!End of SCL

END						!End of module
ELUDOM
