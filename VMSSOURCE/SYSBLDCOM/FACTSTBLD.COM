$ !
$ ! FACTSTBLD - Facility test build command file
$ !
$ !	P1 = facility name, e.g EXEC
$ !	P2 = starting phase,ending phase (must be in double quotes)  
$ !		end will default to LINK
$ !		phase may be any of the following:
$ !		UPDATE - default
$ !		SRCLIB
$ !		ASSEM
$ !		OBJLIB
$ !		LNKLIB
$ !		LINK
$ !	P3 = Device holding source files (default = MASD$:)
$ !	P4 = Device holding SLP update files (default = MASD$:)
$ !	P5 = Device to hold result files (default = DEVD$:)
$ !	P6 = Comma separated list of keywords to indicate which
$ !		types of SLP files should be included: BUG,ENH,EXP.
$ !		The list must be enclosed in double quotes, i.e.,
$ !		"BUG" or "ENH,EXP".  Default is "ENH".
$ !	P7 = working set size, with default being 500
$ !	P8 = Y if log file is to be printed, N if not.  Defaults to N.
$ !
$ SHOW DAYTIME
$ FACNAM :== 'P1'
$ IF P7 .EQS. "" THEN P7 = 500
$ IF P3 .EQS. "" THEN P3 := MASD$:
$ IF P4 .EQS. "" THEN P4 := MASD$:
$ IF 'F$LOC(":",P3)' .EQ. 'F$LEN(P3)' THEN P3 := 'P3':
$ IF 'F$LOC(":",P4)' .EQ. 'F$LEN(P4)' THEN P4 := 'P4':
$ IF P6 .EQS. "" THEN P6 := ENH
$ UPDATES :== 'P6'
$ IF P8 .EQS. "" THEN P8 := "N"
$ IF P8 .EQS. "N" THEN DEFINE SYS$PRINT NOPRINT
$ SET WORKING_SET/LIMIT='P7'
$ IF P5 .EQS. "" THEN P5 := DEVD$:
$ COLON_POSIT = 'F$LOC(":",P5)' 
$ IF COLON_POSIT .EQ. 'F$LEN(P5)' THEN GOTO NOCOLON
$ IF COLON_POSIT .EQ. 'F$LEN(P5)' - 1 THEN GOTO COLON_THERE
$ DEVICE := 'F$EXTRACT(0,COLON_POSIT,P5)'
$ NEXT_TRAN:
$ IF "''F$LOGICAL(DEVICE)'" .EQS. "" THEN GOTO TRAN_DONE
$ DEVICE := 'F$LOGICAL(DEVICE)'
$ DEVICE := 'F$EXTRACT(0,F$LOC(":",DEVICE),DEVICE)'
$ GOTO NEXT_TRAN
$ TRAN_DONE:
$ BRACKET = 'F$LOC("]",P5)'
$ P5 := 'DEVICE''F$EXTRACT(COLON_POSIT,BRACKET-COLON_POSIT,P5)']
$ GOTO DEV_DONE
$ NOCOLON:
$ P5 := 'P5':
$ COLON_THERE:
$ DEV_DONE:
$ DEFINE/TRAN_ATTR=CONCEALED ROOT$ 'P5
$ SET DEF ROOT$:['FACNAM']
$ CPYOLB:=="N"		! NOT COPYING OBJECT LIBRARY TO RESOBJ:
$ ON ERROR THEN GOTO CLEANUP
$ ON CONTROLY THEN GOTO CLEANUP
$ LINK :== LINK/USERLIB=PROC
$ DEFINE LNK$LIBRARY SYS$LIBRARY:SYSBLDLIB
$ SDL :== SDL/NOLIST		! An explicit /LIST will override
$ MESSAGE :== MESSAGE/NOLIST	! An explicit /LIST will override
$ @SYSBLDCOM$:CPYRESDEF		! DEFINE CPYRES FUNCTIONS
$ !
$ !	Alter some resultant copying for facility test builds.
$ !
$ CPYRESOBJ :== "@SYSBLDCOM$:NULL RESOBJ$:"
$ CPYRESEXE :== "@SYSBLDCOM$:NULL RESEXE$:"
$ CPYRESMGR :== "@SYSBLDCOM$:NULL RESMGR$:"
$ CPYRESUPD :== "@SYSBLDCOM$:NULL RESUPD$:"
$ CPYRESLNK :== "@SYSBLDCOM$:NULL RESLNK$:"
$ CPYSYSLIB :== "@SYSBLDCOM$:NULL RESD$:[SYSLIB]"
$ CPYSYSMSG :== "@SYSBLDCOM$:NULL RESD$:[SYSMSG]"
$ CPYSHRLIB :== "@SYSBLDCOM$:NULL SHRLIB$:"
$ DELSHRLIB :==	"@SYSBLDCOM$:NULL SHRLIB$:"
$ GETSHRLIB :== "@SYSBLDCOM$:CPYRESENT LIB$: SHRLIB$:'"
$ INSHARLIB :==	"@SYSBLDCOM$:NULL RESD$:[SYSLIB]IMAGELIB"
$ PUTSYSMSG :== "@SYSBLDCOM$:NULL SRCD$:[SYSMSG]SYSMSG"
$ IF 'F$LOCATE("ENH",UPDATES) .NE. 'F$LENGTH(UPDATES) THEN -
	 DEFINE MSRC$ 'P3'[.SRC]
$ IF 'F$LOCATE("BUG",UPDATES) .NE. 'F$LENGTH(UPDATES) THEN -
	 DEFINE MSRC$ 'P3'[.BUGSRC]
$ IF 'F$LOCATE("ENH",UPDATES) .NE. 'F$LENGTH(UPDATES) THEN -
	 DEFINE MCOM$ 'P3'[.COM]
$ IF 'F$LOCATE("BUG",UPDATES) .NE. 'F$LENGTH(UPDATES) THEN -
	 DEFINE MCOM$ 'P3'[.BUGCOM]
$ DEFINE PRMOBJ$ 'P3'[.PRMOBJ]
$ DEFINE MBUG$ 'P4'[.BUG]
$ DEFINE MENH$ 'P4'[.ENH]
$ DEFINE BUG$ MBUG$:
$ DEFINE ENH$ MENH$:
$ DEFINE RESD$ ROOT$:
$ DEFINE MAPD$ ROOT$:
$ DEFINE LISD$ ROOT$:
$ DEFINE LIBD$ ROOT$:
$ DEFINE OBJD$ ROOT$:
$ DEFINE EXED$ ROOT$:
$ DEFINE RESLNK$ EXE$:
$ DEFINE COM$ MCOM$:
$ DEFINE SRC$ RESD$:[.TMPSRC]
$ DEFINE TMP$ SRC$:
$ SRCUPDATE:==@SYSBLDCOM$:SRCUPDATE
$NOBUG:
$ BEG_PHASE := 'F$EXTRACT(0,F$LOC(",",P2),P2)'
$ END_PHASE := 'F$EXTRACT(F$LOC(",",P2)+1,99,P2)'
$ IF END_PHASE .EQS "" THEN END_PHASE := LINK
$ IF BEG_PHASE .EQS "" THEN BEG_PHASE := UPDATE
$ GOTO 'BEG_PHASE'
$UPDATE:
$ PHASE:=="UPDATE"
$ SET PROCESS/NAME='PHASE'_'FACNAM'_T
$ @COM$:'P1'BLD
$ IF END_PHASE .EQS. "UPDATE" THEN GOTO CLEANUP
$SRCLIB:
$ PHASE:=="SRCLIB"
$ SET PROCESS/NAME='PHASE'_'FACNAM'_T
$ @COM$:'P1'BLD
$ IF END_PHASE .EQS. "SRCLIB" THEN GOTO CLEANUP
$ASSEM:
$ SH TRANS LIB$
$ SH TRANS LIBD$
$ PHASE:=="ASSEM"
$ SET PROCESS/NAME='PHASE'_'FACNAM'_T
$ @COM$:'P1'BLD
$ IF END_PHASE .EQS. "ASSEM" THEN GOTO CLEANUP
$OBJLIB:
$ PHASE:=="OBJLIB"
$ SET PROCESS/NAME='PHASE'_'FACNAM'_T
$ @COM$:'P1'BLD
$ IF END_PHASE .EQS. "OBJLIB" THEN GOTO CLEANUP
$LNKLIB:
$ PHASE:=="LNKLIB"
$ SET PROCESS/NAME='PHASE'_'FACNAM'_T
$ @COM$:'P1'BLD
$ IF END_PHASE .EQS. "LNKLIB" THEN GOTO CLEANUP
$LINK:
$ PHASE:=="LINK"
$ SET PROCESS/NAME='PHASE'_'FACNAM'_T
$ DEFINE EXSM SYS$SYSTEM:
$ @COM$:'P1'BLD
$CLEANUP:
$ STATUS = $STATUS
$ DEASSIGN MSRC$
$ DEASSIGN PRMOBJ$
$ DEASSIGN MBUG$
$ DEASSIGN MENH$
$ DEASSIGN RESD$
$ DEASSIGN RESLNK$
$ DEASSIGN COM$
$ DEASSIGN SRC$
$ DEASSIGN BUG$
$ DEASSIGN ENH$
$ DEASSIGN TMP$
$ EXIT 'STATUS'
