	.TITLE	RMSRECSEQ - sequential file recovery
	.IDENT	/V04-000/
;
;****************************************************************************
;*									    *
;*  COPYRIGHT (c) 1978, 1980, 1982, 1984 BY				    *
;*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
;*  ALL RIGHTS RESERVED.						    *
;* 									    *
;*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
;*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
;*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
;*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
;*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
;*  TRANSFERRED.							    *
;* 									    *
;*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
;*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
;*  CORPORATION.							    *
;* 									    *
;*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
;*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
;* 									    *
;*									    *
;****************************************************************************

	.PSECT	REC_CODE,EXE,NOWRT,PIC
;
;++
; Facility: RMS32 Recovery
;
; Abstract:
;
;		This routine is merged into the Recovery Control Process to
;		serve as the RMS recovery agent.  This routine contains the
;		code to recover operations performed on sequential files.
;
; Environment:
;
;		Star processor running Starlet exec.  This routine is to be
;		merged into the RCP (Recovery Control Process) to handle
;		RMS Recovery operations.  This routine never executes outside
;		the context of the RCP.
;
;		This routine must be PIC since it will be merged into the
;		address space of the RCP.
;
; Author: 	Peter Lieberwirth	 Creation Date: 16-Jun-1982
;
; Modified By:
;
;	V01-001	KPL0003		Peter Lieberwirth	23-Nov-1982
;		Fix IDENT, separate OPEN from CONNECT.
;
;--

.SUBTITLE Declarations

;++
;	See RMSRECOVR.MAR for a description of the register use in
;	these routines.
;--

;
; Include Files
;

;
; Macros
;

	$RRPDEF
	$RJRDEF		; RMS journal entry format
	$RIMPDEF	; RMS recovery impure storage definition
	$RMSRDEF	; RMS operations
	$FABDEF
	$RABDEF
	$RFBDEF

	$TMPOFFDEF	; offsets into AP for call
;
; local constants - for time being
;

RMS$_UNSUPPORTED=0

.SUBTITLE RM$RR_SEQ	- Recover Sequential Files
;++
; 
; routine name: RM$RR_SEQ
;
;	This rouine receives a journal entry from the RCP and branches off
;	to the routine designed to process this particular RMS operation.
;
;	Operations supported for sequential recovery:
;
;		close
;		create
;		delete
;		put
;		truncate
;		write
;
;	All other operations are either not handled here, as in the case of
;	file operations, or are unsupported.
;
; Calling sequence:
;
;	BRW	RM$RR_SEQ
;
; Input parameters:
;
;	r11	- points to impure storage
;	r10	- points to RRP
;	r9	- current RMS journal entry
;
; Output parameters:
;
;
;
;
; Side effects:
;
;	Registers for the processing routines are set up.
;
;--

RM$RR_SEQ::				;

;
; dispatch to routine to process particular entry
;
	$CASE	RJR$B_OP(R9),TYPE=B,-	; dispatch to action routine
		DISPL=< RR$SEQ_CLOSE,-	; close
			RR$SEQ_CONN,-	; connect
			RR$SEQ_CREAT,-	; create
			RR$SEQ_DELET,-	; delete
			RR$SEQ_DISC,-	; disconnect
			RR$SEQ_DISPL,-	; display
			RR$SEQ_ENTER,-	; enter
			RR$SEQ_ERASE,-	; erase
			RR$SEQ_EXTEN,-	; extend
			RR$SEQ_FREE,-	; free
			RR$SEQ_FIND,-	; find
			RR$SEQ_GET,-	; get
			RR$SEQ_MODFY,-	; modify
			RR$SEQ_OPEN,-	; open
			RR$SEQ_PARSE,-	; parse
			RR$SEQ_PUT,-	; put
			RR$SEQ_READ,-	; read
			RR$SEQ_RELEAS,-	; release
			RR$SEQ_RENAM,-	; rename
			RR$SEQ_REWIN,-	; rewind
			RR$SEQ_SPACE,-	; space
			RR$SEQ_SRCH,-	; search
			RR$SEQ_TRUNC,-	; truncate
			RR$SEQ_UPDAT,-	; update
			RR$SEQ_WAIT,-	; wait
			RR$SEQ_WRITE>	; write


	LOG	<BAD SEQUENTIAL OPERATION CODE>
	DUMPJNL
	MOVL	#RCP$_NOTALLJEN,R0	;
	RET

.SUBTITLE -	RR$SEQ_CLOSE	- Process $CLOSE
;++
; 
; routine name:	
;
;
;
; Calling sequence:
;
;	
;
; Input parameters:
;
;
;
;
;
; Output parameters:
;
;
;
;
; Side effects:
;
;--

RR$SEQ_CLOSE:
	MOVL	#RMS$_UNSUPPORTED,R0
	RET

.SUBTITLE -	RR$SEQ_CREAT	- Process $CREATE
;++
; 
; routine name:	
;
;
;
; Calling sequence:
;
;	
;
; Input parameters:
;
;
;
;
;
; Output parameters:
;
;
;
;
; Side effects:
;
;--

RR$SEQ_CREAT:

	MOVL	#RMS$_UNSUPPORTED,R0
	RET

.SUBTITLE -	RR$SEQ_DELET	- Process $DELETE
;++
; 
; routine name:	RR$SEQ_DELET
;
;	This routine 
;
; Calling sequence:
;
;	JMP	RR$SEQ_DELETE
;
; Input parameters:
;
;
;
;
;
; Output parameters:
;
;
;
;
; Side effects:
;
;--

RR$SEQ_DELET:

	MOVL	#RMS$_UNSUPPORTED,R0
	RET

.SUBTITLE -	RR$SEQ_PUT	- Process $PUT
;++
; 
; routine name:	RR$SEQ_PUT
;
;
;
; Calling sequence:
;
;	JMP	RR$SEQ_PUT
;
; Input parameters:
;
;
;	The usual - RCP data context and RMS journal record.
;
;
; Output parameters:
;
;
;
;
; Side effects:
;
;--

RR$SEQ_PUT:

	MOVL	#RMS$_UNSUPPORTED,R0
	RET

.SUBTITLE -	RR$SEQ_TRUNC	- Process $TRUNCATE
;++
; 
; routine name:	
;
;
;
; Calling sequence:
;
;	
;
; Input parameters:
;
;
;
;
;
; Output parameters:
;
;
;
;
; Side effects:
;
;--

RR$SEQ_TRUNC:
		MOVL	#RMS$_UNSUPPORTED,R0
		RET

.SUBTITLE -	RR$SEQ_WRITE	- Process $WRITE
;++
; 
; routine name:	
;
;
;
; Calling sequence:
;
;	
;
; Input parameters:
;
;
;
;
;
; Output parameters:
;
;
;
;
; Side effects:
;
;--

RR$SEQ_WRITE:
		MOVL	#RMS$_UNSUPPORTED,R0
		RET

.SUBTITLE	
.SUBTITLE Unsupported Operations for SEQ
.SUBTITLE	

;++
; 
; routine name:	All the unsupported operations.
;
;--

.SUBTITLE -	RR$SEQ_CONN	- $CONNECT
.SUBTITLE -	RR$SEQ_DISC	- $DISCONNECT
.SUBTITLE -	RR$SEQ_DISPL	- $DISPLAY
.SUBTITLE -	RR$SEQ_FIND	- $FIND
.SUBTITLE -	RR$SEQ_FREE	- $FREE
.SUBTITLE -	RR$SEQ_GET	- $GET
.SUBTITLE -	RR$SEQ_MODFY	- $MODIFY
.SUBTITLE -	RR$SEQ_PARSE	- $PARSE
.SUBTITLE -	RR$SEQ_READ	- $READ
.SUBTITLE -	RR$SEQ_RELEAS	- $RELEASE
.SUBTITLE -	RR$SEQ_REWIN	- $REWIND
.SUBTITLE -	RR$SEQ_SPACE	- $SPACE
.SUBTITLE -	RR$SEQ_SRCH	- $SEARCH
.SUBTITLE -	RR$SEQ_WAIT	- $WAIT
.SUBTITLE -	RR$SEQ_ENTER	- $ENTER
.SUBTITLE -	RR$SEQ_ERASE	- $ERASE
.SUBTITLE -	RR$SEQ_EXTEN	- $EXTEND
.SUBTITLE -	RR$SEQ_OPEN	- $OPEN
.SUBTITLE -	RR$SEQ_RENAM	- $RENAME
.SUBTITLE -	RR$SEQ_UPDAT	- $UPDATE

RR$SEQ_ENTER:
RR$SEQ_ERASE:
RR$SEQ_EXTEN:

RR$SEQ_OPEN::
RR$SEQ_OPEN1::

RR$SEQ_RENAM:
RR$SEQ_UPDAT:


RR$SEQ_CONN::
RR$SEQ_DISC:
RR$SEQ_DISPL:
RR$SEQ_FIND:
RR$SEQ_FREE:
RR$SEQ_GET:
RR$SEQ_MODFY:
RR$SEQ_PARSE:
RR$SEQ_READ:
RR$SEQ_RELEAS:
RR$SEQ_REWIN:
RR$SEQ_SPACE:
RR$SEQ_SRCH:
RR$SEQ_WAIT: 

	MOVL	#RMS$_UNSUPPORTED,R0
	RET

	.END	
