MODULE RNODAT (	!
		IDENT = 'V04-000'
%BLISS32[,
	ADDRESSING_MODE(EXTERNAL=LONG_RELATIVE,NONEXTERNAL=LONG_RELATIVE)
	]
		) =
BEGIN

!
!****************************************************************************
!*									    *
!*  COPYRIGHT (c) 1978, 1980, 1982, 1984 BY				    *
!*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
!*  ALL RIGHTS RESERVED.						    *
!* 									    *
!*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
!*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
!*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
!*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
!*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
!*  TRANSFERRED.							    *
!* 									    *
!*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
!*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
!*  CORPORATION.							    *
!* 									    *
!*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
!*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
!* 									    *
!*									    *
!****************************************************************************
!
!++
! FACILITY:	 DSR (Digital Standard RUNOFF) / DSRPLUS
!
! ABSTRACT: Obtains the system date and time in a standard format.
!
!
! ENVIRONMENT: Specific code for each of: TOPS-10, VMS, TOPS-20, and RSX-11M
!
! AUTHOR: R.W.Friday	 CREATION DATE: February, 1979
!

%SBTTL 'Revision History'
!
! MODIFIED BY:
!
!	008	KAD00008	Keith Dawson	07-Mar-1983
!		Global edit of all modules. Updated module names, idents,
!		copyright dates. Changed require files to BLISS library.
!
!--

%SBTTL 'Module Level Declarations'
!
! TABLE OF CONTENTS:
!

!
! INCLUDE FILES:
!
%IF %BLISS(BLISS36) %THEN
    %IF %SWITCHES(TOPS20) %THEN
	LIBRARY	'SYS:MONSYM';		! TOPS-20 system symbol definitions
	REQUIRE 'REQ:JSYSDEF';
    %ELSE
	LIBRARY 'BLI:UUOSYM';
    %FI
%FI

%IF %BLISS(BLISS16) %THEN
    LIBRARY 'RSX:RSX11M';
%FI
!
! MACROS:
!

!
! EQUATED SYMBOLS:
!

!
! OWN STORAGE:
!

!
! EXTERNAL REFERENCES:
!
%IF %BLISS(BLISS32) %THEN
EXTERNAL ROUTINE
    SYS$NUMTIM;
%FI

GLOBAL ROUTINE rnodat (pieces) : NOVALUE =

!++
! FUNCTIONAL DESCRIPTION:
!
!	This routine obtains the system date and time, breaks it
!	up into its constituents, and returns the results.
!
! FORMAL PARAMETERS:
!
!	PIECES is a vector in which the results are returned.
!
! IMPLICIT INPUTS:	None
!
! IMPLICIT OUTPUTS:	None
!
! ROUTINE VALUE:
! COMPLETION CODES:	None
!
! SIDE EFFECTS:	None
!
!--

    BEGIN

%IF %BLISS(BLISS32) %THEN
    LOCAL
	time_32 : VECTOR [7,2];
%FI

%IF %BLISS(BLISS16) %THEN
    LOCAL
	time_16 : VECTOR [8];
%FI

    MAP
	pieces : REF VECTOR [6];

    BIND					!Map PIECES into its constituents.
	year	= pieces [0],
	month	= pieces [1],
	monthday= pieces [2],
	hours	= pieces [3],
	minutes	= pieces [4],
	seconds	= pieces [5];

%IF %BLISS(BLISS36) %THEN
%IF %SWITCHES(TOPS20)
%THEN
    MACRO
	lh = 18,18 %,
	rh = 0,18 %;

    LOCAL
	year_month,		!  Year,,month # (month 0 = January)
	monthday_weekday,	!  Day of month,,day of week (day 0 = Monday)
	status_time,		!  status,,time  (time in seconds since 0 hrs.)
	temp;

    jsys_odcnv(-1,0 ; year_month,monthday_weekday,status_time );
    year	= .(year_month)<lh>;
    month	= .(year_month)<rh> + 1;
    monthday	= .(monthday_weekday)<lh> + 1;
    temp	= .(status_time)<rh>;
    hours	= .temp/3600;
    temp	= .temp - (.hours * 3600);
    minutes	= .temp/60;
    seconds	= .temp - (.minutes * 60);
%ELSE
    LOCAL
	system_date,
	system_mstime;
    MACRO
	t10_mstime =
	    BEGIN
	    BUILTIN uuo;
	    REGISTER milliseconds;
	    uuo (0, MSTIME (milliseconds));
	    .milliseconds
	    END	%;
    MACRO
	t10_date =
	BEGIN
	    BUILTIN uuo;
	    REGISTER current_date;
	    uuo (0, DATE (current_date));
	    .current_date
	    END	%;
%FI
%FI

%IF %BLISS(BLISS36) %THEN
%IF %SWITCHES(TOPS20)
%THEN
%ELSE
    system_date		= t10_date;		!Fetch system date.
    system_mstime	= t10_mstime;		!Fetch system time.

    seconds = .system_mstime/1000;		!Convert to seconds,
    seconds = .seconds MOD 60;			!and compute seconds into current minute.

    system_mstime = .system_mstime/(1000*60);	!Toss away odd milliseconds and seconds.

    MINUTES = .system_mstime MOD 60;		!Minutes into current hour.

    hours = .system_mstime/60;			!Current hour.

    monthday = 1 + (.system_date MOD 31);	!Day of current month.

    system_date = .system_date/31;		!Drop days.

    month = 1 + (.system_date MOD 12);		!Current month.

    year = 1964 + .system_date/12;		!Current year.
%FI
%FI

%IF %BLISS(BLISS16) %THEN
    GTIM$S (time_16);				!Get binary date as an 8-word vector.

    INCR i FROM 0 TO 5 DO
	pieces[.i] = .time_16[.i];		!Copy it to PIECES.
%FI

%IF %BLISS(BLISS32) %THEN
    SYS$NUMTIM (time_32, 0);			!Get binary date as a short-word vector.

    INCR i FROM 0 TO 5 DO
	pieces[.i] = .time_32[.I];		!Convert from short-word to long word.
%FI

    RETURN;

    END;			!End of RNODAT

END				!End of module
ELUDOM
