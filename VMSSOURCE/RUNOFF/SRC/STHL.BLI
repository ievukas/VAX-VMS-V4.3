%TITLE 'Process .STYLE HEADERS command'
MODULE STHL (
		IDENT = 'V04-000'
%BLISS32[,
	ADDRESSING_MODE(EXTERNAL=LONG_RELATIVE,NONEXTERNAL=LONG_RELATIVE)
	]
		) =
BEGIN

!
!****************************************************************************
!*									    *
!*  COPYRIGHT (c) 1978, 1980, 1982, 1984 BY				    *
!*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
!*  ALL RIGHTS RESERVED.						    *
!* 									    *
!*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
!*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
!*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
!*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
!*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
!*  TRANSFERRED.							    *
!* 									    *
!*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
!*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
!*  CORPORATION.							    *
!* 									    *
!*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
!*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
!* 									    *
!*									    *
!****************************************************************************
!
!++
! FACILITY:	 DSR (Digital Standard RUNOFF) / DSRPLUS
!
! ABSTRACT: Processes the .STYLE HEADERS command
!
!
! ENVIRONMENT: Transportable
!
! AUTHOR: R.W.Friday	 CREATION DATE: April, 1979
!

%SBTTL 'Revision History'
!
! MODIFIED BY:
!
!	004	REM00004	Ray Marshall	07-Mar-1983
!		Global edit of all modules. Updated module names, idents,
!		copyright dates. Changed require files to BLISS library.
!
!--

%SBTTL 'Module Level Declarations'
!
! TABLE OF CONTENTS:
!

!
! INCLUDE FILES:
!

LIBRARY 'NXPORT:XPORT';			! XPORT Library
REQUIRE 'REQ:RNODEF';			! RUNOFF variant definitions

%IF DSRPLUS %THEN
LIBRARY 'REQ:DPLLIB';			! DSRPLUS BLISS Library
%ELSE
LIBRARY 'REQ:DSRLIB';			! DSR BLISS Library
%FI

!
! MACROS:
!

!
! EQUATED SYMBOLS:
!

!
! OWN STORAGE:
!

!
! EXTERNAL REFERENCES:
EXTERNAL
    HLC : HLC_DEFINITION,
    NMLST : NUMBER_LIST;
!

EXTERNAL ROUTINE
    GLNM;

%SBTTL 'STHL  --'
GLOBAL ROUTINE sthl (handler_code) :NOVALUE =

!++
! FUNCTIONAL DESCRIPTION:
!
!	STHL processes the .STYLE HEADERS command, which specifies
!	how text given on a .HEADER LEVEL command is to be processed.
!
! FORMAL PARAMETERS:
!
!	HANDLER_CODE is a dummy, used just for conformance.
!
! IMPLICIT INPUTS:
!
!	There are 9 legal arguments that can be supplied to .STHL. They are gotten
!	by GLNM(9) at the beginning of this routine. The 9 arguments control the
!	following things:
!
!	 n1: Heads at this level or higher (smaller n) are made all-cap. Default 1.
!	 n2: Heads at this level and lower (larger n) are cap-lower-case. Default 2.
!	 n3: Heads at this level and lower are run-in heads. Default 3. ??
!	 n4: Heads at this level and lower are not numbered. Default 7.
!	 n5: Heads at this level and lower, if not run-in, are centered. Default 7.
!	 n6: This many lines are skipped before heads. Default 2. ??
!	 n7: This many lines are skipped after heads. Default 1. ??
!	 n8: An implied test-page of this many lines is done before heads. Default 3. ??
!	 n9: This many spaces are inserted after header number, before title. Default 1.
!
! IMPLICIT OUTPUTS:	None
!
! ROUTINE VALUE:
! COMPLETION CODES:	None
!
! SIDE EFFECTS:		None
!
!--

    BEGIN

    !Get parameters.
    glnm(9);

    !If any parameter is in error don't do anything but return.
    INCR i FROM 1 TO .nmlst_count DO
	IF  .nmlst_descr (.i) EQL nm_bad  THEN
	    RETURN;

    !Process parameters

    ! First parameter specifies lowest .HL command that generates
    ! a "runon" header --
    IF .nmlst_count GEQ 1 THEN	! First, be sure there was at least 1 parameter.
	BEGIN
	IF  .nmlst_descr(1) NEQ nm_null	! Be sure this parameter was specified
	THEN
	    hlc_runon = .nmlst_value(1);! Assign first value to "runon"

	IF  .nmlst_count GEQ 2  THEN	! If at least two parameters specified
	    BEGIN
	    IF  .nmlst_descr(2) NEQ nm_null ! Be sure second parameter was
	    THEN			    !   specified
		hlc_upper = .nmlst_value(2);! Assign its value to "all upper case"

	    !Make sure there was a third parameter specified.
	    IF  .nmlst_count GEQ 3  THEN
		BEGIN
		IF  .nmlst_descr(3) NEQ nm_null	!Be sure third parameter was specified
		THEN
		    hlc_cap = .nmlst_value(3);	!Assign third value to "capitalize first character".

		!Make sure there was a fourth parameter specified.
		IF  .nmlst_count GEQ 4  THEN
		    BEGIN
		    !If the fourth parameter was not a dummy, get its value.
		    IF  .nmlst_descr(4) NEQ nm_null  THEN
			hlc_no_number = .nmlst_value(4);

		    !Make sure there was a fifth parameter specified.
		    IF  .nmlst_count GEQ 5  THEN
			BEGIN
			!Process fifth parameter only if it was not null
			IF  .nmlst_descr(5) NEQ nm_null  THEN
			    hlc_center = .nmlst_value(5);

			!Make sure there was a sixth parameter specified.
			IF  .nmlst_count GEQ 6  THEN
			    BEGIN
			    !Process sixth parameter only if it was not null.
			    IF  .nmlst_descr(6) NEQ nm_null  THEN
				hlc_headlb = .nmlst_value(6);

			    !Make sure there was a seventh parameter specified.
			    IF  .nmlst_count GEQ 7  THEN
				BEGIN
				!Process the seventh parameter only if it wasn't null
				IF  .nmlst_descr(7) NEQ nm_null  THEN
				    hlc_headlc = .nmlst_value(7);

				!Make sure an eighth parameter was specified
				IF  .nmlst_count GEQ 8  THEN
				    BEGIN
				    !Process the eighth parameter only if it wasn't null.
				    IF  .nmlst_descr(8) NEQ nm_null  THEN
					hlc_headlt = .nmlst_value(8);
				    
				    !Make sure a ninth parameter was specified
				    IF  .nmlst_count GEQ 9  THEN
					BEGIN
					!Process the ninth parameter only if it wasn't null.
					IF  .nmlst_descr(9) NEQ nm_null  THEN
					    hlc_headsp = .nmlst_value(9);
					END;
				    END;
				END;
			    END;
			END;
		    END;
		END;

	    END;
	END;

    END;			!End of STHL
END				!End of module
ELUDOM
