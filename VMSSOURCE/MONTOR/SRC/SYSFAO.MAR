	.TITLE	SYSFAO	- MONITOR FAO Strings for SYSTEM class
	.IDENT	'V04-000'

;
;****************************************************************************
;*									    *
;*  COPYRIGHT (c) 1978, 1980, 1982, 1984 BY				    *
;*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
;*  ALL RIGHTS RESERVED.						    *
;* 									    *
;*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
;*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
;*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
;*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
;*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
;*  TRANSFERRED.							    *
;* 									    *
;*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
;*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
;*  CORPORATION.							    *
;* 									    *
;*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
;*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
;* 									    *
;*									    *
;****************************************************************************

;++
; FACILITY:  VAX/VMS MONITOR Utility
;
; ABSTRACT:
;
;	This non-executable module contains FAO control and
;	text strings to support the SYSTEM class.
;
; ENVIRONMENT:
;
;	Non-executable.
;
; AUTHOR: Thomas L. Cafarella and Paul R. Senn, April, 1984
;
; MODIFIED BY:
;
;	V03-002	TLC1085		Thomas L. Cafarella	22-Jul-1984	14:00
;		Calculate scale values for Free and Modified List bar graphs.
;
;	V03-001	TLC1070		Thomas L. Cafarella	13-Apr-1984	14:00
;		Clarify TOP text lines to include the word "Cur".
;
;
;--


	.SBTTL	DECLARATIONS
	.PSECT	MONRODATA,QUAD,NOEXE,NOWRT
;
; INCLUDE FILES:
;

;
; EQUATED SYMBOLS:
;

ESC = 27				; escape character


;
; OWN STORAGE (Read-only):
;


SYS_BOX_STR_H::
; CPU Busy
	.BYTE	ESC,^A/Y/,4,11
	.ASCII	\+\
	.BYTE	ESC,^A/Y/,4,37
	.ASCII	\-+\
	.BYTE	ESC,^A/Y/,5,11
	.ASCII	\|\
	.BYTE	ESC,^A/Y/,5,38
	.ASCII	\|\
	.BYTE	ESC,^A/Y/,6,1
	.ASCII	\CPU     0 +--------------------------+ 100\
	.BYTE	ESC,^A/Y/,7,11
	.ASCII	\|\
	.BYTE	ESC,^A/Y/,7,38
	.ASCII	\|\
	.BYTE	ESC,^A/Y/,8,11
	.ASCII	\+--------------------------+\

; Page Fault Rate
	.BYTE	ESC,^A/Y/,11,11
	.ASCII	\+\
	.BYTE	ESC,^A/Y/,11,37
	.ASCII	\-+\
	.BYTE	ESC,^A/Y/,12,11
	.ASCII	\|\
	.BYTE	ESC,^A/Y/,12,38
	.ASCII	\|\
	.BYTE	ESC,^A/Y/,13,1
	.ASCII	\MEMORY  0 +--------------------------+ 100\
	.BYTE	ESC,^A/Y/,14,11
	.ASCII	\|\
	.BYTE	ESC,^A/Y/,14,38
	.ASCII	\|\
	.BYTE	ESC,^A/Y/,15,11
	.ASCII	\+--------------------------+\

; Direct I/O Rate
	.BYTE	ESC,^A/Y/,18,11
	.ASCII	\+\
	.BYTE	ESC,^A/Y/,18,37
	.ASCII	\-+\
	.BYTE	ESC,^A/Y/,19,11
	.ASCII	\|\
	.BYTE	ESC,^A/Y/,19,38
	.ASCII	\|\
	.BYTE	ESC,^A/Y/,20,1
	.ASCII	\I/O     0 +--------------------------+ 60\
	.BYTE	ESC,^A/Y/,21,11
	.ASCII	\|\
	.BYTE	ESC,^A/Y/,21,38
	.ASCII	\|\
	.BYTE	ESC,^A/Y/,22,11
	.ASCII	\+--------------------------+\

; Free List Size
	.BYTE	ESC,^A/Y/,11,48
	.ASCII	\+\
	.BYTE	ESC,^A/Y/,11,74
	.ASCII	\-+\
	.BYTE	ESC,^A/Y/,12,48
	.ASCII	\|\
	.BYTE	ESC,^A/Y/,12,75
	.ASCII	\| !4<!UL!AC!>\
	.BYTE	ESC,^A/Y/,13,46
	.ASCII	\0 +--------------------------+\
	.BYTE	ESC,^A/Y/,14,48
	.ASCII	\|\
	.BYTE	ESC,^A/Y/,14,75
	.ASCII	\| !4<!UL!AC!>\
	.BYTE	ESC,^A/Y/,15,48
	.ASCII	\+\
	.BYTE	ESC,^A/Y/,15,75
	.ASCII	\+\

; Buffered I/O Rate
	.BYTE	ESC,^A/Y/,18,48
	.ASCII	\+\
	.BYTE	ESC,^A/Y/,18,74
	.ASCII	\-+\
	.BYTE	ESC,^A/Y/,19,48
	.ASCII	\|\
	.BYTE	ESC,^A/Y/,19,75
	.ASCII	\|\
	.BYTE	ESC,^A/Y/,20,46
	.ASCII	\0 +--------------------------+ 150\
	.BYTE	ESC,^A/Y/,21,48
	.ASCII	\|\
	.BYTE	ESC,^A/Y/,21,75
	.ASCII	\|\
	.BYTE	ESC,^A/Y/,22,48
	.ASCII	\+--------------------------+\
SBS_END_H:

SYS_BOX_STR_LEN_H::
	.WORD	SBS_END_H-SYS_BOX_STR_H

SYS_BOX_STR_G::

	.BYTE	ESC,^A/F/			; Set alternate graphics

; CPU Busy
	.BYTE	ESC,^A/Y/,4,11
	.ASCII	\l\
	.BYTE	ESC,^A/Y/,4,37
	.ASCII	\qk\
	.BYTE	ESC,^A/Y/,5,11
	.ASCII	\x\
	.BYTE	ESC,^A/Y/,5,38
	.ASCII	\x\
	.BYTE	ESC,^A/Y/,6,1
	.ASCII	\CPU     0 tqqqqqqqqqqqqqqqqqqqqqqqqqqu 100\
	.BYTE	ESC,^A/Y/,7,11
	.ASCII	\x\
	.BYTE	ESC,^A/Y/,7,38
	.ASCII	\x\
	.BYTE	ESC,^A/Y/,8,11
	.ASCII	\mqqqqqqqqqqqqqqqqqqqqqqqqqqj\

; Page Fault Rate
	.BYTE	ESC,^A/Y/,11,11
	.ASCII	\l\
	.BYTE	ESC,^A/Y/,11,37
	.ASCII	\qk\
	.BYTE	ESC,^A/Y/,12,11
	.ASCII	\x\
	.BYTE	ESC,^A/Y/,12,38
	.ASCII	\x\
	.BYTE	ESC,^A/Y/,13,1
	.ASCII	\MEMORY  0 tqqqqqqqqqqqqqqqqqqqqqqqqqqu 100\
	.BYTE	ESC,^A/Y/,14,11
	.ASCII	\x\
	.BYTE	ESC,^A/Y/,14,38
	.ASCII	\x\
	.BYTE	ESC,^A/Y/,15,11
	.ASCII	\mqqqqqqqqqqqqqqqqqqqqqqqqqqj\

; Direct I/O Rate
	.BYTE	ESC,^A/Y/,18,11
	.ASCII	\l\
	.BYTE	ESC,^A/Y/,18,37
	.ASCII	\qk\
	.BYTE	ESC,^A/Y/,19,11
	.ASCII	\x\
	.BYTE	ESC,^A/Y/,19,38
	.ASCII	\x\
	.BYTE	ESC,^A/Y/,20,1
	.ASCII	\I/O     0 tqqqqqqqqqqqqqqqqqqqqqqqqqqu 60\
	.BYTE	ESC,^A/Y/,21,11
	.ASCII	\x\
	.BYTE	ESC,^A/Y/,21,38
	.ASCII	\x\
	.BYTE	ESC,^A/Y/,22,11
	.ASCII	\mqqqqqqqqqqqqqqqqqqqqqqqqqqj\

; Free List Size
	.BYTE	ESC,^A/Y/,11,48
	.ASCII	\l\
	.BYTE	ESC,^A/Y/,11,74
	.ASCII	\qk\
	.BYTE	ESC,^A/Y/,12,48
	.ASCII	\x\
	.BYTE	ESC,^A/Y/,12,75
	.ASCII	\x !4<!UL!AC!>\
	.BYTE	ESC,^A/Y/,13,46
	.ASCII	\0 tqqqqqqqqqqqqqqqqqqqqqqqqqqu\
	.BYTE	ESC,^A/Y/,14,48
	.ASCII	\x\
	.BYTE	ESC,^A/Y/,14,75
	.ASCII	\x !4<!UL!AC!>\
	.BYTE	ESC,^A/Y/,15,48
	.ASCII	\m\
	.BYTE	ESC,^A/Y/,15,75
	.ASCII	\j\

; Buffered I/O Rate
	.BYTE	ESC,^A/Y/,18,48
	.ASCII	\l\
	.BYTE	ESC,^A/Y/,18,74
	.ASCII	\qk\
	.BYTE	ESC,^A/Y/,19,48
	.ASCII	\x\
	.BYTE	ESC,^A/Y/,19,75
	.ASCII	\x\
	.BYTE	ESC,^A/Y/,20,46
	.ASCII	\0 tqqqqqqqqqqqqqqqqqqqqqqqqqqu 150\
	.BYTE	ESC,^A/Y/,21,48
	.ASCII	\x\
	.BYTE	ESC,^A/Y/,21,75
	.ASCII	\x\
	.BYTE	ESC,^A/Y/,22,48
	.ASCII	\mqqqqqqqqqqqqqqqqqqqqqqqqqqj\

	.BYTE	ESC,^A/G/			; Set regular graphics

SBS_END_G:

SYS_BOX_STR_LEN_G::
	.WORD	SBS_END_G-SYS_BOX_STR_G


SYS_TEXT_STR::
; CPU Busy
	.BYTE	ESC,^A/Y/,4,13
	.ASCII	\CPU Busy\
	.BYTE	ESC,^A/Y/,9,11
	.ASCII	\Cur Top:\

; Page Fault Rate
	.BYTE	ESC,^A/Y/,11,13
	.ASCII	\Page Fault Rate\
	.BYTE	ESC,^A/Y/,16,11
	.ASCII	\Cur Top:\

; Direct I/O Rate
	.BYTE	ESC,^A/Y/,18,13
	.ASCII	\Direct I/O Rate\
	.BYTE	ESC,^A/Y/,23,11
	.ASCII	\Cur Top:\

; Process States
	.BYTE	ESC,^A/Y/,3,54
	.ASCII	\Process States\
	.BYTE	ESC,^A/Y/,4,48
	.ASCII	\LEF:\
	.BYTE	ESC,^A/Y/,4,64
	.ASCII	\LEFO:\
	.BYTE	ESC,^A/Y/,5,48
	.ASCII	\HIB:\
	.BYTE	ESC,^A/Y/,5,64
	.ASCII	\HIBO:\
	.BYTE	ESC,^A/Y/,6,48
	.ASCII	\COM:\
	.BYTE	ESC,^A/Y/,6,64
	.ASCII	\COMO:\
	.BYTE	ESC,^A/Y/,7,48
	.ASCII	\PFW:\
	.BYTE	ESC,^A/Y/,7,64
	.ASCII	\Other:\
	.BYTE	ESC,^A/Y/,8,48
	.ASCII	\MWAIT:\
	.BYTE	ESC,^A/Y/,9,58
	.ASCII	\Total:\

; Free List Size
	.BYTE	ESC,^A/Y/,11,50
	.ASCII	\Free List Size\

; Modified List Size
	.BYTE	ESC,^A/Y/,15,50
	.ASCII	\Modified List Size\

; Buffered I/O Rate
	.BYTE	ESC,^A/Y/,18,50
	.ASCII	\Buffered I/O Rate\
	.BYTE	ESC,^A/Y/,23,48
	.ASCII	\Cur Top:\
STS_END:

SYS_TEXT_STR_LEN::
	.WORD	STS_END-SYS_TEXT_STR


	.PSECT	MONDATA,QUAD,NOEXE
;
; OWN STORAGE (Read/Write):
;

SYS_FAO_STR::

	.BYTE	ESC,^A/F/			; Set alternate graphics

; CPU Busy
	.BYTE	ESC,^A/Y/,4,22			; Position to number
	.ASCII	\!7<(!UL)!>\			; Convert number
	.BYTE	ESC,^A/Y/,5,12			; Position to bar
	.ASCII	\!26<!#*\			; Convert bar (next 3 lines)
BAR1::	.BLKB	1
	.ASCII	\!>\

; Process States
	.BYTE	ESC,^A/Y/,4,54			; Position to number
	.ASCII	\!4UL\				; Convert number
	.BYTE	ESC,^A/Y/,4,71			; Position to number
	.ASCII	\!4UL\				; Convert number
	.BYTE	ESC,^A/Y/,5,54			; Position to number
	.ASCII	\!4UL\				; Convert number
	.BYTE	ESC,^A/Y/,5,71			; Position to number
	.ASCII	\!4UL\				; Convert number
	.BYTE	ESC,^A/Y/,6,54			; Position to number
	.ASCII	\!4UL\				; Convert number
	.BYTE	ESC,^A/Y/,6,71			; Position to number
	.ASCII	\!4UL\				; Convert number
	.BYTE	ESC,^A/Y/,7,54			; Position to number
	.ASCII	\!4UL\				; Convert number
	.BYTE	ESC,^A/Y/,8,54			; Position to number
	.ASCII	\!4UL\				; Convert number
	.BYTE	ESC,^A/Y/,7,71			; Position to number
	.ASCII	\!4UL\				; Convert number
	.BYTE	ESC,^A/Y/,9,65			; Position to number
	.ASCII	\!4<!UL!>\			; Convert number

; Page Fault Rate
	.BYTE	ESC,^A/Y/,11,29			; Position to number
	.ASCII	\!7<(!UL)!>\			; Convert number
	.BYTE	ESC,^A/Y/,12,12			; Position to bar
	.ASCII	\!26<!#*\			; Convert bar (next 3 lines)
BAR2::	.BLKB	1
	.ASCII	\!>\

; Page Read I/O Rate
	.BYTE	ESC,^A/Y/,12,12			; Position to bar
	.ASCII	\!+!#*\				; Convert bar (next 2 lines)
BAR3::	.BLKB	1
	.BYTE	ESC,^A/G/			; Set regular graphics
	.ASCII	\|\
	.BYTE	ESC,^A/F/			; Set alternate graphics

; Free List Size
	.BYTE	ESC,^A/Y/,11,65			; Position to number
	.ASCII	\!8<(!UL)!>\			; Convert number
	.BYTE	ESC,^A/Y/,12,49			; Position to bar
	.ASCII	\!26<!#*\			; Convert bar (next 3 lines)
BAR4::	.BLKB	1
	.ASCII	\!>\

; Modified List Size
	.BYTE	ESC,^A/Y/,15,69			; Position to number
	.ASCII	\!6<(!UL)!>\			; Convert number
	.BYTE	ESC,^A/Y/,14,49			; Position to bar
	.ASCII	\!26<!#*\			; Convert bar (next 3 lines)
BAR5::	.BLKB	1
	.ASCII	\!>\

; Direct I/O Rate
	.BYTE	ESC,^A/Y/,18,29			; Position to number
	.ASCII	\!7<(!UL)!>\			; Convert number
	.BYTE	ESC,^A/Y/,19,12			; Position to bar
	.ASCII	\!26<!#*\			; Convert bar (next 3 lines)
BAR6::	.BLKB	1
	.ASCII	\!>\

; Buffered I/O Rate
	.BYTE	ESC,^A/Y/,18,68			; Position to number
	.ASCII	\!6<(!UL)!>\			; Convert number
	.BYTE	ESC,^A/Y/,19,49			; Position to bar
	.ASCII	\!26<!#*\			; Convert bar (next 3 lines)
BAR7::	.BLKB	1
	.ASCII	\!>\
	.BYTE	ESC,^A/G/			; Set regular graphics

; Top CPU process

	.BYTE	ESC,^A/Y/,9,20			; Position to proc name
	.ASCII	\!4(+)!23<!AF (!UL)!>\		; Convert proc name & no.
	.BYTE	ESC,^A/Y/,7,12			; Position to bar
	.BYTE	ESC,^A/F/			; Set alternate graphics
	.ASCII	\!26<!#*\			; Convert bar (next 3 lines)
BAR8::	.BLKB	1
	.ASCII	\!>\
	.BYTE	ESC,^A/G/			; Set regular graphics

; Top page fault process

	.BYTE	ESC,^A/Y/,16,20			; Position to proc name
	.ASCII	\!4(+)!23<!AF (!UL)!>\		; Convert proc name & no.
	.BYTE	ESC,^A/Y/,14,12			; Position to bar
	.BYTE	ESC,^A/F/			; Set alternate graphics
	.ASCII	\!26<!#*\			; Convert bar (next 3 lines)
BAR9::	.BLKB	1
	.ASCII	\!>\
	.BYTE	ESC,^A/G/			; Set regular graphics

; Top direct I/O process

	.BYTE	ESC,^A/Y/,23,20			; Position to proc name
	.ASCII	\!4(+)!23<!AF (!UL)!>\		; Convert proc name & no.
	.BYTE	ESC,^A/Y/,21,12			; Position to bar
	.BYTE	ESC,^A/F/			; Set alternate graphics
	.ASCII	\!26<!#*\			; Convert bar (next 3 lines)
BAR10::	.BLKB	1
	.ASCII	\!>\
	.BYTE	ESC,^A/G/			; Set regular graphics

; Top buffered I/O process

	.BYTE	ESC,^A/Y/,23,57			; Position to proc name
	.ASCII	\!4(+)!23<!AF (!UL)!>\		; Convert proc name & no.
	.BYTE	ESC,^A/Y/,21,49			; Position to bar
	.BYTE	ESC,^A/F/			; Set alternate graphics
	.ASCII	\!26<!#*\			; Convert bar (next 3 lines)
BAR11::	.BLKB	1
	.ASCII	\!>\
	.BYTE	ESC,^A/G/			; Set regular graphics

SFS_END:

SYS_FAO_STR_LEN::
	.WORD	SFS_END-SYS_FAO_STR

.END

