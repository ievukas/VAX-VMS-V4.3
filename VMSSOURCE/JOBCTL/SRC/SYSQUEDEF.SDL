{	SYSQUEDEF.SDL - System job queue on-disk structure
{
{	Version	'V04-000'
{
{****************************************************************************
{*									    *
{*  COPYRIGHT (c) 1978, 1980, 1982, 1984 BY				    *
{*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
{*  ALL RIGHTS RESERVED.						    *
{* 									    *
{*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
{*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
{*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
{*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
{*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
{*  TRANSFERRED.							    *
{* 									    *
{*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
{*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
{*  CORPORATION.							    *
{* 									    *
{*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
{*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
{* 									    *
{*									    *
{****************************************************************************
{

{++
{
{ FACILITY:
{	Job controller.
{
{ ABSTRACT:
{	This file contains the structure definitions for the system job queue.
{
{ ENVIRONMENT:
{	VAX/VMS operating system.
{
{--
{
{ AUTHOR:  Martin L. Jack, CREATION DATE:  16-Feb-1982
{
{ MODIFIED BY:
{
{	V03-005	JAK0209		J A Krycka	08-May-1984
{		Update SQH$K_STRUCTURE_LEVEL value.
{
{	V03-004	JAK0205		J A Krycka	27-Apr-1984
{		Reserve space for in queue records for larger account name,
{		username fields, and broadcast name fields.
{
{	V03-003	JAK0204		J A Krycka	20-Apr-1984
{		Add paginate flags to SMQ, SJH, and SQR definitions for the
{		queue, job, and file records.
{
{	V03-002	MLJ0118		Martin L. Jack,	23-Aug-1983
{		Change names to conform to $SJCDEF spelling.
{
{	V03-001	MLJ0115		Martin L. Jack,	30-Jul-1983
{		Changes for job controller baselevel.
{
{**

module $SYSQUEDEF;

/*
/*	Definition of on-disk system job queue.
/*	General structure of all records.
/*
aggregate SYM structure prefix SYM$;
	LINK				longword unsigned;			/* link to next record in same list
	TYPE				byte unsigned;				/* record type
	constant (
	    SCX									/*     characteristic index
	,   SFM									/*     form
	,   SFX									/*     form index
	,   SQH									/*     header, record 1
	,   SQX									/*     queue index
	,   SMQ									/*     queue
	,   SJH									/*     job
	,   SQR									/*     file
	,   SRQ									/*     incomplete service
	,   ENTRY_BITMAP							/*     entry number bitmap
	,   CHECKPOINT								/*     auxiliary for SJH$T_CHECKPOINT
	,   FILE_SETUP_MODULES							/*     auxiliary for SQR$T_FILE_SETUP_MODULES
	,   FORM_SETUP_MODULES							/*     auxiliary for SFM$T_FORM_SETUP_MODULES
	,   GENERIC_TARGET							/*     auxiliary for SMQ$L_GENERIC_TARGET
	,   JOB_RESET_MODULES							/*     auxiliary for SMQ$T_JOB_RESET_MODULES
	,   LOG_SPECIFICATION							/*     auxiliary for SJH$T_LOG_SPECIFICATION
	,   NOTE								/*     auxiliary for SJH$T_NOTE
	,   OPERATOR_REQUEST							/*     auxiliary for SJH$T_OPERATOR_REQUEST
	,   PAGE_SETUP_MODULES							/*     auxiliary for SFM$T_PAGE_SETUP_MODULES
	,   PARAMETERS								/*     auxiliary for SJH$T_PARAMETERS
	,   REFUSAL_REASON							/*     auxiliary for SJH$T_REFUSAL_REASON
	) equals 1 increment 1;
	AUX_SEQUENCE			byte unsigned;				/* list sequence for auxiliary list
	SEQUENCE			word unsigned;				/* list sequence for SQR record
	ENTRY_NUMBER			longword unsigned;			/* job entry number
	#symhdrsiz = .;
	DATA				character length 512-.;			/* beginning of general data area
end;


/*
/*	Header record, record 1 of file
/*
aggregate SQH structure prefix SQH$;
	constant RECNO equals 1;						/* record number of this record
	common_header			byte dimension #symhdrsiz fill;
	STRUCTURE_LEVEL			word unsigned;				/* queue structure level
	constant STRUCTURE_LEVEL equals 4*256 + 1;				/*     V4.0 level 0
	fill_1				character length 2 fill;
	CHARACTERISTIC_LIST		longword unsigned;			/* head of list of characteristic index records
	ENTRY_BITMAP_VECTOR		longword unsigned dimension 8;		/* vector of links to entry bitmap extension recordss
	FORM_INDEX_LIST			longword unsigned;			/* head of list of form index records
	FREE_LIST			longword unsigned;			/* head of list of free records
	HIGHEST_ENTRY_NUMBER		longword unsigned;			/* highest entry number in bitmaps
	HIGHEST_RECORD			longword unsigned;			/* highest record number in file
	INCOMPLETE_SERVICE_LIST		longword unsigned;			/* head of list of incomplete service descriptors
	NEXT_ENTRY_NUMBER		longword unsigned;			/* next entry number to be tried
	OPEN_LIST			longword unsigned;			/* head of list of open jobs
	OPEN_LIST_END			longword unsigned;
	PENDING_BATCH_LIST		longword unsigned;			/* head of list of pending batch jobs
	PENDING_BATCH_LIST_END		longword unsigned;
	PENDING_PRINT_LIST		longword unsigned;			/* head of list of pending symbiont jobs
	PENDING_PRINT_LIST_END		longword unsigned;
	QUEUE_INDEX_LIST		longword unsigned;			/* head of list of queue index records
	TIMER_LIST			longword unsigned;			/* head of list of timed release jobs
	TIMER_LIST_END			longword unsigned;
	record_filler			byte dimension 256-. fill;	
	ENTRY_BITMAP			byte unsigned dimension 256;		/* first segment of entry number bitmap
end;


/*
/*	Characteristic index
/*
aggregate SCX structure prefix SCX$;
	constant ENTRIES equals 15;						/* number of entries per block
	NAME				character length 32;			/* characteristic name
	NUMBER				byte unsigned;				/* characteristic number
end;


/*
/*	Form index
/*
aggregate SFX structure prefix SFX$;
	constant ENTRIES equals 12;						/* number of entries per block
	NAME				character length 32;			/* form name
	NUMBER				longword unsigned;			/* form number
	FORM_LINK			longword unsigned;			/* link to form record
end;


/*
/*	Queue index
/*
aggregate SQX structure prefix SQX$;
	constant ENTRIES equals 12;						/* number of entries per block
	NAME				character length 32;			/* queue name
	FLAGS				structure longword unsigned;
	    BATCH			bitfield;				/* batch queue
	    EXECUTOR			bitfield;				/* executor queue
	    GENERIC_SELECTION		bitfield;				/* queue can take jobs from generic queue
	    end;
	QUEUE_LINK			longword unsigned;			/* link to queue record
end;


/*
/*	Form
/*
aggregate SFM structure prefix SFM$;
	common_header			byte dimension #symhdrsiz fill;
	FLAGS				structure longword unsigned;
	    SHEET_FEED			bitfield;				/* form is sheet fed
	    TRUNCATE			bitfield;				/* lines are truncated
	    WRAP			bitfield;				/* lines are wrapped
	    end;
	DESCRIPTION			character length 256;			/* descriptive text (ASCIC)
	NAME				character length 32;			/* form name (ASCIC)
	NUMBER				longword unsigned;			/* form number
	STOCK				character length 32;			/* stock name (ASCIC)
	MARGIN_LEFT			word unsigned;				/* left margin in characters
	MARGIN_RIGHT			word unsigned;				/* right margin in characters
	WIDTH				word unsigned;				/* width in characters
	LENGTH				byte unsigned;				/* length in lines
	MARGIN_BOTTOM			byte unsigned;				/* bottom margin in lines
	MARGIN_TOP			byte unsigned;				/* top margin in lines
	FORM_SETUP_MODULES		character length 6;			/* form setup modules
	PAGE_SETUP_MODULES		character length 6;			/* form page setup modules
	record_filler			byte dimension 512-. fill;
end;


/*
/*	Queue
/*
aggregate SMQ structure prefix SMQ$;
	common_header			byte dimension #symhdrsiz fill;
	FLAGS				structure longword unsigned;
	    BATCH			bitfield;				/* batch queue
	    BATCH_EXPLICIT		bitfield;				/* batch specification is explicit
	    CPU_DEFAULT			bitfield;				/* default CPU limit defined
	    CPU_MAXIMUM			bitfield;				/* maximum CPU limit defined
	    FILE_BURST			bitfield;				/* default file burst page on all
	    FILE_BURST_ONE		bitfield;				/* default file burst page on first
	    FILE_FLAG			bitfield;				/* default file flag page on all
	    FILE_FLAG_ONE		bitfield;				/* default file flag page on first
	    FILE_TRAILER		bitfield;				/* default file trailer page on all
	    FILE_TRAILER_ONE		bitfield;				/* default file trailer page on last
	    GENERIC_QUEUE		bitfield;				/* queue is generic
	    GENERIC_SELECTION		bitfield;				/* queue can take jobs from generic queue
	    JOB_BURST			bitfield;				/* print job burst page
	    JOB_FLAG			bitfield;				/* print job flag page
	    JOB_SIZE_SCHEDULING		bitfield;				/* schedule print jobs by size
	    JOB_TRAILER			bitfield;				/* print job trailer page
	    LOWERCASE			bitfield;				/* queue can take lowercase jobs
	    PAGINATE			bitfield;				/* default file form feed at queue level
	    RETAIN_ALL_JOBS		bitfield;				/* retain all jobs after execution
	    RETAIN_ERROR_JOBS		bitfield;				/* retain jobs that complete unsuccessfully
	    SERVER			bitfield;				/* server or generic server queue
	    SWAP			bitfield;				/* swap jobs
	    TERMINAL			bitfield;				/* terminal or generic terminal queue
	    WSDEFAULT			bitfield;				/* working set default defined
	    WSEXTENT			bitfield;				/* working set extent defined
	    WSQUOTA			bitfield;				/* working set quota defined
	    end;
	STATUS				structure longword unsigned;
	    ALIGNING			bitfield;				/* queue is aligning
	    OPERATOR_REQUEST		bitfield;				/* queue has a pending operator request
	    PAUSED			bitfield;				/* queue is paused
	    PAUSING			bitfield;				/* queue is pausing
	    REMOTE			bitfield;				/* device is remote
	    RESETTING			bitfield;				/* queue is resetting
	    RESUMING			bitfield;				/* queue is resuming
	    STALLED			bitfield;				/* device is stalled
	    STARTING			bitfield;				/* queue is starting
	    STOPPED			bitfield;				/* queue is stopped
	    STOPPING			bitfield;				/* queue is stopping
	    UNAVAILABLE			bitfield;				/* device is unavailable
	    end;
	ACM_BEGTIM			quadword;				/* time job began output
	ACM_GETCNT			longword unsigned;			/* read operations by symbiont
	ACM_PAGECNT			longword unsigned;			/* pages printed by symbiont
	ACM_QIOCNT			longword unsigned;			/* write operations by symbiont
	ACM_SYMCPUTIM			longword unsigned;			/* CPU used by symbiont
	ASSIGNED_QUEUE_LINK		longword unsigned;			/* link to assigned queue
	CHARACTERISTICS			character length 16;			/* characteristics mask
	CPU_DEFAULT			longword unsigned;			/* default CPU limit
	CPU_MAXIMUM			longword unsigned;			/* maximum CPU limit
	CURRENT_LIST			longword unsigned;			/* head of list of current jobs
	CURRENT_LIST_END		longword unsigned;
	DEVICE_NAME			character length 32;			/* target device (ASCIC)
	FORM_LINK			longword unsigned;			/* link to form definition record
	GENERIC_TARGET			longword unsigned;			/* link to block of generic target queues
	HOLD_LIST			longword unsigned;			/* head of list of held jobs
	HOLD_LIST_END			longword unsigned;
	JOB_SIZE_MAXIMUM		longword unsigned;			/* largest job this queue accepts
	JOB_SIZE_MINIMUM		longword unsigned;			/* smallest job this queue accepts
	LIBRARY				character length 40;			/* device control library file name (ASCIC)
	NAME				character length 32;			/* queue name (ASCIC)
	OWNER_UIC			longword unsigned;			/* queue owner UIC
	PROCESSOR			character length 40;			/* symbiont file name (ASCIC)
	STREAM_SCT			longword unsigned;			/* pointer to symbiont control table
	OPEN_JOB_COUNT			word unsigned;				/* count of jobs in open queue
	PENDING_JOB_COUNT		word unsigned;				/* count of jobs in pending queue
	PROTECTION			word unsigned;				/* queue protection
	SYSID				character length 6;			/* target system ID
	TIMER_JOB_COUNT			word unsigned;				/* count of jobs in timer queue
	WSDEFAULT			word unsigned;				/* working set default
	WSEXTENT			word unsigned;				/* working set extent
	WSQUOTA				word unsigned;				/* working set quota
	BASE_PRIORITY			byte unsigned;				/* process base priority
	CURRENT_JOB_COUNT		byte unsigned;				/* count of jobs in current queue
	JOB_LIMIT			byte unsigned;				/* maximum current jobs
	STREAM_INDEX			byte unsigned;				/* stream index for this stream
	JOB_RESET_MODULES		character length 6;			/* job reset modules
	record_filler			byte dimension 512-. fill;
end;


/*
/*	Job
/*
aggregate SJH structure prefix SJH$;
	common_header			byte dimension #symhdrsiz fill;
	FLAGS				structure longword unsigned;
	    CPU_MAXIMUM			bitfield;				/* maximum CPU limit defined
	    FILE_BURST			bitfield;				/* default file burst page on all
	    FILE_BURST_EXPLICIT		bitfield;				/* file burst default explicit
	    FILE_BURST_ONE		bitfield;				/* default file burst page on first
	    FILE_FLAG			bitfield;				/* default file flag page on all
	    FILE_FLAG_EXPLICIT		bitfield;				/* file flag default explicit
	    FILE_FLAG_ONE		bitfield;				/* default file flag page on first
	    FILE_TRAILER		bitfield;				/* default file trailer page on all
	    FILE_TRAILER_EXPLICIT	bitfield;				/* file trailer default explicit
	    FILE_TRAILER_ONE		bitfield;				/* default file trailer page on last
	    LOG_DELETE			bitfield;				/* delete batch log after printing
	    LOG_NULL			bitfield;				/* suppress batch log
	    LOG_SPOOL			bitfield;				/* spool batch log
	    LOWERCASE			bitfield;				/* job requires lowercase equipment
	    NOTIFY			bitfield;				/* notify user upon completion
	    PAGINATE			bitfield;				/* default file form feed at job level
	    PAGINATE_EXPLICIT		bitfield;				/* file form feed default explicit
	    RESTART			bitfield;				/* job can restart
	    WSDEFAULT			bitfield;				/* working set default defined
	    WSEXTENT			bitfield;				/* working set extent defined
	    WSQUOTA			bitfield;				/* working set quota defined
	    end;
	STATUS				structure longword unsigned;
	    ABORTED			bitfield;				/* job was aborted
	    ABORTING			bitfield;				/* job is aborting
	    DELETED			bitfield;				/* job was deleted
	    EXECUTING			bitfield;				/* job is executing
	    FILE_STARTING		bitfield;				/* symbiont is starting a file
	    HOLDING			bitfield;				/* job is holding due to /HOLD
	    OPEN			bitfield;				/* job is open
	    REFUSED			bitfield;				/* job is holding due to symbiont request
	    REQUEUE			bitfield;				/* requeue job after abort
	    REQUEUE_HOLD		bitfield;				/* hold job after requeue
	    RESTARTING			bitfield;				/* job was partially executed
	    RETAINED			bitfield;				/* job was retained
	    STARTING			bitfield;				/* job is starting
	    SYNCHRONIZE			bitfield;				/* SYNCHRONIZE service in progress
	    SYSTEM_FAILURE		bitfield;				/* job was executing at a crash or queue reset
	    end;
	ACCOUNT				character length 8;			/* account of submitter
	account_filler			byte dimension 24 fill;			/* reserved for expansion of account field
	debug_filler			byte dimension 100 fill;		/* unsused area for debug purposes
	AFTER_TIME			quadword;				/* time of submission or AFTER time if later
	CHARACTERISTICS			character length 16;			/* characteristics mask
	CLI				character length 40;			/* CLI file name (ASCIC)
	COMPLETED_BLOCKS		longword unsigned;			/* completed blocks excluding current file
	CONDITION_VECTOR		structure;				/* completion status
	    CONDITION_1			longword unsigned;
	    CONDITION_2			longword unsigned;
	    CONDITION_3			longword unsigned;
	    end;
	CPU_MAXIMUM			longword unsigned;			/* maximum CPU limit
	CURRENT_FILE_CHKPT		longword unsigned;			/* current file checkpoint
	CURRENT_FILE_LINK		longword unsigned;			/* link to file currently being processed
	FILE_LIST			longword unsigned;			/* head of list of files
	FILE_LIST_END			longword unsigned;			/* link to end of list of files
	FORM_LINK			longword unsigned;			/* link to form definition record
	JOB_SIZE			longword unsigned;			/* total size of all files in job
	LOG_QUEUE_LINK			longword unsigned;			/* link to log queue
	NAME				character length 40;			/* job name (ASCIC)
	PID				longword unsigned;			/* PID of submitter
	QUEUE_LINK			longword unsigned;			/* link to queue
	REQUEUE_QUEUE_LINK		longword unsigned;			/* link to queue for requeue operation
	TIME				quadword;				/* time of submission
	UIC				longword unsigned;			/* UIC of submitter
	USERNAME			character length 12;			/* username of submitter
	username_filler			byte dimension 20 fill;			/* reserved for expansion of username field
	EXECUTOR_PID			longword unsigned;			/* PID of batch job
	SYSID				character length 6;			/* system id of submitter
	WSDEFAULT			word unsigned;				/* working set default
	WSEXTENT			word unsigned;				/* working set extent
	WSQUOTA				word unsigned;				/* working set quota
	FILE_COPIES_CHKPT		byte unsigned;				/* file copy checkpoint
	FILE_COPIES_DONE		byte unsigned;				/* number of copies of current file completed
	JOB_COPIES			byte unsigned;				/* number of copies of job to print
	JOB_COPIES_CHKPT		byte unsigned;				/* job copy checkpoint
	JOB_COPIES_DONE			byte unsigned;				/* number of copies of job completed
	PRIORITY			byte unsigned;				/* job priority
	REQUEUE_PRIORITY		byte unsigned;				/* job priority for requeue
	filler_1			byte fill;				/* spare
	CHECKPOINT			character length 32;			/* executor checkpoint
	LOG_SPECIFICATION		character length 6;			/* log file specification
	NOTE				character length 6;			/* user note text
	OPERATOR_REQUEST		character length 6;			/* operator request text
	PARAMETERS			character length 32;			/* job parameters
	REFUSAL_REASON			character length 6;			/* reason that symbiont refused job
	record_filler			byte dimension 512-. fill;
end;


/*
/*	File
/*
aggregate SQR structure prefix SQR$;
	common_header			byte dimension #symhdrsiz fill;
	FLAGS				structure longword unsigned;
	    DELETE_FILE			bitfield;				/* delete file
	    DELETE_PERMISSION		bitfield;				/* deletion permitted by file access
	    DOUBLE_SPACE		bitfield;				/* double space output
	    FILE_BURST			bitfield;				/* print file burst page
	    FILE_BURST_EXPLICIT		bitfield;				/* file burst specification explicit
	    FILE_FLAG			bitfield;				/* print file flag page
	    FILE_FLAG_EXPLICIT		bitfield;				/* file flag specification explicit
	    FILE_TRAILER		bitfield;				/* print file trailer page
	    FILE_TRAILER_EXPLICIT	bitfield;				/* file trailer specification explicit
	    PAGE_HEADER			bitfield;				/* print page header
	    PAGINATE			bitfield;				/* paginate output (issue form feed)
	    PAGINATE_EXPLICIT		bitfield;				/* paginate output (issue form feed) explicit
	    PASSALL			bitfield;				/* print file passall
	    end;
	CONDITION_VECTOR		structure;				/* conditions to print
	    CONDITION_1			longword unsigned;
	    CONDITION_2			longword unsigned;
	    CONDITION_3			longword unsigned;
	    end;
	FILE_IDENTIFICATION		structure character length 28;		/* file identification: DVI, FID, DID
	    FILE_ID_DVI			character length 16;			/* DVI
	    FILE_ID_FID_NUM		word unsigned;				/* FID
	    FILE_ID_FID_SEQ		word unsigned;
	    FILE_ID_FID_RVN		structure word unsigned;
		FILE_ID_FID_RVN		byte unsigned;
		FILE_ID_FID_NMX		byte unsigned;
		end;
	    FILE_ID_DID_NUM		word unsigned;				/* DID
	    FILE_ID_DID_SEQ		word unsigned;
	    FILE_ID_DID_RVN		structure word unsigned;
		FILE_ID_DID_RVN		byte unsigned;
		FILE_ID_DID_NMX		byte unsigned;
		end;
	    end;
	FILE_SIZE			longword unsigned;			/* file size in blocks
	FIRST_PAGE			longword unsigned;			/* first page of file to print
	LAST_PAGE			longword unsigned;			/* last page of file to print
	FILE_COPIES			byte unsigned;				/* number of copies of file to print
	FILE_SETUP_MODULES		character length 6;			/* file setup modules
	FILE_SPECIFICATION		character length 256;			/* file specification
	record_filler			byte dimension 512-. fill;
end;


/*
/*	Incomplete service descriptor
/*
aggregate SRQ structure prefix SRQ$;
	common_header			byte dimension #symhdrsiz fill;
	FUNCTION_CODE			longword unsigned;			/* function code
	constant (
	    START_JOB								/*     start a job
	,   ABORT_JOB								/*     abort a job
	,   SYNCHRONIZE_JOB							/*     synchronize on job
	,   START_QUEUE								/*     start a queue
	,   STOP_QUEUE								/*     stop a queue
	,   PAUSE_QUEUE								/*     pause a queue
	,   RESUME_QUEUE							/*     resume a queue
	,   RESET_QUEUE								/*     reset a queue
	,   BROADCAST_MESSAGE							/*     broadcast a message
	,   RESPONSE								/*     return a response
	,   DELETE_FILES							/*     delete files in a job
	,   START_SYMBIONT							/*     start a symbiont stream
	) equals 1 increment 1;
	FLAGS				structure longword unsigned;
	    NO_RESPONSE			bitfield;				/* no response required to service
	    STALLED			bitfield;				/* service is waiting for an external action
	    end;
	SENDING_SYSID			character length 6;			/* system ID of sending node
	RECEIVING_SYSID			character length 6;			/* system ID of receiving node
	parameter_union			union fill;
	    standard			structure fill;
		P1			longword unsigned;			/*  function-dependent parameters
		P2			longword unsigned;			/*      ...
		P3			longword unsigned;			/*      ...
		P4			longword unsigned;			/*      ...
		P5			character length 64;			/*      ...
		SRB			character length 0;			/*  service response block
		end;
	    broadcast_message		structure fill;
		BRDCST_USERNAME		character length 12;			/*  broadcast username
		brdcst_username_filler	byte dimension 20 fill;			/*  reserved for expansion of brdcst_username
		BRDCST_LENGTH		word unsigned;				/*  message length
		BRDCST_TEXT		character length 512-.;			/*  message text
		end;
	    end;
end;


end_module $SYSQUEDEF;
