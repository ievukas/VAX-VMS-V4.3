MODULE PAS$FV_INPUT ( %TITLE 'File Variable INPUT'
		IDENT = '1-001'			! File: PASFVINPU.B32 Edit: SBL1001
		) =
BEGIN
!
!****************************************************************************
!*									    *
!*  COPYRIGHT (c) 1978, 1980, 1982, 1984 BY				    *
!*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
!*  ALL RIGHTS RESERVED.						    *
!* 									    *
!*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
!*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
!*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
!*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
!*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
!*  TRANSFERRED.							    *
!* 									    *
!*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
!*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
!*  CORPORATION.							    *
!* 									    *
!*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
!*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
!* 									    *
!*									    *
!****************************************************************************
!

!++
! FACILITY:	VAX-11 Pascal Run-Time Library
!
! ABSTRACT:
!
!	This module contains the global Pascal File Variable INPUT (PFV),
!	along with its associated Pascal File Descriptor (PFD) block.
!	This variable is referenced by VAX-11 Pascal programs as the
!	file INPUT.
!
! ENVIRONMENT:	Contains no code.
!
! AUTHOR: Steven B. Lionel, CREATION DATE: 1-April-1981
!
! MODIFIED BY:
!
! 1-001	- Original.  SBL 1-April-1981
!--


%SBTTL 'Declarations'
!
! PROLOGUE DEFINITIONS
!

REQUIRE 'RTLIN:PASPROLOG';			! Externals, linkages, PSECTs, structures

!
! MACROS:
!
!	NONE
!
! EQUATED SYMBOLS:
!
!	NONE
!
! FIELDS:
!
!	NONE
!
! OWN STORAGE:
!

OWN
    !+
    ! First define PFD block so that it can be referenced by the PFV.
    !-

    PFD_INPUT: BLOCK [PFD$K_SIZE+%CHARCOUNT('INPUT'), BYTE] 
	       FIELD (PFD$FIELDS) PSECT (_PAS$CODE)
	PRESET (
		[PFD$V_TEXT]	= 1,
		[PFD$V_EXTERN]	= 1,
		[PFD$V_STATIC]	= 1,
		[PFD$L_LENGTH]	= 1,
		[PFD$T_NAME]	= %CHARCOUNT('INPUT'),
		[PFD$B_NAME1]	= %C'I',
		[PFD$B_NAME2]	= %C'N',
		[PFD$B_NAME3]	= %C'P',
		[PFD$B_NAME4]	= %C'U',
		[PFD$B_NAME5]	= %C'T'
	       );

!+
! Define file buffer for INPUT.
!-

OWN
    BUFFER_INPUT: BYTE;

!+
! Now define the global file variable.  Unlike the PFD, the PFV is writeable.
! Put it in a special PSECT that sorts before _PAS$DATA.  
!-

PSECT
    NODEFAULT = _PAS$$FILE_VARS (READ, WRITE, NOEXECUTE, NOSHARE, PIC, 
	ADDRESSING_MODE (LONG_RELATIVE));

GLOBAL
    PAS$FV_INPUT: $PAS$PFV_FILE_VARIABLE PSECT (_PAS$$FILE_VARS) 
	PRESET (
		[PFV$B_VERSION]	= PFV$K_CUR_VERSION,
		[PFV$V_RELPFD]	= 1,
		[PFV$A_PFD]	= (PFD_INPUT - PAS$FV_INPUT),
		[PFV$V_RELBUF]	= 1,
		[PFV$A_BUFFER]	= (BUFFER_INPUT - PAS$FV_INPUT)
	       );

!+
! Define enough bytes of storage space to pad PAS$FV_INPUT to 32 bytes.
! This is so that it can be expanded to 32 bytes without affecting its
! location in the vector.
!-

OWN
    PAD_SPACE: VECTOR [32-PFV$K_SIZE, BYTE] PSECT (_PAS$$FILE_VARS);

END						! End of module PAS$FV_INPUT

ELUDOM
