! 
! ****************************************************************************
! *									    *
! *  Copyright (c) 1982, 1983		                                    *
! *  by DIGITAL Equipment Corporation, Maynard, Mass.			    *
! * 									    *
! *  This software is furnished under a license and may be used and  copied  *
! *  only  in  accordance  with  the  terms  of  such  license and with the  *
! *  inclusion of the above copyright notice.  This software or  any  other  *
! *  copies  thereof may not be provided or otherwise made available to any  *
! *  other person.  No title to and ownership of  the  software  is  hereby  *
! *  transferred.							    *
! * 									    *
! *  The information in this software is subject to change  without  notice  *
! *  and  should  not  be  construed  as  a commitment by DIGITAL Equipment  *
! *  Corporation.							    *
! * 									    *
! *  DIGITAL assumes no responsibility for the use or  reliability  of  its  *
! *  software on equipment which is not supplied by DIGITAL.		    *
! *									    *
! ****************************************************************************
! *********************************************************************************************************************************
!  Created 15-SEP-1984 22:44:26  by  VAX-11 SDL V2.0       Source: 15-SEP-1984 22:43:30 _$255$DUA28:[CJFV4.SRC]JNLFILE.SDL;1       
! *********************************************************************************************************************************
 
 
!*** MODULE $JETDEF ***
! ++
! 
!  JET - Journal Entry Type
! 
! 	The first byte of all control entries, after the common
! 	CEH bytes, in the journal file is the
! 	record type.  This defines the values for this byte.
!  	
!  	Some of these values are used for record/entry type and 
!  	some are used for block/structure types.  This could be a 
!  	source of some confusion.  Entries are contained within a 
!  	journal bucket structure.  The major structures always 
!  	are block structures.  
! 
!  	The structure types are PROL, BUFHDR, RHD, OPT, CLT, EPIL, and CJL. 
!  
!  	The entry types are JAB, USERREC, CHUNK, JDB, MARK, OPJ, UICTBL, 
!  	PHASE1, PHASE2, ABORT, COMPLETED, RESIDUAL, CLEANUP, RESET, RUSYNC, 
!  	DCJL, and RMST. 
!  	
!  	JABLST and RCH are obsolete.  JABLST has been replaced by the 
!  	structure type CJL for tape journals and by the entry type DCJL for 
!  	disk journals.  Specific RU entry types are used instead of the 
!  	nonspecific RCH type. 
!  
!  	==> Any time new structures or entries are defined, concurrent 
!  	    changes should be made to the dump formatting utility, JCPDMP,
!  	    to allow it to recognize and format them. 
!  
! --
literal JET$C_PROL = 1;                 !  prologue 
literal JET$C_JAB = 2;                  !  journal assign block 
literal JET$C_BUFHDR = 3;               !  buffer header 
literal JET$C_USERREC = 4;              !  user record 
literal JET$C_CHUNK = 5;                !  chunk (continuation segment) 
literal JET$C_JDB = 6;                  !  journal deassign block. 
literal JET$C_MARK = 7;                 !  mark point 
literal JET$C_JABLST = 8;               !  JAB list 
literal JET$C_OPJ = 9;                  !  open-journal entry 
literal JET$C_RCH = 10;                 !  RU control entry 
literal JET$C_RHD = 11;                 !  Reel header (for tapes) 
literal JET$C_OPT = 12;                 !  open tape entry 
literal JET$C_CLT = 13;                 !  close tape 
literal JET$C_EPIL = 14;                !  epilogue 
literal JET$C_UICTBL = 15;              !  UIC table modification record 
literal JET$C_PHASE1 = 16;              !  phase1 entry 
literal JET$C_PHASE2 = 17;              !  phase2 entry 
literal JET$C_ABORT = 18;               !  abort entry 
literal JET$C_COMPLETED = 19;           !  entry indicating RU is rolled fw. 
literal JET$C_RESIDUAL = 20;            !  residual entry 
literal JET$C_CLEANUP = 21;             !  cleanup entry 
literal JET$C_RESET = 22;               !  reset entry 
literal JET$C_RUSYNC = 23;              !  rusync entry
literal JET$C_CJL = 24;                 !  current JAB list for tapes
literal JET$C_DCJL = 25;                !  current JAB list for disk
literal JET$C_RMST = 26;                !  remaster journal entry
!  Any new JET codes should be inserted before this. 
literal JET$C_HIGH_LIMIT = 27;          !  high-end delimiter for indexing the JET codes.  
 
!*** MODULE $PROLDEF ***
! ++
! 
!  PROL -  Journal Prologue (on disk or tape)
! 
!          The first block of each disk journal file is used as a prologue
!          block to contain control information. For tape journals the
!         prologues are written as tape blocks. The fields defined for
!         a prologue block are described here
! 
! --
literal PROL$M_TMPJNL = 1;
literal PROL$M_SITE = 2;
literal PROL$M_CREATE = 4;
literal PROL$M_CREATE_IF = 8;
literal PROL$M_TMPFIL = 16;
literal PROL$M_CREACP = 32;
literal PROL$M_DIFACP = 64;
literal PROL$M_REPLACE = 128;
literal PROL$M_TAPEDRIVE = 256;
literal PROL$M_OPEN = 1;
literal PROL$M_NORUS = 2;
literal PROL$K_LENGTH = 152;            !  length of structure 
literal PROL$C_LENGTH = 152;            !  length of structure 
literal PROL$S_PROLDEF = 152;
macro PROL$L_CEH = 0,0,0,0 %;
literal PROL$S_CEH = 20;                !  control entry header fields 
macro PROL$L_LEN = 0,0,32,0 %;          !  length (for tapes) 
macro PROL$L_JNLID = 4,0,32,0 %;        !  journal ID (for tapes) 
macro PROL$W_TSIZE = 8,0,16,0 %;        !  size record (for tapes) 
macro PROL$B_STRUCT = 10,0,8,0 %;       !  structure type (for tapes) 
macro PROL$B_TYPE = 20,0,8,0 %;         !  record type for prologue 
macro PROL$B_SIZE = 21,0,8,0 %;         !  prologue size in blocks 
macro PROL$B_MAJVER = 22,0,8,0 %;       !  major software version number 
macro PROL$B_MINVER = 23,0,8,0 %;       !  minor software version number 
macro PROL$L_LINK = 24,0,32,0 %;        !  (in core use only) next prologue 
macro PROL$T_NAME = 28,0,0,0 %;
literal PROL$S_NAME = 13;               !  journal name (counted ASCII) 
macro PROL$B_JNL_TYPE = 44,0,8,0 %;     !  journal type 
macro PROL$B_COPIES = 45,0,8,0 %;       !  number of copies created (disks only) 
macro PROL$W_PROT = 46,0,16,0 %;        !  protection mask of journal 
macro PROL$L_DATCRE = 48,0,0,0 %;
literal PROL$S_DATCRE = 8;              !  creation date/time 
macro PROL$L_DATOPN = 56,0,0,0 %;
literal PROL$S_DATOPN = 8;              !  date/time last opened 
macro PROL$L_DATCNV = 64,0,0,0 %;
literal PROL$S_DATCNV = 8;              !  date/time a new version was created
macro PROL$L_CRECNT = 72,0,32,0 %;      !  creation count 
macro PROL$L_UIC = 76,0,32,0 %;         !  UIC of journal 
macro PROL$W_FILEXT = 80,0,16,0 %;      !  file extend size 
macro PROL$W_BUFSIZ = 82,0,16,0 %;      !  buffer size (in bytes) 
macro PROL$W_MAXSIZ = 84,0,16,0 %;      !  maximum journal entry size 
macro PROL$B_ACMODE = 86,0,8,0 %;       !  access mode for journal 
macro PROL$W_FACCOD = 88,0,16,0 %;      !  facility code 
macro PROL$W_APPLID = 90,0,16,0 %;      !  application ID 
macro PROL$L_MASK = 92,0,32,0 %;        !  mask (for AT journals only) 
macro PROL$L_QUOTA = 96,0,32,0 %;       !  quota , for Ru journals only 
macro PROL$L_FLAGS = 100,0,32,0 %;      !  flags; maust be same as in JSB 
macro PROL$V_TMPJNL = 100,0,1,0 %;      !  temp journal 
macro PROL$V_SITE = 100,1,1,0 %;        !  (*) installation journal 
macro PROL$V_CREATE = 100,2,1,0 %;      !  create new file 
macro PROL$V_CREATE_IF = 100,3,1,0 %;   !  create-if 
macro PROL$V_TMPFIL = 100,4,1,0 %;      !  temporary file: delete on device deletion 
macro PROL$V_CREACP = 100,5,1,0 %;      !  create new ACP for this journal 
macro PROL$V_DIFACP = 100,6,1,0 %;      !  use different ACP (name in JSB) 
macro PROL$V_REPLACE = 100,7,1,0 %;     !  replace current journal with this 
macro PROL$V_TAPEDRIVE = 100,8,1,0 %;   !  create journal tape drive (internal) 
!   marked (*) are used in the prologue
!   NOTE: do not change JSB independently
macro PROL$L_STATUS = 104,0,32,0 %;     !  journal file status 
macro PROL$V_OPEN = 104,0,1,0 %;        !  journal file is opened, not closed 
macro PROL$V_NORUS = 104,1,1,0 %;       !  if set : no RUEs in RUL when journal 
!         closed (RU journals only)
macro PROL$L_FRSTSEQN = 108,0,32,0 %;   !  sequence number first entry in this file
macro PROL$L_BASEVBN = 112,0,32,0 %;    !  VBN first bucket in this journal file
macro PROL$L_LASTVBN = 116,0,32,0 %;    !  VBN last bucket written (only valid 
!   if journal properly closed + used
!   by ACP for unopened tape journals)
macro PROL$L_LASTSEQN = 120,0,32,0 %;   !  last sequence number used 
macro PROL$L_FST_VBN = 124,0,32,0 %;    !  VBN first free byte 
macro PROL$W_FST_OFF = 128,0,16,0 %;    !  offset first free byte 
macro PROL$L_PRV_VBN = 132,0,32,0 %;    !  VBN last chunk 
macro PROL$W_PRV_OFF = 136,0,16,0 %;    !  offset last chunk 
macro PROL$L_PRV_EVBN = 140,0,32,0 %;   !  VBN last entry 
macro PROL$W_PRV_EOFF = 144,0,16,0 %;   !  offset last entry 
macro PROL$L_LASTAID = 148,0,32,0 %;    !  last assign ID used 
 
!*** MODULE $JABDEF ***
! ++
! 
!  JAB - Journal Assign Block
! 
!         One journal assign block is placed in the journal file
!         whenever the journal is assigned by the $ASSJNL or $CREJNL
!         service.
! 
! --
literal JAB$K_LENGTH = 80;              !  length of structure 
literal JAB$C_LENGTH = 80;              !  length of structure 
literal JAB$S_JABDEF = 80;
macro JAB$L_CEH = 0,0,0,0 %;
literal JAB$S_CEH = 20;                 !  control entry header fields 
macro JAB$B_TYPE = 20,0,8,0 %;          !  record type to indicate JAB 
macro JAB$W_JNLID = 22,0,16,0 %;        !  journal ID for multi-journal tapes 
macro JAB$L_ASSSEQ = 24,0,32,0 %;       !  assign sequence number (unique per $ASSJNL per journal) 
macro JAB$W_FACCOD = 28,0,16,0 %;       !  facility code 
macro JAB$B_NODE = 30,0,0,0 %;
literal JAB$S_NODE = 6;                 !  host node number of user 
macro JAB$L_UIC = 36,0,32,0 %;          !  UIC used as UIC for entries written 
macro JAB$L_PID = 40,0,32,0 %;          !  PID of user 
macro JAB$T_PRCNAM = 44,0,0,0 %;
literal JAB$S_PRCNAM = 16;              !  Process name 
macro JAB$Q_TIME = 60,0,0,0 %;
literal JAB$S_TIME = 8;                 !  time (standard 64-bit format) 
macro JAB$W_PROT = 68,0,16,0 %;         !  protection mask of $ASSJNL 
macro JAB$W_REFCNT = 70,0,16,0 %;       !  (inclusive) reference count of 
!  writers currently assigned to this
!  journal.
macro JAB$B_ACMODE = 72,0,8,0 %;        !  access mode of $ASSJNL 
macro JAB$L_PRCUIC = 76,0,32,0 %;       !  process UIC 
 
!*** MODULE $JDBDEF ***
! ++
! 
!  JDB - Journal Deassign Block
! 
!         One journal deassign block is placed in the journal file
!         whenever the journal is deassigned by the $DEASJNL or $DELJNL
!         service.  JAB$... field definitions are used for the JDB.
! 
! 
! --
literal JDB$K_LENGTH = 80;              !  length of structure 
literal JDB$C_LENGTH = 80;              !  length of structure 
literal JDB$S_JDBDEF = 80;
macro JDB$L_CEH = 0,0,0,0 %;
literal JDB$S_CEH = 20;                 !  control entry header fields 
macro JDB$B_TYPE = 20,0,8,0 %;          !  record type to indicate JAB 
macro JDB$W_JNLID = 22,0,16,0 %;        !  journal ID for multi-journal tapes 
macro JDB$L_ASSSEQ = 24,0,32,0 %;       !  assign sequence number (unique per $ASSJNL per journal) 
macro JDB$W_FACCOD = 28,0,16,0 %;       !  facility code 
macro JDB$B_NODE = 30,0,0,0 %;
literal JDB$S_NODE = 6;                 !  host node number of user 
macro JDB$L_UIC = 36,0,32,0 %;          !  UIC used as UIC for entries written 
macro JDB$L_PID = 40,0,32,0 %;          !  PID of user 
macro JDB$T_PRCNAM = 44,0,0,0 %;
literal JDB$S_PRCNAM = 16;              !  Process name 
macro JDB$L_TIME = 60,0,0,0 %;
literal JDB$S_TIME = 8;                 !  time (standard 64-bit format) 
macro JDB$W_PROT = 68,0,16,0 %;         !  protection mask of $ASSJNL 
macro JDB$W_REFCNT = 70,0,16,0 %;       !  (inclusive) reference count of 
!  writers currently assigned to this
!  journal.
macro JDB$B_ACMODE = 72,0,8,0 %;        !  access mode of $ASSJNL 
macro JDB$L_PRCUIC = 76,0,32,0 %;       !  process UIC 
 
!*** MODULE $PHASEDEF ***
! ++
! 
!  PHASE - Phase Marker
! 
!         When the user does a RUF$PH1_END, RUF$PH2_END, RUF$CANCEL,
!         RUF$RESET or a RUF$MARKPOINT, a phase marker is written
!         to the RU journal by the ENDRU routine.
! 
! --
literal PHASE$K_RID = 24;               !  offset for RU-ID 
literal PHASE$C_RID = 24;               !  offset for RU-ID 
literal PHASE$M_RUSYNC = 1;
literal PHASE$K_LENGTH = 52;            !  Length of fixed portion 
literal PHASE$C_LENGTH = 52;            !  Length of fixed portion 
literal PHASE$S_PHASEDEF = 53;
macro PHASE$L_CEH = 0,0,0,0 %;
literal PHASE$S_CEH = 20;               !  Control entry header 
macro PHASE$B_CODE = 20,0,8,0 %;        !  Phase Code 
macro PHASE$W_ENTLEN = 21,0,16,0 %;     !  length variable portion
macro PHASE$T_RUID = 24,0,0,0 %;
literal PHASE$S_RUID = 16;              !  Recovery Unit ID (all cases) 
macro PHASE$L_COUNT = 40,0,32,0 %;      !  Journal count 
macro PHASE$L_MARKPT = 44,0,32,0 %;     !  Markpoint ID if RUF$MARKPOINT 
macro PHASE$L_FLAGS = 48,0,32,0 %;      !  flags longword
macro PHASE$V_RUSYNC = 48,0,1,0 %;      !  RUSYNC expected later
macro PHASE$B_NAME_AREA = 52,0,8,0 %;   !  Start of area containing names (always at the end!) 
 
!*** MODULE $OPJDEF ***
! ++
! 
!  OPJ - open journal entry
! 
!          An open-journal entry is written each time the journal file
!         if opened for a journal-creation
! 
! --
literal OPJ$K_LENGTH = 24;              !  length of structure 
literal OPJ$C_LENGTH = 24;              !  length of structure 
literal OPJ$S_OPJDEF = 24;
macro OPJ$L_CEH = 0,0,0,0 %;
literal OPJ$S_CEH = 20;                 !  control entry header 
macro OPJ$B_TYPE = 20,0,8,0 %;          !  type field 
 
!*** MODULE $RMSTDEF ***
! ++
! 
!  RMST - remaster journal entry
! 
!         A remaster journal entry is written each time the journal file
!         is opened due to the journal being remastered.
! 
! --
literal RMST$K_LENGTH = 24;             !  length of structure 
literal RMST$C_LENGTH = 24;             !  length of structure 
literal RMST$S_RMSTDEF = 24;
macro RMST$L_CEH = 0,0,0,0 %;
literal RMST$S_CEH = 20;                !  control entry header 
macro RMST$B_TYPE = 20,0,8,0 %;         !  type field 
 
!*** MODULE $PRADEF ***
! ++
! 
!  PREAMBLE - Journal record preamble
! 
!         Each user record in the journal file is preceded by a preamble
!         that describes the entry.
! 
!         This preamble MUST always have an even length
! 
! --
literal PRA$M_USER = 1;
literal PRA$M_CONTR = 2;
literal PRA$M_MULCHNKS = 4;
literal PRA$M_FRSTCHNK = 8;
literal PRA$M_LSTCHK = 16;
literal PRA$M_NULL = 32;
literal PRA$K_RID = 24;                 !  RID starts here. 
literal PRA$C_RID = 24;                 !  RID starts here. 
literal PRA$M_USERENT = 1;
literal PRA$M_MULTIPLE = 2;
literal PRA$M_SEQNOVF = 4;
literal PRA$M_RUJNL = 8;
literal PRA$M_ROLLFW = 16;
literal PRA$M_ROLLBW = 32;
literal PRA$M_FIRST = 64;
literal PRA$M_PHASE1 = 128;
literal PRA$M_PHASE2 = 256;
literal PRA$M_ABORT = 512;
literal PRA$M_COMPLETED = 1024;
literal PRA$M_P2$AB$2 = 2048;
literal PRA$M_RUSYNCEX = 4096;
literal PRA$M_RUSYNCWR = 8192;
literal PRA$K_LENGTH = 56;              !  length of structure 
literal PRA$C_LENGTH = 56;              !  length of structure 
literal PRA$S_PRADEF = 56;
macro PRA$W_LEN = 0,0,16,0 %;           !  total length entry - this word 
macro PRA$W_LEN2 = 2,0,16,0 %;          !  second word of length; for tapes only 
macro PRA$B_TYPE = 4,0,8,0 %;           !  record type to indicate user reocrd 
macro PRA$V_USER = 4,0,1,0 %;           !  user entry 
macro PRA$V_CONTR = 4,1,1,0 %;          !  control entry 
macro PRA$V_MULCHNKS = 4,2,1,0 %;       !  multiple chunks 
macro PRA$V_FRSTCHNK = 4,3,1,0 %;       !  first chunk 
macro PRA$V_LSTCHK = 4,4,1,0 %;         !  last chunk 
macro PRA$V_NULL = 4,5,1,0 %;           !  null entry 
macro PRA$B_PRALEN = 5,0,8,0 %;         !  preamble length 
macro PRA$W_PRVOFF = 6,0,16,0 %;        !  offset previous record in its bucket 
!   for RU jnls: offset previous entry by
!                same RU
macro PRA$L_PRVVBN = 8,0,32,0 %;        !  VBN of bucket with previous entry 
!   for RU jnls: VBN previous entry by
!                same RU
macro PRA$L_SEQNO = 12,0,32,0 %;        !  sequence number 
macro PRA$L_LSEQNO = 16,0,32,0 %;       !  local sequence number 
macro PRA$B_PRATYPE = 20,0,8,0 %;       !  type field for entry 
macro PRA$B_ENTATR = 21,0,8,0 %;        !  entry attribute 
macro PRA$W_ENTLEN = 22,0,16,0 %;       !  Total length user written entry. 
macro PRA$Q_RIDVAL = 24,0,0,0 %;
literal PRA$S_RIDVAL = 16;              !  RU ID (for RU journals only) 
!  The next subfields are for other than
!   RU journals
macro PRA$L_MASK = 24,0,32,0 %;         !  mask that user specified on $QIO 
macro PRA$L_RUID_LW2 = 28,0,32,0 %;     !  second longword of RUID
macro PRA$L_CSID = 32,0,32,0 %;         !  CSID portion of RUID,
!   also used for other journals (Not just RU)
macro PRA$W_CSID_SEQ = 32,0,16,0 %;     !  CSID sequence number
macro PRA$W_CSID_IDX = 34,0,16,0 %;     !  CSID node index
macro PRA$L_RUID_LW4 = 36,0,32,0 %;     !  Forth longword of RUID
macro PRA$Q_TIME = 40,0,0,0 %;
literal PRA$S_TIME = 8;                 !  time (standard 64-bit format) 
macro PRA$L_ASSSEQ = 48,0,32,0 %;       !  assign sequence number (of related JAB) 
macro PRA$W_FLAGS = 52,0,16,0 %;        !  flags byte 
macro PRA$V_USERENT = 52,0,1,0 %;       !  user written entry 
macro PRA$V_MULTIPLE = 52,1,1,0 %;      !  multiple entry 
macro PRA$V_SEQNOVF = 52,2,1,0 %;       !  seq no overflow 
macro PRA$V_RUJNL = 52,3,1,0 %;         !  this is a RU journal entry 
macro PRA$V_ROLLFW = 52,4,1,0 %;        !  roll forward entry 
macro PRA$V_ROLLBW = 52,5,1,0 %;        !  roll back entry 
macro PRA$V_FIRST = 52,6,1,0 %;         !  first entry for this RU 
macro PRA$V_PHASE1 = 52,7,1,0 %;        !  phase 1 done 
macro PRA$V_PHASE2 = 52,8,1,0 %;        !  phase 2 done 
macro PRA$V_ABORT = 52,9,1,0 %;         !  RU has been aborted 
macro PRA$V_COMPLETED = 52,10,1,0 %;    !  completed RU 
macro PRA$V_P2$AB$2 = 52,11,1,0 %;      !  phase2 or abort entry to be 
macro PRA$V_RUSYNCEX = 52,12,1,0 %;     !  rusync expected later
macro PRA$V_RUSYNCWR = 52,13,1,0 %;     !  rusync written
!  encountered twice before deletion
! 
!  The following flags are for RU
!  journal entries only
! 
macro PRA$W_FACCOD = 54,0,16,0 %;       !  facility code 
 
!*** MODULE $CEHDEF ***
! ++
! 
!  CONTROL ENTRY HEADER - header of control entries (written using WRITELBLK)
! 
!         Each control entry in the journal file is preceded by a header
!         that describes the entry.
!         The preamble is longer than this header and its first few fields
!          are identical to a control entry header
! 
!         This header MUST always have an even length
! 
! --
literal CEH$M_USER = 1;
literal CEH$M_CONTR = 2;
literal CEH$M_MULCHNKS = 4;
literal CEH$M_FRSTCHNK = 8;
literal CEH$M_LSTCHK = 16;
literal CEH$M_NULL = 32;
literal CEH$K_LENGTH = 20;              !  length of structure 
literal CEH$C_LENGTH = 20;              !  length of structure 
literal CEH$S_CEHDEF = 20;
macro CEH$W_LEN = 0,0,16,0 %;           !  total length entry - this word 
macro CEH$W_LEN2 = 2,0,16,0 %;          !  second word of length; for tapes only 
macro CEH$B_TYPE = 4,0,8,0 %;           !  record type to indicate user reocrd 
macro CEH$V_USER = 4,0,1,0 %;           !  user entry 
macro CEH$V_CONTR = 4,1,1,0 %;          !  control entry 
macro CEH$V_MULCHNKS = 4,2,1,0 %;       !  multiple chunks 
macro CEH$V_FRSTCHNK = 4,3,1,0 %;       !  first chunk 
macro CEH$V_LSTCHK = 4,4,1,0 %;         !  last chunk 
macro CEH$V_NULL = 4,5,1,0 %;           !  null entry 
macro CEH$B_CEHLEN = 5,0,8,0 %;         !  header length 
macro CEH$W_PRVOFF = 6,0,16,0 %;        !  offset previous entry in its bucket 
!   for RU jnls: offset previous entry by
!                same RU
macro CEH$L_PRVVBN = 8,0,32,0 %;        !  VBN of bucket with previous entry 
!   for RU jnls: VBN previous entry by
!                same RU
macro CEH$L_SEQNO = 12,0,32,0 %;        !  sequence number 
macro CEH$L_LSEQNO = 16,0,32,0 %;       !  local sequence number 
 
!*** MODULE $CHUNKDEF ***
! ++
! 
!  CHUNK HEADER - header of a chunk (not the first chunk of an entry)
! 
!  An entry is broken up in chunks if it doesn't fit in one bucket
!  or if it is an RUjnl entry that doesn't fit between two valid entries
!  The first chunk gets the regular preamble/control entry header, in
!  which the type field specifies that it is the first of multiple
!  chunks. Subsequent chunks get the chunk header
! 
!  The fields in the CHUNK structure are in the same position as for preambles
! 
!         This header MUST always have an even length
! 
! --
literal CHUNK$M_USER = 1;
literal CHUNK$M_CONTR = 2;
literal CHUNK$M_MULCHNKS = 4;
literal CHUNK$M_FRSTCHNK = 8;
literal CHUNK$M_LSTCHK = 16;
literal CHUNK$M_NULL = 32;
literal CHUNK$K_LENGTH = 40;            !  length of structure 
literal CHUNK$C_LENGTH = 40;            !  length of structure 
literal CHUNK$S_CHUNKDEF = 40;
macro CHUNK$W_LEN = 0,0,16,0 %;         !  total length entry - this word 
macro CHUNK$W_LEN2 = 2,0,16,0 %;        !  second word of length; for tapes only 
macro CHUNK$B_TYPE = 4,0,8,0 %;         !  record type to indicate user reocrd 
macro CHUNK$V_USER = 4,0,1,0 %;         !  user entry 
macro CHUNK$V_CONTR = 4,1,1,0 %;        !  control entry 
macro CHUNK$V_MULCHNKS = 4,2,1,0 %;     !  multiple chunks 
macro CHUNK$V_FRSTCHNK = 4,3,1,0 %;     !  first chunk 
macro CHUNK$V_LSTCHK = 4,4,1,0 %;       !  last chunk 
macro CHUNK$V_NULL = 4,5,1,0 %;         !  null entry 
macro CHUNK$B_LEN = 5,0,8,0 %;          !  header length 
macro CHUNK$W_PRVOFF = 6,0,16,0 %;      !  offset previous chunk in its bucket 
!   for RU jnls: offset previous chunk by
!                same RU
macro CHUNK$L_PRVVBN = 8,0,32,0 %;      !  VBN of bucket with previous chunk 
!   for RU jnls: VBN previous chunk by
!                same RU
macro CHUNK$L_SEQNO = 12,0,32,0 %;      !  sequence number of entry 
macro CHUNK$L_LSEQNO = 16,0,32,0 %;     !  local sequence number of entry 
macro CHUNK$B_CHTYPE = 20,0,8,0 %;      !  to indicate that this is a chunk header 
!     SPARE byte unsigned dimension 3 fill;		/* spare bytes
macro CHUNK$B_SPARE = 21,0,24,0 %;
literal CHUNK$S_SPARE = 3;              !  spare bytes
macro CHUNK$Q_RIDVAL = 24,0,0,0 %;
literal CHUNK$S_RIDVAL = 16;            !  RU ID 
 
!*** MODULE $UTEDEF ***
! ++
! 
!  UTE - UIC table entry
! 
!         The following defines the UIC table record format
! 
! --
literal UTE$C_VERSION = 1;              !  Record version ! constant 
literal UTE$K_LENGTH = 44;              !  length of structure 
literal UTE$C_LENGTH = 44;              !  length of structure 
literal UTE$C_BLKSIZ = 512;             !  UIC table block size 
literal UTE$C_MAXREC = 512;             !  Maximum record size 
literal UTE$S_UTEDEF = 44;
macro UTE$W_RECSIZ = 0,0,16,0 %;        !  Variable length record length 
macro UTE$B_TYPE = 0,0,8,0 %;           !  record type to indicate UTE 
macro UTE$B_FILL = 1,0,8,0 %;           !  filler 
macro UTE$W_VERSION = 2,0,16,0 %;       !  record version ! field 
macro UTE$L_UIC = 4,0,32,0 %;           !  uic for journal device 
macro UTE$W_UIC_MBM = 4,0,16,0 %;       !  UIC member number 
macro UTE$W_UIC_GRP = 6,0,16,0 %;       !  UIC group number 
macro UTE$T_JNLNAM = 8,0,0,0 %;
literal UTE$S_JNLNAM = 13;              !  journal name (counted ASCII) 
macro UTE$B_JNLNAMLEN = 8,0,8,0 %;      !  journal name length subfield 
macro UTE$B_JNLTYP = 21,0,8,0 %;        !  journal type 
macro UTE$L_FLAGS = 24,0,32,0 %;        !  flag longword 
macro UTE$Q_ENTTIME = 28,0,0,0 %;
literal UTE$S_ENTTIME = 8;              !  Time entry was made 
macro UTE$Q_CRETIME = 36,0,0,0 %;
literal UTE$S_CRETIME = 8;              !  Time UIC table file was first created 
 
!*** MODULE $NTEDEF ***
! ++
! 
!  NTE - Name table entry
! 
! 	The following defines the Name table record format.  
! 
! 	A close approximation of this format is used to describe journals 
! 	created remotly in a cluster to which no channel assignments have 
! 	ever been made on this node.  Should a channel assignment ever occur, 
! 	this node would become a slave node for the journal.  Such entries are 
! 	hung off of the CRB for each journal type in a singly linked list.
! 
! --
literal NTE$C_VERSION = 1;              !  Record version constant 
literal NTE$K_FIXEDLEN = 65;            !  fixed header length 
literal NTE$C_FIXEDLEN = 65;            !  fixed header length 
literal NTE$C_BLKSIZ = 512;             !  name table block size 
literal NTE$C_MAXREC = 512;             !  Maximum record size 
literal NTE$S_NTEDEF = 65;
macro NTE$W_RECSIZ = 0,0,16,0 %;        !  Variable length record length 
macro NTE$W_VERSION = 2,0,16,0 %;       !  record version field 
macro NTE$Q_CRETIME = 4,0,0,0 %;
literal NTE$S_CRETIME = 8;              !  Time name table file first created
macro NTE$L_UIC = 12,0,32,0 %;          !  uic for journal device 
macro NTE$W_UIC_MBM = 12,0,16,0 %;      !  UIC member number 
macro NTE$W_UIC_GRP = 14,0,16,0 %;      !  UIC group number 
macro NTE$L_FLAGS = 16,0,32,0 %;        !  flag longword 
macro NTE$B_JNLNAMLEN = 20,0,8,0 %;     !  journal name length subfield 
macro NTE$T_JNLNAM = 20,0,0,0 %;
literal NTE$S_JNLNAM = 13;              !  journal name (counted ASCII) 
macro NTE$W_PROT = 33,0,16,0 %;         !  Journal device protection 
macro NTE$B_ACMODE = 35,0,8,0 %;        !  Journal device access mode 
macro NTE$B_JNLDEV = 36,0,8,0 %;        !  Device for journal files 
macro NTE$B_COPIES = 37,0,8,0 %;        !  Number of device name strings
macro NTE$B_JNLTYP = 39,0,8,0 %;        !  journal type 
macro NTE$Q_ENTTIME = 41,0,0,0 %;
literal NTE$S_ENTTIME = 8;              !  Time entry was made 
macro NTE$B_ACPNAMLEN = 49,0,8,0 %;     !  ACP name length subfield 
macro NTE$T_ACPNAM = 49,0,0,0 %;
literal NTE$S_ACPNAM = 16;              !  Jrnl ACP process name (counted ASCII) 
 
!*** MODULE $FOFDEF ***
! ++
! 
!  FOF - File open flags
! 
!         The following flag definitions will be used by the open
!         routine to determine what action to take.  These flags
!         were previously part of the UTE structure but since they
!         are now also needed by name table routines they have been
!         moved.
! 
! --
literal FOF$M_CREATE = 2;
literal FOF$M_READ = 4;
literal FOF$M_NOREAD = 8;
literal FOF$M_NOWRITE = 16;
literal FOF$M_NAMTBL = 32;
literal FOF$S_FOFDEF = 1;
macro FOF$V_CREATE = 0,1,1,0 %;         !  Create new file 
macro FOF$V_READ = 0,2,1,0 %;           !  Read access only. 
macro FOF$V_NOREAD = 0,3,1,0 %;         !  Do not allow others read access 
macro FOF$V_NOWRITE = 0,4,1,0 %;        !  Open with write lock 
macro FOF$V_NAMTBL = 0,5,1,0 %;         !  Perform name table open instead 
!    of UIC table
 
!*** MODULE $DCJLDEF ***
! ++
! 
!  DISK CURRENT JAB LIST - List of current JABs for disk journal
! 
! 
! 	When a new version of a file is created a list of all JABs
!  	is written out to the journal file. This allows us to continue
! 	to write entries for existing channels to the journal, so
! 	on reading we don't need to get JABs from the previous version.
! 
! --
literal DCJL$K_FIXED_LEN = 4;           !  fixed length portion of structure 
literal DCJL$C_FIXED_LEN = 4;           !  fixed length portion of structure 
literal DCJL$S_DCJLDEF = 4;
macro DCJL$B_STRUCT = 0,0,8,0 %;        !  structure type field
macro DCJL$B_SPARE1 = 1,0,8,0 %;        !  spare
macro DCJL$W_NUM = 2,0,16,0 %;          !  number of JABs
 
!*** MODULE $CJLDEF ***
! ++
! 
!  CJL - Current JAB list (for tapes)
! 
!  An CJL is written when the tape is mounted again, or next reel is
!  mounted. This entry contains a full list of all JABs for all journals
!  going to this tape group
! 
! --
literal CJL$K_FIXED_LEN = 16;           !  end of fixed length portion 
literal CJL$C_FIXED_LEN = 16;           !  end of fixed length portion 
!   (1 based)
literal CJL$S_CJLDEF = 16;
macro CJL$L_LEN = 0,0,32,0 %;           !  length (in ASCII) 
macro CJL$W_TSIZE = 8,0,16,0 %;         !  entry size 
macro CJL$B_STRUCT = 10,0,8,0 %;        !  structure type 
macro CJL$W_SECTIONS = 12,0,16,0 %;     !  number of pieces this entry is broken 
!   up in
macro CJL$W_SECNUM = 14,0,16,0 %;       !  section number for this section 
 
!*** MODULE $OPTDEF ***
! ++
! 
!  OPT - Open tape entry
! 
!  An open-tape entry is written when the tape is mounted again.
! 
! --
literal OPT$K_LENGTH = 20;              !  end of fixed length portion 
literal OPT$C_LENGTH = 20;              !  end of fixed length portion 
literal OPT$S_OPTDEF = 20;
macro OPT$L_LEN = 0,0,32,0 %;           !  length (in ASCII) 
macro OPT$W_TSIZE = 8,0,16,0 %;         !  entry size 
macro OPT$B_STRUCT = 10,0,8,0 %;        !  structure type 
macro OPT$Q_TIME = 12,0,0,0 %;
literal OPT$S_TIME = 8;                 !  time 
 
!*** MODULE $RHDDEF ***
! ++
! 
!  RHD - Reel header
! 
!  A reel header is written to the start of each reel
!  A new reel may first get a few buffers that were still being written
!  to the previous reel while EOT was passed.
! 
! --
literal RHD$M_BI = 1;
literal RHD$M_AI = 2;
literal RHD$M_AT = 4;
literal RHD$M_SPOOL = 1;
literal RHD$K_LENGTH = 60;              !  end of fixed length portion 
literal RHD$C_LENGTH = 60;              !  end of fixed length portion 
literal RHD$S_RHDDEF = 60;
macro RHD$L_LEN = 0,0,32,0 %;           !  length (ASCII) 
macro RHD$L_JNLID = 4,0,32,0 %;         !  journal ID 
macro RHD$W_TSIZE = 8,0,16,0 %;         !  entry size 
macro RHD$B_STRUCT = 10,0,8,0 %;        !  structure type 
macro RHD$W_COPIES = 12,0,16,0 %;       !  total number in group 
macro RHD$W_NUMBER = 14,0,16,0 %;       !  number of this copy in group 
macro RHD$L_REELNUM = 16,0,32,0 %;      !  number of reel in volume set 
macro RHD$L_UIC = 20,0,32,0 %;          !  UIC of owner of group 
macro RHD$W_PROT = 24,0,16,0 %;         !  protection mask for group 
macro RHD$W_MAX_JNLS = 28,0,16,0 %;     !  maximum number of journals allowed 
macro RHD$W_TYPES = 30,0,16,0 %;        !  journal types allowed on tape 
macro RHD$V_BI = 30,0,1,0 %;
macro RHD$V_AI = 30,1,1,0 %;
macro RHD$V_AT = 30,2,1,0 %;
macro RHD$T_GRPNAM = 32,0,0,0 %;
literal RHD$S_GRPNAM = 13;              !  group name (counted ASCII) 
macro RHD$L_STATUS = 48,0,32,0 %;       !  status 
macro RHD$V_SPOOL = 48,0,1,0 %;         !  a spool file is used for this group. 
macro RHD$Q_INITTIME = 52,0,0,0 %;
literal RHD$S_INITTIME = 8;             !  time at which tape reel was first written 
