	.TITLE	SYSCOMMON DATA BASES
	.IDENT	'V04-000'
;
;****************************************************************************
;*									    *
;*  COPYRIGHT (c) 1978, 1980, 1982, 1984 BY				    *
;*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
;*  ALL RIGHTS RESERVED.						    *
;* 									    *
;*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
;*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
;*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
;*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
;*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
;*  TRANSFERRED.							    *
;* 									    *
;*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
;*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
;*  CORPORATION.							    *
;* 									    *
;*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
;*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
;* 									    *
;*									    *
;****************************************************************************
;
;++
; SYSTEM COMMON DATA BASES
;--
;
;
; AUTHOR: R. HEINEN 9-AUG-76
;
; MODIFIED BY:
;
;	V03-049	WMC0049		Wayne Cardoza		28-Aug-1984
;		New cells for tracking accvio hardware bug on 780.
;
;	V03-048	WMC0048		Wayne Cardoza		26-Aug-1984
;		Text change to pool message.
;
;	V03-047	WMC0047		Wayne Cardoza		23-Aug-1984
;		Add data area for "unable to expand pool" message
;
;	V03-046	ACG0438		Andrew C. Goldstein,	20-Jul-1984  15:49
;		Add cell for the file cache server process entry point
;
;	V03-045	ROW0386		Ralph O. Weber		 7-JUL-1984
;		Add IOC$GL_HIRT, a pointer the the Host Initiated Replacement 
;		Table, and IOC$GL_SHDW_WRK, a pointer to the shadowing work 
;		area.
;
;	V03-044	RAS0317		Ron Schaefer		27-Jun-1984
;		Add cell for the logical name system directory sequence number.
;
;	V03-043	MSH0054		Michael S. Harvey	30-May-1984
;		Remove cells related to obsolete known file database design.
;
;	V03-042	TMK0001		Todd M. Katz		27-Apr-1984
;		Cleanup the logical name portion of the system common data base
;		as follows:
;
;		1. Remove the data definition for $LOGDEF.
;		2. Remove the logical name table address table and the logical
;		   name table variables that were utilized only under the old 
;		   logical name design. 
;		3. Under the old logical name design there were two logical name
;		   mutexes, one for the group name table and the other for the 
;		   system name table. Under the new logical name design only a
;		   single mutex is required. Eliminate the unnecssary mutex and
;		   change the name of the remaining mutex from LOG$AL_MUTEX to
;		   LNM$AL_MUTEX.
;
;	V03-041	JEJ0012		J E Johnson		25-Mar-1984
;		Add exec mode writable cell for global buffer quota count.
;
;	V03-040	ACG0413		Andrew C. Goldstein,	22-Mar-1984  18:48
;		Add cell for PID of file server process; remove CIA$GL_SUSPECT
;
;	V03-039	SRB0117		Steve Beckhardt		17-Mar-1984
;		Added yet another cell for distributed deadlock detection:
;		LCK$GQ_BITMAP_EXPLCL (local expiration time).
;		Also added LCK$GB_REBLD_STATE (was in REBLDLOCK).
;
;	V03-038	LMP0205		L. Mark Pilant,		7-Mar-1984  11:21
;		Move EXE$GL_DYNAMIC_FLAGS and EXE$GL_STATIC_FLAGS to
;		SYSPARAM.
;
;	V03-037	SRB0114		Steve Beckhardt		22-Feb-1984
;		Added cell LCK$GQ_BITMAP_EXP to hold the distributed
;		deadlock detection bitmap expiration timestamp.  Also
;		deleted LCK$GL_DIRSYSCSID and LCK$GL_RQSEQNM and other 
;		cells that are no longer used.
;
;	V03-036	LMP0190		L. Mark Pilant,		6-Feb-1984  9:09
;		Add a mutex for synchronizing ACL modifications.
;
;	V03-035	LJK0260		Lawrence J. Kenah	5-Feb-1984
;		Add hooks for exception handling by instruction emulators.
;
;	V03-034	RSH0098		R. Scott Hanna		03-Feb-1984
;		Change the allocation size symbol for the security alarm
;		and journal vectors from NSA$S_EVT to NSA$K_EVT_LENGTH.
;
;	V03-033	MSH0004		Michael S. Harvey	1-Feb-1984
;		Now that local memory and PFN-mapped GSDs are variable
;		length, remove the GSD lookaside list.
;
;	V03-032	WMC0002		Wayne Cardoza		27-Jan-1984
;		New field for size of XQP DZRO.
;
;	V03-031	LJK0257		LAWRENCE J. KENAH	28-DEC-1983
;		Add listhead for PQB lookaside list.
;
;	V03-030	LMP0177		L. Mark Pilant,		7-Dec-1983  11:19
;		Add three new longwords to (eventually) replace
;		EXE$GL_FLAGS.  They are:
;			EXE$GL_DYNAMIC_FLAGS - Dynamic (SYSGEN) flags
;			EXE$GL_STATIC_FLAGS - Static (SYSGEN) flags
;			EXE$GL_STATE_FLAGS - State of the system flags
;
;	V03-029	SRB0105		Steve Beckhardt		11-Nov-1983
;		Added LCK$GB_HTBLSHFT and LCK$GL_DIRVEC.
;
;	V03-028	GAS0180		Gerry Smith		12-Sep-1983
;		Make a mutex for the CIA blocks.
;
;	V03-027	GAS0177		Gerry Smith		 1-Sep-1983
;		Make the CIA listheads global.  It's been a long week...
;
;	V03-026	ROW0199		Ralph O. Weber		29-JUL-1983
;		Add listheads for singly linked CDDB lists, one each for disk 
;		class driver CDDBs and tape class driver CDDBs.
;
;	V03-025	GAS0151		Gerry Smith		 6-Jul-1983
;		Add listheads for the Compound Intrusion Analysis
;		queues, lists of suspected and known intruders.
;		Also change the default for LCK$GB_STALLREQS to -1
;		for Steve B.
;
;	V03-024	LJK0212		Lawrence J. Kenah	23-Jun-1983
;		Add cell called EXE$GL_KNOWN_FILES as listhead for new
;		known file lists. Change lock name for known files.
;
;	V03-023	GAS0139		Gerry Smith		21-Jun-1983
;		Add the system password.
;
;	V03-022 RSH0036		R. Scott Hanna		16-Jun-1983
;		Add comment stating that the security auditing journal
;		and alarm vectors must remain contiguous and in the
;		current order.
;
;	V03-021	LJK0207		Lawrence J. Kenah	26-May-1983
;		Add cells for known file data base lock name and lock ID
;		of system owned lock for the system ID.
;
;	V03-020	WMC0002		Wayne Cardoza		19-May-1983
;		Add fields to control XQP merge.
;		Correct rights list for ACG.
;
;	V03-019	KDM0044		Kathleen D. Morse	03-May-1983
;		Move EXE$GL_ARCHFLAGS to SYSPARAM and truncate name to
;		fifteen characters.
;
;	V03-018 RSH0015		R. Scott Hanna		29-Apr-1983
;		Increased size and renamed the security auditing journal
;		and alarm vectors.
;
;	V03-017	KDM0042		Kathleen D. Morse	27-Apr-1983
;		Added EXE$GL_ARCHFLAGS.
;
;	V03-016	SRB0079		Steve Beckhardt		26-Apr-1983
;		Changed name fo cell LCK$GL_DIRSYSCSB to LCK$GL_DIRSYSCSID.
;
;	V03-015	ROW0176		Ralph O. Weber		 4-APR-1983
;		Add listhead for fork-and-wait executive service work queue, 
;		EXE$GL_FKWAITFL and EXE$GL_FKWAITBL.
;
;	V03-014 RSH0010		R. Scott Hanna		12-Mar-1983
;		Added NSA$GQ_AUDITVEC and NSA$GQ_ALARMVEC
;
;	V03-013	SRB0069		Steve Beckhardt		9-Mar-1983
;		Added cell LCK$GL_RQSEQNM.
;
;	V03-012	ACG0318		Andrew C. Goldstein,	8-Mar-1983  19:42
;		Add listhead for system rights list (EXE$GQ_RIGHTSLIST)
;
;	V03-011	WMC0001		Wayne Cardoza		08-Mar-1983
;		Add EXE$GQ_BOOTTIME
;
;	V03-010	SRB0065		Steve Beckhardt		21-Jan-1983
;		Added cell LCK$GB_STALLREQS
;
;	V03-009	STJ3050		Steven T. Jeffreys	10-Jan-1983
;		Added support for erase qio.  This includes the longword
;		pointers EXE$GL_ERASEPB and EXE$GL_ERASEPPT.
;
;	V03-008	DMW4021		DMWalp			30-Dec-1983
;		Added logical name system directory
;
;	V03-007	SRB0057		Steve Beckhardt		15-Dec-1982
;		Added cell LCK$GL_DIRSYSCSB for distributed lock manager.
;
;	V03-006 DMW4007		DMWalp			12-Nov-1982
;		Added definations for new logical name structure.
;
;	V03-005	TCM0001		Trudy C. Matthews	12-Oct-1982
;		Add global symbol EXE$GL_UBDELAY, which is the number of
;		times to execute a SOBGTR loop in order to delay 3 usec.
;		Used by the TIMEWAIT macro.
;
;	V03-004	PHL0101		Peter H. Lipman		21-Jun-1982
;		Add global symbol definition for EXE$C_SYSEFN, the
;		common system event flag used by various system
;		invocations of system services.
;
;	V03-003	PHL0042		Peter H. Lipman		02-Apr-1982
;		Add EXE$GQ_BOOTCB_D cell in front of EXE$GL_BOOTCB
;		forming a descriptor for the portion of the Boot Control
;		Block to be checksummed.
;
;	V03-002	ROW0074		Ralph O. Weber		26-MAR-1982
;		Enhance the infinite-due-time TQE, already used to mark the 
;		end of the TQE queue, to be a canonical TQE with the repeat 
;		bit off (TEQ$V_REPEAT).  Give this enhanced block a global 
;		name, EXE$AL_TQENOREPT, which routines not desiring to repeat 
;		a timer call can use to place the address of the canonical TQE 
;		in R5 before returning EXE$SWTIMINT thus ensuring no repeating 
;		of the timer call.
;
;	V03-001	PHL0040		Peter H. Lipman		21-Mar-1982
;		Add EXE$GL_SAVEDUMP to record the number of blocks
;		of dump file saved in the page file.  This is the 
;		number of blocks to be released to the page file
;		when the dump has been saved/analyzed.
;
;
; MACRO LIBRARY CALLS
;
	$ACMDEF				; DEFINE ACCOUNTING MANAGER OFFSETS
	$CADEF				; DEFINE CONDITIONAL ASSEMBLY PARAMETERS
	$DYNDEF				; DEFINE DATA STRUCTURE CODES
	$FKBDEF				; DEFINE FORK BLOCK OFFSETS
	$IPLDEF				; DEFINE INTERRUPT PRIORITIES
	$IRPDEF				; DEFINE IO REQUEST PACKET STRUCTURE
	$NSAEVTDEF			; DEFINE SECURITY AUDITING EVENT VECTOR
	$SGNDEF				; DEFINE SYSGEN VALUES
	$TQEDEF				; DEFINE TQE OFFSETS
	$TTYDEF				; TWP
	$WCBDEF				; DEFINE WCB OFFSETS

;
; MACRO DEFINITIONS:
;

	.MACRO	TIME
	.LONG	0			;
	.LONG	^X859034		; HIGH ORDER BITS OF TIME
	.ENDM	TIME
;
; EQUATED SYMBOLS:
;
; THE SYSTEM EVENT FLAG IS USED BY VARIOUS SYSTEM ROUTINES THAT NEED AN
; EVENT FLAG TO CALL A SYSTEM SERVICE.  IN ALL CASES THE SPURIOUS SETTING
; OF THIS EVENT FLAG WILL NOT DISRUPT THE PROPER EXECUTION OF THE GIVEN
; ROUTINE SINCE THE IOSB WILL ACTUALLY DETERMINE THAT THE SERVICE HAS COMPLETED
;
	EXE$C_SYSEFN == 31		; COMMON SYSTEM EVENT FLAG
 
	.PAGE
	.SBTTL	SYSCOMMON
 
	.PSECT	$$$260,QUAD,WRT
;+
; SYSTEM COMMON DATA BASES
;
; SYSTEM FLAGS LONG WORD
;
; NOTE: THE ACTUAL DEFAULT SETTING FOR EXE$GL_FLAGS IS IN SYSPARAM IN
;	CELL EXE$GL_DEFFLAGS AND IS COPIED INTO THE WORKING LOCATION,
;	EXE$GL_FLAGS BY INIT.
;
EXE$GL_FLAGS::
	.LONG	0			; SYSTEM CONTROL FLAGS

EXE$GL_STATE_FLAGS::
	.LONG	0			; STATE OF THE SYSTEM CONTROL FLAGS

;
; ERROR LOG MAILBOX CONTROL
;
EXE$GQ_ERLMBX::				;
	.WORD	0			; UNIT NUMBER (0 => NONE)
	.WORD	0			; RESERVED
	.LONG	0			; PID OF ASSIGNER


;
;	VECTORS FOR INTERCEPT OF EXCEPTION DISPATCHING
;
EXE$GL_VAXEXCVEC::
	.LONG	0
EXE$GL_FPEXCVEC::
	.LONG	0

;
;	VECTORS TO USER SUPPLIED CHANGE MODE HANDLERS
;
EXE$GL_USRCHMK::			; VECTOR TO USER SUPPLIED CHANGE MODE
	.LONG	0			; TO KERNEL HANDLER
EXE$GL_USRCHME::			; VECTOR TO USER SUPPLIED CHANGE MODE
	.LONG	0			; TO EXECUTIVE HANDLER

;
; FORK QUEUE LISTHEADS
;
 
	.ALIGN	QUAD
SWI$GL_FQFL::				; FORWARD LINK
A:	.LONG	A			; IPL-6 LISTHEAD
SWI$GL_FQBL::				; BACKWARD LINK
	.LONG	A			;
2$:	.LONG	2$,2$			; IPL-7 LISTHEAD
3$:	.LONG	3$,3$			; IPL-8 LISTHEAD
4$:	.LONG	4$,4$			; IPL-9 LISTHEAD
5$:	.LONG	5$,5$			; IPL-10 LISTHEAD
6$:	.LONG	6$,6$			; IPL-11 LISTHEAD

;
; FORK-AND-WAIT WORK QUEUE LISTHEAD
;

EXE$GL_FKWAITFL::
	.LONG	EXE$GL_FKWAITFL
EXE$GL_FKWAITBL::
	.LONG	EXE$GL_FKWAITFL
 
;
; LOGICAL NAME DIRECTORY AND HASH TABLE ADDRESSING POINTERS.
;
; NOTE: THE INDIRECTION TO BOTH PROCESS-PRIVATE AND SHAREABLE NAME SPACES IS
;	REQUIRED SO THAT THE CODE THAT ACCESSES BOTH NAME SPACES CAN BE 
;	SYMMETRICAL AND SIMPLE.  
;
 
LNM$AL_HASHTBL::			; HASH TABLE ADDRESSING POINTERS
	.LONG	30$			; INDIRECT PTR TO SHAREABLE HASH TABLE
	.LONG	CTL$GL_LNMHASH		; INDIRECT PTR TO PROCESS HASH TABLE
30$:	.LONG	0			; DIRECT POINTER TO SHAREABLE HASH TABLE

LNM$AL_DIRTBL::				; DIRECTORY TABLE ADDRESSING POINTERS
	.LONG	40$			; INDIRECT PTR TO SYSTEM DIRECTORY TABLE
	.LONG	CTL$GL_LNMDIRECT	; INDIRECT PTR TO PROCESS DIRECTORY TABLE
40$:	.LONG	LNM$SYSTEM_DIRECTORY	; DIRECT POINTER TO SYSTEM DIRECTORY TABLE

;
; LOGICAL NAME MUTEX.
;
 
LNM$AL_MUTEX::				; LOGICAL NAME MUTEX
	.WORD	-1,0
 
;
; LOGICAL NAME SYSTEM DIRECTORY SEQUENCE NUMBER
;

LNM$GL_SYSDIRSEQ::
	.LONG	0			; SYSTEM DIRECTORY MODIFICATION COUNTER

;
; ADDRESS OF SYSTEM BOOT DEVICE UCB AND DEFAULT DEVICE
;
 
EXE$GL_SYSUCB::				; SYSTEM DEVICE UCB ADDRESS
	.LONG	0			;
FIL$GT_DDDEV::				; FILE READ DEFAULT DEVICE STRING
	.ASCIC	/SYS$SYSDEVICE/		; LOGICAL NAME STRING
FIL$GT_TOPSYS::				; ASCIC TOP LEVEL DIR STRING
	.BLKB	10			; FILLED IN BY INIT WITH STRING
					; FROM VMB AND SYSBOOT
	.ALIGN	LONG
FIL$GQ_CACHE::				; FILE READ CACHE DESCRIPTOR
	.BLKQ	1			;
EXE$GQ_BOOTCB_D::			; DESCRIPTOR FOR BOOT CONTROL BLOCK
	.BLKQ	1			; BYTE COUNT TO BE CHECKSUMMED
EXE$GL_BOOTCB == EXE$GQ_BOOTCB_D+4	; ADDRESS OF BOOT CONTROL BLOCK

EXE$GL_SAVEDUMP::			; BLOCK COUNT TO RELEASE TO PAGE FILE
	.BLKL	1			; WHEN DUMP IN PAGE FILE IS COPIED
 
;
; POINTERS TO A PREALLOCATED ERASE PATTERN BUFFER (EPB) AND
; PSUEDO PAGE TABLE (PPT) THAT MAPS IT.  BOTH ARE ALLOCATED
; AT SYSTEM BOOT TIME BY INIT.
;

EXE$GL_ERASEPB::			; ADDRESS OF A PAGE-ALIGNED EPB OF ZEROS
	.LONG	0			; 	FILLED IN BY INIT

EXE$GL_ERASEPPT::			; ADDRESS OF A PPT THAT MAPS THE EPB
	.LONG	0			;	FILLED IN BY INIT

;
; I/O DONE PACKET QUEUE
;
 
	.ALIGN	QUAD
IOC$GL_PSFL::				;
B:	.LONG	B			; FORWARD LINK
IOC$GL_PSBL::				;
	.LONG	B			; BACKWARD LINK
 
;
; I/O PACKET LOOK ASIDE LISTHEAD
;
 
IOC$GL_IRPFL::				;
	.LONG	IOC$GL_IRPFL		;
IOC$GL_IRPBL::				;
	.LONG	IOC$GL_IRPFL		;
IOC$GL_IRPREM::
	.LONG	0			; Address of partial packet
IOC$GL_IRPCNT::				; 
	.LONG	0			; Current count of allocated packets
IOC$GL_IRPMIN::				; Minimum size to take from list
	.LONG	<<IRP$C_LENGTH*2>/3>



;
; SMALL REQUEST PACKET LOOK ASIDE LISTHEAD AND DATA BASE
;

IOC$GL_SRPFL::				;
	.LONG	IOC$GL_SRPFL		;
IOC$GL_SRPBL::				;
	.LONG	IOC$GL_SRPFL		;
IOC$GL_SRPSIZE::			;
	.LONG	0			;
IOC$GL_SRPMIN::				;
	.LONG	0			;
IOC$GL_SRPSPLIT::			;
	.LONG	0			;
IOC$GL_SRPREM::				;
	.LONG	0			; Address of packet remainder
IOC$GL_SRPCNT::				;
	.LONG	0			; Current count of allocated packets

;
; LARGE REQUEST PACKET LOOK ASIDE LISTHEAD AND DATA BASE
;

IOC$GL_LRPFL::				;
	.LONG	IOC$GL_LRPFL		;
IOC$GL_LRPBL::				;
	.LONG	IOC$GL_LRPFL		;
IOC$GL_LRPSIZE::			;
	.LONG	0			;
IOC$GL_LRPMIN::				;
	.LONG	0			;
IOC$GL_LRPSPLIT::			;
	.LONG	0			;
IOC$GL_LRPREM::				;
	.LONG	0			; Address of packet remainder
IOC$GL_LRPCNT::				;
	.LONG	0			; Current count of allocated packets
;
; FORK BLOCK TO USE FOR POOL EXPANSION
;
IOC$GL_POOLFKB::
	.LONG	0,0			; Flink, Blink
	.WORD	FKB$C_LENGTH		; Size
	.BYTE	DYN$C_FRK		; Type
	.BYTE	IPL$_QUEUEAST		; Fork IPL (6)
	.LONG	0			; Fork PC
	.LONG	0			; Fork R3
	.LONG	0			; Fork R4
IOC$GL_PFKBINT::			;
	.LONG	0			; Fork block interlock 0 => free

;
; LISTHEAD FOR PQB LOOKASIDE LIST USED DURING PROCESS CREATION
;

EXE$GL_PQBFL::
	.ADDRESS	EXE$GL_PQBFL
EXE$GL_PQBBL::
	.ADDRESS	EXE$GL_PQBFL

;
;
; SYSTEM AQB LISTHEAD
;
IOC$GL_AQBLIST::
	.LONG	0			; SINGLE LINK, EMPTY
;
; SYSTEM-WIDE MOUNTED VOLUME LIST
;
IOC$GQ_MOUNTLST::
	.LONG	.
	.LONG	.-4
;
; TERMINAL BROADCAST MESSAGE LIST HEAD
;
IOC$GQ_BRDCST::				;
1$:	.LONG	1$,1$			; EMPTY

;
; SINGLY LINKED LIST OF CRB'S TO SCAN FOR TIMEOUTS
;
IOC$GL_CRBTMOUT::
	.LONG	0			; EMPTY

;
; SINGLY LINKED LIST OF CDDBs FOR DISK CLASS DRIVER CONNECTIONS
;
IOC$GL_DU_CDDB::
	.LONG	0
;
; SINGLY LINKED LIST OF CDDBs FOR TAPE CLASS DRIVER CONNECTIONS
;
IOC$GL_TU_CDDB::
	.LONG	0

;
; Pointer to Host Initiated Replacement Table
; (used by some MSCP disks)
;
IOC$GL_HIRT::
	.LONG	0

;
; Pointer to area used for processing shadow set generation number comparisons.
;
IOC$GL_SHDW_WRK::
	.LONG	0

;
; GROUP GLOBAL SECTION DESCRIPTOR LIST HEAD
;

EXE$GL_GSDGRPFL::			; FORWARD LINK
	.LONG	.
EXE$GL_GSDGRPBL::			; BACKWARD LINK
	.LONG	.-4

;
; SYSTEM GLOBAL SECTION DESCRIPTOR LIST HEAD
;

EXE$GL_GSDSYSFL::			; FORWARD LINK
	.LONG	.
EXE$GL_GSDSYSBL::			; BACKWARD LINK
	.LONG	.-4

;
; GLOBAL SECTION DESCRIPTOR DELETE PENDING LIST
;

EXE$GL_GSDDELFL::			; FORWARD LINK
	.LONG	.
EXE$GL_GSDDELBL::			; BACKWARD LINK
	.LONG	.-4

;
; WINDOW CONTROL BLOCK DELETE QUEUE - GLOBAL SECTION WINDOWS ARE
;	PLACED HERE WHEN THE SECTION IS DELETED. THEY ARE THEN
;	REMOVED FROM THIS QUEUE AND DEACCESSED.
;

EXE$GL_WCBDELFL::			; FORWARD LINK
	.LONG	.
EXE$GL_WCBDELBL::			; BACKWARD LINK
	.LONG	.-4

;
; SYSTEM WINDOW CONTROL BLOCK LIST - ALL WINDOWS CRAFTED BY MMG$INIWCB
;	AND INIT ARE PLACED HERE.
;

EXE$GL_SYSWCBFL::
	.LONG	.			; FORWARD LINK
EXE$GL_SYSWCBBL::
	.LONG	.-4			; BACKWARD LINK

;
; SYSTEM-WIDE RIGHTS LIST DESCRIPTOR. THIS DESCRIPTOR IS USED TO POINT
; TO A RIGHTS LIST SEGMENT COMMON TO ALL PROCESSES IN THE SYSTEM, TO
; ALLOW IDENTIFIERS TO BE GRANTED TO THE SYSTEM AS A WHOLE.
;

EXE$GQ_RIGHTSLIST::
	.LONG	0,0			; NULL DESCRIPTOR, NO FLAG SET

;
; TIMER PERFORMANCE STATISTICS
;

	.IF NE	CA$_MEASURE		; CHECK FOR MEASUREMENT ENABLED

	.ALIGN	LONG
PMS$GL_KERNEL::				; TIME IN KERNEL MODE
	.LONG	0
PMS$GL_EXEC:				; TIME IN EXECUTIVE MOVE
	.LONG	0
PMS$GL_SUPER:				; TIME IN SUPERVISOR MODE
	.LONG	0
PMS$GL_USER:				; TIME IN USER MODE
	.LONG	0
PMS$GL_INTER:				; TIME ON INTERRUPT STACK
	.LONG	0
PMS$GL_COMPAT::				; TIME IN COMPATIBILITY MODE
	.LONG	0

	.ENDC

;
; SYSTEM ABSOLUTE TIME IN SECONDS
;
 
	.ALIGN	LONG
EXE$GL_ABSTIM::				; ABSOLUTE TIME IN SECONDS
	.LONG	0			;
 
;
; SYSTEM ABSOLUTE TIME IN NANOSECONDS
;
 
	.ALIGN	QUAD
EXE$GQ_SYSTIME::			; SYSTEM ABSOLUTE TIME IN NANOSECONDS
	TIME				; QUAD WORD OF INITIAL TIME
;
; SYSTEM BOOT TIME
;
EXE$GQ_BOOTTIME::			; EXE$GQ_TODCBASE AT LAST BOOT
	.LONG	0,0
 
EXE$GL_PFAILTIM::			; TODR AT POWER FAIL 
	.LONG	0			;
EXE$GL_PFATIM::				; DURATION OF LAST POWER FAILURE
	.LONG	0			; IN .01 SECOND UNITS FOR POWER FAIL
					; AST.

;
; TIME DEPENDENT SCHEDULER REQUEST QUEUE
;
 
	.ALIGN	QUAD
EXE$GL_TQFL::				; FORWARD LINK OF TIME QUEUE LISTHEAD
	.LONG	DEVICETIM		; LINK TO DEVICE TIME OUT ENTRY
EXE$GL_TQBL:				; BACK LINK OF TIME QUEUE LISTHEAD
	.LONG	PERMENTRY		; LINK TO PERMENENT ENTRY
 
;
; DEVICE TIME OUT TIME QUEUE ENTRY
;
 
	.ALIGN	QUAD
DEVICETIM:				; DEVICE TIME OUT TIME QUEUE ENTRY
	.LONG	PERMENTRY		; FORWARD LINK TO PERMANENT ENTRY
	.LONG	EXE$GL_TQFL		; BACK LINK TO LISTHEAD
	.WORD	0			; SIZE OF ENTRY
	.BYTE	DYN$C_TQE		; TYPE OF DATA STRUCTURE
	.BYTE	TQE$C_SSREPT		; REQUEST TYPE OF ENTRY
	.LONG	EXE$TIMEOUT		; PC OF SYSTEM SUBROUTINE
	.LONG	IOC$GL_DEVLIST		; ADDRESS OF I/O DATA BASE LISTHEAD
	.BLKL	1			; ONE UNUSED LONGWORD
	TIME				; QUAD WORD OF EXPIRATION TIME
	.LONG	100000*100		; DELTA REPEAT TIME OF 1 SECOND
	.LONG	0			;
 
;
; PERMANENT TIME QUEUE ENTRY
;
 
	.ALIGN	QUAD
EXE$AL_TQENOREPT::			; Global name of canonical, no repeat,
					; timer queue entry
PERMENTRY:				; PERMENENT TIME QUEUE ENTRY
	.LONG	EXE$GL_TQFL		; FORWARD LINK TO LISTHEAD
	.LONG	DEVICETIM		; BACK LINK TO DEVICE TIME OUT ENTRY
	.WORD	0			; SIZE OF ENTRY
	.BYTE	DYN$C_TQE		; TYPE OF DATA STRUCTURE
					; This TQE cannot repeat.
	.BYTE	TQE$C_TMSNGL & <^CTQE$M_REPEAT> ; REQUEST TYPE OF ENTRY
	.BLKL	3			; THREE UNUSED LONGWORDS
	.LONG	^X0FFFFFFFF		; INFINITY EXPIRATION TIME
	.LONG	^X0FFFFFFFF		;
 

;
; IOC DATA BASE MUTEX
;

IOC$GL_MUTEX::				; MUTEX FOR IOC DATA BASE
	.WORD	-1			; INITIAL COUNT OF -1
	.WORD	0			; ALL FLAGS CLEARED
 

;
; COMMON EVENT LIST MUTEX
;
 
EXE$GL_CEBMTX::				; MUTEX FOR COMMON EVENT CLUSTER LIST
	.WORD	-1			; INITIAL COUNT OF -1
	.WORD	0			; ALL FLAGS CLEARED
 
;
; DYNAMIC PAGED MEMORY MUTEX
;
 
EXE$GL_PGDYNMTX::			; PAGED DYNAMIC MEMORY MUTEX
	.WORD	-1			; INITIAL COUNT OF -1
	.WORD	0			; ALL FLAGS CLEAR
;
; GLOBAL SECTION DESCRIPTOR TABLE MUTEX
;

EXE$GL_GSDMTX::				; GLOBAL SECTION DESCRIPTOR MUTEX
	.WORD	-1			; INITIAL COUNT OF -1
	.WORD	0			; ALL FLAGS CLEAR

;
; SHARED MEMORY GLOBAL SECTION DESCRIPTOR TABLE MUTEX
;

EXE$GL_SHMGSMTX::			; SHARED MEMORY GLOBAL SECTION DSC MUTEX

	.WORD	-1			; INITIAL COUNT OF -1
	.WORD	0			; ALL FLAGS CLEAR

;
; SHARED MEMORY MAILBOX TABLE MUTEX
;

EXE$GL_SHMMBMTX::			; SHARED MEMORY MAILBOX TABLE MUTEX

	.WORD	-1			; INITIAL COUNT OF -1
	.WORD	0			; ALL FLAGS CLEAR

;
; ENQUEUE/DEQUEUE TABLES MUTEX
;

EXE$GL_ENQMTX::				; ENQUEUE/DEQUEUE TABLES MUTEX
	.WORD	-1			; INITIAL COUNT OF -1
	.WORD	0			; ALL FLAGS CLEAR

;
; ACL MODIFICATION MUTEX
;

EXE$GL_ACLMTX::				; ACL MODIFICATION MUTEX
	.WORD	-1			; INITIAL COUNT OF -1
	.WORD	0			; ALL FLAGS CLEAR

;
; LOCK ID FOR SYSTEM ID LOCK
;
; WHEN THE SYSTEM IS BOOTED, A SYSTEM-OWNED LOCK WITH A NAME EQUAL TO THE
; SYSTEM ID IS TAKEN OUT BY SYSINIT FOR EXCLUSIVE ACCESS. SYSTEM-WIDE LOCKS
; THAT ARE LOCAL TO A NODE AND WISH TO AVOID UNNECESSARY CI TRAFFIC SHOULD
; BE SUB LOCKS WITH THE CONTENTS OF THIS CELL AS THE PARENT LOCK.
;

EXE$GL_SYSID_LOCK::
	.LONG	0			; START WITH NO PARENT LOCK ID

;
; KNOWN FILE TABLE DATA
;

EXE$GL_KNOWN_FILES::			; POINTER TO KNOWN FILE ENTRY
	.LONG	0			;  HASH TABLE

KFE_LOCK_NAME:
	.ASCII	"INSTALL$"		; FACILITY NAME FOR INSTALL UTILITY
	.ASCII	"KNOWN FILE"		; SOME DESCRIPTIVE TEXT
KFE_LOCK_NAME_SIZE = . - KFE_LOCK_NAME

	.ALIGN	LONG

EXE$GQ_KFE_LCKNAM::
	.LONG		KFE_LOCK_NAME_SIZE
	.ADDRESS	KFE_LOCK_NAME

;
; GLOBAL PAGE TABLE
;

EXE$GL_GPT::
	.LONG	0			; ADDRESS OF FIRST FREE GLOBAL PTE
					; SETUP BY INIT
	.LONG 	0			; NO BYTES IN BLOCK
 
;
; SYSTEM VERSION NUMBER
;
SYS$GQ_VERSION::			;
	.LONG	SYS$K_VERSION
	.ASCII	/    /
 
	.ALIGN	LONG

;
; JOB CONTROLLER DATA CELLS
;
SYS$GW_IJOBCNT::	.WORD	0	; CURRENT COUNT OF INTERACTIVE LOGINS
SYS$GW_NJOBCNT::	.WORD	0	; CURRENT COUNT OF NETWORK LOGINS
SYS$GW_BJOBCNT::	.WORD	0	; CURRENT COUNT OF BATCH LOGINS

;
; PROCESS INDEX OF NEXT PROCESS TO CHECK FOR PRIORITY BOOST
;
EXE$GW_SCANPIX::	.WORD	2	; START AFTER SWAPPER AND NULL
	.ALIGN	LONG
 
;
; ADDRESS OF SYSTEM-WIDE MESSAGE SECTION
;
EXE$GL_SYSMSG::		.LONG	0	; ADDRESS OF SYSTEM-WIDE MESSAGES

;
; ADDRESS OF SYSTEM-WIDE USER RUNDOWN SERVICE VECTOR
;
EXE$GL_USRUNDWN::
	.LONG	0			; VECTOR FOR SYSTEM-WIDE RUNDOWN

	.ALIGN	QUAD
;
; DYNAMIC STORAGE REGION - NONPAGED
;
 
	.PSECT	$$$260,QUAD,WRT
EXE$GL_NONPAGED::			;
	.LONG	11			; DISABLE ALL FORK INTERRUPTS
	.LONG	0			; ADDRESS OF FIRST FREE BLOCK 
	.LONG	0			; NO BYTES IN BLOCK
EXE$GL_SPLITADR::			; LOOKASIDE I/O PACKET LIST SPLIT ADDRESS
	.LONG	0			; ADDRESS OF FIRST FREE BLOCK
 
 
;
; DYNAMIC STORAGE REGION - PAGED
;
 
	.PSECT	$$$260,QUAD,WRT
EXE$GL_PAGED::				;
	.LONG	0			; ADDRESS OF FIRST FREE BLOCK
	.LONG	0			; NO BYTES IN BLOCK
 
 
;
; POINTER TO RMS SHARED FILE DATA BASE
;
RMS$GL_SFDBASE::			; POINTER TO SHARED FILE DATA BASE
	.LONG	0			; INITIALLY EMPTY

;
; SHARED MEMORY CONTROL BLOCK LISTHEAD
;
EXE$GL_SHBLIST::			; SHARED MEMORY CONTROL BLOCKS
	.LONG	0

;
; Address of the realtime control block that describes and contains the
; bit map of SPTs used in connect to interrupt requests.
;

EXE$GL_RTBITMAP::			; Realtime SPT bit map.
	.LONG	0

;
; Cells for Machine Check recovery block
;
 
	.PSECT	$$$260,QUAD,WRT
 
MCHK$GL_MASK::
	.LONG	0			; Function mask for current recovery block
MCHK$GL_SP::
	.LONG	0			; Saved SP for return at end of block
					; 0 (zero) if no current recovery block
;
; CPU error counts
;
EXE$GL_MCHKERRS::
	.LONG	0			; Count of machine checks since boot
EXE$GL_MEMERRS::
	.LONG	0			; Count of memory errors since boot

; 
; Cell to count unexpected DW780 Unibus Adapter interrupts through vector 0
; 
IO$GL_UBA_INT0::
	.LONG	0			; Counter for UBA interrups thru vector 0
; 
; PFN of page used to remap virtual address of powerfailed adapters to
; 
EXE$GL_BLAKHOLE::
	.LONG	0			; Page to use for anything you don't care about

;
; Cell for counting unexpected interrupts through SCB NEXUS vector 0 and
; through SCB vector 0.
;
IO$GL_SCB_INT0::
	.LONG	0			; Counter for unexpected SCB interrupts
;
; Cell for initial value for wait loop counter, replacing use of hardware
; interval timer in device drivers.  Used by system macro $TIMEWAIT.
;
EXE$GL_TENUSEC::
	.LONG	0			; No. of times loop executes in 10 u-sec.
;
; Cell for delay loop counter, used to introduce a 3 microsecond delay into
; the bit test loop in the TIMEWAIT macro.
;
EXE$GL_UBDELAY::
	.LONG	0			; # of times to loop to delay 3 usec.
;
; Pointer to MP code, that is loaded into pool.
;
EXE$GL_MP::
	.LONG	0			; Pointer to MP code
;
; Site specific cell that can be used by users to contain the address of
; allocated regions of pool or anything else they need.
;
EXE$GL_SITESPEC::			; Site specific longword
	.LONG	0
;
; Address of top of interrupt stack (i.e. limit of stack)
;
EXE$GL_INTSTKLM::			; Top of interrupt stack
	.LONG	0
;
; Lock manager variables
;
LCK$GL_IDTBL::				; Address of lock id table
	.LONG	0
LCK$GL_NXTID::				; Next lock id to use
	.LONG	0
LCK$GL_MAXID::				; Max. lock id
	.LONG	0
LCK$GL_HASHTBL::			; Address of resource hash table
	.LONG	0
LCK$GL_HTBLCNT::			; Number of entries in hash table
	.LONG	0			; (expressed as a power of two)
LCK$GL_TIMOUTQ::			; Lock timeout queue header
	.LONG	LCK$GL_TIMOUTQ		; (used for deadlock detection)
	.LONG	LCK$GL_TIMOUTQ
LCK$GL_DIRVEC::				; Address of directory vector
	.LONG	0
LCK$GL_PRCMAP::				; Address of process bitmap
	.LONG	0			; (one bit for each process)
;
; Note the next two cells must be contiguous and in this order
;
LCK$GQ_BITMAP_EXP::			; Process bitmap expiration timestamp 
	.QUAD	0			; (exact time)
LCK$GQ_BITMAP_EXPLCL::			; Process bitmap expiration timestamp 
	.QUAD	0			; (aprrox. local time)
LCK$GB_HTBLSHFT::			; Number of entries in hash table
	.BYTE	0			; (expressed as a shift count)
LCK$GB_MAXDEPTH::
	.BYTE	0			; Maximum depth of resource names
LCK$GB_STALLREQS::			; Stall lock requests flag
	.BYTE	-1			; 	-1	Stall all requests
					;	 0	Allow normal locking
					;	 1	Allow unprot. locking
					;	 2	Allow sub-locking
LCK$GB_REBLD_STATE::
	.BYTE	-1			; Lock rebuild state:
					;	-1      Not in cluster
					;	 0      Allow normal locking
					;	 1 - 3  Various phases of rebuild

	.ALIGN	LONG

;
; DEFINE A LONGWORD THAT CONTAINS THE ACCOUNTING MANAGER CONTROL FLAGS
;
EXE$GL_ACMFLAGS::			; ACCOUNTING MANAGER CONTROL FLAGS
	.LONG	^C<1@ACM$V_IMAGE>	; ACCOUNTING ENABLED EXCEPT IMAGE

;
; RESERVE SPACE FOR THE SECURITY AUDITING JOURNAL AND ALARM BIT VECTORS.
; EACH BIT WHEN SET ENABLES JOURNALING OR ALARMS FOR A PARTICULAR CLASS
; OF SYSTEM EVENT. THESE VECTORS MUST REMAIN CONTIGUOUS AND IN THE CURRENT 
; ORDER.
;
NSA$GR_JOURNVEC::			; SECURITY JOURNALING BIT VECTOR
	.REPT	NSA$K_EVT_LENGTH
	.BYTE	0
	.ENDR
NSA$GR_ALARMVEC::			; SECURITY ALARMS BIT VECTOR
	.REPT	NSA$K_EVT_LENGTH
	.BYTE	0
	.ENDR

;
; DEFINE A LONGWORD THAT CONTAINS THE SYSTEM VIRTUAL ADDRESS OF A PTE
; (IN THE SPT) THAT MAPS THE BLAKHOLE PAGE INTO SYSTEM SPACE.
;
EXE$GL_SVAPTE::				; SVAPTE FOR PTE THAT MAPS BLAKHOLE PAGE
	.LONG	0

;
; DEFINE TWO FIELDS TO CONTOL THE MAPPING OF THE XQP INTO PROCESSES
;
XQP$GL_SECTIONS:: 			; COUNT OF GLOBAL SECTIONS
	.LONG 0
XQP$GL_DZRO::				; SIZE OF DZRO SECTION
	.LONG 0

;
; PID OF THE XQP'S CACHE SERVER PROCESS IN A CLUSTER ENVIRONMENT
;
XQP$GL_FILESERVER::			; PID OF SERVER PROCESS
	.LONG	0
XQP$GL_FILESERV_ENTRY::			; AST ENTRY POINT OF PROCESS
	.LONG	0

;
; DEFINE A QUADWORD WHICH WILL CONTAIN THE ENCRYPTED SYSTEM PASSWORD
;
SYS$GQ_PWD::				; SYSTEM PASSWORD
	.LONG 0				; INITIALLY SET TO
	.LONG 0				; ALL ZERO

;
; DEFINE A MUTEX FOR THE CIA QUEUES
;
CIA$GL_MUTEX::
	.WORD	-1			; INITIAL COUNT OF -1
	.WORD 	 0			; ALL FLAGS CLEARED

;
; DEFINE A QUEUE LISTHEAD FOR KNOWN AND SUSPECTED INTRUDERS
;
CIA$GQ_INTRUDER::
	.LONG	CIA$GQ_INTRUDER		; SET FLINK
	.LONG	CIA$GQ_INTRUDER		; SET BLINK
;
; Data structures for messages when unable to expand pool
;
	.ENABL	LSB
IOC$GT_NOPOOL_TWP::
	.LONG	-1			; Preallocated TWP
	.BLKB	TTY$K_WB_LENGTH-4
10$:	.ASCII	<13><10>/%SYSTEM-W-POOLEXPF, Pool expansion failure/<13><10>
20$:	.ALIGN	LONG
IOC$GL_POOLEXP_STS::			; Status of pool expansion	
	.WORD	0			; Status bits
	.WORD	20$-10$			; Message length
	.DSABL	LSB
;
; The following cells are used to track an accvio hardware bug in the 780/785
;
EXE$GL_BADACV_T::			; Time of the last bad accvio
	.LONG	0
EXE$GL_BADACV_C::			; Count of bad accvios
	.LONG	0
;++
;
; The following psect provides RMS with a system-wide writable area to allow
; for system quotas.  It is given the strange name $$$000RMS in order to force
; it to follow the performance monitoring psect $$$000PMS which begins the UREW
; area of S0 space.
;
; Note that currently the UREW space is defined to be exactly one page in MDAT.
; If the combined length of $$$000PMS and $$$000RMS exceed this length then the
; FCP performance/RMS datapage length entry in MDAT must be changed to reflect
; this.
;
;--


	.PSECT	$$$000RMS,QUAD,WRT

RMS$GW_GBLBUFQUO::			; Current global buffer quota remaining
	.WORD	0

	.BLKW	1			; Spare space
	.BLKL	15			;  for future use.

	.END
