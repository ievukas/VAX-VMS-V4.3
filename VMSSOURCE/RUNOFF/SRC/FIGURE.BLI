MODULE figure (	IDENT = 'V04-000'
		%BLISS32 [, ADDRESSING_MODE (EXTERNAL    = LONG_RELATIVE,
					     NONEXTERNAL = LONG_RELATIVE)]
		) =
BEGIN
!
!****************************************************************************
!*									    *
!*  COPYRIGHT (c) 1978, 1980, 1982, 1984 BY				    *
!*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
!*  ALL RIGHTS RESERVED.						    *
!* 									    *
!*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
!*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
!*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
!*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
!*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
!*  TRANSFERRED.							    *
!* 									    *
!*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
!*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
!*  CORPORATION.							    *
!* 									    *
!*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
!*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
!* 									    *
!*									    *
!****************************************************************************
!

!++
! FACILITY:	DSR (Digital Standard RUNOFF) / DSRPLUS
!
! ABSTRACT:	Processes .FIGURE and .FIGURE DEFERRED commands.
!
! ENVIRONMENT:	Transportable
!
! AUTHOR:	R.W.Friday	CREATION DATE:	May, 1978


%SBTTL 'Revision History'
! MODIFIED BY:
!
!	010	RER00010	Ron Randall	30-May-1983
!		Changed maximum number of lines user can leave for a figure
!		or deferred figure from logical page length to logical page
!		length minus any header lines and bottom-of-page lines as
!		specified in a LAYOUT command.
!
!	009	RER00009	Ron Randall	17-Mar-1983
!		For DSRPLUS:
!		Added code to handle figures in topnotes.
!
!	008	RER00008	Ron Randall	07-Mar-1983
!		Global edit of all modules. Updated module names, idents,
!		copyright dates. Changed require files to BLISS library.
!--


%SBTTL 'Module Level Declarations'
!
! TABLE OF CONTENTS:
!
FORWARD ROUTINE
    gfig	: NOVALUE;
!
! INCLUDE FILES:
!
LIBRARY 'NXPORT:XPORT';			! XPORT Library
REQUIRE 'REQ:RNODEF';			! RUNOFF variant definitions

%IF DSRPLUS %THEN
LIBRARY 'REQ:DPLLIB';			! DSRPLUS BLISS Library
%ELSE
LIBRARY 'REQ:DSRLIB';			! DSR BLISS Library
%FI

!
! EXTERNAL REFERENCES:
!
EXTERNAL
    fnct	: fnct_definition,
    gca		: gca_definition,
    hct		: hct_definition,
    ira		: FIXED_STRING,
    mra		: REF FIXED_STRING,
    numprm	: numprm_define,
    phan	: phan_definition,
    tsf		: tsf_definition;

%IF DSRPLUS %THEN
EXTERNAL
    topnot	: tn_definition;
%FI

EXTERNAL LITERAL
    rintes	: UNSIGNED (8);

EXTERNAL LITERAL
    rnfinm;

EXTERNAL ROUTINE
    erma,
    gcpage,
    guskip,
    outcrg;


GLOBAL ROUTINE figure (handler_code) : NOVALUE =

!++
! FUNCTIONAL DESCRIPTION:
!
!	Processes .FIGURE and .FIGURE DEFERRED commands.
!
! FORMAL PARAMETERS:
!
!	handler_code - Indicates which command should be processed.
!
! IMPLICIT INPUTS:
!
!	numprm - Contains a number, as processed by GETNUM.
!
! IMPLICIT OUTPUTS:	None
!
! ROUTINE VALUE:
! COMPLETION CODES:	None
!
! SIDE EFFECTS:		None
!--

    BEGIN

    !
    ! Illegal number.  Ignore the command.
    !
    IF  NOT .num_result
    THEN
	RETURN;

    !
    ! Default setting is 1.
    !
    IF  .num_length EQL 0
    THEN
	num_value = 1;

    !
    ! Maximum space that can be left for a figure is "real" space on a page.
    !
    IF  (.num_value LEQ 0) OR
	(.num_value GTR (.phan_llines - .hct_layoutn
			- (IF .hct_subtitle THEN 1 ELSE 0)
			- (IF .hct_headers  THEN 3 ELSE 0)))
    THEN
	BEGIN
	erma (rnfinm, false);
	RETURN;
	END;

    SELECTONE .handler_code OF
	SET
	[h_figure]	  : gfig (true,  .num_value);
	[h_figure_deferr] : gfig (false, .num_value);
	TES;

    END;					! End of FIGURE


GLOBAL ROUTINE gfig (immediately, count) : NOVALUE =

!++
! FUNCTIONAL DESCRIPTION:
!
!	Generates code corresponding to RUNOFF's .FIGURE and
!	.FIGURE DEFERRED commands.
!
! FORMAL PARAMETERS:
!
!	immediately   - Indicates whether the block of lines should be done
!			immediately, or whether it can be put off until the 
!			top of the next page.  TRUE means immediately.
!
!	count         - Number of lines to be generated.
!
! IMPLICIT INPUTS:	None
!
! IMPLICIT OUTPUTS:	None
!
! ROUTINE VALUE:
! COMPLETION CODES:	None
!
! SIDE EFFECTS:		None
!--

    BEGIN
    LOCAL
	tsf_phregs : REF VECTOR [tsf_nregs];

    tsf_phregs = tsf__phregs;

    !
    ! If collecting a footnote, all figures are unconditional and cannot
    ! start a new line.  Code generation is particularily simple, being
    ! just an unconditional generation of the number of lines.
    !
    IF  .fnct_collecting
    THEN
	BEGIN
	guskip (.count);
	RETURN;
	END;

%IF DSRPLUS %THEN
    !
    ! If collecting a topnote, all figures are unconditional.
    !
    IF  .tn_collecting
    THEN
	BEGIN
	guskip (.count);
	RETURN;
	END;
%FI

    IF  .tsf_next_reg GEQ tsf_nregs 	! Don't allocate too many "registers".
    THEN
	outcrg ();

    tsf_phregs [.tsf_next_reg] = .count;
    fs_wchar (mra, rintes);			! If (test page..)
    fs_wchar (mra, %C't');
    fs_wchar (mra, .tsf_next_reg);
    fs_wchar (mra, rintes);			! then skip now
    fs_wchar (mra, %C'u');
    fs_wchar (mra, .tsf_next_reg);
    fs_wchar (mra, rintes);			! end then
    fs_wchar (mra, %C'.');
    fs_wchar (mra, %C' ');
    tsf_int_vl = .tsf_int_vl + 9;

    IF  .immediately
    THEN
	BEGIN
	gcpage ();				! Generate code for a new page.
	fs_wchar (mra, rintes);			! generate code for skips
	fs_wchar (mra, %C'u');			! unconditional skipping! 
	fs_wchar (mra, .tsf_next_reg);
	END
    ELSE
	BEGIN					! The block of lines can wait.
	fs_wchar (mra, rintes);
	fs_wchar (mra, %C'd');			! defer space
	fs_wchar (mra, .tsf_next_reg);
	END;

    fs_wchar (mra, rintes);			! end else
    fs_wchar (mra, %C'.');
    fs_wchar (mra, %C' ');
    tsf_int_vl   = .tsf_int_vl   + 6;
    tsf_next_reg = .tsf_next_reg + 1;
    END;					! End of GFIG

END						! End of module
ELUDOM
