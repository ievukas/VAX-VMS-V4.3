{
{ Version:	'V04-000'
{
{****************************************************************************
{*									    *
{*  COPYRIGHT (c) 1978, 1980, 1982, 1984 BY				    *
{*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
{*  ALL RIGHTS RESERVED.						    *
{* 									    *
{*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
{*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
{*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
{*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
{*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
{*  TRANSFERRED.							    *
{* 									    *
{*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
{*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
{*  CORPORATION.							    *
{* 									    *
{*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
{*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
{* 									    *
{*									    *
{****************************************************************************

{
{ NPARSE argument block field definitions.
{
module $NPADEF;


aggregate NPADEF structure fill prefix NPA$;
    COUNT longword unsigned;				/* Argument count (NPA$K_COUNT0) 
    constant COUNT0	equals 8  prefix NPA tag $K;	/* Argument count value 
    MSGCNT longword unsigned;				/* Count of bytes remaining in message 
    MSGPTR longword unsigned;				/* Pointer to remaining message 
    OPTIONS longword unsigned;				/* Options (not used) 
    FLDCNT longword unsigned;				/* Count of bytes in matched field 
    FLDPTR longword unsigned;				/* Pointer to matched field 
    LONG_OVERLAY union fill;
        LONG longword unsigned;				/* Matched longword value 
	WORD_OVERLAY union fill;
            "WORD" word unsigned;			/* word value 
            "BYTE" byte unsigned;			/* byte value 
	end WORD_OVERLAY;
    end LONG_OVERLAY;
    NUMBER longword unsigned;				/* Matched signed value (not used) 
    PARAM longword unsigned;				/* Action routine parameter value 
    constant LENGTH0 equals . prefix NPA$ tag K;	/* Size of argument block structure 
    constant LENGTH0 equals . prefix NPA$ tag C;	/* Size of argument block structure 
    
    
end NPADEF;

end_module $NPADEF;

