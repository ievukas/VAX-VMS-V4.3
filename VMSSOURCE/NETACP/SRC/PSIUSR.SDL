{
{ Version:	'V04-000'
{
{****************************************************************************
{*									    *
{*  COPYRIGHT (c) 1978, 1980, 1982, 1984 BY				    *
{*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
{*  ALL RIGHTS RESERVED.						    *
{* 									    *
{*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
{*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
{*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
{*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
{*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
{*  TRANSFERRED.							    *
{* 									    *
{*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
{*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
{*  CORPORATION.							    *
{* 									    *
{*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
{*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
{* 									    *
{*									    *
{****************************************************************************

{++
{
{ Facility:
{
{	VAX-11 PSI -- VMS
{
{ Abstract:
{
{	This file contains all definitions which must eventually be
{	inserted in the VMS system libraries - SYS$LIBRARY:LIB and
{	SYS$LIBRARY:STARLET. They should be collected in this file
{	for the time being.
{
{ Environment:
{
{	SDL processing - BLISS/MACRO Libraries.
{
{ Author:
{
{	Richard J. Merewood,	Date: 09-Sep-1980
{
{
{ Edit	Author		Date		Reason
{ ----	------		----		------
{
{ 01	AM Palka	09-Sep-80	Add symbols for QIO and Level 3.
{ 02	AM Palka	26-Sep-80	Correct definition of PSI$C_NCB...
{ 03	AM Palka	29-Sep-80	Add more NCB definitions.
{ 04	Barry Scott	 7-Nov-80	Add DYN$C_xxx symbols.
{ 05	AM Palka	24-Nov-80	Add PSI status codes.
{ 06	Barry A. Scott	25-Nov-80	Add DT$_X25.
{ 07	Andrew Palka	25-Nov-80	Change spelling of some NCB items.
{ 08	R.J. Merewood	03-Dec-80	Clean up and add NFB defintions.
{ 09	Fiona Nicholson	09-Dec-80	Add X29 device type
{ 10	AM Palka	10-Dec-80	change PSI$C_NCB values
{ 11	AM Palka	14-Jan-81	change SS$_CLEARED/RESET
{ 12	Andrew Palka	16-Jan-81	add more NCB definitions (for internal
{					L3CS use), Remove PSI$C_NCB_BUG
{ 13	R.J. Merewood	22-Jan-81	Add PSI$C_NTD_... codes.
{ 14	Andrew Palka	22-Jan-81	Add PSI$C_NCB_LOCFACR,
{					Remove PSI$C_NCB_ACCRC
{ 15	Andrew Palka	26-Jan-81	Add PSI$K_SETREADPAD
{ 16	Andrew Palka	 4-Feb-81	Remove PSI$C_NCB_FRNFAC and
{					PSI$C_NCB_REMNET.
{					Add PSI$C_NCB_LOCNET
{ 17	Barry A. Scott	9-Feb-81	Add NFB$C_READRSP for XUT interface
{ 18	R.J. Merewood	20-Feb-81	Change values as required by VMS group
{ 19	Barry A. Scott	 2-Mar-1981	Add NFB$C_?ETTRASTA for trace.
{ 20	Andrew Palka	 5-Mar-1981	Remove SS$_UNSOLICIT
{ 21	Andrew Palka	 5-Mar-1981	ADD PSI$C_ERR_BAD_PVCNAME
{ 22	Andrew Palka	 9-Mar-1981	Replace SS$_UNSOLICIT ( Not used, but
{					space for it has been reserved)
{ 23	Andrew Palka	12-Mar-1981	Add PSI$C_RESTART
{ 24	Barry A. Scott	 6-Apr-1981	Add NFB$C_TESTLINE for the LOOP LINE
{					function
{ 25	R.J. Merewood	13-Apr-81	Add new NFB codes.
{ 26	Fiona Nicholson	22-Feb-81	Remove temporary definitions, as they
{					are in the system library now.
{--

{+
{ DT:
{	These are new device types for PSI.
{-
module $DTTMPDEF;

	 						/* Start at 99 BS006 
constant(
      X25						/* X.25 Network Device 
    , X29						/* X.29 Device FN009 
    , DUP_BOP						/* DUP-11 Bit-orientated protocol RM008 
    ) equals 99 increment 1  prefix DT tag $;		/* 



end_module $DTTMPDEF;

module $NFBTMPDEF;

/*+
/* NFB:
/*        These are new Network Function Block codes used by PSI.                RM008
/*-


	 						/* Start at unused value after NFB$C_FC_MAX 
constant(
      SETCCTSTA						/* Set circuit state 
    , GETCCTSTA						/* Get circuit state 
    , GETCCTCTR						/* Get circuit counters 
    , CLRCCTCTR						/* Clear circuit counters 
    , SETMODSTA						/* Set module state 
    , GETMODSTA						/* Get module state 
    , GETMODCTR						/* Get module counters 
    , CLRMODCTR						/* Clear module counters 
    , READRSP						/* Read response from ACPCONTROL BS017 
    , SETTRASTA						/* set trace state BS019 
    , GETTRASTA						/* Get trace state BS019 
    , TESTLINE						/* Test line function BS024 
    , SETOBJECT						/* Update object database RM025 
    , SHOOBJECT						/* Display object database RM025 
    ) equals (37+1) increment 1 prefix NFB tag $C;


end_module $NFBTMPDEF;

module $PSIDEF;

/*+
/* PSI:
/*        These are Network Connect Block codes and various status codes.
/*-


constant(
      NCB_NULL						/* Network connect null data type 
    , NCB_REMDTE					/* Remote DTE address 
    , NCB_REMSUBADR					/* Remote DTE sub-address 
    , NCB_LOCDTE					/* Local DTE address 
    , NCB_LOCSUBADR					/* Local DTE subaddress 
    , NCB_USERDATA					/* Outgoing call data 
    , NCB_RESPDATA					/* Response data field 
    , NCB_OBJNAME					/* Process to handle call 
    , NCB_ENDTOEND					/* Outgoing end to end acknowledgment 
    , NCB_ENDTOENDR					/* Call requires end to end acknowledgment 
    , NCB_GATEWAY					/* Gateway name 
    , NCB_ICI						/* Incoming call identifier 
    , NCB_REVCHG					/* Reverse charge for this call 
    , NCB_LOCFACR					/* Facilities for call accept 
    , NCB_FSEL						/* Fast select for outgoing call 
    , NCB_FSEL_RES					/* Restricted response fast select 
    , NCB_THRUCLS					/* Throughput class 
    , NCB_CUG						/* Closed user group name 
    , NCB_DIAGCODE					/* Clear 8 bit diagnostics code 
    , NCB_CAUSE						/* Clear 8 bit cause code 
    , NCB_REASON					/* Clear 8 bit reason code 
    , NCB_PKTSIZE					/* Packet size-must be power of 2 
    , NCB_WINSIZE					/* Window size 
    , NCB_LOCFAC					/* Local facilities 
    , NCB_PVCNAM					/* PVC name 

/*+
/* The following codes are mainly for internal use.
/* They may not normally be used by a user program
/* (require PHYSIO and SYSPRV privileges)
/*-

    , NCB_LINE						/* Line name 
    , NCB_PVCSET					/* Set up PVC 
    , NCB_LCN						/* Select LCN 
    , NCB_CUGN						/* Closed user group number 
    , NCB_CUGNB						/* Bilateral closed user group number 
    , NCB_LOCNET					/* Local network name 
    ) equals 0 increment 1 prefix PSI tag $C;


/*+
/* Item List Codes for Network Process Declaration                        RM013
/*-

	 						/* Start with 1 RM013 
constant(
      NTD_ACCLVL					/* Access level (X.25 or X.29) RM013 
    , NTD_SALO						/* DTE subaddress range low end RM013 
    , NTD_SAHI						/* DTE subaddress range high end RM013 
    , NTD_REMDTE					/* Remote DTE address RM013 
    , NTD_USRGRP					/* CUG/BCUG Name RM013 
    , NTD_USRDATA					/* User data field RM013 
    , NTD_DATMSK					/* User data mask RM013 
    ) equals 1 increment 1 prefix PSI tag $C;


/*+
/* Special function codes for IO$_NETCONTROL
/*-

constant INTERRUPT	equals 1  prefix PSI tag $C;	/* Interrupt NETCONTROL functn code 
constant INTERRUPT	equals 1  prefix PSI tag $K;	/* Interrupt NETCONTROL funct code 
constant INTACK	equals 2  prefix PSI tag $C;		/* Interrupt acknowledge NETCONTROL 
constant INTACK	equals 2  prefix PSI tag $K;		/* Interrupt acknowledge NETCONTROL 
constant RESET	equals 3  prefix PSI tag $C;		/* Reset NETCONTROL function Code 
constant RESET	equals 3  prefix PSI tag $K;		/* Reset NETCONTROL function Code 
constant SETPAD	equals 4  prefix PSI tag $C;		/* Set X.29 PAD parameters FN009 
constant SETPAD	equals 4  prefix PSI tag $K;		/* Set X.29 PAD parameters FN009 
constant READPAD	equals 5  prefix PSI tag $C;	/* Read X.29 PAD parameters FN009 
constant READPAD	equals 5  prefix PSI tag $K;	/* Read X.29 PAD parameters FN009 
constant SETREADPAD	equals 6  prefix PSI tag $C;	/* Set/Read X.29 PAD parameters AP015 
constant SETREADPAD	equals 6  prefix PSI tag $K;	/* Set/Read X.29 PAD parameters AP015 
constant RESTART	equals 7  prefix PSI tag $C;	/* Acknowlege Restart on PVC AP023 
constant RESTART	equals 7  prefix PSI tag $K;	/* Acknowlege Restart on PVC AP023 

/*+
/* Clear/Reset/Restart Cause Codes from Level 3
/*-

	 						/* Start at 1 RM008 
constant(
      L3_LOCAL						/* Host requested 
    , L3_NETWRK						/* Network initiated 
    , L3_NETERR						/* Network protocol error 
    , L3_LOCERR						/* Local protocol error 
    , L3_LNKRST						/* Link reset 
    , L3_LNKDWN						/* Link down 
    , L3_LNKUP						/* Link up 
    , L3_LNKRRT						/* Link restarted 
    , L3_LOCMGT						/* Network management function 
    , L3_CALCOL						/* Call collision 
    , L3_NETTIM						/* Timeout on network 
    ) equals 1 increment 1 prefix PSI tag $C;


/*+
/* I/O Status Returns
/*-

aggregate PSIDEF  union fill prefix PSI$;
    PSIDEF_BITS0 structure fill;
        MOREDATA bitfield mask;				/* More data follows (M-bit) 
        QUALIFIED bitfield mask;			/* Qualified sub-channel (Q-bit) 
    end PSIDEF_BITS0;
    
    PSIDEF_BITS1 structure fill;
        STS_PVC bitfield mask;				/* PVC setup MUST BE LOW ORDER BIT 
        STS_LOCDTELNG bitfield mask;			/* Local dte adress too long - truncated 
        STS_REMDTELNG bitfield mask;			/* Remote dte adress too long - truncated 
        STS_USERLNG bitfield mask;			/* Too much user data supplied - truncated 
        STS_WINBAD bitfield mask;			/* Invalid window size - nearest valid chosen 
        STS_PKTBAD bitfield mask;			/* Invalid packet size - nearest valid chosen 
        STS_THRBAD bitfield mask;			/* Invalid throughput class - nearest valid chosen 
    end PSIDEF_BITS1;
    
    	 						/* Error codes start at 0 AP005 
    constant(
          ERR_UNKNOWN					/* Unspecified internal error 
        , ERR_FACLNG					/* Facilities too long 
        , ERR_INVITEM					/* Invalid item code 
        , ERR_CONFLICT					/* Conflicting items specified 
        , ERR_BADPARM					/* Bad parameter specified 
        , ERR_NOTRANS					/* No translation for this name (e.g. unknown user group) 
        , ERR_RECURLMT					/* Recursion limit reached 
        , ERR_INVNUM					/* Invalid ASCII number 
        , ERR_NOICI					/* No internal call identifier specified 
        , ERR_MANYICI					/* More than one internal call identifier given 
        , ERR_NOTIMP					/* A feature that is not yet implemented was requested 
        , ERR_NOLINES					/* No line is available on which to make the call 
        , ERR_NOSUCHLINE				/* The specified line is not known 
        , ERR_NOSUCHPVC					/* The specified PVC is not known 
        , ERR_NOSUCHNET					/* The specified network is not known 
        , ERR_NOLOCAL					/* The ACP has run out of local workspace memory 
        , ERR_NONONPAG					/* There is insufficient free non-paged pool 
        , ERR_NOL3					/* Internal error 
        , ERR_BADNAME					/* Bad counted string parameter 
        , ERR_L3ERR					/* Error returned from level 3 
        , ERR_PVCALRACC					/* PVC already accessed 
        , ERR_BAD_PVCNAME				/* Accessing PVC on wrong channel 
        ) equals 0 increment 1 prefix PSI tag $C;
    
end PSIDEF;

end_module $PSIDEF;

