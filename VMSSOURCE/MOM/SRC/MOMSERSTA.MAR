	.TITLE	MOMSERSTA	LOAD/TRIGGER/DUMP/LINE LOOP STATE TABLES
	.IDENT	'V04-000'
 
;
;****************************************************************************
;*									    *
;*  COPYRIGHT (c) 1978, 1980, 1982, 1984 BY				    *
;*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
;*  ALL RIGHTS RESERVED.						    *
;* 									    *
;*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
;*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
;*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
;*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
;*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
;*  TRANSFERRED.							    *
;* 									    *
;*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
;*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
;*  CORPORATION.							    *
;* 									    *
;*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
;*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
;* 									    *
;*									    *
;****************************************************************************
;

;++
; FACILITY:  DECnet-VAX Network Management Maintenance Operations Module (MOM)
; 
; ABSTRACT: 
;	This module contains the NPARSE tables for parsing the parameter
;	portions of NICE messages containing load, trigger, and test commands.
; 
; ENVIRONMENT:	VAX/VMS Operating System 
; 
; AUTHOR:  Kathy Perko
;
; CREATION DATE: 9-Jan-1982
; 
; MODIFIED BY: 
;	V03-004	MKP0004		Kathy Perko		13-July-1984
;		Change NODE SERVICE PASSWORD parameter back to HI-8 (from
;		H-8).  The specs aren't consistent about it.
;
;	V03-003	MKP0003		Kathy Perko		26-Mar-1984
;		Fix area 1 problem by converting node numbers with area 0
;		to area 1.
;
;	V03-002	MKP0002		Kathy Perko		29-Jan-1984
;		Make sure LOOP CIRCUIT commands have all required parameters.
;
;	V03-001	MKP0001		Kathy Perko		5-May-1983
;		Fix TRIGGER to take PHYSICAL ADDRESS parameter.
; 
;-- 

;
; INCLUDE FILES:
;
 
$NMADEF				; Network Management Layer definitions
$MOMDEF				; MOM definitions
 

	.SBTTL	MOM$NPA_LOAD Downline load state table
 
;
;    This NPARSE table is used to parse the parameters of a NICE command
;    from NCP which requests a down line load.
;
IMSG$	MOM$NPA_LOAD
;
; Paramter loop
;
FIELD$	MOM_LOAD_LOOP
$EOM	,NPA$_EXIT
$SBEXP	MOM_NODE_SLI,MOM_LOAD_LOOP	; Service circuit
$NEXT

FIELD$
$SBEXP	MOM_NODE_SPA,MOM_LOAD_LOOP	; Service password
$NEXT
 
FIELD$
$SBEXP	MOM_NODE_SDV,MOM_LOAD_LOOP	; Service device
$NEXT
 
FIELD$
$SBEXP	MOM_NODE_CPU,MOM_LOAD_LOOP	; CPU type
$NEXT
 
FIELD$
$SBEXP	MOM_NODE_PHA,MOM_LOAD_LOOP	; NI (Ethernet) Physical Address
$NEXT
 
FIELD$
$SBEXP	MOM_NODE_LOA,MOM_LOAD_LOOP	; Load file
$NEXT
 
FIELD$
$SBEXP	MOM_NODE_SLO,MOM_LOAD_LOOP	; Secondary loader
$NEXT

FIELD$
$SBEXP	MOM_NODE_TLO,MOM_LOAD_LOOP	; Tertiary loader
$NEXT
 
FIELD$
$SBEXP	MOM_NODE_STY,MOM_LOAD_LOOP	; Software type
$NEXT
 
FIELD$
$SBEXP	MOM_NODE_SID,MOM_LOAD_LOOP	; Software ID
$NEXT
 
FIELD$
$SBEXP	MOM_NODE_IHO,MOM_LOAD_LOOP	; Host
$NEXT
 
FIELD$
$SBEXP	MOM_NODE_NNA,MOM_LOAD_LOOP	; Name
$NEXT
 
FIELD$
$SBEXP	MOM_NODE_ADD,MOM_LOAD_LOOP	; Address
$NEXT
 
FIELD$
$EOM	,NPA$_EXIT
$MATCH	2,MOM_PTY_ERR			; Unrecognized parameter type
$NULL	,MOM_FOR_ERR			; Format error
 
FIELD$					; End of LOAD state table




;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Upline dumping - currently VMS supports autoservice upline dumping only,
; but not the NCP command DUMP.
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; 

 
	.SBTTL	MOM$NPA_TRIGGER Trigger parameter state table
 
;
; Trigger
;
IMSG$	MOM$NPA_TRIGGER
;
;
;
; TRIGGER parameter loop
;
FIELD$	MOM_TRIG_LOOP
$EOM	,NPA$_EXIT
$SBEXP	MOM_NODE_SLI,MOM_TRIG_LOOP	; Service circuit
$NEXT
 
FIELD$
$SBEXP	MOM_NODE_SPA,MOM_TRIG_LOOP	; Service password
$NEXT
 
FIELD$
$SBEXP	MOM_NODE_PHA,MOM_LOAD_LOOP	; NI (Ethernet) Physical Address
$NEXT
 
FIELD$
$EOM	,NPA$_EXIT
$MATCH	2,MOM_PTY_ERR			; Unrecognized parameter type
$NULL	,MOM_FOR_ERR			; Format error
 
FIELD$					; End of TRIGGER state table

	.SBTTL	MOM$NPA_CIRLOOP	Circuit loop state table

;
; Circuit loop
;
IMSG$	MOM$NPA_CIRLOOP
;
; Loop Circuit Parameter loop
;
FIELD$	MOM_LOOP_LOOP
$EOM	,MOM_CHECK_PARAMS
$SBEXP	MOM_NODE_PHA,MOM_LOOP_LOOP		; NI (Ethernet) Physical Address
$NEXT

FIELD$
$SBEXP	MOM_NODE_LPC,MOM_LOOP_LOOP		; Loop count
$NEXT

FIELD$
$SBEXP	MOM_NODE_LPL,MOM_LOOP_LOOP		; Loop length
$NEXT

FIELD$
$SBEXP	MOM_NODE_LPD,MOM_LOOP_LOOP		; Loop data type (LOOP WITH)
$NEXT

FIELD$
$SBEXP	MOM_NODE_LPA,MOM_LOOP_LOOP		; Loop Assistant Physical
$NEXT						;	Address on NI

FIELD$
$SBEXP	MOM_NODE_LPH,MOM_LOOP_LOOP		; Loop help type
$NEXT

FIELD$
$SBEXP	MOM_NODE_LPN,MOM_LOOP_LOOP		; Loop NI circuit node
$NEXT

FIELD$
$SBEXP	MOM_NODE_LAN,MOM_LOOP_LOOP		; Loop NI circuit assistant
$NEXT						;	node

FIELD$
$EOM	,MOM_CHECK_PARAMS
$MATCH	2,MOM_PTY_ERR				; Unrecognized parameter type
$NULL	,MOM_FOR_ERR				; Format error

FIELD$  MOM_CHECK_PARAMS
$NULL	,NPA$_EXIT,MOM$CHECK_LOOP_PARAMS

FIELD$



	.SBTTL	MOM$NPA_NODE	Node parameter state table
;+
; Node parameters state table
;-
 
IMSG$	MOM$NPA_NODE
 
FIELD$	MOM_NODE_SLI			; Service circuit parameter
$WORD	NMA$C_PCNO_SLI,MOM_IMG_SUB,MOM$CHECK_NODE_ENTITY,SVD$GK_PCNO_SLI, -
						MOM$GL_SVD_INDEX
 
FIELD$	MOM_NODE_SPA			; Service password parameter
$WORD	NMA$C_PCNO_SPA,MOM_IMG_SUB,,SVD$GK_PCNO_SPA,MOM$GL_SVD_INDEX
 
FIELD$	MOM_NODE_SDV			; Service device parameter
$WORD	NMA$C_PCNO_SDV,,,SVD$GK_PCNO_SDV,MOM$GL_SVD_INDEX
FIELD$
$LOOK	NMA$C_SOFD_DP,MOM_BYTE_SUB	; DP11
$LOOK	NMA$C_SOFD_UNA,MOM_BYTE_SUB	; UNA
$LOOK	NMA$C_SOFD_DU,MOM_BYTE_SUB	; DU11/DUV11
$LOOK	NMA$C_SOFD_DL,MOM_BYTE_SUB	; DL11
$LOOK	NMA$C_SOFD_DQ,MOM_BYTE_SUB	; DQ11
$LOOK	NMA$C_SOFD_DA,MOM_BYTE_SUB	; DA11
$LOOK	NMA$C_SOFD_DUP,MOM_BYTE_SUB	; DUP11
$LOOK	NMA$C_SOFD_DMC,MOM_BYTE_SUB	; DMC11
$LOOK	NMA$C_SOFD_DTE,MOM_BYTE_SUB	; DTE
$LOOK	NMA$C_SOFD_KL8,MOM_BYTE_SUB	; KL8
$LOOK	NMA$C_SOFD_DMV,MOM_BYTE_SUB	; DMV
$LOOK	NMA$C_SOFD_DMP,MOM_BYTE_SUB	; DMP
$LOOK	NMA$C_SOFD_DPV,MOM_BYTE_SUB	; DPV
$LOOK	NMA$C_SOFD_DMF,MOM_BYTE_SUB	; DMF
$NULL	,MOM_PVA_ERR			; Parameter value error
 
FIELD$	MOM_NODE_CPU			; CPU type
$WORD	NMA$C_PCNO_CPU,,,SVD$GK_PCNO_CPU,MOM$GL_SVD_INDEX
FIELD$					; Verify legimate type
;$LOOK	NMA$C_CPU_8,MOM_BYTE_SUB
$LOOK	NMA$C_CPU_11,MOM_BYTE_SUB
;$LOOK	NMA$C_CPU_1020,MOM_BYTE_SUB
$LOOK	NMA$C_CPU_VAX,MOM_BYTE_SUB
$NULL	,MOM_PVA_ERR			; Parameter value error
 
FIELD$	MOM_NODE_PHA			; NI Physical Address
$WORD	NMA$C_PCNO_PHA,MOM_NI_ADD_SUB,,SVD$GK_PCNO_PHA,MOM$GL_SVD_INDEX

FIELD$	MOM_NODE_LOA			; Load file parameter
$WORD	NMA$C_PCNO_LOA,MOM_IMG_SUB,,SVD$GK_PCNO_LOA,MOM$GL_SVD_INDEX
 
FIELD$	MOM_NODE_SLO			; Secondary loader
$WORD	NMA$C_PCNO_SLO,MOM_IMG_SUB,,SVD$GK_PCNO_SLO,MOM$GL_SVD_INDEX
 
FIELD$	MOM_NODE_TLO			; Tertiary loader parameter
$WORD	NMA$C_PCNO_TLO,MOM_IMG_SUB,,SVD$GK_PCNO_TLO,MOM$GL_SVD_INDEX

FIELD$	MOM_NODE_STY			; Software type parameter
$WORD	NMA$C_PCNO_STY,,,SVD$GK_PCNO_STY,MOM$GL_SVD_INDEX
FIELD$					; Check legimate values
$LOOK	NMA$C_SOFT_SECL,MOM_BYTE_SUB	; Secondary loader
$LOOK	NMA$C_SOFT_TERL,MOM_BYTE_SUB	; Tertiary loader
$LOOK	NMA$C_SOFT_OSYS,MOM_BYTE_SUB	; Operating system
$NULL	,MOM_PVA_ERR			; Parameter value error
 
FIELD$	MOM_NODE_SID			; Software id parameter
$WORD	NMA$C_PCNO_SID,MOM_IMG_SUB,,SVD$GK_PCNO_SID,MOM$GL_SVD_INDEX
 
FIELD$	MOM_NODE_IHO			; Host parameter
$WORD	NMA$C_PCNO_IHO,MOM_NODE_SUB,,SVD$GK_PCNO_IHO,MOM$GL_SVD_INDEX
 
FIELD$	MOM_NODE_LPC			; Loop count
$WORD	NMA$C_PCNO_LPC,MOM_WORD_SUB,,SVD$GK_PCNO_LPC,MOM$GL_SVD_INDEX

FIELD$	MOM_NODE_LPL			; Loop length
$WORD	NMA$C_PCNO_LPL,MOM_WORD_SUB,,SVD$GK_PCNO_LPL,MOM$GL_SVD_INDEX

FIELD$	MOM_NODE_LPD			; Loop data type
$WORD	NMA$C_PCNO_LPD,MOM_BYTE_SUB,,SVD$GK_PCNO_LPD,MOM$GL_SVD_INDEX

FIELD$	MOM_NODE_LPA			; Loop Assistant Physical Address on NI
$WORD	NMA$C_PCNO_LPA,,,MOM$M_LOOP_W_ASSIST,MOM$GL_SERVICE_FLAGS
FIELD$
$NULL	,MOM_NI_ADD_SUB,,SVD$GK_PCNO_LPA,MOM$GL_SVD_INDEX

FIELD$	MOM_NODE_LPH			; Loop Help Type
$WORD	NMA$C_PCNO_LPH,,,SVD$GK_PCNO_LPH,MOM$GL_SVD_INDEX
FIELD$					; Check legimate values
$LOOK	NMA$C_LOOP_XMIT,MOM_BYTE_SUB	; Use help on loop transmit
$LOOK	NMA$C_LOOP_RECV,MOM_BYTE_SUB	; Use help on loop receive
$LOOK	NMA$C_LOOP_FULL,MOM_BYTE_SUB	; Use help on both transmit and receive.
$NULL	,MOM_PVA_ERR			; Parameter value error

FIELD$	MOM_NODE_LPN			; Loop circuit node ID
$WORD	NMA$C_PCNO_LPN,MOM_NODE_SUB,,SVD$GK_PCNO_LPN,MOM$GL_SVD_INDEX
 
FIELD$	MOM_NODE_LAN			; Loop circuit assistant node ID
$WORD	NMA$C_PCNO_LAN,,,MOM$M_LOOP_W_ASSIST,MOM$GL_SERVICE_FLAGS
FIELD$
$NULL	,MOM_NODE_SUB,,SVD$GK_PCNO_LAN,MOM$GL_SVD_INDEX
 
FIELD$	MOM_NODE_NNA			; Name
$WORD	NMA$C_PCNO_NNA,,,SVD$GK_PCNO_NNA,MOM$GL_SVD_INDEX
FIELD$
$IMAGE	6,NPA$_EXIT,MOM$SAVE_PARAM
$NULL	,MOM_FOR_ERR
 
FIELD$ 	MOM_NODE_ADD			; Address
$WORD	NMA$C_PCNO_ADD,MOM_NODE_ADDR_SUB,,SVD$GK_PCNO_ADD,MOM$GL_SVD_INDEX
 
FIELD$					; End of node parameter states

	.SBTTL	MOM$NPA_SERSUB	Common service parameter subexpressions
 
;
; Common subexpressions
;
IMSG$	MOM$NPA_SERSUB
;
; Host node address or name parameter
;
FIELD$	MOM_NODE_SUB
$LOOK	0,MOM_NODENUMBER
$IMAGE	6,NPA$_EXIT,MOM$SAVE_NODE_ID,,,MOM$C_NODE_ID_PARAM
 
FIELD$	MOM_NODENUMBER
$MATCH	3,NPA$_EXIT,MOM$SAVE_NODE_ID,,,MOM$C_NODE_ID_PARAM
$NULL	,MOM_FOR_ERR		; Format error

FIELD$	MOM_NODE_ADDR_SUB
$MATCH	2,NPA$_EXIT,MOM$SAVE_NODE_ID,,,MOM$C_NODE_ADDR_PARAM
$NULL	,MOM_FOR_ERR		; Format error
;
; Byte parameter
; 
FIELD$	MOM_BYTE_SUB
$MATCH	1,NPA$_EXIT,MOM$SAVE_PARAM
$NULL	,MOM_FOR_ERR		; Format error
;
; Word parameter
; 
FIELD$	MOM_WORD_SUB
$MATCH	2,NPA$_EXIT,MOM$SAVE_PARAM
$NULL	,MOM_FOR_ERR		; Format error
;
; Longword parameter
;
FIELD$	MOM_LONG_SUB
$MATCH	4,NPA$_EXIT,MOM$SAVE_PARAM
$NULL	,MOM_FOR_ERR		; Format error
;
; Image (string) parameter
;
FIELD$	MOM_IMG_SUB
$IMAGE	255,NPA$_EXIT,MOM$SAVE_PARAM
$NULL	,MOM_FOR_ERR		; Format error
;
; NI Address Hex Image (string) parameter
;
FIELD$	MOM_NI_ADD_SUB
$IMAGE	6,NPA$_EXIT,MOM$SAVE_PARAM
$NULL	,MOM_FOR_ERR		; Format error
;
; Unrecognized parameter type error
; 
FIELD$	MOM_PTY_ERR
$ERROR	,,MOM$PARSE_ERROR,,,NMA$C_STS_PTY
;
; Parameter value error
;
FIELD$	MOM_PVA_ERR
$ERROR	,,MOM$PARSE_ERROR,,,NMA$C_STS_PVA
;
; Message format error
;
FIELD$	MOM_FOR_ERR
$ERROR	,,MOM$PARSE_ERROR,,,NMA$C_STS_INV
;
; End of common parsing states
; 
FIELD$

	.END
 
