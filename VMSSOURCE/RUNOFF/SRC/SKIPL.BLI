%TITLE 'Perform all modes of line skiping'
MODULE SKIPL (	IDENT = 'V04-000'
		%BLISS32 [, ADDRESSING_MODE (EXTERNAL    = LONG_RELATIVE,
					     NONEXTERNAL = LONG_RELATIVE)]
		) =
BEGIN
!
!****************************************************************************
!*									    *
!*  COPYRIGHT (c) 1978, 1980, 1982, 1984 BY				    *
!*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
!*  ALL RIGHTS RESERVED.						    *
!* 									    *
!*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
!*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
!*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
!*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
!*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
!*  TRANSFERRED.							    *
!* 									    *
!*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
!*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
!*  CORPORATION.							    *
!* 									    *
!*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
!*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
!* 									    *
!*									    *
!****************************************************************************

!++
! FACILITY:	DSR (Digital Standard RUNOFF) / DSRPLUS
!
! ABSTRACT:	Conditional and unconditional line skipping.
!
! ENVIRONMENT:	Transportable
!
! AUTHOR:	R.W.Friday	 CREATION DATE:	May, 1978


%SBTTL 'Revision History'
! MODIFIED BY:
!
!	011	KFA00011	Ken Alden	13-Jun-1983
!		Counting of lines is no longer performed in USKIPL 
!		  for /down skipping.
!
!	010	RER00010	Ron Randall	31-May-1983
!		Improved algorithm in uskipl that tests for space available 
!		at end of page before calling newpag by adding hct_layout term.
!
!	009	KAD00009	Keith Dawson	22-Mar-1983
!		Added support for non-STREAM output (for LN01, VT100) --
!		call to macro op_dev_write_output_line instead of to
!		clh (clh_write_output).
!
!	008	REM00008	Ray Marshall	07-Mar-1983
!		Global edit of all modules. Updated module names, idents,
!		copyright dates. Changed require files to BLISS library.
!
!--

%SBTTL 'Module Level Declarations'
!
! TABLE OF CONTENTS:
!
FORWARD ROUTINE
    cskipl : novalue,
    uform  : novalue,
    uskipl : novalue;
!
! INCLUDE FILES:
!
LIBRARY 'NXPORT:XPORT';			! XPORT Library
REQUIRE 'REQ:RNODEF';			! RUNOFF variant definitions

%IF DSRPLUS %THEN
LIBRARY 'REQ:DPLLIB';			! DSRPLUS BLISS Library
%ELSE
LIBRARY 'REQ:DSRLIB';			! DSR BLISS Library
%FI

!
! EXTERNAL REFERENCES:
!
EXTERNAL
    fnct : fnct_definition,
    fra  : fixed_string,
    gca  : gca_definition,
    hct  : hct_definition,
    phan : phan_definition,
    tsf  : tsf_definition;

EXTERNAL ROUTINE
    bwait,
    clh,
    fbwait,
    lstops,
    newpag,
    tpfeql,
    tpr;


%SBTTL 'CSKIPL -- skip requisit number of lines'
GLOBAL ROUTINE cskipl (lines) : NOVALUE =

!++
! FUNCTIONAL DESCRIPTION:
!
!	Skips lines until either the top of a page is reached
!	or the requested number of lines have been skipped.
!
! FORMAL PARAMETERS:
!
!	lines - Specifies the maximum number of lines to be skipped.
!
! IMPLICIT INPUTS:	None
!
! IMPLICIT OUTPUTS:	None
!
! ROUTINE VALUE:
! COMPLETION CODES:	None
!
! SIDE EFFECTS:		None
!--

    BEGIN

    IF  .phan_top_page
    THEN
	RETURN;				! Don't skip lines if at top of page.

    IF  .lines EQL 0
    THEN
	RETURN;				! Forget trivial requests.

    IF  NOT tpr (.lines + 1)
    THEN
	!
	! Just start a new page if the skipping
	! would go over a page boundary.
	!
	phan_top_page = true
    ELSE
	BEGIN
	!
	! Initialize output buffer.  When CLH gets called FRA is either empty
	! or else contains some stuff that appears to the left of the document.
	!
	fs_init (fra);
	!
	! Attach listing options to line.
	!
	lstops (lstops_no_iseqn, true);

	!
	! Write out the blank lines.
	!
	INCR I FROM 1 TO MIN (.lines, 500) DO
	    BEGIN

	    IF  .fnct_ready NEQ 0
	    THEN

		!
		! Yup, there are footnotes waiting to be output.  So, before
		! writing a blank line, see if the paper is positioned at
		! precisely the position where some footnotes should appear.
		!
		IF  tpfeql () NEQ 0
		THEN
		    !
		    ! Yup, we're in the location where some footnotes should go.
		    ! If a blank line were to be put out now, it would be exactly
		    ! where the first line of the waiting footnotes is supposed
		    ! to appear.
		    !
		    ! THEREFORE, it's important that the blank line not be
		    ! generated.  Instead, the top-of-page indicator is set,
		    ! so that no more blank lines will be generated, and
		    ! so the next line of text will force out some footnotes.
		    !
		    BEGIN
		    phan_top_page = true;
		    RETURN;
		    END;

	    IF  NOT .gca_skip_out
	    THEN	! If not skipping output, output blank lines only.
		op_dev_write_output_line;

	    phan_lines_tp = .phan_lines_tp + 1;		! Count lines.
	    END;

	!
	!Now restore the output buffer to an empty state
	!
	fs_init (fra)
	END;

    END;					! End of CSKIPL


%SBTTL 'USKIPL -- unconditionally skip n lines'
GLOBAL ROUTINE uskipl (lines) : NOVALUE =

!++
! FUNCTIONAL DESCRIPTION:
!
!	Skips lines regardless of position on the page.  In the event
!	that there is a pending formfeed, it forces that out also.  Note that
!	the only time a formfeed could be pending is at the top of a page, when
!	the user had said .NO HEADERS.  The routine cskipl cannot put out the
!	formfeed because it skips lines only if they do not occur at the top of
!	the page.  The only other routine that can catch pending formfeeds is
!	lout1.
!
! FORMAL PARAMETERS:
!
!	lines - Specifies how many lines are to be skipped.
!
! IMPLICIT INPUTS:	None
!
! IMPLICIT OUTPUTS:	None
!
! ROUTINE VALUE:
! COMPLETION CODES:	None
!
! SIDE EFFECTS:		None
!--

    BEGIN

    LOCAL
	skip;

    IF  .lines EQL 0
    THEN
	RETURN;				! No lines to skip.

    skip = .lines;

    IF	.phan_form_pend NEQ 0
    THEN				! If a form feed is pending
	IF  .phan_simulate
	THEN				!  and /SIMULATE,
	    uform ()			! then simulate the formfeed.
	ELSE				! If a form feed and /NOSIMULATE,
	    BEGIN			! then force out pending formfeed
	    IF  .phan_pause
	    THEN
		(IF NOT .gca_skip_out
		THEN
		    fbwait ())  	! Bell the user before issuing the <FF>.
	    ELSE
		fs_wchar (fra, .phan_form_pend);

	lstops (lstops_no_iseqn, true);	! Attach listing options to line.

	    IF  NOT .gca_skip_out
	    THEN				! If output is suppressed, then
		op_dev_write_output_line;	! don't write blank lines.

    	    IF NOT .gca_down_flag
    	    THEN
	        phan_lines_tp = .phan_lines_tp + 1;	! Count lines.

	    skip = .skip - 1;
	    phan_form_pend = 0;
	    fs_init (fra);
	    END;

    INCR i FROM 1 TO min (.skip, 500) DO
	BEGIN

	IF  .phan_paging AND (.phan_top_page OR
	    ((.phan_lines_tp + (IF .hct_layout EQL 0 THEN 0 ELSE 1))
	    GEQ .phan_llines))
	THEN
	    newpag ();

	fs_init (fra);

	lstops (lstops_no_iseqn, true);	! Attach listing options to line.

	IF  NOT .gca_skip_out  	THEN	! If output is NOT suppressed,
	    op_dev_write_output_line;	! write out blank lines.

    	IF NOT .gca_down_flag
    	THEN
	    phan_lines_tp = .phan_lines_tp + 1;	! Count lines if not /down.
	END;

    fs_init (fra);
    END;					! End of USKIPL


%SBTTL 'UFORM -- throw blank lines to top-of-page'
GLOBAL ROUTINE uform : NOVALUE =

!++
! FUNCTIONAL DESCRIPTION:
!
!	Starts a new page by simulating a form feed by
!	putting out a sufficient number of blank lines.
!
! FORMAL PARAMETERS:	None
!
! IMPLICIT INPUTS:	None
!
! IMPLICIT OUTPUTS:	None
!
! ROUTINE VALUE:
! COMPLETION CODES:	None
!
! SIDE EFFECTS:		None
!--

    BEGIN

    LOCAL
	to_end;

    IF  .gca_skip_out
    THEN
	RETURN;

    !
    ! User said /SIMULATE, so simulate formfeeds.
    !
    fs_init (fra);
    to_end = .phan_plines - (.phan_bottom MOD .phan_plines);

    IF  .to_end NEQ .phan_plines
    THEN
	!
	! Skip blank lines only if not already at the end of the page.
	!
	INCR i FROM 1 TO MIN (.to_end, 500) DO
	    op_dev_write_output_line;

    phan_form_pend = 0;				! No more pending formfeed.

    !
    ! Buzz the user if he said /PAUSE.
    !
    IF  .phan_pause
    THEN
	bwait ();

    END;					! End of UFORM

END						! End of module
ELUDOM
