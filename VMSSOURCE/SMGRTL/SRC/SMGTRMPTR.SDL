MODULE $SMGTRMPTR;  /* Terminal Capability Pointers for RTL SMG$ facility
{ File:  SMGTRMPTR.SDL	Edit: PLL1002
{
{
{****************************************************************************
{*									    *
{*  COPYRIGHT (c) 1978, 1980, 1982, 1984 BY				    *
{*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
{*  ALL RIGHTS RESERVED.						    *
{* 									    *
{*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
{*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
{*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
{*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
{*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
{*  TRANSFERRED.							    *
{* 									    *
{*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
{*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
{*  CORPORATION.							    *
{* 									    *
{*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
{*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
{* 									    *
{*									    *
{****************************************************************************
{

{++
{ FACILITY:	Screen Management
{
{ ABSTRACT:
{
{ The following constants are request codes passed to the routine
{ that retrieves data from the terminal definitions file.
{
{ They are used as offsets into the characteristic pointers (which
{ are accessed as a vector of words).  A terminal definition consists
{ of these pointers and the actual data.
{-
{ Edit history:
{ 1-001 Original.  PLL 13-Nov-1983
{  -002 Add BEGIN_NORMAL_RENDITION.  PLL 15-Mar-1984

	/*
	/* Boolean capabilities here - 1 - 220
	/*

constant (
	ADVANCED_VIDEO,
	ANSI_CRT,
	AUTO_MARGIN,
	BACKSPACE,
	BLOCK_MODE,
	DEC_CRT,
	EDIT,
	EIGHT_BIT,
	FULLDUP,
	IGNORE_NEWLINE,
	INSERT_MODE_NULLS,
	LOWERCASE,
	NO_ERASE,
	NO_SCROLL,
	OVERSTRIKE,
	PRINTER_PORT,
	REGIS,
	SCOPE,
	SIXEL_GRAPHICS,
	SOFT_CHARACTERS,
	PHYSICAL_TABS,
	PHYSICAL_FF,
	UNDERLINE,
	CURSOR_REPORT_ANSI
	) equals 1 increment 1 prefix SMG tag $K;

	/*
	/* Private capabilities should be temporary.  Put them at the
	/* end of the range.
	/*

	constant (
	PRIVATE_BOO_1,
	PRIVATE_BOO_2,
	PRIVATE_BOO_3,
	PRIVATE_BOO_4,
	PRIVATE_BOO_5,
	PRIVATE_BOO_6,
	PRIVATE_BOO_7,
	PRIVATE_BOO_8,
	PRIVATE_BOO_9,
	PRIVATE_BOO_10
	) equals 211 increment 1 prefix SMG tag $K;

	/*
	/* Numeric capabilities here - 221 to 440
	/*

constant (
	COLUMNS,
	CR_FILL,
	FRAME,
	LF_FILL,
	NUMBER_FN_KEYS,
	ROWS,
	VMS_TERMINAL_NUMBER,
	WIDE_SCREEN_COLUMNS
	) equals 221 increment 1 prefix SMG tag $K;

	/*
	/* Private capabilities should be temporary.  Add them
	/* at the end of the range.
	/*
	constant (
	PRIVATE_NUM_1,
	PRIVATE_NUM_2,
	PRIVATE_NUM_3,
	PRIVATE_NUM_4,
	PRIVATE_NUM_5,
	PRIVATE_NUM_6,
	PRIVATE_NUM_7,
	PRIVATE_NUM_8,
	PRIVATE_NUM_9,
	PRIVATE_NUM_10
	) equals 431 increment 1 prefix SMG tag $K;

	/*
	/* String capabilities here - 441 - 660
	/*

constant (
	BEGIN_ALTERNATE_CHAR,
	BEGIN_BLINK,
	BEGIN_BOLD,
	BEGIN_DELETE_MODE,
	BEGIN_INSERT_MODE,
	BEGIN_LINE_DRAWING_CHAR,
	BEGIN_REVERSE,
	BEGIN_UNDERSCORE,
	BOTTOM_T_CHAR,
	CLEAR_TAB,
	CROSS_CHAR,
	CURSOR_DOWN,
	CURSOR_LEFT,
	CURSOR_RIGHT,
	CURSOR_UP,
	DARK_SCREEN,
	DELETE_CHAR,
	DELETE_LINE,
	DEVICE_ATTRIBUTES,	/* formerly IDENTIFY_TERMINAL
	DOUBLE_HIGH_BOTTOM,
	DOUBLE_HIGH_TOP,
	DOUBLE_WIDE,
	DUPLICATE,
	END_ALTERNATE_CHAR,
	END_BLINK,
	END_BOLD,
	END_DELETE_MODE,
	END_INSERT_MODE,
	END_LINE_DRAWING_CHAR,
	END_REVERSE,
	END_UNDERSCORE,
	ERASE_TO_END_DISPLAY,
	ERASE_TO_END_LINE,
	ERASE_WHOLE_DISPLAY,
	ERASE_WHOLE_LINE,
	HOME,
	HORIZONTAL_BAR,
	INIT_STRING,
	INSERT_CHAR,
	INSERT_LINE,
	INSERT_PAD,
	KEY_0,
	KEY_1,
	KEY_2,
	KEY_3,
	KEY_4,
	KEY_5,
	KEY_6,
	KEY_7,
	KEY_8,
	KEY_9,
	KEY_BACKSPACE,
	KEY_COMMA,
	KEY_DOWN_ARROW,
	KEY_E1,
	KEY_E2,
	KEY_E3,
	KEY_E4,
	KEY_E5,
	KEY_E6,
	KEY_ENTER,
	KEY_F1,
	KEY_F2,
	KEY_F3,
	KEY_F4,
	KEY_F5,
	KEY_F6,
	KEY_F7,
	KEY_F8,
	KEY_F9,
	KEY_F10,
	KEY_F11,
	KEY_F12,
	KEY_F13,
	KEY_F14,
	KEY_F15,
	KEY_F16,
	KEY_F17,
	KEY_F18,
	KEY_F19,
	KEY_F20,
	KEY_LEFT_ARROW,
	KEY_MINUS,
	KEY_PERIOD,
	KEY_PF1,
	KEY_PF2,
	KEY_PF3,
	KEY_PF4,
	KEY_RIGHT_ARROW,
	KEY_UP_ARROW,
	LABEL_F1,
	LABEL_F2,
	LABEL_F3,
	LABEL_F4,
	LABEL_F5,
	LABEL_F6,
	LABEL_F7,
	LABEL_F8,
	LABEL_F9,
	LABEL_F10,
	LABEL_F11,
	LABEL_F12,
	LABEL_F13,
	LABEL_F14,
	LABEL_F15,
	LABEL_F16,
	LABEL_F17,
	LABEL_F18,
	LABEL_F19,
	LABEL_F20,
	LEFT_T_CHAR,
	LIGHT_SCREEN,
	LOWER_LEFT_CORNER,
	LOWER_RIGHT_CORNER,
	NAME,
	NEWLINE_CHAR,
	PAD_CHAR,
	RESTORE_CURSOR,
	RIGHT_T_CHAR,
	SAVE_CURSOR,
	SCROLL_FORWARD,
	SCROLL_REVERSE,
	SEL_ERASE_TO_END_DISPLAY,
	SEL_ERASE_TO_END_LINE,
	SEL_ERASE_WHOLE_DISPLAY,
	SEL_ERASE_WHOLE_LINE,
	SET_APPLICATION_KEYPAD,
	SET_CHAR_NOT_SEL_ERASE,
	SET_CHAR_SEL_ERASE,
	SET_CURSOR_ABS,
	SET_NUMERIC_KEYPAD,
	SET_SCROLL_REGION,
	SET_TAB,
	SINGLE_HIGH,
	TAB_CHAR,
	TOP_T_CHAR,
	UNDERLINE_CHAR,
	UPPER_LEFT_CORNER,
	UPPER_RIGHT_CORNER,
	VERTICAL_BAR,
	WIDTH_NARROW,
	WIDTH_WIDE,
	CURSOR_POSITION_REPORT,
	REQUEST_CURSOR_POSITION,
	CR_GRAPHIC,
	FF_GRAPHIC,
	LF_GRAPHIC,
	HT_GRAPHIC,
	VT_GRAPHIC,
	TRUNCATION_ICON,
	CURSOR_NEXT_LINE,
	CURSOR_PRECEEDING_LINE,
	INDEX,
	REVERSE_INDEX,
	BEGIN_NORMAL_RENDITION
	) equals 441 increment 1 prefix SMG tag $K;

	/*
	/* Private capabilities should be temporary.  Add them at
	/* the end of the range.
	/*
	
	constant (
	PRIVATE_STR_1,
	PRIVATE_STR_2,
	PRIVATE_STR_3,
	PRIVATE_STR_4,
	PRIVATE_STR_5,
	PRIVATE_STR_6,
	PRIVATE_STR_7,
	PRIVATE_STR_8,
	PRIVATE_STR_9,
	PRIVATE_STR_10
	) equals 651 increment 1 prefix SMG tag $K;

end_module $SMGTRMPTR;

