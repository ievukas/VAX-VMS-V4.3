MODULE PAS$RAB	( %TITLE 'Get RAB address of file'
		IDENT = '1-001'			! File: PASRAB.B32 Edit: SBL1001
		) =
BEGIN
!
!****************************************************************************
!*									    *
!*  COPYRIGHT (c) 1978, 1980, 1982, 1984 BY				    *
!*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
!*  ALL RIGHTS RESERVED.						    *
!* 									    *
!*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
!*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
!*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
!*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
!*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
!*  TRANSFERRED.							    *
!* 									    *
!*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
!*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
!*  CORPORATION.							    *
!* 									    *
!*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
!*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
!* 									    *
!*									    *
!****************************************************************************
!

!++
! FACILITY:	Pascal Language Support
!
! ABSTRACT:
!
!	This module contains a procedure which returns a pointer to the
!	RMS RAB for a specified file.
!
! ENVIRONMENT:	User mode - AST reentrant
!
! AUTHOR: Steven B. Lionel, CREATION DATE: 19-October-1981
!
! MODIFIED BY:
!
! 1-001	- Original.  SBL 19-October-1981
!--

%SBTTL 'Declarations'
!
! PROLOGUE DEFINITIONS:
!

REQUIRE 'RTLIN:PASPROLOG';			! Externals, linkages, PSECTs, structures

!
! TABLE OF CONTENTS:
!

FORWARD ROUTINE
    PAS$RAB;					! Get RAB address of file

!
! MACROS:
!
!	NONE
!
! EQUATED SYMBOLS:
!
!	NONE
!
! FIELDS:
!
!	NONE
!
! OWN STORAGE:
!
!	NONE
!

%SBTTL 'PAS$RAB - Get RAB address of file'
GLOBAL ROUTINE PAS$RAB	(			! Get RAB address of file
	PFV: REF $PAS$PFV_FILE_VARIABLE 	! File variable
    ) =

!++
! FUNCTIONAL DESCRIPTION:
!
!	This procedure returns a pointer to the RMS Record Attributes
!	Block (RAB) for the specified file, if one exists.
!
! CALLING SEQUENCE:
!
!	rab.wa.v = PAS$RAB (pfv.rr.r)
!
! FORMAL PARAMETERS:
!
!	PFV		- The Pascal File Variable (PFV) passed by reference.
!			  The structure of the PFV is defined in PASPFV.REQ.
!
! IMPLICIT INPUTS:
!
!	NONE
!
! IMPLICIT OUTPUTS:
!
!	NONE
!
! ROUTINE VALUE:
!
!	The address of the file's RAB if there is one, otherwise zero.
!
! SIDE EFFECTS:
!
!	Opens INPUT or OUTPUT.
!
! SIGNALLED ERRORS:
!
!	NONE
!
!--

    BEGIN

    LOCAL
	FCB: REF $PAS$FCB_CONTROL_BLOCK;	! File Control Block

    !+
    ! Check for a valid FCB pointer.
    !-

    IF NOT .PFV [PFV$V_FCB_VALID]
    THEN
	BEGIN

	!+
	! The FCB pointer is not valid.  Check to see if the file
	! is INPUT or OUTPUT and if so, whether or not it should be
	! implicitly opened.  If so, do it.
	!-

	IF (PFV [PFV$R_PFV] EQLA PAS$FV_INPUT) AND NOT .PAS$$GV_INPUT_OPENED
	THEN
	    PAS$RESET2 (PFV [PFV$R_PFV])
	ELSE IF (PFV [PFV$R_PFV] EQLA PAS$FV_OUTPUT) AND NOT .PAS$$GV_OUTPUT_OPENED
	THEN
	    PAS$REWRITE2 (PFV [PFV$R_PFV]);
	END;

    !+
    ! The file may or may not have been opened.  If the FCB link is shown
    ! as valid, return it, otherwise return zero.
    !-

    IF .PFV [PFV$V_FCB_VALID]
    THEN
	BEGIN
	FCB = .PFV [PFV$A_FCB];
	IF NOT .FCB [FCB$V_STRING]
	THEN
	    RETURN .PFV [PFV$A_FCB]
	ELSE
	    RETURN 0;
	END
    ELSE
	RETURN 0;

    END;					! End of routine PAS$RAB

!<BLF/PAGE>
END						! End of module PAS$RAB

ELUDOM
