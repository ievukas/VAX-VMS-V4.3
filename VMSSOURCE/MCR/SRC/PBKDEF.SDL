MODULE pbk IDENT "V04-000";

/****************************************************************************
/*									    *
/*  COPYRIGHT (c) 1978, 1980, 1982, 1984 BY				    *
/*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
/*  ALL RIGHTS RESERVED.						    *
/* 									    *
/*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
/*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
/*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
/*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
/*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
/*  TRANSFERRED.							    *
/* 									    *
/*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
/*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
/*  CORPORATION.							    *
/* 									    *
/*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
/*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
/* 									    *
/*									    *
/****************************************************************************

	AGGREGATE pass_back STRUCTURE PREFIX pbk$;

		"type" WORD;		        /* Type of message AME is receiving
		flags_union UNION;
			flags WORD;
			flag_bits STRUCTURE;	/* Passback flags word
				passback BITFIELD MASK; /* If set, there's passback info. in this message
				spare_bits BITFIELD LENGTH 15;
				END flag_bits;
			END flags_union;
		status LONGWORD;		/* Exit status
		commands LONGWORD;		/* Command indicator for case stmnt
		CONSTANT (
			null			/* placeholder for zero
			,alloc			/* ALLOCATE
			,asn			/* ASN command
			,deall			/* DEALLOCATE
			,logout			/* LOGOUT command
			,resume			/* RESUME command
			,setctrl		/* SET CONTROL=[(t,y)]
			,setdef			/* SET DEFAULT
			,setproc		/* SET PROCESS
			,setprotdf		/* SET PROTECTION=prot/DEFAULT
			,setuic			/* SET /UIC
			,stop			/* STOP (process)
			,cancel			/* CANCEL
			) EQUALS 0 INCREMENT 1 TAG "c";
		CONSTANT (
			proc_prio		/* SET PROCESS/PRIORITY
			,proc_priv		/* SET PROCESS/PRIVILEGE
			,proc_swap		/* SET PROCESS/[NO]SWAP
			,proc_rsrc		/* SET PROCESS/[NO]RESOURCE_WAIT
			) EQUALS 1 INCREMENT 1 TAG "c";
		info ADDRESS;			/* Passback buffer address
		#bufsiz = 512;			/* Size of information buffer
		CONSTANT infosize EQUALS #bufsiz TAG "c"; /* Size of passback buffer
		#curloc = . ;			/* Offset of end of structure
		CONSTANT pbkstrsiz EQUALS #curloc + #bufsiz - 4 TAG "c";
						/* Size of structure
		END pass_back;
END_MODULE;
