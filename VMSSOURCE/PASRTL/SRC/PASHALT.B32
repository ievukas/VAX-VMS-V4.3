MODULE PAS$HALT ( %TITLE 'HALT procedure'
		IDENT = '1-001'			! File: PASHALT.B32 Edit: SBL1001
		) =
BEGIN
!
!****************************************************************************
!*									    *
!*  COPYRIGHT (c) 1978, 1980, 1982, 1984 BY				    *
!*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
!*  ALL RIGHTS RESERVED.						    *
!* 									    *
!*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
!*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
!*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
!*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
!*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
!*  TRANSFERRED.							    *
!* 									    *
!*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
!*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
!*  CORPORATION.							    *
!* 									    *
!*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
!*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
!* 									    *
!*									    *
!****************************************************************************
!

!++
! FACILITY:	Pascal Language Support
!
! ABSTRACT:
!
!	This procedure is called by the compiled code to perform
!	the HALT procedure.
!
! ENVIRONMENT:	User mode - AST reentrant
!
! AUTHOR: Steven B. Lionel, CREATION DATE: 14-October-1981
!
! MODIFIED BY:
!
! 1-001	- Original.  SBL 14-October-1981
!--


%SBTTL 'Declarations'
!
! PROLOGUE DEFINITIONS
!

REQUIRE 'RTLIN:PASPROLOG';			! Externals, linkages, PSECTs, structures

!
! TABLE OF CONTENTS:
!

FORWARD ROUTINE
    PAS$HALT: NOVALUE;				! Halt program execution

!
! MACROS:
!
!	NONE
!
! EQUATED SYMBOLS:
!
!	NONE
!
! FIELDS:
!
!	NONE
!
! OWN STORAGE:
!
!	NONE
!

%SBTTL 'PAS$HALT - Halt program execution'
GLOBAL ROUTINE PAS$HALT 
     : NOVALUE =

!++
! FUNCTIONAL DESCRIPTION:
!
!	This procedure implements the Pascal HALT procedure which
!	terminates program execution.  PAS$HALT accomplishes this
!	by signalling the error message PAS$_HALT.  Unless a user
!	condition handler intercepts this exception, program execution
!	will terminate.
!
! CALLING SEQUENCE:
!
!	CALL PAS$HALT
!
! FORMAL PARAMETERS:
!
!	NONE
!
! IMPLICIT INPUTS:
!
!	NONE
!
! IMPLICIT OUTPUTS:
!
!	NONE
!
! ROUTINE VALUE:
!
!	NONE
!
! SIDE EFFECTS:
!
!	NONE
!
! SIGNALLED ERRORS:
!
!	NONE   PAS$_HALT is signalled but is not considered an "error"
!	       in this context.
!
!--

    BEGIN

    SIGNAL_STOP (PAS$_HALT);			! Signal PAS$_HALT

    RETURN;					! Execution never returns here

    END;					! End of routine PAS$HALT

!<BLF/PAGE>

END						! End of module PAS$HALT

ELUDOM
