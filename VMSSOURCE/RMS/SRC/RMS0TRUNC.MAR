	$BEGIN	RMS0TRUNC,000,RM$RMS,<TRUNCATE SEQUENTIAL FILE>


;
;****************************************************************************
;*									    *
;*  COPYRIGHT (c) 1978, 1980, 1982, 1984 BY				    *
;*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
;*  ALL RIGHTS RESERVED.						    *
;* 									    *
;*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
;*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
;*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
;*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
;*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
;*  TRANSFERRED.							    *
;* 									    *
;*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
;*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
;*  CORPORATION.							    *
;* 									    *
;*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
;*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
;* 									    *
;*									    *
;****************************************************************************
;

;++
; Facility: rms32
;
; Abstract:
;	this module provides the $truncate rms service for magtape and
;	sequential disk files.
;
; Environment:
;		star processor running starlet exec.
;
; Author: l f laverdure,	 Creation Date: 9-JAN-1977
;
; Modified By:
;
;	V03-004	TSK0002		Tamar Krichevsky	27-Jun-1983
;		Fix bug introduced in V03-003.
;
;	V03-003	TSK0001		Tamar Krichevsky	21-Jun-1983
;		Add support for journaling $TRUNCATE operations.
;
;	V03-002	KBT0408		Keith B. Thompson	24-Nov-1982
;		Replace a movc with a movl and movw
;
;	V03-001	KBT0195		Keith B. Thompson	23-Aug-1982
;		Reorganize psects and rename entry point to single '$'
;
;	V02-010	CDS0001		C Saether		 5-Nov-1981
;		Set ifb$v_rw_attr flag in truncate routine.
;
;	V02-009	PSK0002		Paulina Knibbe		26-Aug-1981
;		Fix a broken branch by changing psects (again).
;
;	V02-008	RAS0018		Ron Schaefer		7-Aug-1981
;		Fix another broken branch for stream files by
;		changing psects.
;
;	V02-007	PSK0001		Paulina S. Knibbe	24-Jul-1981
;		Fix another broken branch.
;
;	V03-006	KPL0001		Peter Lieberwirth	 8-Jun-1981
;		Fix a broken branch.
;
;	V02-005	REFORMAT	Ron Schaefer	30-Jul-1980	09:54
;		Reformat the source.
;
;--
;


	.SBTTL	DECLARATIONS

;
; Include Files:
;

;
; Macros:
;

	$RABDEF
	$DEVDEF
	$IFBDEF
	$IRBDEF
	$BDBDEF
	$RMSDEF
    	$RJRDEF

;
; Equated Symbols:
;

;
; Own Storage:
;


	.SBTTL	$TRUNCATE ROUTINE

;++
; RM$TRUNCATE:
;	this routine truncates a magtape or disk file of sequential organization,
;	declaring eof at the current record pointer.  truncate must immediately
;	follow a successful $get, $find, or $update.
;	the file must not be accessed for block i/o.
;
; Calling sequence:
;
;	entered as a result of user's calling sys$truncate
;
; Input Parameters:
;
;	ap	user's argument list
;
; Implicit Inputs:
;
;	the contents of the rab
;
; Output Parameters:
;
;	r0	status code
;	r1	destroyed
;
; Implicit Outputs:
;
;	the sts field of the rab
;
; Completion Codes:
;
;	standard rms
;
; Side Effects:
;
;	there is no current record following a truncate
;
;--


;
; verify operation allowed (accessed for record i/o to a magtape or disk,
;	having a current record)
; and set eof to the record pointer, backspacing 1 block if magtape
;

	$ENTRY	RMS$TRUNCATE
	$TSTPT	TRUNCATE
	$RABSET	FAC=IFB$V_TRN,BIO=0,CFLG=1 ; set up stream

;
; (must be truncate accessed,
; not doing block i/o,
; clear find last)
;

	BBS	#IFB$V_DAP,(R10),NTTRUNC ; branch if network operation
	ASSUME	IFB$C_SEQ EQ 0
	TSTB	IFB$B_ORGCASE(R10)	; seq. file org.?
	BNEQ	ERRIOP			; branch if not
	ASSUME	DEV$V_REC EQ 0
	BLBS	IFB$L_PRIM_DEV(R10),ERRIOP ; branch if unit record dev.
	TSTW	IRB$W_CSIZ(R9)		; do we have a current record?
	BEQL	ERRCUR			; branch if not

;
; validity checks all o.k.
;
; if this is a magtape, backspace to rewrite the block just read.
;

	BBC	#DEV$V_SQD,IFB$L_PRIM_DEV(R10),20$ ; branch if not magtape
	MNEGL	#1,R6			; backspace 1 block
	BSBW	RM$SPACE_MT		; go space it
	BLBC	R0,ERRXIT		; get out on error

20$:	TSTB	IFB$B_JNLFLG(R10)	; Is the file being journaled?
    	BEQL	30$			; No, set eof and nrp pointers
    	PUSHR	#^M<R2, R3, R4 >	; Save the contents of registers
    	PUSHL	#RJR$_TRUNCATE		; Yes, journal the $TRUNCATE operation
    	JSB	RM$SEQJNL		; Constructed and write journal entry
    	POPR	#^M<R2, R3, R4 >	; Restore registers
    	BLBC	R0, ERRXIT		; Get out on error
;
; set nrp and eof from rp
;

30$:	MOVQ	IRB$L_RP(R9),IRB$L_NRP(R9)	; set nrp
	MOVL	IRB$L_RP(R9),IFB$L_EBK(R10)	; and eof
	MOVW	IRB$W_RP_OFF(R9),IFB$W_FFB(R10)
	SSB	#IFB$V_RW_ATTR,(R10)		; note to rewrite attributes.

;
; clean up current bdb.
;
; if the new eof vbn is in the buffer, point to it and say it's dirty,
; thus causing it to get rewritten with appropriate padding,
; else just release the buffer.
;

	MOVL	IRB$L_CURBDB(R9),R4	; is there a current bdb?
	BEQL	SUCXIT			; branch if not
	SUBL3	BDB$L_VBN(R4),IRB$L_RP_VBN(R9),R1 ; get relative vbn
	CVTLB	R1,R1			; make byte value
	BVS	40$			; branch if not in range
	CMPB	R1,BDB$B_REL_VBN(R4)	; is it in buffer?
	BGTRU	40$			; branch if not
	MOVB	R1,BDB$B_REL_VBN(R4)	; point to this block
	BISB2	#BDB$M_DRT,BDB$B_FLGS(R4) ; say dirty
	BRB	SUCXIT

;
; release unneeded bdb
;

40$:	BSBW	RM$RLNERR
	CLRL	IRB$L_CURBDB(R9)	; say no current bdb

;
; successful exit (fall thru to error exit)
;

SUCXIT:	SSB	#IRB$V_EOF,(R9)		; say at eof
	RMSSUC

;
; error exit  -  say no current record
;

ERRXIT:	CLRW	IRB$W_CSIZ(R9)
EXIT:	BRW	RM$EXRMS

;
;  perform network truncate function
;

NTTRUNC:
	BSBW	NT$TRUNCATE		; truncate file via remote fal
	BLBC	R0,ERRXIT		; branch on error
	BRB	SUCXIT			; branch aid

;
;  handle invalid device or organization error.
;

ERRIOP:	RMSERR	IOP
	BRB	EXIT

;
;  handle no current record error.
;

ERRCUR:	RMSERR	CUR
	BRB	EXIT

	.END
