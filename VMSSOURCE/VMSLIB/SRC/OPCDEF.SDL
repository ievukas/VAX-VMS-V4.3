{ OPCDEF.SDL - system definition file for OPCOM
{
{ Version:	'V04-000'
{
{****************************************************************************
{*									    *
{*  COPYRIGHT (c) 1978, 1980, 1982, 1984 BY				    *
{*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
{*  ALL RIGHTS RESERVED.						    *
{* 									    *
{*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
{*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
{*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
{*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
{*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
{*  TRANSFERRED.							    *
{* 									    *
{*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
{*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
{*  CORPORATION.							    *
{* 									    *
{*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
{*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
{* 									    *
{*									    *
{****************************************************************************

{++
{
{ FACILITY:  VAX/VMS System Macro Libraries
{
{ ABSTRACT:
{
{	This file contains the SDL source for OPCOM definitions.
{
{ ENVIRONMENT:
{
{	n/a
{
{--
{
{
{ AUTHOR:  The VMS Group	 CREATION DATE:  1-Aug-1976
{
{ MODIFICATION HISTORY:
{
{
{	V03-002	CWH3002		CW Hobbs		24-Aug-1983
{		Define REPLY and SOFTWARE operators, remove CLUSTER
{		request type since it won't be used.
{
{	V03-001	CWH3001		CW Hobbs		30-Jul-1983
{		Various and sundry things to make OPCOM distributed
{		across the cluster.
{-

{+
{ OPERATOR COMMUNICATIONS MESSAGE TYPES
{-
module $OPCDEF;


aggregate OPCDEF structure prefix OPC$;
    MS_TYPE byte unsigned;				/* MESSAGE TYPE 
    MS_TARGET_OVERLAY union;
        MS_TARGET byte unsigned;			/* MESSAGE TARGET 
        MS_ENAB byte unsigned;				/* MESSAGE ENABLES 
    end MS_TARGET_OVERLAY;
    MS_STATUS word unsigned;				/* MESSAGE STATUS 
    MS_RPLYID_OVERLAY union;
        MS_RPLYID longword unsigned;			/* REPLY ID 
	MS_MASK_OVERLAY union;
            MS_MASK longword unsigned;			/* MESSAGE MASK 
            MS_RQSTID longword unsigned;		/* REQUEST ID 
	end MS_MASK_OVERLAY;
    end MS_RPLYID_OVERLAY;
    MS_TEXT_OVERLAY union;
        MS_TEXT longword unsigned;			/* MESSAGE TEXT 
	MS_TEXT_FIELDS structure;
            MS_OUNIT word unsigned;			/* OPERATOR UNIT NUMBER 
            MS_ONAME character;				/* OPERATOR NAME 
	end MS_TEXT_FIELDS;
    end MS_TEXT_OVERLAY;
    FILL_1 word dimension 7 fill prefix OPCDEF tag $$;	/* SPACE FOR NAME 
    MS_OTEXT longword unsigned dimension 32;		/* OPERATOR TEXT 
    MS_MAXSZ_OVERLAY union;
        MS_MAXSZ longword unsigned;			/* MESSAGE MAX SIZE 
        
        	 					/* OPERATOR MESSAGE TYPES 
        constant(
              RQ_TERME					/* ENABLE TERMINAL 
            , RQ_LOGI					/* INITIALIZE THE LOG 
            , RQ_RQST					/* OPERATOR REQUEST 
            , RQ_REPLY					/* OPERATOR REPLY 
            , RQ_CANCEL					/* CANCEL REQUEST 
            , RQ_STATUS					/* REQUEST OPERATOR STATUS 
	    , RQ_SECURITY				/* MESSAGE TO SECURITY OPERATOR
            ) equals 1 increment 1  prefix OPC tag $;
	MS_MAXSZ_BITS structure;
            NM_CENTRL bitfield mask;			/* 
            NM_PRINT bitfield mask;
            NM_TAPES bitfield mask;
            NM_DISKS bitfield mask;
            NM_DEVICE bitfield mask;
            NM_CARDS bitfield mask;
            NM_NTWORK bitfield mask;
            NM_CLUSTER bitfield mask;
            NM_SECURITY bitfield mask;
            NM_REPLY bitfield mask;
            NM_SOFTWARE bitfield mask;
            NM_FILL_11 bitfield mask;
            NM_OPER1 bitfield mask;
            NM_OPER2 bitfield mask;
            NM_OPER3 bitfield mask;
            NM_OPER4 bitfield mask;
            NM_OPER5 bitfield mask;
            NM_OPER6 bitfield mask;
            NM_OPER7 bitfield mask;
            NM_OPER8 bitfield mask;
            NM_OPER9 bitfield mask;
            NM_OPER10 bitfield mask;
            NM_OPER11 bitfield mask;
            NM_OPER12 bitfield mask;
	end MS_MAXSZ_BITS;
    end MS_MAXSZ_OVERLAY;
end OPCDEF;

end_module $OPCDEF;
