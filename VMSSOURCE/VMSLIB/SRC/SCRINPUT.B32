%TITLE 'SCR$INPUT - Input routines for the screen package'
MODULE SCR$INPUT (
		IDENT = 'V04-000'	! File: SCRINPUT.B32 Edit: PLL1001
		) =
BEGIN
!
!****************************************************************************
!*									    *
!*  COPYRIGHT (c) 1978, 1980, 1982, 1984 BY				    *
!*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
!*  ALL RIGHTS RESERVED.						    *
!* 									    *
!*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
!*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
!*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
!*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
!*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
!*  TRANSFERRED.							    *
!* 									    *
!*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
!*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
!*  CORPORATION.							    *
!* 									    *
!*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
!*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
!* 									    *
!*									    *
!****************************************************************************
!

!++
! FACILITY:	Screen Management
!
! ABSTRACT:
!
!	This module contains routines which perform input from the screen
!	via keyboard or keypad.
!
! ENVIRONMENT:	User mode, Shared library routines.
!
! AUTHOR: P. Levesque, CREATION DATE: 18-Oct-1982
!
! MODIFIED BY:
!
! 1-001	- Original.   PLL 18-Oct-1982
!--


%SBTTL 'Declarations'
!
! SWITCHES:
!

!
! LINKAGES:
!
!	NONE
!
! TABLE OF CONTENTS:
!

FORWARD ROUTINE

	SCR$GET_SCREEN;			! Get text from screen

!
! The following is defined via a GLOBAL BIND.
!
! LIB$GET_SCREEN = SCR$GET_SCREEN
!

!
! INCLUDE FILES
!

REQUIRE 'SRC$:SCRPROLOG';		! defines psects, macros, tcb,
					!  wcb, & terminal symbols
!
! EXTERNAL REFERENCES
!

EXTERNAL ROUTINE
    SCR$$GET_TYPE_R3 : GET_TYPE_LINK, ! Get device type
    LIB$GET_INPUT;		! Get a line of text from SYS$INPUT.

EXTERNAL
	SCR$L_FLINKHEAD,	! Head of chain of TCB's
	SCR$L_CUROUTPUT;	! Pointer to current TCB

!<BLF/PAGE>

%SBTTL 'LIB$GET_SCREEN - Get Text from Screen'
! GLOBAL ROUTINE LIB$GET_SCREEN (
!				 INPUT_TEXT : REF BLOCK [,BYTE],
!				 PROMPT_STR : REF BLOCK [,BYTE],
!				 OUT_LEN    : REF VECTOR [,WORD]
!			        ) =
!++
! FUNCTIONAL DESCRIPTION:
!
!	This routine accepts input from the terminal into a
!	user-specified buffer.  An optional string may be given to be
!	used for a prompt.  If a third parameter is present, it will
!	be set to the length of the string read.
!
! CALLING SEQUENCE:
!
!	ret_status.wlc.v = LIB$GET_SCREEN (INPUT_TEXT.wt.dx 
!					   [,PROMPT_STR.rt.dx
!					   [,OUT_LEN.wwu.r]] )
!
! FORMAL PARAMETERS:
!
!	INPUT_TEXT.wt.dx 	Address of buffer descriptor.
!
!	PROMPT_STR.rt.dx	Optional.  Address of descriptor of
!				prompt string.
!
!	OUT_LEN.wwu.r		Optional.  Length of input string read.
!
! IMPLICIT INPUTS:
!
!	NONE
!
! IMPLICIT OUTPUTS:
!
!	NONE
!
! COMPLETION STATUS:
!
!	SS$_NORMAL	Normal successful completion
!
! SIDE EFFECTS:
!
!	NONE
!--

!+
! Equate to SCR$ entry point.
!_

GLOBAL BIND ROUTINE LIB$GET_SCREEN = SCR$GET_SCREEN ;
!<BLF/PAGE>

%SBTTL 'SCR$GET_SCREEN - Get Text from Screen'
GLOBAL ROUTINE SCR$GET_SCREEN (
				INPUT_TEXT : REF BLOCK [,BYTE],
				PROMPT_STR : REF BLOCK [,BYTE],
				OUT_LEN    : REF VECTOR [,WORD]
			      ) =
!++
! FUNCTIONAL DESCRIPTION:
!
!	This routine accepts input from the terminal into a
!	user-specified buffer.  An optional string may be given to be
!	used for a prompt.  If a third parameter is present, it will
!	be set to the length of the string read.
!
! CALLING SEQUENCE:
!
!	ret_status.wlc.v = SCR$GET_SCREEN (INPUT_TEXT.wt.dx 
!					   [,PROMPT_STR.rt.dx
!					   [,OUT_LEN.wwu.r]])
!
! FORMAL PARAMETERS:
!
!	INPUT_TEXT.wt.dx 	Address of buffer descriptor.
!
!	PROMPT_STR.rt.dx	Optional.  Address of descriptor of
!				prompt string.
!
!	OUT_LEN.wwu.r		Optional.  Length of input string read.
!
! IMPLICIT INPUTS:
!
!	NONE
!
! IMPLICIT OUTPUTS:
!
!	NONE
!
! COMPLETION STATUS:
!
!	Statuses returned by LIB$GET_INPUT.
!
! SIDE EFFECTS:
!
!	NONE
!--

    BEGIN

    BUILTIN
	AP,
	CALLG ;

    LOCAL
	TCB : REF BLOCK [, BYTE] ,	! Current terminal control block
					! Needed by $SCR$GET_TYPE
	TERM_TYPE,			! dummy arg - device type
	STATUS;

    STATUS = SCR$$GET_TYPE_R3 (SCR$C_GET_SCREEN; TCB, TERM_TYPE) ;	
					! this will call foreign terminal
					! code if necessary

    IF .TCB [SCR$B_TYPE] NEQ VTFOREIGN
    THEN
    	RETURN ( CALLG ( .AP, LIB$GET_INPUT)) 
    ELSE
	RETURN (.STATUS);		! foreign terminal handler does its
					! own input

    END;				! End of routine SCR$GET_SCREEN
!<BLF/PAGE>

END					! End of module LIB$SCREEN

ELUDOM
