	.TITLE	FOR$WRITE_IL - FORTRAN WRITE internal list-directed
	.IDENT	/1-001/		File: FORWRITEIF.MAR  Edit: SBL1001
;
;****************************************************************************
;*									    *
;*  COPYRIGHT (c) 1978, 1980, 1982, 1984 BY				    *
;*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
;*  ALL RIGHTS RESERVED.						    *
;* 									    *
;*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
;*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
;*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
;*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
;*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
;*  TRANSFERRED.							    *
;* 									    *
;*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
;*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
;*  CORPORATION.							    *
;* 									    *
;*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
;*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
;* 									    *
;*									    *
;****************************************************************************
;
;
;++
; FACILITY: FORTRAN Support Library - user callable
;
; ABSTRACT:
;
;	This module contains the entry point for the FORTRAN 
;	WRITE internal list-directed I/O statement.  It is simply
;	a call to FOR$$IO_BEG with bits in R0 which describe the
;	parameter list.  FOR$$IO_BEG interprets the parameters.
;
; MAINTENANCE NOTE:
;	The transfer vector (RTLVECTOR+ALLGBL) must have the following:
;
;	.TRANSFER	FOR$WRITE_IL
;	.MASK		FOR$$IO_BEG
;	JMP		FOR$WRITE_IL+2
;
;	This puts the correct mask in entry vector, that is FOR$$IO_BEG entry mask.
;	Furthermore this module must only use R0 and R1
;	since any other register might not be in the entry mask for FOR$$IO_BEG.
;
; ENVIRONMENT: User access mode; mixture of AST level or not
;
; AUTHOR: Steven B. Lionel, CREATION DATE: 21-April-1983
;
;
; Edit History:
;
; 1-001 - Original.  SBL 21-April-1983

	.SBTTL	DECLARATIONS

;
; INCLUDE FILES:
;

	$FORPAR				; Define inter-module FORTRAN symbols
	$ISBDEF				; Define statement type symbols

;
; EXTERNAL SYMBOLS:
;

	.DSABL	GBL			; Declare all external symbols
	.EXTRN	FOR$$IO_BEG		; common I/O statement processing
;+
; The following references are to make sure the necessary UDF and REC
; modules are loaded.  These are the routines which are called through
; the dispatch tables in FOR$$DISPAT.
;-
	.EXTRN	FOR$$UDF_WL0, FOR$$UDF_WL1, FOR$$UDF_WL9
	.EXTRN	FOR$$REC_WIL0, FOR$$REC_WIL1, FOR$$REC_WIL9

;
; MACROS:
;
;	NONE
;
; PSECT DECLARATIONS:
;

	.PSECT	_FOR$CODE PIC,USR,CON,REL,LCL,SHR,EXE,RD,NOWRT,LONG

;
; EQUATED SYMBOLS:
;


;
; OWN STORAGE:
;
;	NONE
;

	.SBTTL	FOR$WRITE_IL - WRITE internal list-directed

;++
; FUNCTIONAL DESCRIPTION:
;
;	Initialize the FORTRAN I/O system to perform
;	a WRITE internal list-directed I/O statement.
;
; CALLING SEQUENCE:
;
;	CALL FOR$WRITE_IL (user_vbl.rt.dx [, err_adr.j.r [, end_adr.j.r]])
;
; INPUT PARAMETERS:
;
;	user_vbl.rt.dx		User's string variable
;	[err_adr.j.r]		optional ERR= address
;	[end_adr.j.r]		optional END= address
;
; IMPLICIT INPUTS:
;
;	NONE except those used by FOR$$IO_BEG.
;
; OUTPUT PARAMETERS:
;
;	NONE
;
; IMPLICIT OUTPUTS:
;
;	NONE except those left by FOR$$IO_BEG.
;
; COMPLETION CODES:
;
;	NONE
;
; SIDE EFFECTS:
;
;	NONE except those of FOR$$IO_BEG.
;
;--

FOR$WRITE_IL::	.MASK	FOR$$IO_BEG
	MOVZBL	#ISB$K_ST_TY_WIL, R0	; Statement type
	JMP	G^FOR$$IO_BEG+2		; branch past call mask


	.END
