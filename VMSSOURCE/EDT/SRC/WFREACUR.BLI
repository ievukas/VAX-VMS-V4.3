%TITLE 'EDT$WFREACUR - read current line'
MODULE EDT$WFREACUR (				! Read current line
		IDENT = 'V04-000'			! File: WFREACUR.BLI Edit: JBS1004
		) =
BEGIN
!
!****************************************************************************
!*									    *
!*  COPYRIGHT (c) 1978, 1980, 1982, 1984 BY				    *
!*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
!*  ALL RIGHTS RESERVED.						    *
!* 									    *
!*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
!*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
!*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
!*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
!*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
!*  TRANSFERRED.							    *
!* 									    *
!*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
!*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
!*  CORPORATION.							    *
!* 									    *
!*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
!*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
!* 									    *
!*									    *
!****************************************************************************
!

!++
! FACILITY:	EDT -- The DEC Standard Editor
!
! ABSTRACT:
!
!	Read current line.
!
! ENVIRONMENT:	Runs at any access mode - AST reentrant
!
! AUTHOR: Bob Kushlis, CREATION DATE: October 16, 1978
!
! MODIFIED BY:
!
! 1-001	- Original.  DJS 23-Feb-1981.  This module was created by
!	extracting routine EDT$$RD_CURLN  from module EDTWF.
! 1-002	- Regularized headers.  JBS 25-Feb-1981
! 1-003	- regularize headers.  JBS 19-Mar-1981
! 1-004	- Remove EDT$$SET_WKLN.  JBS 14-Sep-1982
!--


%SBTTL 'Declarations'
!
! TABLE OF CONTENTS:
!

REQUIRE 'EDTSRC:TRAROUNAM';

FORWARD ROUTINE
    EDT$$RD_CURLN : NOVALUE;

!
! INCLUDE FILES:
!

REQUIRE 'EDTSRC:EDTREQ';

!
! MACROS:
!
!	NONE
!
! EQUATED SYMBOLS:
!
!	NONE
!
! OWN STORAGE:
!
!	NONE
!
! EXTERNAL REFERENCES:
!
!	In the routine

%SBTTL 'EDT$$RD_CURLN  - read current line'

GLOBAL ROUTINE EDT$$RD_CURLN 			! Read current line
    : NOVALUE =

!++
! FUNCTIONAL DESCRIPTION:
!
!	Insure that the current line in the current buffer is accessable in
!	memory.  Read the current bucket and update the EDT$$A_WK_LN  pointer to the
!	current line in the bucket.
!
! FORMAL PARAMETERS:
!
!	NONE
!
! IMPLICIT INPUTS:
!
!	EDT$$A_CUR_BUF
!	EDT$$A_WK_BUK
!	EDT$$G_WK_CURBUK
!
! IMPLICIT OUTPUTS:
!
!	EDT$$A_WK_LN
!
! ROUTINE VALUE:
!
!	NONE
!
! SIDE EFFECTS:
!
!	NONE
!
!--

    BEGIN

    EXTERNAL ROUTINE
	EDT$$WF_MAKECUR : NOVALUE,
	EDT$$RD_NXTLN;

    EXTERNAL
	EDT$$A_CUR_BUF : REF TBCB_BLOCK,	! Current text buffer control block
	EDT$$A_WK_BUK : 			! Pointer to current bucket
	    REF BLOCK [WF_BUKT_SIZE, BYTE] FIELD (WFB_FIELDS),
	EDT$$G_WK_CURBUK,			! Number of the current bucket
	EDT$$A_WK_LN : REF LIN_BLOCK;		! Pointer to the work line

!+
! Get the current bucket.
!-

    IF (.EDT$$G_WK_CURBUK NEQ .EDT$$A_CUR_BUF [TBCB_CUR_BUKT])
    THEN
	EDT$$WF_MAKECUR (.EDT$$A_CUR_BUF [TBCB_CUR_BUKT]);

!+
! And update line point to point to the current line.
!-

    IF (.EDT$$A_CUR_BUF [TBCB_LINE_ADDR] EQL .EDT$$A_WK_BUK [WFB_END])
    THEN
	EDT$$RD_NXTLN ()
    ELSE
	EDT$$A_WK_LN = CH$PTR (.EDT$$A_WK_BUK, .EDT$$A_CUR_BUF [TBCB_LINE_ADDR]);

    END;					! of routine EDT$$RD_CURLN

!<BLF/PAGE>

END						! of module EDT$WFREACUR

ELUDOM
