	.TITLE	PAS$EXPO - Return binary exponent of floating values
	.IDENT	/1-001/			; File: PASEXPO.MAR Edit: SBL1001

;
;****************************************************************************
;*									    *
;*  COPYRIGHT (c) 1978, 1980, 1982, 1984 BY				    *
;*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
;*  ALL RIGHTS RESERVED.						    *
;* 									    *
;*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
;*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
;*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
;*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
;*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
;*  TRANSFERRED.							    *
;* 									    *
;*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
;*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
;*  CORPORATION.							    *
;* 									    *
;*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
;*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
;* 									    *
;*									    *
;****************************************************************************
;

;++
; FACILITY: Pascal Language Support
;
; ABSTRACT:
;
;	This module contains four routines which return the binary exponent
;	of a floating value for each of the four floating data types.
;
; ENVIRONMENT: Runs at any access mode, AST Reentrant
;
; AUTHOR: Steven B. Lionel, CREATION DATE: 4-Nov-1980
;
; MODIFIED BY:
;
; 1-001	- Original. SBL 4-Nov-1980
;--

	.SBTTL	DECLARATIONS
;
; LIBRARY MACRO CALLS:
;
;	NONE
;
; EXTERNAL DECLARATIONS:
;
	.DSABL	GBL		; Force all external symbols to be declared
;	NONE
;
; MACROS:
;
;	NONE
;
; EQUATED SYMBOLS:
;
;	NONE
;
; OWN STORAGE:
;
;	NONE
;
; PSECT DECLARATIONS:
;
	.PSECT _PAS$CODE PIC, USR, CON, REL, LCL, SHR, -
			EXE, RD, NOWRT, LONG


	.SBTTL	PAS$EXPO_F - Return binary exponent of F_floating
;++
; FUNCTIONAL DESCRIPTION:
;
;	This routine returns the unbiased binary exponent of an F_floating value.
;
; CALLING SEQUENCE:
;
;	Result.wl.v = PAS$EXPO_F (Single.rf.r)
;
; FORMAL PARAMETERS:
;
;	Single	- F_floating argument
;
; IMPLICIT INPUTS:
;
;	NONE
;
; IMPLICIT OUTPUTS:
;
;	NONE
;
; ROUTINE VALUE:
;
;	The unbiased binary exponent of the argument
;
; SIDE EFFECTS:
;
;	SS$_ROPRAND - if the argument is a reserved operand
;
;--

	.ENTRY	PAS$EXPO_F, ^M<>	; Entry point

	TSTF	@4(AP)			; Test for reserved operand
	EXTZV	#7, #8, @4(AP), R0	; Fetch exponent
	SUBL2	#128, R0		; Unbias exponent
	RET				; End of routine PAS$EXPO_F

	.SBTTL	PAS$EXPO_D - Return binary exponent of D_floating
;++
; FUNCTIONAL DESCRIPTION:
;
;	This routine returns the unbiased binary exponent of a D_floating value.
;
; CALLING SEQUENCE:
;
;	Result.wl.v = PAS$EXPO_D (Double.rd.r)
;
; FORMAL PARAMETERS:
;
;	Double	- D_floating argument
;
; IMPLICIT INPUTS:
;
;	NONE
;
; IMPLICIT OUTPUTS:
;
;	NONE
;
; ROUTINE VALUE:
;
;	The unbiased binary exponent of the argument
;
; SIDE EFFECTS:
;
;	SS$_ROPRAND - if the argument is a reserved operand
;
;--

	.ENTRY	PAS$EXPO_D, ^M<>	; Entry point

	TSTD	@4(AP)			; Test for reserved operand
	EXTZV	#7, #8, @4(AP), R0	; Fetch exponent
	SUBL2	#128, R0		; Unbias exponent
	RET				; End of routine PAS$EXPO_D

	.SBTTL	PAS$EXPO_G - Return binary exponent of G_floating
;++
; FUNCTIONAL DESCRIPTION:
;
;	This routine returns the unbiased binary exponent of a G_floating value.
;
; CALLING SEQUENCE:
;
;	Result.wl.v = PAS$EXPO_G (Double.rg.r)
;
; FORMAL PARAMETERS:
;
;	Double	- G_floating argument
;
; IMPLICIT INPUTS:
;
;	NONE
;
; IMPLICIT OUTPUTS:
;
;	NONE
;
; ROUTINE VALUE:
;
;	The unbiased binary exponent of the argument
;
; SIDE EFFECTS:
;
;	SS$_ROPRAND - if the argument is a reserved operand
;
;--

	.ENTRY	PAS$EXPO_G, ^M<>	; Entry point

	TSTG	@4(AP)			; Test for reserved operand
	EXTZV	#4, #11, @4(AP), R0	; Fetch exponent
	SUBL2	#1024, R0		; Unbias exponent
	RET				; End of routine PAS$EXPO_G

	.SBTTL	PAS$EXPO_H - Return binary exponent of H_floating
;++
; FUNCTIONAL DESCRIPTION:
;
;	This routine returns the unbiased binary exponent of an H_floating value.
;
; CALLING SEQUENCE:
;
;	Result.wl.v = PAS$EXPO_H (Quad.rh.r)
;
; FORMAL PARAMETERS:
;
;	Quad	- H_floating argument
;
; IMPLICIT INPUTS:
;
;	NONE
;
; IMPLICIT OUTPUTS:
;
;	NONE
;
; ROUTINE VALUE:
;
;	The unbiased binary exponent of the argument
;
; SIDE EFFECTS:
;
;	SS$_ROPRAND - if the argument is a reserved operand
;
;--

	.ENTRY	PAS$EXPO_H, ^M<>	; Entry point

	TSTH	@4(AP)			; Test for reserved operand
	EXTZV	#0, #15, @4(AP), R0	; Fetch exponent
	SUBL2	#16384, R0		; Unbias exponent
	RET				; End of routine PAS$EXPO_H

	.END				; End of module PAS$EXPO
