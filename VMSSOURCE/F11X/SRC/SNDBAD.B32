MODULE SNDBAD (
		LANGUAGE (BLISS32),
		IDENT = 'V04-000'
		) =
BEGIN

!
!****************************************************************************
!*									    *
!*  COPYRIGHT (c) 1978, 1980, 1982, 1984 BY				    *
!*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
!*  ALL RIGHTS RESERVED.						    *
!* 									    *
!*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
!*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
!*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
!*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
!*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
!*  TRANSFERRED.							    *
!* 									    *
!*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
!*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
!*  CORPORATION.							    *
!* 									    *
!*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
!*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
!* 									    *
!*									    *
!****************************************************************************

!++
!
! FACILITY:  F11ACP Structure Level 2
!
! ABSTRACT:
!
!	This routine sends a message to the bad block analysis program to
!	deal with a file that is marked bad.
!
! ENVIRONMENT:
!
!	STARLET operating system, including privileged system services
!	and internal exec routines.
!
!--
!
!
! AUTHOR:  Andrew C. Goldstein,	 CREATION DATE:  26-May-1978  14:50
!
! MODIFIED BY:
!
!	V03-007	CDS0006		Christian D. Saether	 2-July-1984
!		Need to have enhanced privileges for $ASSIGN also.
!
!	V03-006	CDS0005		Christian D. Saether	20-Jun-1984
!		Raise/lower process biocnt and astcnt around
!		$qio to mailbox so that it does not fail for
!		lack of those quotas.
!
!	V03-005	CDS0004		Christian D. Saether	30-Dec-1983
!		Use L_NORM linkage and BIND_COMMON macro.
!
!	V03-004	CDS0003		Christian D. Saether	 5-Oct-1983
!		Fix bug restoring privs to PCB.
!
!	V03-003	CDS0002		Christian D. Saether	13-Jan-1983
!		Separately save and restore PHD privs.
!
!	V03-002	CDS0001		Christian D. Saether	28-Dec-1982
!		Give the process DETACH and SETPRV for the CREPRC of
!		the bad block scanner, and BYPASS to assign channel
!		to bad block scanner mailbox.
!		Also use PIC_DESC instead of DESCRIPTOR.
!
!	V03-001	LMP0037		L. Mark Pilant,		28-Jun-1982  15:10
!		Remove the addressing mode module switch.
!
!	V02-003	LMP0013		L. Mark Pilant,		15-Mar-1981 16:20
!		Remove unused and unneeded sorage (to fix Linker truncation
!		errors).
!
!	V02-002	ACG0230		Andrew C. Goldstein,	24-Dec-1981  0:17
!		Go to general mode addressing for externals
!
!	V02-001	ACG0167		Andrew C. Goldstein,	16-Apr-1980  19:28
!		Previous revision history moved to F11B.REV
!**


LIBRARY 'SYS$LIBRARY:LIB.L32';
REQUIRE 'SRC$:FCPDEF.B32';

GLOBAL ROUTINE SEND_BADSCAN (FID) : L_NORM NOVALUE =

!++
!
! FUNCTIONAL DESCRIPTION:
!
!	This routine sends a message to the bad block analysis program to
!	deal with a file that is marked bad.
!
!
! CALLING SEQUENCE:
!	SEND_BADSCAN (ARG1)
!
! INPUT PARAMETERS:
!	ARG1: address of file ID of file
!
! IMPLICIT INPUTS:
!	CURRENT_UCB: UCB of device containing file
!
! OUTPUT PARAMETERS:
!	NONE
!
! IMPLICIT OUTPUTS:
!	NONE
!
! ROUTINE VALUE:
!	NONE
!
! SIDE EFFECTS:
!	bad block scan process started
!
!--

BEGIN

MAP
	FID		: REF BBLOCK;	! file ID argument

LOCAL
	PTR		: REF BBLOCK,
	SAVE_PRIV	: VECTOR [4],
	DESC0		: VECTOR [2],	! descriptor
	MBX_CHANNEL	: WORD;		! channel number for mailbox

BIND_COMMON;

EXTERNAL
	CTL$GL_PCB	: ADDRESSING_MODE (GENERAL),
	CTL$GL_PHD	: ADDRESSING_MODE (GENERAL);

! Assign a channel to the bad block scanner mailbox. Note that we simply
! give up on errors - the file will be left marked for delete and bad and
! can be picked up and retried later.
!

PIC_DESC ('ACP$BADBLOCK_MBX', DESC0);

! We don't need to raise bio, ast counts for the assign, only need detach
! for the creprc, but just do it all once for all the services that follow.
!

PTR = .CTL$GL_PCB;
PTR [PCB$W_BIOCNT] = .PTR [PCB$W_BIOCNT] + 1;
PTR [PCB$W_ASTCNT] = .PTR [PCB$W_ASTCNT] + 1;
SAVE_PRIV [0] = .(PTR [PCB$Q_PRIV]);
SAVE_PRIV [1] = .(PTR [PCB$Q_PRIV]+4);
BBLOCK [ PTR [PCB$Q_PRIV], PRV$V_DETACH] = 1;
BBLOCK [ PTR [PCB$Q_PRIV], PRV$V_SETPRV] = 1;
BBLOCK [ PTR [PCB$Q_PRIV], PRV$V_BYPASS] = 1;

PTR = .CTL$GL_PHD;
SAVE_PRIV [2] = .(PTR [PHD$Q_PRIVMSK]);
SAVE_PRIV [3] = .(PTR [PHD$Q_PRIVMSK]+4);
BBLOCK [ PTR [PHD$Q_PRIVMSK], PRV$V_DETACH] = 1;
BBLOCK [ PTR [PHD$Q_PRIVMSK], PRV$V_SETPRV] = 1;
BBLOCK [ PTR [PHD$Q_PRIVMSK], PRV$V_BYPASS] = 1;

IF NOT $ASSIGN (CHAN = MBX_CHANNEL,
		DEVNAM = DESC0)
THEN 
    BEGIN
    (PTR [PHD$Q_PRIVMSK]) = .SAVE_PRIV [2];
    (PTR [PHD$Q_PRIVMSK]+4) = .SAVE_PRIV [3];

    PTR = .CTL$GL_PCB;
    PTR [PCB$W_BIOCNT] = .PTR [PCB$W_BIOCNT] - 1;
    PTR [PCB$W_ASTCNT] = .PTR [PCB$W_ASTCNT] - 1;
    (PTR [PCB$Q_PRIV]) = .SAVE_PRIV [0];
    (PTR [PCB$Q_PRIV]+4) = .SAVE_PRIV [1];

    RETURN
    END;

! Send the message. Then attempt to create the bad block scan process. If one
! is already active, the create will fail due to duplicate process names,
! and the message will simply be queued.
!

IF $QIO	(CHAN = .MBX_CHANNEL,
	 FUNC = IO$_WRITELBLK OR IO$M_NOW,
	 EFN  = MBX_EFN,
	 P1   = 
		BEGIN
		! Construct the message in the message buffer.
		!

		LOCAL
		    MESSAGE	: BBLOCK [BBS$C_LENGTH]; ! message buffer

		CH$FILL (0, BBS$C_LENGTH, MESSAGE);
		MESSAGE[BBS$B_MSGTYPE] = MSG$_SCANBAD;
		MESSAGE[BBS$W_SEQUENCE] = 0;
		MESSAGE[BBS$L_UCB] = .CURRENT_UCB;
		CH$MOVE (FID$C_LENGTH, .FID, MESSAGE[BBS$W_FID]);
		MESSAGE
		END,
	 P2   = BBS$C_LENGTH
	)

THEN
    BEGIN

    LOCAL
	DESC1		: VECTOR [2],	! descriptor
	DESC2		: VECTOR [2];	! descriptor

    PIC_DESC ('SYS$SYSTEM:BADBLOCK.EXE', DESC0);
    PIC_DESC ('_TTA1:', DESC1);
    PIC_DESC ('BADBLOCK_SCAN', DESC2);

    $CREPRC (
	IMAGE  = DESC0,
	INPUT  = DESC1,
	OUTPUT = DESC1,
	ERROR  = DESC1,
	PRVADR = UPLIT (-1, -1),
	PRCNAM = DESC2,
	BASPRI = 4,
	UIC    = 1^16 + 3
	);

    END;

$DASSGN (CHAN = .MBX_CHANNEL);

(PTR [PHD$Q_PRIVMSK]) = .SAVE_PRIV [2];
(PTR [PHD$Q_PRIVMSK]+4) = .SAVE_PRIV [3];

PTR = .CTL$GL_PCB;
PTR [PCB$W_BIOCNT] = .PTR [PCB$W_BIOCNT] - 1;
PTR [PCB$W_ASTCNT] = .PTR [PCB$W_ASTCNT] - 1;
(PTR [PCB$Q_PRIV]) = .SAVE_PRIV [0];
(PTR [PCB$Q_PRIV]+4) = .SAVE_PRIV [1];

END;					! end of routine SEND_BADSCAN

END
ELUDOM
