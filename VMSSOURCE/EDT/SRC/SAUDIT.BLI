%TITLE 'EDT$SAUDIT - Terminate recovery processing'
MODULE EDT$SAUDIT (				! Terminate recovery processing
		IDENT = 'V04-000'			! File: SAUDIT.BLI Edit: REM1020
		) =
BEGIN
!
!****************************************************************************
!*									    *
!*  COPYRIGHT (c) 1978, 1980, 1982, 1984 BY				    *
!*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
!*  ALL RIGHTS RESERVED.						    *
!* 									    *
!*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
!*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
!*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
!*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
!*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
!*  TRANSFERRED.							    *
!* 									    *
!*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
!*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
!*  CORPORATION.							    *
!* 									    *
!*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
!*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
!* 									    *
!*									    *
!****************************************************************************
!

!++
! FACILITY:	EDT -- The DEC Standard Editor
!
! ABSTRACT:
!
!	Terminate recovery processing on the journal file.
!
! ENVIRONMENT:	Runs at any access mode - AST reentrant
!
! AUTHOR: Bob Kushlis, CREATION DATE: 6-AUG-1979
!
! MODIFIED BY:
!
! 1-001	- Original.  DJS 18-FEB-1981.  This module was created by
!	extracting routine EDT$$TERMIN_RCOVMOD  from module EDTCTR.
! 1-002	- Regularized the headers.  JBS 24-Feb-1981
! 1-003	- Fixed the file name and module name.  JBS 04-Mar-1981
! 1-004	- Change EDT$$OPEN_APPEND_FILE to EDT$$OAPP_FILDEF .  JBS 02-Apr-1981
! 1-005	- Use the journal RAB rather than the command RAB.  JBS 16-Aug-1981
! 1-006 - Add additional parameters to edt$$cls_fi.  STS 15-Jan-1982
! 1-007 - Don't close Vax files and then reopen.  STS 18-Jan-1982
! 1-008 - deallocate dynamic descriptors. STS 10-Feb-1982
! 1-009 - Define literals for callable EDT. STS 10-Mar-1982
! 1-010	- Change EDT$$G_JOU to EDT$$V_OPTIONS.  JBS 25-Mar-1982
! 1-011	- Correct errors in PDP-11 configuration.  JBS 26-Mar-1982
! 1-012	- The file I/O routines return status.  JBS 26-Mar-1982
! 1-013	- On the re-open of the PDP-11's journal file, use SEQ to indicate
!	   APPEND.  JBS 01-Apr-1982
! 1-014	- Print a message on a CLOSE error.  JBS 12-Apr-1982
! 1-015 - Move an END to fix /REC problem.  SMB 20-Apr-1982
! 1-016	- Pass default file name in RHB parameter.  JBS 16-Jun-1982
! 1-017 - Make use of bit masks for options word. 17-Aug-1982
! 1-018	- Fix references to the EDT$M_ symbols.  JBS 23-Aug-1982
! 1-019	- Improve the appearance of the listing.  JBS 17-Jun-1983
! 1-020 - Added logic to maintain EDT$$G_TIN_OBUFPOS durring /RECOVERY mode.
!	  REM 11-Oct-1983
!--


%SBTTL 'Declarations'
!
! TABLE OF CONTENTS:
!

REQUIRE 'EDTSRC:TRAROUNAM';

FORWARD ROUTINE
    EDT$$TERMIN_RCOVMOD : NOVALUE;

!
! INCLUDE FILES:
!

%IF %BLISS (BLISS32)
%THEN

REQUIRE 'EDTSRC:SYSSYM';

%FI

REQUIRE 'EDTSRC:EDTREQ';

!
! MACROS:
!
!+
! Macro for the default name of the journal file.  This is defined as a macro
! so we can use %CHARCOUNT to pass the length of the string.
!-
!<BLF/NOFORMAT>

MACRO
    JOU_DEFLT = %STRING ('.JOU;') % ;	! File type of .JOU, latest version.

!<BLF/FORMAT>
!
! EQUATED SYMBOLS:
!
!	NONE
!
! OWN STORAGE:
!
!	NONE
!
! EXTERNAL REFERENCES:
!
!	In the routine

%SBTTL 'EDT$$TERMIN_RCOVMOD  - Terminate recovery processing'

GLOBAL ROUTINE EDT$$TERMIN_RCOVMOD 		! Terminate recovery mode
    : NOVALUE =

!++
! FUNCTIONAL DESCRIPTION:
!
!	Terminate recovery mode.  This routine closes the journal file
!	being used to recover and re-opens it to record subsequent
!	typein.  On VMS this is not needed because the journal file
!	was opened for input/output.
!
! FORMAL PARAMETERS:
!
!	NONE
!
! IMPLICIT INPUTS:
!
!	EDT$$V_OPTIONS
!	EDT$$A_JOU_NAM
!	EDT$$G_JOU_NAMLEN
!
! IMPLICIT OUTPUTS:
!
!	EDT$$G_RCOV_MOD
!	EDT$$G_TIN_OBUFPOS
!
! ROUTINE VALUE:
!
!	NONE
!
! SIDE EFFECTS:
!
!	Closes and re-opens the journal file on PDP-11s, may do nothing on VMS.
!
!--

    BEGIN

    EXTERNAL ROUTINE
	EDT$$FIOPN_ERR : NOVALUE,
	EDT$$FATAL_IOERR : NOVALUE,
	EDT$$CALLFIO;

%IF %BLISS (BLISS32)
%THEN

    EXTERNAL ROUTINE
	STR$FREE1_DX;

%ELSE

    EXTERNAL LITERAL
	EDT$K_OPEN_OUTPUT_SEQ;

    MESSAGES ((NOJNLFIL));
%FI

    EXTERNAL
	EDT$$V_OPTIONS : BITVECTOR [32],	! Options; bit 2 = /NOJOURNAL
	EDT$$A_JOU_NAM,				! Name of journal file
	EDT$$G_JOU_NAMLEN,			! length of journal file name
	EDT$$G_TIN_OBUFPOS,			! Position in journal output buffer
	EDT$$G_RCOV_MOD;			! Are we in recovery mode?

    EXTERNAL LITERAL
	EDT$M_NOJOURNAL,
	EDT$K_CLOSE,
	EDT$K_JOURNAL_FILE;

    LOCAL
	STATUS,
	FILE_DESC : BLOCK [8, BYTE],
	RHB_DESC : BLOCK [8, BYTE],
	RHB_LEN,
	STS,
	STV;

    MESSAGES ((JOUFILCLO));
!+
! This routine is only called if we are in recovery mode.
!-
    ASSERT (.EDT$$G_RCOV_MOD);

%IF %BLISS (BLISS32)
%THEN
    FILE_DESC [DSC$B_DTYPE] = DSC$K_DTYPE_T;
    FILE_DESC [DSC$B_CLASS] = DSC$K_CLASS_D;
    RHB_DESC [DSC$B_DTYPE] = DSC$K_DTYPE_T;
    RHB_DESC [DSC$B_CLASS] = DSC$K_CLASS_D;
%FI

    FILE_DESC [DSC$A_POINTER] = 0;
    FILE_DESC [DSC$W_LENGTH] = 0;
    RHB_DESC [DSC$A_POINTER] = 0;
    RHB_DESC [DSC$W_LENGTH] = 0;
!
    RHB_LEN = %CHARCOUNT (JOU_DEFLT);
    STRING_DESC (RHB_DESC, RHB_LEN, CH$PTR (UPLIT (JOU_DEFLT)));

    IF ((.EDT$$V_OPTIONS AND EDT$M_NOJOURNAL) NEQ 0)
    THEN
	BEGIN
	STRING_DESC (FILE_DESC, EDT$$G_JOU_NAMLEN, .EDT$$A_JOU_NAM);
	STATUS = EDT$$CALLFIO (EDT$K_CLOSE, EDT$K_JOURNAL_FILE, FILE_DESC, 0);

	IF ( NOT .STATUS)
	THEN
	    BEGIN
	    EDT$$FIOPN_ERR (EDT$_JOUFILCLO, FILE_DESC);
	    EDT$$FATAL_IOERR ();
	    END;

	END;

%IF %BLISS (BLISS16)
%THEN
!+
! If this is a PDP-11 base system, we must close the file and re-open it for append.
! We use SEQ not to make the journal file sequenced but to indicate that the journal
! file should be appended to.
!-

    IF ((.EDT$$V_OPTIONS AND EDT$M_NOJOURNAL) EQL 0)	! NOT /NOJOURNAL
    THEN
	BEGIN
	STRING_DESC (FILE_DESC, EDT$$G_JOU_NAMLEN, .EDT$$A_JOU_NAM);
	STATUS = EDT$$CALLFIO (EDT$K_CLOSE, EDT$K_JOURNAL_FILE, 0, 0);

	IF ( NOT .STATUS)
	THEN
	    BEGIN
	    EDT$$FIOPN_ERR (EDT$_JOUFILCLO, FILE_DESC);
	    EDT$$FATAL_IOERR ();
	    END;

	STATUS = EDT$$CALLFIO (EDT$K_OPEN_OUTPUT_SEQ, EDT$K_JOURNAL_FILE, FILE_DESC, RHB_DESC);

	IF ( NOT .STATUS)
	THEN
	    BEGIN
	    EDT$$FIOPN_ERR (EDT$_NOJNLFIL, FILE_DESC);
	    EDT$$FATAL_IOERR ();
	    END;

	END;

%FI

!+
! Recovery mode is over.
!-
    EDT$$G_RCOV_MOD = 0;
    edt$$g_tin_obufpos = 0;
!+
! On the VAX we need to deallocate the dynamic descriptors
!-

%IF %BLISS (BLISS32)
%THEN
    STR$FREE1_DX (FILE_DESC);
    STR$FREE1_DX (RHB_DESC);
%FI

    END;					! of routine EDT$$TERMIN_RCOVMOD

!<BLF/PAGE>

END						! of module EDT$SAUDIT

ELUDOM
