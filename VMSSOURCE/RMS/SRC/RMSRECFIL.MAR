	.TITLE	RMSRECFIL - Recover file operations
	.IDENT	/V04-000/
;
;****************************************************************************
;*									    *
;*  COPYRIGHT (c) 1978, 1980, 1982, 1984 BY				    *
;*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
;*  ALL RIGHTS RESERVED.						    *
;* 									    *
;*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
;*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
;*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
;*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
;*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
;*  TRANSFERRED.							    *
;* 									    *
;*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
;*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
;*  CORPORATION.							    *
;* 									    *
;*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
;*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
;* 									    *
;*									    *
;****************************************************************************

	.PSECT	REC_CODE,EXE,NOWRT,PIC
;
;++
; Facility: RMS32 Recovery
;
; Abstract:
;
;		This routine is merged into the Recovery Control Process to
;		serve as the RMS recovery agent.  This module contains the
;		code necessary to recover RMS file operations.
;
; Environment:
;
;		Star processor running Starlet exec.  This routine is to be
;		merged into the RCP (Recovery Control Process) to handle
;		RMS Recovery operations.  This routine never executes outside
;		the context of the RCP.
;
;		This routine must be PIC since it will be merged into the
;		address space of the RCP.
;
; Author: 	Peter Lieberwirth	 Creation Date: 16-Jun-1982
;
; Modified By:
;
;--

.SUBTITLE Declarations

;++
;	See RMSRECOVR.MAR for a description of the register use in
;	these routines.
;--

;
; Include Files
;

;
; Macros
;

	$RRPDEF
	$RJRDEF		; RMS journal entry format
	$RIMPDEF	; RMS recovery impure storage definition
	$RMSRDEF	; RMS operations
	$FABDEF
	$RABDEF
	$RFBDEF

	$TMPOFFDEF	; offsets into AP for CALL
;
; local constants - for time being
;

RMS$_UNSUPPORTED=0

.SUBTITLE RM$RR_FILE	- PROCESS FILE OPERATIONS
;++
; 
; routine name: RM$RR_FILE
;
;	This rouine receives a journal entry from the RCP and branches off
;	to the routine designed to process this particular RMS operation.
;
;	Operations handled in this module:
;
;		enter
;		erase
;		extend
;		rename
;
;	Other operations, such as record operations, are handled in other
;	modules.  Some operations need no support at all.
;
; Calling sequence:
;
;	
;
; Input parameters:
;
;	r11	- points to impure storage
;	r10	- points to RRP
;	r9	- current RMS journal entry
;
; Output parameters:
;
;
;
;
; Side effects:
;
;	Registers for the processing routines are set up.
;
;--

RM$RR_FILE::				;

;
; dispatch to routine to process particular entry
;
	$CASE	RJR$B_OP(R9),TYPE=B,-	; dispatch to action routine
		DISPL=< RR$FILE_CLOSE,-	; close
			RR$FILE_CONN,-	; connect
			RR$FILE_CREAT,-	; create
			RR$FILE_DELET,-	; delete
			RR$FILE_DISC,-	; disconnect
			RR$FILE_DISPL,-	; display
			RR$FILE_ENTER,-	; enter
			RR$FILE_ERASE,-	; erase
			RR$FILE_EXTEN,-	; extend
			RR$FILE_FREE,-	; free
			RR$FILE_FIND,-	; find
			RR$FILE_GET,-	; get
			RR$FILE_MODFY,-	; modify
			RR$FILE_OPEN,-	; open
			RR$FILE_PARSE,-	; parse
			RR$FILE_PUT,-	; put
			RR$FILE_READ,-	; read
			RR$FILE_RELEAS,-; release
			RR$FILE_RENAM,-	; rename
			RR$FILE_REWIN,-	; rewind
			RR$FILE_SPACE,-	; space
			RR$FILE_SRCH,-	; search
			RR$FILE_TRUNC,-	; truncate
			RR$FILE_UPDAT,-	; update
			RR$FILE_WAIT,-	; wait
			RR$FILE_WRITE>	; write

	LOG	<BAD FILE RJR OPERATION>
	DUMPJNL
	MOVL	#RCP$_NOTALLJEN,R0
	RET

.SUBTITLE -	RR$FILE_ENTER	- Process $ENTER
;++
; 
; routine name:	
;
;
;
; Calling sequence:
;
;	
;
; Input parameters:
;
;
;
;
;
; Output parameters:
;
;
;
;
; Side effects:
;
;--

RR$FILE_ENTER:
		MOVL	#RMS$_UNSUPPORTED,R0
		RET

.SUBTITLE -	RR$FILE_ERASE	- Process $ERASE
;++
; 
; routine name:	
;
;
;
; Calling sequence:
;
;	
;
; Input parameters:
;
;
;
;
;
; Output parameters:
;
;
;
;
; Side effects:
;
;--

RR$FILE_ERASE:
		MOVL	#RMS$_UNSUPPORTED,R0
		RET

.SUBTITLE -	RR$FILE_EXTEN	- Process $EXTEND
;++
; 
; routine name:	
;
;
;
; Calling sequence:
;
;	
;
; Input parameters:
;
;
;
;
;
; Output parameters:
;
;
;
;
; Side effects:
;
;--

RR$FILE_EXTEN:
		MOVL	#RMS$_UNSUPPORTED,R0
		RET

.SUBTITLE -	RR$FILE_RENAM	- Process $RENAME
;++
; 
; routine name:	
;
;
;
; Calling sequence:
;
;	
;
; Input parameters:
;
;
;
;
;
; Output parameters:
;
;
;
;
; Side effects:
;
;--

RR$FILE_RENAM:
		MOVL	#RMS$_UNSUPPORTED,R0
		RET

.SUBTITLE	
.SUBTITLE Unsupported Operations for FILE
.SUBTITLE	

;++
; 
; routine name:	All the unsupported operations.
;
;--

.SUBTITLE -	RR$FILE_CONN	- $CONNECT
.SUBTITLE -	RR$FILE_DISC	- $DISCONNECT
.SUBTITLE -	RR$FILE_DISPL	- $DISPLAY
.SUBTITLE -	RR$FILE_FIND	- $FIND
.SUBTITLE -	RR$FILE_FREE	- $FREE
.SUBTITLE -	RR$FILE_GET	- $GET
.SUBTITLE -	RR$FILE_MODFY	- $MODIFY
.SUBTITLE -	RR$FILE_PARSE	- $PARSE
.SUBTITLE -	RR$FILE_READ	- $READ
.SUBTITLE -	RR$FILE_RELEAS	- $RELEASE
.SUBTITLE -	RR$FILE_REWIN	- $REWIND
.SUBTITLE -	RR$FILE_SPACE	- $SPACE
.SUBTITLE -	RR$FILE_SRCH	- $SEARCH
.SUBTITLE -	RR$FILE_WAIT	- $WAIT

.SUBTITLE -	RR$FILE_CLOSE	- $CLOSE
.SUBTITLE -	RR$FILE_CREAT	- $CREATE
.SUBTITLE -	RR$FILE_DELET	- $DELETE
.SUBTITLE -	RR$FILE_OPEN	- $OPEN
.SUBTITLE -	RR$FILE_PUT	- $PUT
.SUBTITLE -	RR$FILE_TRUNC	- $TRUNCATE
.SUBTITLE -	RR$FILE_UPDAT	- $UPDATE
.SUBTITLE -	RR$FILE_WRITE	- $WRITE

RR$FILE_CLOSE:
RR$FILE_CREAT:
RR$FILE_DELET:
RR$FILE_OPEN:
RR$FILE_PUT:
RR$FILE_TRUNC:
RR$FILE_UPDAT:
RR$FILE_WRITE:

RR$FILE_CONN:
RR$FILE_DISC:
RR$FILE_DISPL:
RR$FILE_FIND:
RR$FILE_FREE:
RR$FILE_GET:
RR$FILE_MODFY:
RR$FILE_PARSE:
RR$FILE_READ:
RR$FILE_RELEAS:
RR$FILE_REWIN:
RR$FILE_SPACE:
RR$FILE_SRCH:
RR$FILE_WAIT: 

	MOVL	#RMS$_UNSUPPORTED,R0
	RET

	.END	
