	$BEGIN	RMS0FIND,000,RM$RMS,<DISPATCH FOR FIND OPERATION>

;
;****************************************************************************
;*									    *
;*  COPYRIGHT (c) 1978, 1980, 1982, 1984 BY				    *
;*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
;*  ALL RIGHTS RESERVED.						    *
;* 									    *
;*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
;*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
;*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
;*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
;*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
;*  TRANSFERRED.							    *
;* 									    *
;*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
;*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
;*  CORPORATION.							    *
;* 									    *
;*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
;*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
;* 									    *
;*									    *
;****************************************************************************
;
;++
; Facility: rms32
;
; Abstract:
;		this routine is the highest level control
;		routine to perform the $find function.
;

;
; Environment:
;		star processor running starlet exec.
;
; Author:	L F Laverdure,	 creation date: 3-FEB-1977
;
; Modified By:
;
;	V03-004	KPL0003		Peter Lieberwirth	26-Jul-1983
;		Identify RJR=FIND if this is AT journaling.
;
;	V03-003	KPL0002		Peter Lieberwirth	24-Jul-1983
;		If AT journaling, get info from RAB describing user's request.
;
;	V03-002	KPL0001		Peter Lieberwirth	27-May-1983
;		Insulate the case branch from truncation errors.
;
;	V03-001	KBT0182		Keith B. Thompson	23-Aug-1982
;		Reorganize psects
;
;	V005	REFORMAT	Ken Henderson	30-JUL-1980	7:38
;		the code was reformatted
;
;--
;


	.SBTTL	DECLARATIONS

;
; Include Files:
;

;
; Macros:
;

	$IFBDEF
	$IRBDEF
	$DPSECT
	$RJRDEF

;
; Equated Symbols:
;

;
; Own Storage:
;


	.SBTTL	RMS$FIND - COMMON $FIND SETUP AND DISPATCH ROUTINE

;++
; RMS$FIND
;
; this routine performs common rab function setup followed
; by dispatch to organization-dependent $find code
;
; Calling sequence:
;
;	entered from exec as a result of user's calling sys$find
;	(e.g., by using the $find macro)
;
; Input Parameters:
;
;	ap	user's argument list addr
;
; Implicit Inputs:
;
;	the contents of the rab and related irab and ifab.
;
; Output Parameters:
;
;	r1	destroyed
;	r0	status code
;
; Implicit Outputs:
;
;	various fields of the rab are filled in to reflect
;	the status of the $find operation. (see rms functional
; 	spec for a complete list.)
;
;	the irab is similarly updated.
;
;	a completion ast is queued if specified in the user arglist.
;
; Completion Codes:
;
;	standard rms (see functional spec for list).
;
; Side Effects:
;
;	none
;
;--

	$ENTRY	RMS$FIND
	$TSTPT	FIND
	$RABSET	FAC=IFB$V_GET		; do common setup

;
; returns to user on error
;

	SSB	#IRB$V_FIND,(R9)	; flag this as a find

;
; If AT journaling, get some information from RAB.
;
	BBC	#IFB$V_AT,IFB$B_JNLFLG(R10),5$	; skip if not AT jnling
	MOVL	#RJR$_FIND,R1		; input for AT_COM_RAB
	JSB	RM$AT_COM_RAB		; get RAB data into RJR
5$:

;
; dispatch to org-dependent code
;

	CASE	TYPE=B, SRC=IFB$B_ORGCASE(R10),-
	DISPLIST=<10$, 20$, 30$>	; seq, rel, idx routines

	.IF	NE $$RMSTEST&$$RMS_TBUGCHK
	BRW	RM$ERRORG
	.ENDC

10$:	JMP	RM$FIND1		; sequential
20$:	JMP	RM$FIND2		; relative
30$:	JMP	RM$FIND3		; ISAM file

	.END
