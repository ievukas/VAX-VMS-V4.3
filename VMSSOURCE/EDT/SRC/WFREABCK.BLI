%TITLE 'EDT$WFREABCK - read previous line'
MODULE EDT$WFREABCK (				! Read previous line
		IDENT = 'V04-000'			! File: WFREABCK.BLI Edit: TSS1005
		) =
BEGIN
!
!****************************************************************************
!*									    *
!*  COPYRIGHT (c) 1978, 1980, 1982, 1984 BY				    *
!*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
!*  ALL RIGHTS RESERVED.						    *
!* 									    *
!*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
!*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
!*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
!*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
!*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
!*  TRANSFERRED.							    *
!* 									    *
!*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
!*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
!*  CORPORATION.							    *
!* 									    *
!*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
!*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
!* 									    *
!*									    *
!****************************************************************************
!

!++
! FACILITY:	EDT -- The DEC Standard Editor
!
! ABSTRACT:
!
!	Read the previous line from the work file system.
!
! ENVIRONMENT:	Runs at any access mode - AST reentrant
!
! AUTHOR: Bob Kushlis, CREATION DATE: October 16, 1978
!
! MODIFIED BY:
!
! 1-001	- Original.  DJS 23-Feb-1981.  This module was created by
!	extracting routine EDT$$RD_PRVLN  from module EDTWF.
! 1-002	- regularize headers.  JBS 19-Mar-1981
! 1-003 - Change index for line numbers from 10 to 15.  SMB 18-Jan-1982
! 1-004	- Remove EDT$$SET_WKLN.  JBS 14-Sep-1982
! 1-005 - Modify to use new 48 bit macro. STS 01-Oct-1982
!--


%SBTTL 'Declarations'
!
! TABLE OF CONTENTS:
!

REQUIRE 'EDTSRC:TRAROUNAM';

FORWARD ROUTINE
    EDT$$RD_PRVLN;

!
! INCLUDE FILES:
!

REQUIRE 'EDTSRC:EDTREQ';

!
! MACROS:
!
!	NONE
!
! EQUATED SYMBOLS:
!
!	NONE
!
! OWN STORAGE:
!
!	NONE
!
! EXTERNAL REFERENCES:
!
!	In the routine

%SBTTL 'EDT$$RD_PRVLN  - read previous line'

GLOBAL ROUTINE EDT$$RD_PRVLN 			! Read previous line
    =

!++
! FUNCTIONAL DESCRIPTION:
!
!	Read a line backwards.  The line preceding the current line becomes the
!	current line.  If we are already at the top, return a 0 otherwise return
!	a 1.
!
! FORMAL PARAMETERS:
!
!	NONE
!
! IMPLICIT INPUTS:
!
!	EDT$$A_CUR_BUF
!	EDT$$A_WK_BUK
!	EDT$$G_WK_CURBUK
!	EDT$$L_LNO0
!
! IMPLICIT OUTPUTS:
!
!	EDT$$A_CUR_BUF
!	EDT$$A_WK_LN
!
! ROUTINE VALUE:
!
!	1 = previous line read successfully
!	0 = there is no previous line
!
! SIDE EFFECTS:
!
!	NONE
!
!--

    BEGIN

    EXTERNAL ROUTINE
	EDT$$WF_MAKECUR : NOVALUE;

    EXTERNAL
	EDT$$A_CUR_BUF : REF TBCB_BLOCK,	! Current text buffer control block
	EDT$$A_WK_BUK : 			! Pointer to current bucket
	    REF BLOCK [WF_BUKT_SIZE, BYTE] FIELD (WFB_FIELDS),
	EDT$$G_WK_CURBUK,			! Number of the current bucket
	EDT$$L_LNO0 : LNOVECTOR [14],
	EDT$$A_WK_LN : REF LIN_BLOCK;		! Pointer to work line

    EDT$$A_CUR_BUF [TBCB_CHAR_POS] = 0;
!+
! See if we are at the beginning of a bucket.
!-

    IF (.EDT$$A_CUR_BUF [TBCB_LINE_ADDR] EQL WFB_FIXED_SIZE)
    THEN

	IF (.EDT$$A_WK_BUK [WFB_PREV_BUKT] EQL 0)
	THEN
	    RETURN (0)				! cannot read backward at beginning of buffer.
	ELSE
	    BEGIN
!+
! Read the previous bucket and position to it's end.
!-
	    EDT$$WF_MAKECUR (.EDT$$A_WK_BUK [WFB_PREV_BUKT]);
	    EDT$$A_CUR_BUF [TBCB_LINE_ADDR] = .EDT$$A_WK_BUK [WFB_END];
	    EDT$$A_CUR_BUF [TBCB_CUR_BUKT] = .EDT$$G_WK_CURBUK;
	    END;

!+
! Now, move back a line.
!-
    EDT$$A_CUR_BUF [TBCB_LINE_ADDR] = .EDT$$A_CUR_BUF [TBCB_LINE_ADDR] - 	!
    CH$RCHAR (CH$PTR (.EDT$$A_WK_BUK, .EDT$$A_CUR_BUF [TBCB_LINE_ADDR] - 1)) - 	!
    LIN_FIXED_SIZE - 1;
    SUBLINE (NUMBER_ONE, EDT$$A_CUR_BUF [TBCB_CUR_LIN]);
!+
! Get the address of the current line.
!-
    EDT$$A_WK_LN = CH$PTR (.EDT$$A_WK_BUK, .EDT$$A_CUR_BUF [TBCB_LINE_ADDR]);
    RETURN (1);
    END;					! of routine EDT$$RD_PRVLN

!<BLF/PAGE>

END						! of module EDT$WFREABCK

ELUDOM
