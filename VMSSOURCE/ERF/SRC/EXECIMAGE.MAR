	.Title Exec_image
	.Ident /V04-000/

;****************************************************************************
;*									    *
;*  COPYRIGHT (c) 1978, 1980, 1982, 1984 BY				    *
;*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
;*  ALL RIGHTS RESERVED.						    *
;* 									    *
;*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
;*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
;*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
;*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
;*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
;*  TRANSFERRED.							    *
;* 									    *
;*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
;*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
;*  CORPORATION.							    *
;* 									    *
;*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
;*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
;* 									    *
;*									    *
;****************************************************************************

;
; Input:
;
;	call exec_image (ixfer,....)
;
;	4(ap) = address of loaded image to be call
;	8(ap) = address of first parameter to be passed to loaded image
;	  .
;	  .
;	  .
; This routine puts the address of the target routine in R4 and pushes
; all other arguments on the stack and calls the target routine.
;
	.psect	_img$code,exe,nowrt,pic,shr,gbl
	.entry	exec_image,^m<r2,r3,r4,r5,r6,r7,r8,r9,r10,r11>
	addl3	(ap),#1,R3		; Bump the arg. count
	mull3	r3,#4,r3		; Calc. offset to last arg. + 1 longword
	addl3	ap,r3,r3		; Add offset to base to get address
	subl3	#1,(ap),r2		; Adjust arg. count for loop count
	movl	r2,r4			; Set arg count for call
10$:	pushl	-(r3)			; Put aurgments on the stack
	sobgtr	r2,10$			; Do we have all arg?
	movl	4(ap),r0		; Yes, then get target routine addr
	calls	r4,@(r0)		; Go to it
	ret

	.end
