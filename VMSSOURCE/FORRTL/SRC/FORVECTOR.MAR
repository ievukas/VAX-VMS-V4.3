	.TITLE	FOR$VECTOR - Entry vectors for FORRTL.EXE
	.IDENT	/1-004/			; File: FORVECTOR.MAR Edit: SBL1004

;
;****************************************************************************
;*									    *
;*  COPYRIGHT (c) 1978, 1980, 1982, 1984 BY				    *
;*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
;*  ALL RIGHTS RESERVED.						    *
;* 									    *
;*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
;*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
;*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
;*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
;*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
;*  TRANSFERRED.							    *
;* 									    *
;*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
;*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
;*  CORPORATION.							    *
;* 									    *
;*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
;*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
;* 									    *
;*									    *
;****************************************************************************
;

;++
; FACILITY: Run-Time Library - FORTRAN Language Support
;
; ABSTRACT:
;
;	This module contains the entry vector definitions for the
;	VAX-11 Run-Time Library shareable image FORRTL.EXE
;
; ENVIRONMENT: User mode, AST Reentrant
;
; AUTHOR: Steven B. Lionel, CREATION DATE: 29-October-1982
;
; MODIFIED BY:
;
; 1-001	- Original. SBL 29-October-1982
; 1-002 - Add FOR$$IO_BEG.  SBL 11-May-1983
; 1-003 - Add FOR$READ_IL and FOR$WRITE_IL.  SBL 19-May-1983
; 1-004 - Add all remaining FOR$ routines, plus those FOR$$ routines
;	  referenced by COM$ routines.  SBL 1-Jul-1983
;--

	.SBTTL	DECLARATIONS
;
; LIBRARY MACRO CALLS:
;
;	NONE
;
; EXTERNAL DECLARATIONS:
;
	.DSABL	GBL		; Force all external symbols to be declared
;
; MACROS:
;

;+
; Macro to define an entry vector for a CALL entry point
;-

	.MACRO	VCALL	NAME, ALTMSK
	.EXTRN		NAME
	.TRANSFER	NAME
	.IF B ALTMSK
	.MASK		NAME
	.IFF
	.MASK		ALTMSK
	.ENDC
	JMP		NAME+2
	.ENDM

;+
; Macro to define an entry vector for a JSB entry point
;-

	.MACRO	VJSB	NAME
	.EXTRN		NAME
	.TRANSFER	NAME
	JMP		NAME
	.BLKB		2
	.ENDM

;+
; Macro to define an alias for the next vectored entry point
;-

	.MACRO	ALIAS	NAME
	.TRANSFER	NAME
	.ENDM


;
; EQUATED SYMBOLS:
;
;	NONE
;
; OWN STORAGE:
;
;	NONE
;
; PSECT DECLARATIONS:
;
	.PSECT $FOR$VECTOR PIC, USR, CON, REL, LCL, SHR, -
			   EXE, RD, NOWRT, LONG


	.SBTTL	FORRTL Vector

;+
; Define vectored entry points for the FORTRAN Language Support procedures
; by module in alphabetical order.
;
; Any additions to this file should be reflected in
; COM$:FORRTLVEC.DAT.  All new entry points must be appended to the end
; of the list.  NEVER change existing entries unless you are sure that
; what you do won't break existing programs.
;-

; Module FOR$$CB

	VJSB	FOR$$CB_GET
	ALIAS	FOR$$CB_RET
	VJSB	FOR$$CB_POP
	VJSB	FOR$$CB_PUSH
	VCALL	FOR$$FP_MATCH

; Module FOR$BACKSPACE

	VCALL	FOR$BACKSPACE

; Module FOR$CLOSE

	VCALL	FOR$CLOSE

; Module FOR$CVTRT

	ALIAS	FOR$CNV_OUT_D
	VCALL	FOR$CVT_D_TD
	ALIAS	FOR$CNV_OUT_E
	VCALL	FOR$CVT_D_TE
	ALIAS	FOR$CNV_OUT_F
	VCALL	FOR$CVT_D_TF
	ALIAS	FOR$CNV_OUT_G
	VCALL	FOR$CVT_D_TG
	VCALL	FOR$CVT_F_TD
	VCALL	FOR$CVT_F_TE
	VCALL	FOR$CVT_F_TF
	VCALL	FOR$CVT_F_TG
	VCALL	FOR$CVT_G_TD
	VCALL	FOR$CVT_G_TE
	VCALL	FOR$CVT_G_TF
	VCALL	FOR$CVT_G_TG
	VCALL	FOR$CVT_H_TD
	VCALL	FOR$CVT_H_TE
	VCALL	FOR$CVT_H_TF
	VCALL	FOR$CVT_H_TG

; Module FOR$DECODE_MF

	VCALL	FOR$DECODE_MF	FOR$$IO_BEG

; Module FOR$DECODE_MO

	VCALL	FOR$DECODE_MO	FOR$$IO_BEG

; Module FOR$DEFINE_FILE

	VCALL	FOR$DEF_FILE
	VCALL	FOR$DEF_FILE_W

; Module FOR$DELETE

	VCALL	FOR$DELETE
	VCALL	FOR$DELETE_D

; Module FOR$ENCODE_MF

	VCALL	FOR$ENCODE_MF	FOR$$IO_BEG

; Module FOR$ENCODE_MO

	VCALL	FOR$ENCODE_MO	FOR$$IO_BEG

; Module FOR$ENDFILE

	VCALL	FOR$ENDFILE

; Module FOR$ERRSNS

	VCALL	FOR$$ERRSNS_SAV
	VCALL	FOR$ERRSNS
	VCALL	FOR$ERRSNS_W

; Module FOR$EXIT

	VCALL	FOR$EXIT
	VCALL	FOR$EXIT_W

; Module FOR$FIND

	VCALL	FOR$FIND

; Module FOR$INI_DES

	VJSB	FOR$INI_DES1_R2
	VJSB	FOR$INI_DES2_R3
	VJSB	FOR$INI_DESC_R6

; Module FOR$INQUIRE

	VCALL	FOR$INQUIRE

; Module FOR$IO_ELEM

	VCALL	FOR$IO_B_R
	VCALL	FOR$IO_B_V
	VCALL	FOR$IO_DC_R
	VCALL	FOR$IO_DC_V
	VCALL	FOR$IO_D_R
	VCALL	FOR$IO_D_V
	VCALL	FOR$IO_FC_R
	VCALL	FOR$IO_FC_V
	VCALL	FOR$IO_F_R
	VCALL	FOR$IO_F_V
	VCALL	FOR$IO_GC_R
	VCALL	FOR$IO_GC_V
	VCALL	FOR$IO_G_R
	VCALL	FOR$IO_G_V
	VCALL	FOR$IO_H_R
	VCALL	FOR$IO_H_V
	VCALL	FOR$IO_LU_R
	VCALL	FOR$IO_LU_V
	VCALL	FOR$IO_L_R
	VCALL	FOR$IO_L_V
	VCALL	FOR$IO_T_DS
	VCALL	FOR$IO_T_V_DS
	VCALL	FOR$IO_WU_R
	VCALL	FOR$IO_WU_V
	VCALL	FOR$IO_W_R
	VCALL	FOR$IO_W_V
	VCALL	FOR$IO_X_DA
	VCALL	FOR$IO_X_NL
	VCALL	FOR$IO_X_SB
	VCALL	FOR$IO_X_SE

; Module FOR$IO_END

	VCALL	FOR$IO_END

; Module FOR$OPEN

	VCALL	FOR$OPEN

; Module FOR$PAUSE

	VCALL	FOR$PAUSE

; Module FOR$RAB

	VCALL	FOR$RAB

; Module FOR$READ_DF

	VCALL	FOR$READ_DF	FOR$$IO_BEG

; Module FOR$READ_DO

	VCALL	FOR$READ_DO	FOR$$IO_BEG

; Module FOR$READ_DU

	VCALL	FOR$READ_DU	FOR$$IO_BEG

; Module FOR$READ_IF

	VCALL	FOR$READ_IF	FOR$$IO_BEG

; Module FOR$READ_IO

	VCALL	FOR$READ_IO	FOR$$IO_BEG

; Module FOR$READ_KF

	VCALL	FOR$READ_KF	FOR$$IO_BEG

; Module FOR$READ_KO

	VCALL	FOR$READ_KO	FOR$$IO_BEG

; Module FOR$READ_KU

	VCALL	FOR$READ_KU	FOR$$IO_BEG

; Module FOR$READ_SF

	VCALL	FOR$READ_SF	FOR$$IO_BEG

; Module FOR$READ_SL

	VCALL	FOR$READ_SL	FOR$$IO_BEG

; Module FOR$READ_SN

	VCALL	FOR$READ_SN	FOR$$IO_BEG

; Module FOR$READ_SO

	VCALL	FOR$READ_SO	FOR$$IO_BEG

; Module FOR$READ_SU

	VCALL	FOR$READ_SU	FOR$$IO_BEG

; Module FOR$REWIND

	VCALL	FOR$REWIND

; Module FOR$REWRITE_SF

	VCALL	FOR$REWRITE_SF	FOR$$IO_BEG

; Module FOR$REWRITE_SO

	VCALL	FOR$REWRITE_SO	FOR$$IO_BEG

; Module FOR$REWRITE_SU

	VCALL	FOR$REWRITE_SU	FOR$$IO_BEG

; Module FOR$SECNDS

	VCALL	FOR$SECNDS

; Module FOR$STOP

	VCALL	FOR$STOP

; Module FOR$UNLOCK

	VCALL	FOR$UNLOCK

; Module FOR$WRITE_DF

	VCALL	FOR$WRITE_DF	FOR$$IO_BEG

; Module FOR$WRITE_DO

	VCALL	FOR$WRITE_DO	FOR$$IO_BEG

; Module FOR$WRITE_DU

	VCALL	FOR$WRITE_DU	FOR$$IO_BEG

; Module FOR$WRITE_IF

	VCALL	FOR$WRITE_IF	FOR$$IO_BEG

; Module FOR$WRITE_IO

	VCALL	FOR$WRITE_IO	FOR$$IO_BEG

; Module FOR$WRITE_SF

	VCALL	FOR$WRITE_SF	FOR$$IO_BEG

; Module FOR$WRITE_SL

	VCALL	FOR$WRITE_SL	FOR$$IO_BEG

; Module FOR$WRITE_SN

	VCALL	FOR$WRITE_SN	FOR$$IO_BEG

; Module FOR$WRITE_SO

	VCALL	FOR$WRITE_SO	FOR$$IO_BEG

; Module FOR$WRITE_SU

	VCALL	FOR$WRITE_SU	FOR$$IO_BEG


;+
; End of initial FORRTL vector.  All subsequent additions must be made
; after this point.
;-

;+
; FOR$$IO_BEG is never called from outside of FORRTL, but its entry mask
; needs to be made available to VMSRTL, hence its inclusion here.
;-

; Module FOR$$IO_BEG
	VCALL	FOR$$IO_BEG

; Module FOR$READ_IL
	VCALL	FOR$READ_IL	FOR$$IO_BEG

; Module FOR$WRITE_IL
	VCALL	FOR$WRITE_IL	FOR$$IO_BEG

; Module FOR$BITOPS

	VCALL	FOR$BITEST
	VCALL	FOR$BJTEST
	VCALL	FOR$IIBCLR
	VCALL	FOR$IIBITS
	VCALL	FOR$IIBSET
	VCALL	FOR$IISHFTC
	VCALL	FOR$IMVBITS
	VCALL	FOR$JIBCLR
	VCALL	FOR$JIBITS
	VCALL	FOR$JIBSET
	VCALL	FOR$JISHFTC
	VCALL	FOR$JMVBITS

; Module FOR$DATE

	VCALL	FOR$DATE

; Module FOR$DATE_T_DS

	VCALL	FOR$DATE_T_DS

; Module FOR$IDATE

	VCALL	FOR$IDATE

; Module FOR$JDATE

	VCALL	FOR$JDATE

; Module FOR$LEX

	VCALL	FOR$LGE
	VCALL	FOR$LGT
	VCALL	FOR$LLE
	VCALL	FOR$LLT

; Module FOR$RANDOM

	VCALL	FOR$IRAN
	ALIAS	FOR$RANDU_W
	VCALL	FOR$RANDU

; Module FOR$TIME

	VCALL	FOR$TIME

; Module FOR$TIME_T_DS

	VCALL	FOR$TIME_T_DS

;+
; Internal entry points that are called by COM$ (PDP-11 Compatibility)
; modules.
;-

; Module FOR$$ERROR

	VCALL	FOR$$ERR_OPECLO

; Module FOR$$SIGNAL

	VCALL	FOR$$SIGNAL_STO
	VCALL	FOR$$SIG_FATINT
	VCALL	FOR$$SIG_NO_LUB

; Module FOR$ERRSNS

	VCALL	FOR$$INIT_ERRSET

; Module FOR$$VM

	VCALL	FOR$$FREE_VM
	VCALL	FOR$$GET_VM

	.END					; End of module FOR$VECTOR
