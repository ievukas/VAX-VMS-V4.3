pli$$protvcha: procedure(display_ptr,protfixb) options(ident('1-001'));
/*
*****************************************************************************
**									    *
**  COPYRIGHT (c) 1978, 1980, 1982, 1984 BY				    *
**  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
**  ALL RIGHTS RESERVED.						    *
** 									    *
**  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
**  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
**  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
**  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
**  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
**  TRANSFERRED.							    *
** 									    *
**  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
**  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
**  CORPORATION.							    *
** 									    *
**  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
**  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
** 									    *
**									    *
*****************************************************************************

facility: VAX-11 PL/I RUNTIME LIBRARY

abstract: This routine converts the protection field of a file into 4 char(4)
	varying strings containing the characters R, W, E and D.

author:	C Spitz

date:	16-JUL-1980

*/

/* external definitions */
%include plifildsp;

/* parameter declarations */
dcl	protfixb		fixed bin(15), /* protection field of file */
	display_ptr		pointer; /* address of the display block */

/* local data - automatic */
dcl	(i,j)			fixed bin(31);

/* local data - static */
dcl	letter(0:3)		char static init('R','W','E','D');

/* based storage */
dcl	chars(0:3)		char(4) var
				based(addr(display_ptr -> system_protection));
dcl	protect(0:15)		bit based(addr(protfixb));

do i = 0 to 3;
	chars(i) = '';
	do j = 0 to 3;
		if ^protect(4*i+j) then chars(i) = chars(i)||letter(j);
		end;
	end;
end;
