module $IMGDMPDEF;

/*
/* Version:	'V04-000'
/*
/****************************************************************************
/*									    *
/*  COPYRIGHT (c) 1978, 1980, 1982, 1984 BY				    *
/*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
/*  ALL RIGHTS RESERVED.						    *
/* 									    *
/*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
/*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
/*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
/*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
/*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
/*  TRANSFERRED.							    *
/* 									    *
/*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
/*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
/*  CORPORATION.							    *
/* 									    *
/*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
/*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
/* 									    *
/*									    *
/****************************************************************************

/*
/* Misc data block for an image dump
/*
/*	V03-003	WMC0003		Wayne Cardoza	30-Jun-1983
/*		IAFPERM value no longer needed.
/*
/*	V03-002	WMC0002		Wayne Cardoza	30-Apr-1983
/*		Add still more GETJPI items.
/*
/*	V03-001	WMC0001		Wayne Cardoza	20-Apr-1983
/*		Add more GETJPI items.
/*
aggregate IMGDMP structure prefix IMGDMP$;
	constant VERSION equals 3 prefix IMGDMP$ tag C;
	R0 longword unsigned;		/* Registers
	R1 longword unsigned;
	R2 longword unsigned;
	R3 longword unsigned;
	R4 longword unsigned;
	R5 longword unsigned;
	R6 longword unsigned;
	R7 longword unsigned;
	R8 longword unsigned;
	R9 longword unsigned;
	R10 longword unsigned;
	R11 longword unsigned;
	SP longword unsigned;
	AP longword unsigned;
	FP longword unsigned;
	FIRST_MAP longword unsigned;	/* first map page
	USRSTK longword unsigned;	/* top of user stack (CTL$AL_STACK+12)
	VERSION longword unsigned;	/* version to make dump and analysis consistent
	/* The following items are from GETJPI
	FREE_P0 longword unsigned;
	FREE_P1 longword unsigned;
	ASTACT longword unsigned;
	ASTEN longword unsigned;
	CURPRIV quadword unsigned;
	EFCS longword unsigned;
	EFCU longword unsigned;
	BIOCNT longword unsigned;
	BIOLM longword unsigned;
	BUFIO longword unsigned;
	BYTCNT longword unsigned;
 	BYTLM longword unsigned;
	DIOCNT longword unsigned;
	DIOLM longword unsigned;
	DIRIO longword unsigned;
	FILCNT longword unsigned;	
	FILLM longword unsigned;
	PRCCNT longword unsigned;
	PRCLM longword unsigned;
	TQCNT longword unsigned;
	TQLM longword unsigned;
	ASTCNT longword unsigned;
	ASTLM longword unsigned;
	ENQCNT longword unsigned;
	ENQLM longword unsigned;
	/* The following fields describe relocated address space
	KSTK_BLK longword unsigned;	/* File block of kernel stack
	KSTK_VA  longword unsigned;	/* Original base VA
	KSTK_SIZ longword unsigned;	/* Size in pages
	ESTK_BLK longword unsigned;	/* EXEC stack
	ESTK_VA  longword unsigned;
	ESTK_SIZ longword unsigned;
	VECPAG_BLK longword unsigned;	/* Vector page
	VECPAG_VA  longword unsigned;
	VECPAG_SIZ longword unsigned;
	PIO_BLK longword unsigned;	/* PIO (RMS) pages
	PIO_VA  longword unsigned;
	PIO_SIZ longword unsigned;
	IMGCTX_BLK longword unsigned;	/* Image activator context page
	IMGCTX_VA  longword unsigned;
	IMGCTX_SIZ longword unsigned;
	USRCTX_BLK longword unsigned;	/* User writeable context pages
	USRCTX_VA  longword unsigned;
	USRCTX_SIZ longword unsigned;
	constant LENGTH equals . prefix IMGDMP$ tag C;
end IMGDMP;
end_module $IMGDMPDEF;

module $IMGMOVDEF;
/*
/* New VA for misc pieces of P1
/*
aggregate IMGMOV structure prefix IMGMOV$;
	KSTK longword unsigned;		/* Kernel stack
	ESTK longword unsigned;		/* Exec stack
	VECPAG longword unsigned;	/* Vector page
	PIO longword unsigned;		/* PIO (RMS) PAGES
	IMGCTX longword unsigned;	/* Image activator context page
	USRCTX longword unsigned;	/* User writeable context pages
	constant LENGTH equals . prefix IMGMOV$ tag C;
end IMGMOV;
end_module $IMGMOVDEF;
