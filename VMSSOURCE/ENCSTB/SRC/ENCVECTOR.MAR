	.TITLE	ENCRYPT$VECTOR transfer vector for ENCRYPSHR
	.IDENT	'V04-000'
;
;****************************************************************************
;*									    *
;*  COPYRIGHT (c) 1978, 1980, 1982, 1984 BY				    *
;*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
;*  ALL RIGHTS RESERVED.						    *
;* 									    *
;*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
;*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
;*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
;*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
;*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
;*  TRANSFERRED.							    *
;* 									    *
;*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
;*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
;*  CORPORATION.							    *
;* 									    *
;*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
;*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
;* 									    *
;*									    *
;****************************************************************************
;
;++
;   FACILITY:
;
;	VAX/VMS Data Encryption Facility
;
;   ABSTRACT:
;
;	The transfer vector provides a release independant method
;	of accessing Encrypt facility functions.
;
;   ENVIRONMENT:
;
;	Native mode, user mode
;
;   AUTHOR:
;
;	J. Eric Pollack, 6-April-1983
;
;   MODIFIED BY:
;
;	V01-004 JEP0005		J. Eric Pollack		15-Sep-1983
;		Add file encrypt entrypoints
;
;	V01-003	JEP0004		J. Eric Pollack
;		Revise entrypoint names
;
;	V01-002	JEP0003		J. Eric Pollack
;		Correct table construction
;
;--

	.PSECT	$VECTOR_0_ENCRYP, PIC, SHR, NOWRT, EXE

;
; Define macro to set up transfer vectors
;

	.MACRO	transfer entry_point
	.TRANSFER	entry_point
	.MASK		entry_point		;Entry point mask
	BRW		entry_point+2		;Go to main routine code
	.ENDM	transfer

ENCRYPT$TRANSFER:
	transfer	ENCRYPT$INIT		;HOL Initialize
	transfer	ENCRYPT$ENCRYPT		;HOL Encrypt
	transfer	ENCRYPT$DECRYPT		;HOL Decrypt
	transfer	ENCRYPT$FINI		;HOL Finit
	transfer	ENCRYPT$INIT_ASYN	;Initialize
	transfer	ENCRYPT$ENCRYPT_ASYN	;Encrypt
	transfer	ENCRYPT$DECRYPT_ASYN	;Decrypt
	transfer	ENCRYPT$FINI_ASYN	;Finish
	transfer	ENCRYPT$DEFINE_KEY	;Define_key
	transfer	ENCRYPT$DELETE_KEY	;Delete_key
	transfer	ENCRYPT$$DES		;DES primitive
	transfer	ENCRYPT$$ALGORITHM_NAME	; Internal lookup fn.
	transfer	ENCRYPT$$COMPRESS_KEY	; Internal key function
	transfer	ENCRYPT$$FORCE_PARITY	; Internal parity fn.
	transfer	ENCRYPT$$NUL		;NUL primitive
    	transfer	ENCRYPT$STATISTICS	; return stream statistics
	transfer	ENCRYPT$$CVT_TO_HEX	; convert key value
	transfer	ENCRYPT$ENCRYPT_FILE	; encrypt file
	transfer	ENCRYPT$ENCRYPT_ONE_RECORD ; encrypt record
	transfer	ENCRYPT$DECRYPT_ONE_RECORD ; decrypt record
	transfer	ENCRYPT$$CREATE_RANKEY	; generate random key data
	transfer	ENCRYPT$$FILE_INICONTEXT ; initialize context with rankey data

	.END
