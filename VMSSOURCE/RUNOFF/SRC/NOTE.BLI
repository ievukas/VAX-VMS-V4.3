MODULE NOTE (					!
		IDENT = 'V04-000'
%BLISS32[,
	ADDRESSING_MODE(EXTERNAL=LONG_RELATIVE,NONEXTERNAL=LONG_RELATIVE)
	]
		) =
BEGIN

!
!****************************************************************************
!*									    *
!*  COPYRIGHT (c) 1978, 1980, 1982, 1984 BY				    *
!*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
!*  ALL RIGHTS RESERVED.						    *
!* 									    *
!*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
!*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
!*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
!*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
!*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
!*  TRANSFERRED.							    *
!* 									    *
!*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
!*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
!*  CORPORATION.							    *
!* 									    *
!*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
!*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
!* 									    *
!*									    *
!****************************************************************************
!

!++
! FACILITY:	 DSR (Digital Standard RUNOFF) / DSRPLUS
!
! ABSTRACT: Processes the .NOTE command
!
!
! ENVIRONMENT: Transportable
!
! AUTHOR: R.W.Friday	 CREATION DATE: June, 1978
!

%SBTTL 'Revision History'
!
! MODIFIED BY:
!
!	006	KAD00006	Keith Dawson	9-Jun-1983
!		Fix .NOTE margins to be more sensible. This is motivated by 
!		  the fact that notes come out looking centered on .PS, instead 
!		  of on .LM-.RM as desired. Also, changed the number of 
!		  lines before a note to 1 from 2.
!
!	005	KAD00005	Keith Dawson	07-Mar-1983
!		Global edit of all modules. Updated module names, idents,
!		copyright dates. Changed require files to BLISS library.
!
!--

%SBTTL 'Module Level Declarations'
!
! TABLE OF CONTENTS:
!
!
! INCLUDE FILES:
!

LIBRARY 'NXPORT:XPORT';			! XPORT Library
REQUIRE 'REQ:RNODEF';			! RUNOFF variant definitions

%IF DSRPLUS %THEN
LIBRARY 'REQ:DPLLIB';			! DSRPLUS BLISS Library
%ELSE
LIBRARY 'REQ:DSRLIB';			! DSR BLISS Library
%FI

!
! MACROS:
!
!
! EQUATED SYMBOLS:
!

LITERAL
    skip_before_note = 1,	!Spacing before "NOTE"
				! ... changed from 2 by KAD, 6-10-1983.
    skip_after_note = 1;	!Spacing after "NOTE"
!
! OWN STORAGE:
!
!
! EXTERNAL REFERENCES:
!

EXTERNAL
    gca : gca_definition,
    pdt : ref pdt_definition,
    sca : sca_definition;

!

EXTERNAL ROUTINE
    centxt,
    gcskip,
    getlin,
    gtpc,
    stkfrm;


GLOBAL ROUTINE NOTE (HANDLER_CODE) : NOVALUE =

!++
! FUNCTIONAL DESCRIPTION:
!
!	See the ABSTRACT, above.
!
! FORMAL PARAMETERS:
!
!	HANDLER_CODE indicates which command is to be processed.
!
! IMPLICIT INPUTS:	None
!
! IMPLICIT OUTPUTS:	None
!
! ROUTINE VALUE:
! COMPLETION CODES:	None
!
! SIDE EFFECTS:	None
!
!--
    BEGIN
    LOCAL
	margin_adjust,		!How much to adjust the margins.
	skip;

    IF NOT stkfrm (.handler_code)
    THEN
	RETURN;				!Quit if stack overflow

    skip = skip_before_note * .sca_spacing;
    gtpc (.skip + (skip_after_note + .pdt_tp + 1)*.sca_spacing);
    gcskip (max (0, .skip - (.sca_spacing - 1)));
    !Set up formatting definitions
    sca_fill = true;
    sca_justify = .gca_autojust or .sca_justify;	!Turn on justification unless user has said .NAJ.
    sca_crock = .sca_justify;
!
! Margin adjustment.

    IF (.sca_rm - .sca_lm) GTR 60 
    THEN
	margin_adjust = .gca_note_prim	! (8)
    ELSE
	margin_adjust = .gca_note_alt;	! (4)

    !Defensive margin computation in case margins are very restrictive

    IF (.sca_lm + .margin_adjust) LSS .sca_rm
    THEN
	sca_lm = .sca_lm + .margin_adjust;

    IF (.sca_rm - .margin_adjust) GTR .sca_lm
    THEN
	sca_rm = .sca_rm - .margin_adjust;

! End of margin-adjustment computations.

!Determine if text was given on the .NOTE command.
!
    IF NOT centxt (ch$ptr (uplit ('NOTE')), 4)
    THEN
    !Text after ".NOTE".  Fetch and output text centered.
	getlin (true, false, 0, true);

    !Prepare for the text that will probably come.
    gcskip (.sca_spacing);

    END;					!End of NOTE

END						!End of module
ELUDOM
