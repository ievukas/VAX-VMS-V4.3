	.TITLE	NETDRVMAC - NETDRIVER macro definitions
	.IDENT	'V04-000'

;****************************************************************************
;*									    *
;*  COPYRIGHT (c) 1978, 1980, 1982, 1984 BY				    *
;*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
;*  ALL RIGHTS RESERVED.						    *
;* 									    *
;*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
;*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
;*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
;*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
;*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
;*  TRANSFERRED.							    *
;* 									    *
;*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
;*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
;*  CORPORATION.							    *
;* 									    *
;*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
;*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
;* 									    *
;*									    *
;****************************************************************************
;
;-

;
; MODIFIED BY:
;
;	V03-002	TMH0002		Tim Halvorsen	03-Jan-1983
;		Modify so that macro can be included in NETDEF.STB
;
;	V03-001	RNG0001		Rod N. Gamache	29-Nov-1982
;		Add new CXB definitions for received adj.
;-




.MACRO	$CXBEXTDEF,$GBL			;  Define CXB extensions

NSP$C_MAX_DELAY = 20	;&
NSP$C_MAX_R_CXB =  7	;&
NSP$C_MAX_XPW	=  7	;&  Maximum transmit-packet-window

$DEFINI	CXBEXT,$GBL

;
;
;  The following fields are used when a NSP is formatting a message to be
;  sent to routing layer for transmission
;
;
	. = CXB$C_HEADER			; Start at Begining of message 
						; area

$VIELD	CXB,0,<-				; CXB$B_CODE bits
		<CD_XMT,,M>,-			; Set if queued to datalink
		<CD_ACK,,M>,-			; Set if ACK is outstanding
	       >
$DEF	CXB$T_X_XPORT	.BLKB	TR3$C_HSZ_DATA	; Transport data msg header
$DEF	CXB$B_X_NSPTYP	.BLKB	1		; NSP message type
$DEF	CXB$W_X_NSPREM	.BLKW	1		; NSP remote link address
$DEF	CXB$W_X_NSPLOC	.BLKW	1		; NSP local link address
$DEF	CXB$W_X_NSPACK	.BLKW	1		; NSP ACK field
$DEF	CXB$W_X_NSPSEQ	.BLKW	1		; NSP sequence number
$DEF	CXB$T_X_DATA				; Area for user data

;
;
;  The following fields are used when a received message is passed to NSP by
;  the routing layer.
;
;

	. = CXB$T_DLL			; Start at Datalink impure area
					;
$DEF	CXB$L_R_RCB	.BLKL	1	; Pointer to the NET RCB 
$DEF	CXB$L_R_MSG	.BLKL	1	; Pointer to first NSP byte in message 
$DEF	CXB$W_R_BCNT	.BLKW	1	; Length of message w/o route header 
$DEF	CXB$W_R_PATH	.BLKW	1	; Path number over which message was 
					; received
$DEF	CXB$W_R_DSTNOD  .BLKW	1	; Local node address in high byte
$DEF	CXB$W_R_SRCNOD	.BLKW	1	; Source node address in low byte
$DEF	CXB$B_R_FLG	.BLKB	1	; LBS if datalink layer needs CXB back 
					; due to receiver buffering problems
$DEF	CXB$B_R_AREA			; Area portion of node address
					; (overlays NSPTYP)
$DEF	CXB$B_R_NSPTYP	.BLKB	1	; NSP message type
$DEF	CXB$W_R_ADJ			; Received adjacency index
					; (overlays NSPSEQ)
$DEF	CXB$W_R_NSPSEQ	.BLKW	1	; NSP message sequence number
					;
	CXB$C_R_LENGTH	= .		; Make the end of the definition

$DEFEND	CXBEXT,$GBL,DEF


ASSUME	CXB$C_DLL  GE  CXB$C_R_LENGTH-CXB$T_DLL  ; Make sure we had enough room


.ENDM	$CXBEXTDEF

