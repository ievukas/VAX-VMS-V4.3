	.TITLE	SHOWTERM - SHOW CHARACTERISTICS OF A TERMINAL
	.IDENT	'V04-000'

;
;****************************************************************************
;*									    *
;*  COPYRIGHT (c) 1978, 1980, 1982, 1984 BY				    *
;*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
;*  ALL RIGHTS RESERVED.						    *
;* 									    *
;*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
;*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
;*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
;*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
;*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
;*  TRANSFERRED.							    *
;* 									    *
;*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
;*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
;*  CORPORATION.							    *
;* 									    *
;*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
;*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
;* 									    *
;*									    *
;****************************************************************************
;
;
;++
; FACILITY:	CLI UTILITY "SHOW"
;
; ABSTRACT:	SHOW THE CHARACTERISTICS OF A TERMINAL
;
; AUTHOR:	R.HEINEN 21-NOV-1977
;
; MODIFIED BY:
;
;	V03-017 EMB0107		Ellen M. Batbouta	11-Jul-1984
;		Eliminate displaying the holdscreen characteristic since
;		it is no longer supported.
;
;	V03-016	JRL0004		John R. Lawson, Jr.	19-Jun-1984 11:56
;		Eliminate external references to SMG (shareable image) to
;		speed up image initialization; link to SMG only when the
;		package is required.
;
;	V03-015 EMD0096		Ellen M. Dusseault	02-May-1984
;		Display the system password, syspwd, characteristic for
;		terminals.
;
;	V03-014	MHB0128		Mark Bramhall		29-Mar-1984
;		Display username on second line if not same as process name.
;		Fix up spooled device display.
;
;	V03-013	MIR0350		Michael I. Rosenblum	20-Mar-1984
;		If a terminal is a physical terminal connected to a VT
;		show the backward translation also.  Add BTS terminals
;		To the display.
;
;	V03-012 PLL0002		Pamela Levesque		07-Mar-1984
;		If the type number is in the foreign range, search 
;		termtable for a	definition.
;		
;	V03-011	MHB0102		Mark Bramhall		29-Feb-1984
;		Fix up the physical terminal device name display.
;
;	V03-010 EMD0054		Ellen M. Dusseault	28-Feb-1984
;		Display new device name, PRO_SERIES, when appropriate
;		and the status of the new terminal characteristic, DEC_CRT2.
;
;	V03-009	MMD0233		Meg Dumont,	4-Feb-1984  14:26
;		Add a test to see if the terminal is running as an asynch 
;		ddcmp line and if it is do not try to show the characteristics.
;
;	V03-008	MIR0300		Michael I. Rosenblum	03-Feb-1984
;		Add code to show physical terminal on disconnected terminals
;		and to indicate that a terminal is disconnected.
;
;	V03-007	MIR0071		Michael I. Rosenblum	22-Jul-1983
;		Add display for OVERSTRIKE MODE, DISMISS PARITY, AND
;		PASTHRU MODE.
;
;	V03-006	MIR2035		Michael I. Rosenblum	13-May-1983
;		Fix word offsets.
;
;	V03-005	MIR1035		Michael I. Rosenblum	09-Apr-1983
;		increase size of terminal table to allow VT200 to fit
;
;	V03-004	MIR0035		Michael I. Rosenblum	27-Apr-1983
;		Add support for new device characteristics.
;		and VT200 series terminals.
;
;	V03-003	GAS0099		Gerry Smith		 7-Jan-1983
;		Modify to run under the new SHOW.
;
;	V03-002	GAS0091		Gerry Smith		19-Oct-1982
;		Change input request for new CLD syntax.
;
;	V03-001	MIR0093		Michael I Rosenblum	 2-Jul-1982
;		Enhance show term to use the new $GETDVIW fix bug
;		that shows the device spooled to as being the terminal
;		itself rather than the apropriate disk.
;
;	V03-011 MIR0091		Michael I Rosenblum	23-Feb-1981
;		Show term on a spooled terminal without privs would
;		cause the QIO sensemode to return a nopriv error with
;		the side affect of clearing out the SENSEMODE buffer,
;		hence giving erronious information.
;
;	V03-010	MIR0072		Michael I Rosenblum	14-Jan-1981
;		Change case of some of the qualifiers.
;
;	V03-009	MIR0070		Michael I Rosenblun	21-Dec-1981
;		Replaced GETDEV with GETDVI.
;
;	V03-008 MIR0056		Michael I Rosenblum	9-Dec-1981
;		Added DECCRT, EDIT and SETSPEED.
;
;	V03-007	MIR0045		Michael I Rosenblum	29-Oct-1981
;	Add support for VK100 and the SUBSET bit.
;
;	V03-006	MIR0034		Michael I Rosenblum	10-Aug-1981
;	Fix bug in support of GETDEV feature to get the second device
;	dependent word.
;
;	V03-005	MIR0032		Michael I Rosenblum	31-Aug-1981
;	Fixed assembaly error on local symbol.
;
;	V03-004	MIR0017		Michael I Rosenblum	17-Aug-1981
;	Added support for the new terminal driver features,  Corrected
;	error in split speed code
;
;	V03-003	MIR0005		Michael I Rosenblum	31-July-1981
;	Fixed blank owner name now prints "not available"
;
;	V03-002	MIR0001		Michael I Rosenblum	30-July-1981
;	Reformatting of the output, activated split speed code
;	Added code to show username if different from process ID
;
;	V03-001	SBL3001		Steven B. Lionel,	26-June-1980
;		Remove trailing comma from HALFDUP/FULLDUP.
;--

;
;	MACRO TO EASE CREATION OF NEW TERMINAL TYPES
;
	.MACRO	CRETYPE	TYPE,Name
$$=.
.if blank name
	.ASCIC	/TYPE/
.iff
	.ascic	/name/
.endc
$$$=.
.=TYPE_NAME+<TT$_'TYPE*4>
.IF GE .-END_NAME
	.ERROR	TT$_'TYPE	; TERMINAL TT$_'TYPE DOES NOT FIT IN TYPE_NAME
.IFF
	.ADDRESS $$
.ENDC
.=$$$
	.ENDM
;
;	MACRO TO HANDLE BIT DEFINITIONS
;	FOR THE SECOND DEVICE DEPENDENT LONGWORD
;
	.MACRO	CREBIT2	BIT,ON_STR,OFF_STR
	SYMCRE TT2$V_'BIT,<ON_STR>,<OFF_STR>,POS2,NEG2
	.ENDM
;
;	MACRO TO HANDLE SYMBOL DEFINITIONS
;
	.MACRO	SYMCRE BIT,ON_STR,OFF_STR,ON_BASE_ADR,OFF_BASE_ADR
$$_ON=.
	.ASCIC	/ON_STR/
$$_OFF=.	
	.ASCIC	/OFF_STR/
$$$=.
.=ON_BASE_ADR+<'BIT*4>		;GET TO THE RIGHT PLACE (LONG WORD TABLE
	.ADDRESS $$_ON
.=OFF_BASE_ADR+<'BIT*4>		;AND DO THE SAME FOR THE OFF ADDRESS
	.ADDRESS $$_OFF
.=$$$
	.ENDM
;
;	MACRO TO CREATE DEVICE INFORMATION INTEMS
;
	.MACRO	$GDVITM	LEN,ITEM,ADR,LEN_ADR=0
	.WORD	LEN
	.WORD	DVI$_'ITEM
	.LONG	ADR
	.LONG	LEN_ADR
	.ENDM
;
; EXTERNAL SYMBOLS
;
	$DEVDEF				; DEFINE DEVICE CHARACTERISTICS
	$DSCDEF				; DEFINE DESCRIPTOR DEFINITIONS
	$DVIDEF				; DEFINE DEVICE INFO BLOCK
	$JPIDEF				; DEFINE JPI VALUES
	$TTDEF				; DEFINE TERMINAL CHARACTERISTICS
	$TT2DEF				; DEFINE SECOND TERMINAL CHAR LONGWORD
;
; LOCAL STORAGE
;

	.PSECT	SHOW$RWDATA,NOEXE,LONG
	
;
; STORAGE
;
SHOW$L_STATUS:	.LONG	1		; INTERNAL STATUS
CHAN:		.LONG	0		; TERMINAL CHANNEL NUMBER
BITS:		.LONG	0		; STORAGE FOR CLI CALL BACK
IOSB:		.LONG	0,0		; IOSB FOR TERMINAL GET CHARACTERISTICS
UTIL_DESC:	.LONG	0,0		; UTILITY DESC

TER_INFO:

TER$B_DEVCLASS:	.BYTE	0		; THE TERMINAL CLASS
TER$B_DEVTYPE:	.BYTE	0		; THE TERMINAL TYPE
TER$W_DEVBUFSIZ:.WORD	0		; THE WIDTH
TER$L_DEVDEP:	.WORD	0		; THE FIRST DEVICE DEPENDENT
		.BYTE	0		;..
TER$B_LENGTH:	.BYTE	0		; TERMINAL LENGTH
TER$L_DEVDEP2:	.LONG	0		; THE SECOND DEVICE DEPENDENT WORD

TER$L_PID:	.LONG	0		; THE OWNER PID

TER$L_DEVCHAR:	.LONG	0		; THE DEVICE CHARACTERISTICS
TER$L_DEVCHAR2:	.LONG	0		; THE DEVICE CHARACTERISTICS #2

TER$L_PHYDEVLN:	.LONG	0		; Length of physical device name
TER$B_PHYDEVCT:	.BYTE	0		; Count in byte size
TER$_PHYDEV:	.BLKB	15		; Maximum of 15 bytes

TER$L_DEVNAMLN:	.LONG	0		; THE LENGTH OF THE DEVICE NAME
TER$B_DEVNAMCT:	.BYTE	0		; COUNT IN BYTE SIZE
TER$_DEVNAM:	.BLKB	15		; MAXIMUM OF 15 BYTES

TMP$L_DEVCLASS:	.LONG	0
TMP$L_DEVTYPE:	.LONG	0
TMP$L_DEVBUFSIZ:.LONG	0

TMPTRM_INFO:
		.BLKQ	1		; PLACE TO SAVE THE TERMINAL INFO
TMPTRM$L_DEVDEP2:
		.BLKL	1		;...

TMP_DEVNAM:	.LONG	<DSC$K_CLASS_S @ <DSC$B_CLASS * 8>>!-
			<DSC$K_DTYPE_T @ <DSC$B_DTYPE * 8>>!-
			15, TMP_TYPE_NAME
TMP_TYPE_CT:	.BYTE	0		; COUNTED STRING FOR TERMTABLE TYPE NAME
TMP_TYPE_NAME:	.BLKB	15
TERM_TABLE_ADDR:.LONG	0		; ADDRESS OF DEFINITION FROM TERMTABLE

;
;	Storage for post-activation linkage to SMG (shareable image)
;

SMG$INIT_TERM_TABLE_BY_TYPE:	.BLKL	1	; Addresses of routines
SMG$DEL_TERM_TABLE:		.BLKL	1

$SMGSHR:	.ASCID	/SMGSHR/	; Name of shareable image

$SMG$INIT_TERM_TABLE_BY_TYPE:	.ASCID	/SMG$INIT_TERM_TABLE_BY_TYPE/	; Names of routines
$SMG$DEL_TERM_TABLE:		.ASCID	/SMG$DEL_TERM_TABLE/

;
; MAIN DEVICE CHARACTERISTICS
;
GETDVI_INFO:	$GDVITM	4,DEVCHAR,TER$L_DEVCHAR
		$GDVITM	4,DEVCHAR2,TER$L_DEVCHAR2
		$GDVITM	4,DEVCLASS,TMP$L_DEVCLASS
		$GDVITM	4,DEVTYPE,TMP$L_DEVTYPE
		$GDVITM	4,DEVBUFSIZ,TMP$L_DEVBUFSIZ
		$GDVITM	4,DEVDEPEND,TER$L_DEVDEP
		$GDVITM	4,DEVDEPEND2,TER$L_DEVDEP2
		$GDVITM	4,PID,TER$L_PID
		$GDVITM	15,TT_PHYDEVNAM,TER$_PHYDEV,TER$L_PHYDEVLN
SPLDVI_INFO:	$GDVITM	15,DEVNAM,TER$_DEVNAM,TER$L_DEVNAMLN
		.LONG	0
;
; SECONDARY COPY OF PRIMARY SPECS
;
SECDVI_INFO:	$GDVITM	4,DEVCHAR!DVI$C_SECONDARY,TER$L_DEVCHAR
		$GDVITM	4,DEVCHAR2!DVI$C_SECONDARY,TER$L_DEVCHAR2
		$GDVITM	4,DEVCLASS!DVI$C_SECONDARY,TMP$L_DEVCLASS
		$GDVITM	4,DEVTYPE!DVI$C_SECONDARY,TMP$L_DEVTYPE
		$GDVITM	4,DEVBUFSIZ!DVI$C_SECONDARY,TMP$L_DEVBUFSIZ
		$GDVITM	4,DEVDEPEND!DVI$C_SECONDARY,TER$L_DEVDEP
		$GDVITM	4,DEVDEPEND2!DVI$C_SECONDARY,TER$L_DEVDEP2
		$GDVITM	4,PID!DVI$C_SECONDARY,TER$L_PID
		$GDVITM	15,TT_PHYDEVNAM!DVI$C_SECONDARY,TER$_PHYDEV,TER$L_PHYDEVLN
		$GDVITM	15,DEVNAM!DVI$C_SECONDARY,TER$_DEVNAM,TER$L_DEVNAMLN
		.LONG	0

NUMPERLINE==4

CHAR_LIST:	.REPT	100
		.LONG	NULL_STRING
		.ENDR
NULL_STRING:	.BYTE	0
;
; CLI REQUEST DESCRIPTORS
;
TERM_DESC:	.LONG	<DSC$K_CLASS_D @ <DSC$B_CLASS * 8>>!-
			<DSC$K_DTYPE_T @ <DSC$B_DTYPE * 8>>!-
			0, 0
TERM_RQST:	.ASCID	\DEVICE\
PERM_RQST:	.ASCID	\PERMANENT\
;
; CONTROL STRINGS FOR OUTPUT
;
SHOW$_TERM_L1:	.ASCID	'Terminal: !10AC  Device_Type: !12AC  Owner: !AF'
SHOW$_TERM_L1A:	.ASCID	'!AC!AC'
SHOW$_TERM_L1B:	.ASCID	'!46<!AC!AC!>Username: !AS'
SHOW$_TERM_L2:	.ASCID	'!/   Input:  !5UW      LFfill:!3UB      Width:!4UW      Parity: !AC'
SHOW$_TERM_L3:	.ASCID	'   Output: !5UW      CRfill:!3UB      Page:  !3UB      !AC'
SHOW$_TERM_L4:	.ASCID	'!/Terminal Characteristics:'
SHOW$_TERM_L5:	.ASCID	'   !#(19AC)!AC'
SHOW$_TTLP_SPL:	.ASCID	'!/Device spooled to !AD'
;
; TYPE NAMES
;
TYPE_NAME:
.REPEAT 128
	.ADDRESS UNK
.ENDR
END_NAME:
UNK:	.ascic	/Unknown/
	cretype	LA36
	cretype	LA120
	cretype	LA34
	cretype	LA38
	cretype	LA12
	cretype	LA24
	cretype LA100
	cretype	LQP02
	cretype	VT55
	cretype	VT52
	cretype	VT05
	cretype	VT100
	cretype	VT101
	cretype	VT102
	cretype	VT105
	cretype	VT125
	cretype	VT131
	cretype	VT132
	cretype	VT173
	cretype	VK100
	cretype	VT200_Series
    	cretype PRO_Series
	cretype tq_bts,BTS
	cretype	FT1
	cretype	FT2
	cretype	FT3
	cretype	FT4
	cretype	FT5
	cretype	FT6
	cretype	FT7
	cretype	FT8
;
; POSITIVE CHARACTERISTIC STRINGS
;
POSITIVE_NAME:
	.LONG	1$,2$,3$,4$,5$,6$,0,7$,8$,9$,0,0,10$,11$,0,13$,0,14$,15$,16$,17$,18$
1$:	.ASCIC	/Passall/
2$:	.ASCIC	/No Echo/
3$:	.ASCIC	/No Typeahead/
4$:	.ASCIC	/Escape/
5$:	.ASCIC	/Hostsync/
6$:	.ASCIC	/TTsync/
7$:	.ASCIC	/Lowercase/
8$:	.ASCIC	/Tab/
9$:	.ASCIC	/Wrap/
10$:	.ASCIC	/Scope/
11$:	.ASCIC	/Remote/
13$:	.ASCIC	/Eightbit/
14$:	.ASCIC	/No Broadcast/
15$:	.ASCIC	/Readsync/
16$:	.ASCIC	/Form/
17$:	.ASCIC	/Halfdup/
18$:	.ASCIC	/Modem/
;
; NEGATIVE CHARACTERISTIC STRINGS
;
NEGITIVE_NAME:
	.LONG	1$,2$,3$,4$,5$,6$,0,7$,8$,9$,0,0,10$,11$,0,13$,0,14$,15$,16$,17$,18$
NUMCHRS1=<<.-NEGITIVE_NAME>/4>-1
1$:	.ASCIC	/Interactive/
2$:	.ASCIC	/Echo/
3$:	.ASCIC	/Type_ahead/
4$:	.ASCIC	/No Escape/
5$:	.ASCIC	/No Hostsync/
6$:	.ASCIC	/No TTsync/
7$:	.ASCIC	/Uppercase/
8$:	.ASCIC	/No Tab/
9$:	.ASCIC	/No Wrap/
10$:	.ASCIC	/Hardcopy/
11$:	.ASCIC	/No Remote/
13$:	.ASCIC	/No Eightbit/
14$:	.ASCIC	/Broadcast/
15$:	.ASCIC	/No Readsync/
16$:	.ASCIC	/No Form/
17$:	.ASCIC	/Fulldup/
18$:	.ASCIC	/No Modem/
;
; Second devdepent word
;
POS2:
	.LONG	0$,1$,2$,0,4$,0,6$,7$,8$,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24$,25$,26$,27$,28$,29$,30$
0$:	.ASCIC	/Local_echo/
1$:	.ascic	/Autobaud/
2$:	.ascic	/Hangup/
4$:	.ascic	/Brdcstmbx/
5$:	.ascic	/XON/
6$:	.ascic	/DMA/
7$:	.ascic	/Altypeahd/
8$:	.ascic	/No Set_speed/

24$:	.ascic	/ANSI_CRT/
25$:	.ascic	/Regis/
26$:	.ascic	/Block_mode/
27$:	.ascic	/Advanced_video/
28$:	.ascic	/Edit_mode/
29$:	.ascic	/DEC_CRT/
30$:	.ascic  /DEC_CRT2/
;
; Negative of the second devdependent longword
;
neg2:
	.LONG	0$,1$,2$,0,4$,0,6$,7$,8$,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24$,25$,26$,27$,28$,29$,30$
NUMCHRS2=<<.-NEG2>/4>-1
0$:	.ascic	/No Local_echo/
1$:	.ascic	/No Autobaud/
2$:	.ascic	/No Hangup/

4$:	.ascic	/No Brdcstmbx/
5$:	.ascic	/XOFF/
6$:	.ascic	/No DMA/
7$:	.ascic	/No Altypeahd/
8$:	.ascic	/Set_speed/

24$:	.ascic	/No ANSI_CRT/
25$:	.ascic	/No Regis/
26$:	.ascic	/No Block_mode/
27$:	.ascic	/No Advanced_video/
28$:	.ascic	/No Edit_mode/
29$:	.ascic	/No DEC_CRT/
30$:	.ascic  /No DEC_CRT2/
	crebit2	editing,<Line Editing>,<No Line Editing>
	crebit2	App_keypad,<Application keypad>,<Numeric Keypad>
	CREBIT2	FALLBACK,<Fallback>,<No Fallback>
	CREBIT2	DISCONNECT,<Disconnect>,<No Disconnect>
	CREBIT2	DIALUP,<Dialup>,<No Dialup>
	CREBIT2	INSERT,<Insert editing>, <Overstrike editing>
	CREBIT2	PRINTER,<Printer port>, <No Printer Port>
	CREBIT2	SECURE,<Secure server>, <No Secure server>
	CREBIT2	SIXEL,<SIXEL Graphics>, <No SIXEL Graphics>
	CREBIT2	DRCS,<Soft Characters>, <No Soft Characters>
	crebit2 PASTHRU,<Pasthru>, <No Pasthru>
    	CREBIT2 SYSPWD, <Syspassword>, <No Syspassword>

.noshow me
EPAR:	.ASCIC	/Even/
OPAR:	.ASCIC	/Odd/
NOPAR:	.ASCIC	/None/
SPEED:	.WORD	0,50,75,110,134,150,300,600,1200,1800,2000,2400,3600,4800,-
		7200,9600,19200
SYS_COMMAND:
	.ASCID	/SYS$COMMAND/
;
; SPACE FOR PROCESS OWNER NAME AND GETJPI
;
OWNER_NAME:	.LONG	20
		.LONG	10$
10$:		.BLKB	20
USER_NAME:	.LONG	20
		.LONG	20$
20$:		.BLKB	20
JPI_ITMLST:	.WORD	20
		.WORD	JPI$_PRCNAM
		.LONG	OWNER_NAME+8
		.LONG	OWNER_NAME
		.WORD	20
		.WORD	JPI$_USERNAME
		.LONG	USER_NAME+8
		.LONG	USER_NAME
		.LONG	0
;
; NO OWNER NAME
;
NO_OWNER:	.LONG	20$-10$
		.LONG	10$
10$:		.ASCII	/No Owner/
20$:		
NOT_AVAIL:	.LONG	20$-10$
		.LONG	10$
10$:		.ASCII	/Not Available/
20$:
BLNK:	.WORD	0
PHY_TERM:	.ASCIC	'Physical terminal: '
VIR_TERM:	.ASCIC	'Virtual terminal: '
DISM:	.ASCIC	/Dismiss parity errors/
NODISM:	.ASCIC	/Terminate on parity errors/
DISCON:	.ASCIC	/Disconnected/
PRINAME:.ASCIC  /<Private>/

	.PSECT	SHOW$CODE,NOWRT
;++
; SHOW$TERM - SHOW TERMINAL CHARACTERISTICS
;
; FUNCTIONAL DESCRIPTION:
;
; THIS ROUTINE SHOWS THE CHARACTERISTICS OF A SPECIFIED TERMINAL.
; IT IS ENTERED AS A RESULT OF A DISPATCH FROM THE SHOW COMMAND PROCESSOR.
;
; INPUTS:
;
;	None
;
; OUTPUTS:
;
;	None.  If any error occurs, it will be signaled
;--

	.ENTRY	SHOW$TERMINAL, ^M<R2,R3,R4,R5,R6,R7,R8,R9>

	PUSHAQ	TERM_DESC		; GET VALUE DESCRIPTOR
	PUSHAQ	TERM_RQST		; GET REQUEST DESCRIPTOR
	CALLS	#2,G^CLI$GET_VALUE	; REQUEST TERMINAL NAME
	BLBS	R0,20$			; IF LBS, GOTA NAME
;
; DEFAULT NAME IS "SYS$COMMAND"
;
	MOVQ	SYS_COMMAND, TERM_DESC	; Use "SYS$COMMAND" as name
;
; GET DEVICE INFO IN CASE THE TERMINAL IS ASSIGNED TO SOMEONE ELSE
;
; THIS ALLOWS SOME INFORMATION TO BE PRINTED.
;
20$:	MOVAQ	TERM_DESC, R6		; GET ADDRESS OF TERMINAL DESC
	$GETDVIW_S	DEVNAM=(R6),ITMLST=SECDVI_INFO
	MOVZWL	R0,SHOW$L_STATUS	; COPY CODE
	BLBS	R0,23$			; BR IF ERROR - NO SUCH DEVICE
21$:	BRW	40$
23$:	BBC	#DEV$V_MBX,TER$L_DEVCHAR,25$	; CHECK IF MAILBOX
	$GETDVIW_S	DEVNAM=(R6),ITMLST=GETDVI_INFO; YES THEN GET
					; THE SECONDARY CHARACTERISTICS
	MOVZWL	R0,SHOW$L_STATUS	;GET A STATUS CODE
	BLBC	R0,21$			;BAD SCEAN

25$:	CVTLB	TMP$L_DEVCLASS,TER$B_DEVCLASS; CONVERT THE DEVICE CLASS
	CVTLB	TMP$L_DEVTYPE,TER$B_DEVTYPE; CONVERT THE DEVICE TYPE
	CVTLW	TMP$L_DEVBUFSIZ,TER$W_DEVBUFSIZ; AND THE TERMINAL WIDTH
	CVTLB	TER$L_DEVNAMLN,TER$B_DEVNAMCT; MAKE A DEVICE NAME COUNTED STRING

	MOVZWL	#SS$_IVDEVNAM,SHOW$L_STATUS ; Assume device not terminal
	BBC	#DEV$V_TRM,TER$L_DEVCHAR,21$ ; Error if not a terminal

	MOVZWL	#SS$_TERMNETDEV,SHOW$L_STATUS ; Assume being used by network
	BBS	#DEV$V_NET,TER$L_DEVCHAR,21$ ; Error if network usage

;
; TRY TO ASSIGN A CHANNEL TO THE TERMINAL  - TO GET SPEED AND PARITY
;
28$:	$ASSIGN_S	(R6),CHAN	; ASSIGN CHANNEL TO DEVICE
	BLBC	R0,30$			; IF LOW CLEAR THEN PRINT WHAT'S AVAIL
	MOVQ	TER_INFO,TMPTRM_INFO; SAVE THE RECIEVED INFO INCASE OF
	MOVL	TER$L_DEVDEP2,TMPTRM$L_DEVDEP2;
	CLRQ	TER_INFO		;CLEAN THE INFO BLOCK OUT
	CLRL	TER$L_DEVDEP2		;AND THE SECOND DEVICE DEPENDENT WORD
	$QIOW_S	#1,CHAN,#IO$_SENSEMODE,IOSB,P1=TER_INFO,P2=#12
	BLBS	R0,30$			;NO ERROR THEN START THE NORMAL WORK
	MOVQ	TMPTRM_INFO,TER_INFO; RESTORE THE TERMINAL INFORMATION
	MOVL	TMPTRM$L_DEVDEP2,TER$L_DEVDEP2; AND SAVE THE ERROR
30$:	MOVL	R0,SHOW$L_STATUS	; SAVE ERROR CODE
	PUSHAL	PERM_RQST		; SEE IF /PERMANENT WAS SET
	CALLS	#1,G^CLI$PRESENT
	BLBS	R0,35$			; IF NOT SET, THEN
	CALLS	#0,NOT_PERM		; PROCESS REGULARLY
	BRB	37$			; AND PROCEED
35$:	CALLS	#0,PERM			; OTHERWISE PROCESS PERM
37$:	$DASSGN_S	CHAN		; DEASSIGN CHANNEL
40$:	MOVL	SHOW$L_STATUS,R0	; RETRIEVE FINAL STATUS
	BLBS	R0,45$			; SKIP IT IF OK
	PUSHL	R0			; OTHERWISE SIGNAL IT
	CALLS	#1,G^LIB$SIGNAL
45$:	RET				; DONE
;
; PERMANENT QUALIFIER ROUTINE
;
PERM:	.WORD	^M<R2,R3,R4,R5,R6,R7,R8,R9,R10,R11>; PROCESS PERMANENT QUALIFIER
	BLBC	SHOW$L_STATUS,15$	; BR IF CHANNEL NOT ASSIGNED
	CLRQ	TER_INFO		;CLEAN THE INFO BLOCK OUT
	CLRL	TER$L_DEVDEP2		;FOR COMPATABILITY REASONS
	$QIOW_S	#0,CHAN,#IO$_SENSECHAR,IOSB,P1=TER_INFO,P2=#12
	BLBC	R0,5$			; BR IF NOT SUCCESS
	MOVZWL	IOSB,R0		; GET IOSB STATUS
	BLBS	R0,PRINT		; AND CONTINUE IF SUCCESS
5$:	MOVL	R0,SHOW$L_STATUS	; SAVE STATUS
	RET
15$:	MOVZWL	#SS$_NOPRIV,SHOW$L_STATUS; ASSUME NO PRIVILEGE
	RET
;
; OUTPUT CHARACTERISTICS AND NON-PERMANENT QUALIFIER ROUTINE
;
NOT_PERM:.WORD	^M<R2,R3,R4,R5,R6,R7,R8,R9,R10,R11>; NOT  PERMANENT ENTRY
PRINT::					;
;
; OUTPUT NAME, TYPE, WIDTH AND PAGE AND OWNER
;
	MOVQ	NO_OWNER, CHAR_LIST+8	; Use an inocuous owner if it is
	TSTL	TER$L_PID		; Check to see if there is an owner
	BEQL	3$			; No owner then leave as a default
	$GETJPIW_S -			; Else get the owner information
		ITMLST = JPI_ITMLST, -
		PIDADR = TER$L_PID
	BLBS	R0, 2$			; Got it
	MOVQ	NOT_AVAIL, CHAR_LIST+8	; Else say owner not available
	BRB	3$

2$:	MOVQ	OWNER_NAME, CHAR_LIST+8	; Insert real owner name
	LOCC	#^A' ', USER_NAME, @USER_NAME+4 ; Remove trailing blanks
	SUBL	R0, USER_NAME		;  from username
	CMPC5	OWNER_NAME, @OWNER_NAME+4, - ; Is owner process name
		#^A' ', USER_NAME, @USER_NAME+4 ;  the same as username?
	BNEQ	5$			; Nope, keep the username around
3$:	CLRL	USER_NAME		; No special username to display
5$:	MOVAB	TER$B_DEVNAMCT, CHAR_LIST ; Address name
	CVTBL	TER$B_DEVTYPE, R0	; Get terminal type value
	BGEQ	9$			; Non-foreign (0-127)
	CALLS	#0, GET_FOREIGN_TYPE	; Foreign (128-255), go find type
	BRB	10$

9$:	MOVL	TYPE_NAME[R0], CHAR_LIST+4 ; Set address of type name
ASSUME	END_NAME-TYPE_NAME/4 EQ 128
10$:	PUSHAL	CHAR_LIST		; Output message
	PUSHAQ	SHOW$_TERM_L1
	CALLS	#2, G^SHOW$WRITE_LINE
;
; Output physical and/or virtual device name and/or username, if any
;
	MOVAB	PHY_TERM, CHAR_LIST	; Assume physical terminal display
	MOVAB	DISCON, CHAR_LIST+4	; Assume disconnected terminal
	BBS	#DEV$V_DET, TER$L_DEVCHAR2, 15$ ; Br if disconnected
	CVTLB	TER$L_PHYDEVLN, TER$B_PHYDEVCT ; Any physical device name?
	BEQL	15$			; Nope, it's disconnected
	CMPC5	TER$L_PHYDEVLN, TER$_PHYDEV, #0, - ; Is the physical name
		TER$L_DEVNAMLN, TER$_DEVNAM ;  the same as virtual name?
	BEQL	14$			; Yes, no physical name to display
	MOVAB	TER$B_PHYDEVCT, CHAR_LIST+4 ; Else set the physical name
	BRB	15$

14$:	MOVAB	BLNK, CHAR_LIST		; Blank out the
	MOVAB	BLNK, CHAR_LIST+4	;  physical/virtual name display
	TSTL	USER_NAME		; Any username to display?
	BEQL	19$			; Nope, nothing to display at all
15$:	PUSHAL	CHAR_LIST		; Stack list
	PUSHAQ	SHOW$_TERM_L1A		;  and FAO string
	TSTL	USER_NAME		; A username to display, too?
	BEQL	18$			; No
	MOVAQ	SHOW$_TERM_L1B, (SP)	; Yes, change the FAO string
	MOVAQ	USER_NAME, CHAR_LIST+8	;  and set the username
18$:	CALLS	#2, G^SHOW$WRITE_LINE	; Output message
19$:					; Continue
;
; OUTPUT PRIVILEGED LINE OF INFORMATION
;
	BLBS	SHOW$L_STATUS,23$	; IF ASSIGN FAILED THEN NO SPEED LINE
	BRW	30$
23$:	MOVZBL	IOSB+3,R7		; GET THE SPEED
	BNEQ	24$			;IF IT WERN'T ZERO THEN USE THIS SPEED
	MOVZBL	IOSB+2,R7		;ELSE USE THE OTHER SPEED
24$:	MOVZWL	SPEED[R7],CHAR_LIST	;
	MOVZBL	IOSB+5,CHAR_LIST+4	; INSERT LF FILL
	MOVZWL	TER$W_DEVBUFSIZ,CHAR_LIST+8; INSERT WIDTH
	MOVAB	NOPAR,CHAR_LIST+12	; ASSUME NO PARITY
	BBC	#TT$V_PARITY,IOSB+6,25$; PARITY?
	MOVAB	EPAR,CHAR_LIST+12	; ASSUME EVEN
	BBC	#TT$V_ODD,IOSB+6,25$	; BR IF EVEN
	MOVAB	OPAR,CHAR_LIST+12	;
25$:	PUSHAB	CHAR_LIST		; USE THE NORMAL CHARACTERISTIC LIST
	PUSHAL	SHOW$_TERM_L2		; AND USE OUR SECOND LINE
	CALLS	#2,SHOW$WRITE_LINE	; SHOW THE MESSAGE
	MOVZBL	IOSB+2,R8		; SPEED OUT
	MOVZWL	SPEED[R8],CHAR_LIST		
	MOVZBL	IOSB+4,CHAR_LIST+4	; INSERT CR FILL
	MOVZBL	TER$B_LENGTH,CHAR_LIST+8; INSERT PAGE
	MOVAB	BLNK,CHAR_LIST+12	; DON'T TELL ABOUT DISMISS IF NO PARITY
	BBC	#TT$V_PARITY,IOSB+6,27$	; PARITY?
	MOVAB	DISM,CHAR_LIST+12	; NORMALY DISMISS PARITY ERRORS
	BBS	#1,IOSB+6,27$		; CONTINUE IF NOT DISMISSING
	MOVAB	NODISM,CHAR_LIST+12	; AND SAY NO DISMISS
27$:	PUSHAB	CHAR_LIST		;OUTPUT MESSAGE
	PUSHAL	SHOW$_TERM_L3	; 
	CALLS	#2,SHOW$WRITE_LINE	;
;
; OUTPUT CHARACTERISTICS DATA
;
30$:	CLRL	R4
	MOVAB	CHAR_LIST,R6
	MOVL	S^#NUMPERLINE-1,(R6)+	; HOW MANY OF THESE ARE ON A LINE
	MNEGL	#1,R5			;START R5 AS NEGITIVE 1

50$:	MOVL	POSITIVE_NAME[R4],(R6); ASSUME POSITIVE
	BEQL	65$
	INCL	R5
	CMPB	R5,S^#NUMPERLINE	;KEEP COUNT OF HOW MANY OF THESE WE USE
	BNEQ	55$			; IF WE DON'T HAVE 5 THEN DON'T WORRIE
	MOVL	(R6),4(R6)		;MOVE THE LOCATION UP 1 LONG WORD
	MOVL	S^#NUMPERLINE-1,(R6)+	;MOVE UP 1 AND PUT IN THE COUNT
	CLRL	R5
55$:	BBS	R4,TER$L_DEVDEP,60$	; BR IF POSITIVE
	MOVL	NEGITIVE_NAME[R4],(R6); SET NEGITIVE
60$:	TSTL	(R6)+			; MOVE TO NEXT
65$:	INCL	R4
	CMPL	R4,#NUMCHRS1		; TEST IF DONE YET
	BLEQU	50$

	CLRL	R4			; START OVER WITH R4

70$:	MOVL	POS2[R4],(R6)		; ASSUME POSITIVE
	BEQL	80$			; IF NOTHING THERE TO ASUME THEN DON'T
	INCL	R5
	CMPB	R5,#NUMPERLINE		;KEEP COUNT OF HOW MANY OF THESE WE USE
	BNEQ	73$			; IF WE DON'T HAVE 5 THEN DON'T WORRIE
	MOVL	(R6),4(R6)		;MOVE THE LOCATION UP 1 LONG WORD
	MOVL	#NUMPERLINE-1,(R6)+	;MOVE UP 1 AND PUT IN THE COUNT
	CLRL	R5
73$:	BBS	R4,TER$L_DEVDEP2,75$	; BR IF POSITIVE
	MOVL	NEG2[R4],(R6)		; SET NEGITIVE
75$:	TSTL	(R6)+			; MOVE TO NEXT
80$:	INCL	R4
	CMPL	R4,#NUMCHRS2		; TEST IF DONE YET
	BLEQU	70$

	ADDL2	#2,R5			;MOVE THE POINTER TO THE CORRECT SPOT
	MULL3	R5,#4,R0		;GET OUR OFFSET
	SUBL	R0,R6
	MOVAL	-2(R5),(R6)

	CLRL	-(SP)			; GET A NULL PARAMETER
	PUSHL	SP			; AND POINT TO IT
	PUSHAL	SHOW$_TERM_L4		; GET CONTROL STRING
	CALLS	#2,SHOW$WRITE_LINE	; PRINT IT
	TSTL	(SP)+			; CLEAN UP

    	CLRL	R7			; KEEP TRACK OF WHERE WE ARE IN R7
    	MOVAL	CHAR_LIST,R6		; GET AT HEAD OF CHARACTERISTICS LIST
81$:	MULL3	R7,#20,R8		; GET OFFSET INTO CHARACTERISTICS
	ADDL3	R8,R6,-(SP)		; PUSH ADDRESS OF ONE LINE OF CHARS
	PUSHAL	SHOW$_TERM_L5		; AND CONTROL STRING
	CALLS	#2,SHOW$WRITE_LINE	; OUTPUT IT
	AOBLSS	#11,R7,81$		; KEEP GOING
;
; Output spooled device data
;
	BBC	#DEV$V_SPL, TER$L_DEVCHAR, 85$ ; Br if not spooled device
	$GETDVIW_S -			; Get spooled device information
		DEVNAM = TERM_DESC, -
		ITMLST = SPLDVI_INFO
	MOVL	R0, SHOW$L_STATUS	; Save the status code
	BLBC	R0, 85$			; Output nothing if failure
	MOVL	TER$L_DEVNAMLN, CHAR_LIST ; Insert name size
	MOVAB	TER$_DEVNAM, CHAR_LIST+4 ;  and address
	PUSHAL	CHAR_LIST		; Output message
	PUSHAQ	SHOW$_TTLP_SPL
	CALLS	#2, SHOW$WRITE_LINE
85$:	RET

;++
; GET_FOREIGN_TYPE - Get a foreign terminal type (128 to 255)
;
; Implicit inputs:
;
;	TER$B_DEVTYPE = Foreign terminal type (128 to 255)
;
; Implicit outputs:
;
;	CHAR_LIST+4 = Address of terminal type name (.ASCIC)
;--

GET_FOREIGN_TYPE:				; Get a foreign terminal type
	.WORD	^M<>

	MOVAB	UNK, CHAR_LIST+4		; Assume terminal is UNKNOWN

	MOVZBL	TER$B_DEVTYPE, TMP$L_DEVTYPE	; Extend device type to longword
	CMPL	TMP$L_DEVTYPE, #191		; Type in the private range?
	BGTRU	90$				; No (can always get system names)
	CMPL	SHOW$L_STATUS, #SS$_DEVALLOC	; Don't try to get private name for
	BNEQ	90$				; device alloc to someone else
	MOVAB	PRINAME, CHAR_LIST+4		; Use <Private>
	BRB	100$

;
;	Do not link to the SMG unless you must
;

90$:	PUSHAL	SMG$INIT_TERM_TABLE_BY_TYPE	; Link to SMG
	PUSHAQ	$SMG$INIT_TERM_TABLE_BY_TYPE
	PUSHAQ	$SMGSHR
	CALLS	#3, G^LIB$FIND_IMAGE_SYMBOL
	PUSHAL	SMG$DEL_TERM_TABLE
	PUSHAQ	$SMG$DEL_TERM_TABLE
	CALLS	#3, G^LIB$FIND_IMAGE_SYMBOL

	PUSHAQ	TMP_DEVNAM			; Check termtable for definition
	PUSHAL	TERM_TABLE_ADDR
	PUSHAL	TMP$L_DEVTYPE
	CALLS	#3, @SMG$INIT_TERM_TABLE_BY_TYPE
	BLBC	R0, 100$			; Exit if not defined

	CVTWB	TMP_DEVNAM, TMP_TYPE_CT		; Make name counted string
	MOVAB	TMP_TYPE_CT, CHAR_LIST+4

	CALLS	#0, @SMG$DEL_TERM_TABLE		; Release any vm used

100$:	RET

	.END
