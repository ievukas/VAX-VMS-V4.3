%TITLE 'WORKIO - module for all i/o to workfile'
MODULE EDT$WORKIO (				! Basic work i/o routine for EDT
		IDENT = 'V04-000'			! File: WORKIO.BLI Edit: JBS1009
		) =
BEGIN
!
!****************************************************************************
!*									    *
!*  COPYRIGHT (c) 1978, 1980, 1982, 1984 BY				    *
!*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
!*  ALL RIGHTS RESERVED.						    *
!* 									    *
!*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
!*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
!*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
!*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
!*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
!*  TRANSFERRED.							    *
!* 									    *
!*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
!*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
!*  CORPORATION.							    *
!* 									    *
!*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
!*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
!* 									    *
!*									    *
!****************************************************************************
!

!++
! FACILITY:	EDT -- The DEC Standard Editor
!
! ABSTRACT:
!
!	This is the basic file i/o routine used by EDT.
!
! ENVIRONMENT:	Runs on Vax/Vms
!
! AUTHOR: Shelly T. Solomon, CREATION DATE: 29-JAN-1982
!
! MODIFIED BY:
!
! 1-001	- Original.  STS 29-Jan-1982
! 1-002 - Change parameter passed to edt$wf_rd on 11's STS 16-Feb-1982
! 1-003 - Pass address of record_desc to edt$$wf_rd. STS 26-Feb-1982
! 1-004 - Add literals for callable EDT.  STS 08-Mar-1982
! 1-005 - Return correct status to caller. STS 10-Mar-1982
! 1-006	- Fix module name and standardize appearance.  JBS 07-Apr-1982
! 1-007	- Return status from closing work file.  JBS 12-Apr-1982
! 1-008 - Don't use special linkage on 11's. STS 03-Jun-1982
! 1-009	- Don't need special linkage on VAX-11 either.  JBS 22-Mar-1983
!--


%SBTTL 'Declarations'
!
! TABLE OF CONTENTS:
!

REQUIRE 'EDTSRC:TRAROUNAM';

FORWARD ROUTINE
    EDT$WORKIO;

!
! INCLUDE FILES:
!

REQUIRE 'EDTSRC:EDTREQ';

%IF %BLISS (BLISS32)
%THEN

REQUIRE 'EDTSRC:SYSSYM';

%FI

!
! MACROS:
!
!	NONE
!
! EQUATED SYMBOLS:
!

%IF %BLISS (BLISS32)
%THEN

LITERAL
    EDT$K_FAC_NO = 133;

%FI

LITERAL
    EDT$K_OPEN_IN_OUT = 4,
    EDT$K_GET = 5,
    EDT$K_PUT = 6,
    EDT$K_CLOSE_DEL = 7;

!
!
! FIELDS:
!
!	NONE
!
! PSECTS:
!
!	none
!
! OWN STORAGE:
!
!  in the routine
!
! EXTERNAL REFERENCES:
!
! in the routine
!

%SBTTL 'EDT$WORKIO - Basic EDT workfile routine'

GLOBAL ROUTINE EDT$WORKIO (			! Basic EDT workfile routine
    CODE, 					! Operation to perform
    RECORD_NO, 					! record number to perform it on
    RECORD_DESC					! Descriptor for the record
    ) =

!++
! FUNCTIONAL DESCRIPTION:
!
! This is the basic work file i/o routine for EDT.  Callable EDT calls this
! routine to do any i/o to or from the workfile if this is the routine passed to it by the calling
! program.  This is the routine passed to callable EDT by the "real" EDT.
!
! CALLING SEQUENCE:
!
!	ret_status.wlc.v = EDT$WORKIO (code.rl.r, record_no.rl.r, record_desc.rbu.dx)
!
! FORMAL PARAMETERS:
!
! code = a code specifying what kind of i/o operation on the workfile
! 	 is desired
!
! record_no = for gets and puts this is the bucket number
!
! record_desc = for gets and puts a descriptor pointing to the contents
! 		of the bucket
!
! IMPLICIT INPUTS:
!
!	NONE
!
! IMPLICIT OUTPUTS:
!
!	NONE
!
! COMPLETION STATUS:
!
!	Normally SS$_NORMAL
!
! SIDE EFFECTS:
!
!	NONE
!
!--

    BEGIN

    MAP
	RECORD_DESC : REF BLOCK [8, BYTE];

    EXTERNAL ROUTINE
	EDT$$WF_OPN,				! open the workfile
	EDT$$WF_CLS,				! close the workfile
	EDT$$WF_WR,				! write a record to the work file
	EDT$$WF_RD;				! read a record from the workfile

    MESSAGES ((WRKFILOVF, INTERERR, IOERRWRK));

    LOCAL
	STATUS,
	IO_STS,
	IO_STV;

    CASE ..CODE FROM EDT$K_OPEN_IN_OUT TO EDT$K_CLOSE_DEL OF
	SET 					! over all the code optons

	[EDT$K_OPEN_IN_OUT] : 			! open for input and output.
	    BEGIN
	    STATUS = EDT$$WF_OPN ();
	    RETURN (.STATUS);
	    END;

	[EDT$K_GET] : 				! we wish to get a record from a file
	    BEGIN

%IF %BLISS (BLISS32)
%THEN
	    EDT$$WF_RD (.RECORD_NO, .RECORD_DESC);
%ELSE
	    EDT$$WF_RD (.RECORD_NO, RECORD_DESC [DSC$A_POINTER]);
%FI

	    RETURN (1);
	    END;

	[EDT$K_PUT] : 				! we wish to put a record to a file
	    BEGIN

%IF %BLISS (BLISS32)
%THEN
	    EDT$$WF_WR (.RECORD_NO, .RECORD_DESC);
%ELSE
	    EDT$$WF_WR (.RECORD_NO);
%FI

	    RETURN (1);
	    END;

	[EDT$K_CLOSE_DEL] :
	    BEGIN
	    STATUS = EDT$$WF_CLS ();
	    RETURN (.STATUS);
	    END;

	[INRANGE, OUTRANGE] :
	    ASSERT (0);
	TES;

    RETURN (1);
    END;					! End of routine EDT$WORKIO

!<BLF/PAGE>

END						! End of module EDT$WORKIO

ELUDOM
