MODULE CARAGE (	IDENT = 'V04-000'
		%BLISS32[, ADDRESSING_MODE (EXTERNAL    = LONG_RELATIVE,
					    NONEXTERNAL = LONG_RELATIVE)]
		) =
BEGIN
!
!****************************************************************************
!*									    *
!*  COPYRIGHT (c) 1978, 1980, 1982, 1984 BY				    *
!*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
!*  ALL RIGHTS RESERVED.						    *
!* 									    *
!*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
!*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
!*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
!*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
!*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
!*  TRANSFERRED.							    *
!* 									    *
!*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
!*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
!*  CORPORATION.							    *
!* 									    *
!*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
!*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
!* 									    *
!*									    *
!****************************************************************************
!

!++
! FACILITY:	DSR (Digital Standard RUNOFF) / DSRPLUS
!
! ABSTRACT:
!
!	Processes the .PAGE, .SKIP, .BLANK, .TEST PAGE, 
!	.BREAK, and .SPACING commands.
!
! ENVIRONMENT:	Transportable
!
! AUTHOR:	R.W.Friday	CREATION DATE:	May, 1978


%SBTTL 'Revision History'
! MODIFIED BY:
!
!	006	KFA00006	Ken Alden	05-Aug-1983
!		Added handling for .PAGE NOW (plus).	
!
!	005	RER00005	Ron Randall	17-Mar-1983
!		For DSRPLUS:
!		In [h_skip], added code to test for negative skip in topnote.
!
!	004	KFA00004	Ken Alden	07-Mar-1983
!		Global edit of all modules. Updated module names, idents,
!		copyright dates. Changed require files to BLISS library.
!--


%SBTTL 'Module Level Declarations'
!
! INCLUDE FILES:
!
LIBRARY 'NXPORT:XPORT';			! XPORT Library
REQUIRE 'REQ:RNODEF';			! RUNOFF variant definitions

%IF DSRPLUS %THEN
LIBRARY 'REQ:DPLLIB';			! DSRPLUS BLISS Library
%ELSE
LIBRARY 'REQ:DSRLIB';			! DSR BLISS Library
%FI

!
! EXTERNAL REFERENCES:
!
EXTERNAL
    FNCT	: FNCT_DEFINITION,
    IRA		: FIXED_STRING,
    MRA		: REF FIXED_STRING,
    NUMPRM	: NUMPRM_DEFINE,
    PHAN	: PHAN_DEFINITION,
    SCA		: SCA_DEFINITION;

%IF DSRPLUS %THEN
EXTERNAL
    TOPNOT	: TN_DEFINITION;

EXTERNAL LITERAL
    RNFIIT;
%FI

EXTERNAL LITERAL
    RNFIFT,
    RNFINM,
    RNFMNL;

EXTERNAL ROUTINE
    erma,
    gcpage,
    gcpos,
    gcskip,
    gtpc,
%IF DSRPLUS %THEN
    newpag,
%FI
    tpffit,
    tpfsiz;


GLOBAL ROUTINE carage (handler_code) : NOVALUE =

!++
! FUNCTIONAL DESCRIPTION:
!
!	See the ABSTRACT, above.
!
! FORMAL PARAMETERS:
!
!	handler_code - Indicates which command is to be processed.
!
! IMPLICIT INPUTS:
!
!	numprm - Expected to contain a number, as processed by GETNUM.
!
! IMPLICIT OUTPUTS:	None
!
! ROUTINE VALUE:
! COMPLETION CODES:	None
!
! SIDE EFFECTS:		None
!--

    BEGIN

    ! Some commands take a number.
    IF 	(.HANDLER_CODE NEQ H_BREAK) AND
	(.HANDLER_CODE NEQ H_PAGE)
%IF DSRPLUS %THEN
    		AND
	(.HANDLER_CODE NEQ H_PAGE_NOW)
%FI
    THEN

	IF  NOT .NUM_RESULT
	! Ignore command if number was bad.
	THEN
	    RETURN;

    SELECTONE .HANDLER_CODE OF
	SET

	[H_BLANK, H_SKIP] :
	    BEGIN

	    IF 	.NUM_LENGTH EQL 0
	    THEN
		NUM_VALUE = 1;			! Default if no parameter.

	    IF 	.HANDLER_CODE EQL H_SKIP
	    ! Commands .SKIP and .BLANK mean the same
	    ! thing, except that .SKIP means ".SPACING"
	    ! blank lines, whereas .BLANK means exactly
	    ! as many blank lines as specified.
	    THEN
		NUM_VALUE = .NUM_VALUE * .SCA_SPACING;

	    IF 	.NUM_VALUE LSS 0
	    THEN
		BEGIN

%IF DSRPLUS %THEN
		!
		! .SKIP with negative value is illegal in a topnote.
		!
		IF  .TN_COLLECTING
		THEN
		    BEGIN
		    ERMA (RNFIIT, FALSE);
		    RETURN;
		    END;
%FI

		!
		! .SKIP with negative value is illegal in a footnote.
		!
		IF  .FNCT_COLLECTING
		THEN
		    BEGIN
		    ERMA (RNFIFT, FALSE);
		    RETURN;
		    END;

		IF  ABS (.NUM_VALUE) GEQ .PHAN_LLINES
		THEN
		    ! User said something like .SKIP -9999.
		    BEGIN
		    ERMA (RNFINM, FALSE);
		    RETURN;
		    END;

		! It's a valid .SKIP/.BLANK with a negative count.
		GCPOS (.NUM_VALUE);
		RETURN;
		END;

	    ! Generate code for the conditional skip.
	    GCSKIP (.NUM_VALUE);
	    END;

	[H_BREAK] :
	    ! Everything associated with .BREAK is contained in
	    ! the tables, that are interpreted by DOCM.
	    0;

	[H_PAGE] :
	    ! Generate code for the conditional page.
	    GCPAGE ();

%IF DSRPLUS %THEN
	[H_PAGE_NOW] :
	    ! Throw a page NOW.
	    BEGIN
    	    IF  .fnct_collecting		! Don't start a new page if
    	    THEN 				! footnotes are being collected,
		RETURN;				! since footnotes all belong on
	    					! one page.

	    phan_top_page = false;		! Start another one, even
    	    newpag ();				! if we're at the beginning of a
    	    END;				! new page.
%FI

	[H_SPACING] :
	    BEGIN

	    IF 	.NUM_LENGTH EQL 0
	    ! No number provided.
	    THEN
		BEGIN
		ERMA (RNFMNL, FALSE);
		RETURN;
		END;

	    IF 	(.NUM_VALUE LEQ 0) OR
		(.NUM_VALUE GTR 5)
	    ! Number not between 0 and 5.
	    THEN
		BEGIN
		ERMA (RNFINM, FALSE);
		RETURN;
		END;

	    SCA_SPACING = .NUM_VALUE;
	    END;

	[H_TEST_PAGE] :
	    BEGIN

	    IF 	.NUM_LENGTH EQL 0
	    ! No number provided.
	    THEN
		BEGIN
		ERMA (RNFMNL, FALSE);
		RETURN;
		END;

	    IF 	.NUM_VALUE LEQ 0
	    ! Negative number not allowed.
	    THEN
		BEGIN
		ERMA (RNFINM, FALSE);
		RETURN;
		END;

	    ! Add count of pending footnote lines, if any, 
	    ! to the given test-page value.
	    ! Generate code for a test page.
	    GTPC (.NUM_VALUE + TPFSIZ (TPFFIT ()));
	    END;

	TES;

    END;					!End of CARAGE

END						!End of module
ELUDOM
