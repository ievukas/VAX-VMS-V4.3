;	MP.MDL - Multi-processing block definitions
;
;	Version 'V04-000'
;
;****************************************************************************
;*									    *
;*  COPYRIGHT (c) 1978, 1980, 1982, 1984 BY				    *
;*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
;*  ALL RIGHTS RESERVED.						    *
;* 									    *
;*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
;*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
;*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
;*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
;*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
;*  TRANSFERRED.							    *
;* 									    *
;*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
;*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
;*  CORPORATION.							    *
;* 									    *
;*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
;*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
;* 									    *
;*									    *
;****************************************************************************

;++
;
; FACILITY: Executive , Multi-processing definition macros
;
; ABSTRACT:
;
;	This file contains the MDL source for all multi-processing
;	block structure definitions.
;
; ENVIRONMENT:
;
;	n/a
;
;--
;
;
; AUTHOR:  Kathleen D. Morse, CREATION DATE:  26-Feb-1981
;
; MODIFIED BY:
;
;	V03-003	KDM0018		Kathleen D. Morse	13-Oct-1982
;		Added secondary request flag to check an event flag
;		wait condition.
;
;	V03-002	KDM0012		Kathleen D. Morse	20-Sep-1982
;		Add second error log buffer flag.
;
;
;**

;+
; MPS$GL_BUGCHECK bit definitions
;
; This longword contains indicators for handling bugcheck.
;-

	$STRUCT	BUG
	V<			; Bits in MPS$GL_BUGCHECK
		BUGCHK,,,M	; Set by primary to request a bugcheck
		ACK1,,,M	; Set by secondary when acknowleging a bugcheck
	>
	E

;+
; MPS$GL_INTERLOCK bit definitions
;
; This longword is accessed by interlocked instructions to flush the cache
; so that non-interlocked accesses to other pieces of data get the correct
; values.
;-

	$STRUCT LCK
	V<
		INTERLOCK,,,M		; Interlock bit
	>
	E

;+
; MPS$GL_STATE value definitions
;
; This longword contains the state of the secondary processor.
;-

	$STRUCT	MPS

	K<,$K_				;Secondary states
		IDLESTATE,1		; Idle
		DROPSTATE,2		; Dropping current process; CURPCB valid
		BUSYSTATE,3		; Busy; CURPCB valid but LDPCTX not
					;  yet done
		EXECSTATE,4		; Executing process; CURPCB valid and
					;  LDPCTX done
		INITSTATE,5		; Initialization uncomplete
		STOPSTATE,6		; Processor stopped

	>

	V<M				;Secondary request flags
		SECBUGCHK		; Bugcheck requested by secondary
		SECERRLOG		; Error log requested by secondary
		SECWAITCK		; Event flag wait check requested by sec
	>

	V<M				;Bits in MPS$GL_STOPFLAG (for STOP/CPU)
		STOPREQ			; Primary request flag
		STOPACK1		; Secondary acknowlegement flag
	>

	V<M				;Error log buffer flags
		ERLBUF1			; Buffer 1 busy
		ERLBUF2			; Buffer 2 busy
	>
	K<,$K_				;Error log buffer information
		ERLBUFSIZ,512		; Size of error log buffer in bytes
	>
	E

;+
; MPS$GL_STATE bit definitions
;
; This longword records the state of the secondary processor.
;-

	$STRUCT	STA
	V<
		INIT,,,M		; Initialization
		IDLE,,,M		; Idle
		DROP,,,M		; Dropping current process
		BUSY,,,M		; Busy executing a process
		STOP,,,M		; Stopped
	>
	E

