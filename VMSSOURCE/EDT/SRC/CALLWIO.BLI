%TITLE 'EDT$CALLWIO - calls WORKIO routine'
MODULE EDT$CALLWIO (				! Calls work I/O routine for EDT
		IDENT = 'V04-000'			! File: CALLWIO.BLI Edit:  JBS1007
		) =
BEGIN
!
!****************************************************************************
!*									    *
!*  COPYRIGHT (c) 1978, 1980, 1982, 1984 BY				    *
!*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
!*  ALL RIGHTS RESERVED.						    *
!* 									    *
!*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
!*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
!*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
!*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
!*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
!*  TRANSFERRED.							    *
!* 									    *
!*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
!*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
!*  CORPORATION.							    *
!* 									    *
!*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
!*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
!* 									    *
!*									    *
!****************************************************************************
!

!++
! FACILITY:	EDT -- The DEC Standard Editor
!
! ABSTRACT:
!
!	This routine calls the basic work I/O routine used by EDT.
!
! ENVIRONMENT:	Runs on Vax/Vms
!
! AUTHOR: Shelly T. Solomon, CREATION DATE: 27-Jan-1982
!
! MODIFIED BY:
!
! 1-001	- Original.  STS 27-Jan-1982
! 1-002 - Signal bad status returned. STS 09-Mar-1982
! 1-003 - Deallocate as much as possible if signalling. STS 09-Mar-1982
! 1-004 - Don't enable a handler. STS 18-Mar-1982
! 1-005 - Take out reference to work_rout on 11's. STS 02-Jun-1982
! 1-006 - Enable a handler. STS 21-Jul-1982
! 1-007	- Improve the appearance of the listing.  JBS 13-Jun-1983
!--


%SBTTL 'Declarations'
!
! TABLE OF CONTENTS:
!

REQUIRE 'EDTSRC:TRAROUNAM';

FORWARD ROUTINE
    EDT$$CALLWIO;

!
! LINKAGES
!

LINKAGE
    IOCALL = CALL (REGISTER = 1);		! special linkage for work routine

!
! INCLUDE FILES:
!

REQUIRE 'EDTSRC:EDTREQ';

%IF %BLISS (BLISS32)
%THEN

REQUIRE 'EDTSRC:SYSSYM';

%FI

!
! MACROS:
!
!	NONE
!
! EQUATED SYMBOLS:
!
!	NONE
!
! EXTERNAL REFERENCES:
!
! in the routine
!

%SBTTL 'EDT$CALLWIO - Calls EDT work I/O routine'

GLOBAL ROUTINE EDT$$CALLWIO (			! Calls EDT work I/O routine
    CODE, 					! Operation code
    RECORD_NO, 					! Record number
    RECORD_DESC					! Record descriptor
    ) : =

!++
! FUNCTIONAL DESCRIPTION:
!
! This routine sets up a condition handler and then calls the designated
! work I/O routine.
!
! FORMAL PARAMETERS:
!
! CODE - the operation to be performed, whether open, close, read or write
!
! RECORD_NO - the number of the record to be read or put
!
! RECORD_DESC - a descriptor pointing to the place to put the record read, or
!		to find the record written
!
! IMPLICIT INPUTS:
!
!	NONE
!
! IMPLICIT OUTPUTS:
!
!	NONE
!
! COMPLETION STATUS:
!
!	Same as WORKIO
!
! SIDE EFFECTS:
!
!	NONE
!
!--

    BEGIN

%IF %BLISS (BLISS32)
%THEN

    EXTERNAL ROUTINE
	EDT$$WIOHNDLR,
	EDT$$SC_RESET,
	EDT$$DEA_ALLHEAP,
	STR$FREE1_DX;

    EXTERNAL
	EDT$$A_WORK_ROUT,			! address of routine for work I/O
	EDT$$G_WORK_ENV,			! file routine environment word
	EDT$$G_EDIT_MOD;

%ELSE

    EXTERNAL ROUTINE
	EDT$WORKIO;

%FI

    LOCAL
	STATUS;

    MESSAGES ((PASSTATUS));
!+
! The following call is a general routine call using the linkage defined
! as iocall.  i.e. what is happening is that a call is being made to the
! routine whose address is contained in the variable EDT$$A_WORK_ROUT.
! The contents of the variable EDT$$G_WORK_ENV is first put into register 1
! for the call. (This is done because of the requirements of callable EDT
! where the user can specify his own work routine and some high-level
! languages require an environment word to be passed in register 0.)
! The remaining three parameters in the list are the actual parameters
! passed to the work I/O routine.
!-

%IF %BLISS (BLISS32)
%THEN

    ENABLE
	EDT$$WIOHNDLR ();

    STATUS = IOCALL (.EDT$$A_WORK_ROUT, .EDT$$G_WORK_ENV, %REF (.CODE), .RECORD_NO, .RECORD_DESC);
%ELSE
    STATUS = EDT$WORKIO (%REF (.CODE), .RECORD_NO, .RECORD_DESC);
%FI

%IF %BLISS (BLISS32)
%THEN

    IF ( NOT .STATUS)
    THEN
	BEGIN

	IF (.EDT$$G_EDIT_MOD EQL CHANGE_MODE) THEN EDT$$SC_RESET ();

	STR$FREE1_DX (.RECORD_DESC);
	EDT$$DEA_ALLHEAP ();
	SIGNAL_STOP (EDT$_PASSTATUS, 0, .STATUS, 0);
	END;

%FI

    RETURN (.STATUS);
    END;					! End of routine CALLWIO

!<BLF/PAGE>

END						! End of module CALLWIO

ELUDOM
