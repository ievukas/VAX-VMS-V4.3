%TITLE 'EDT$CHMSCHSTR - search for a string'
MODULE EDT$CHMSCHSTR (				! Search for a string
		IDENT = 'V04-000'			! File: CHMSCHSTR.BLI Edit: JBS1009
		) =
BEGIN
!
!****************************************************************************
!*									    *
!*  COPYRIGHT (c) 1978, 1980, 1982, 1984 BY				    *
!*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
!*  ALL RIGHTS RESERVED.						    *
!* 									    *
!*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
!*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
!*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
!*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
!*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
!*  TRANSFERRED.							    *
!* 									    *
!*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
!*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
!*  CORPORATION.							    *
!* 									    *
!*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
!*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
!* 									    *
!*									    *
!****************************************************************************
!

!++
! FACILITY:	EDT -- The DEC Standard Editor
!
! ABSTRACT:
!
!	This module scans text looking for the search string.
!
! ENVIRONMENT:	Runs at any access mode - AST reentrant
!
! AUTHOR: Bob Kushlis, CREATION DATE: Unknown
!
! MODIFIED BY:
!
! 1-001	- Original.  DJS 04-Feb-1981.  This module was created by
!	extracting the routine EDT$$STR_SEA  from module CHANGE.BLI.
! 1-002	- Regularize header.  JBS 03-Mar-1981
! 1-003	- Don't check for control C so frequently.  JBS 28-Jul-1981
! 1-004	- Add new WPS search.  STS 05-Oct-1981 (note added 24-May-1982)
! 1-005	- Set a flag if control C actually aborts something.  JBS 24-May-1982
! 1-006	- Remove EDT$$A_STR_CMP.  JBS 20-Jul-1982
! 1-007	- Remove reference to EDT$$TST_CHALFA, it is not used.  JBS 20-Jul-1982
! 1-008	- Do some work on performance.  JBS 04-Jan-1983
! 1-009	- Add conditionals for VT220 support.  JBS 11-Feb-1983
!--


%SBTTL 'Declarations'
!
! TABLE OF CONTENTS:
!

REQUIRE 'EDTSRC:TRAROUNAM';

FORWARD ROUTINE
    EDT$$STR_SEA;

!
! INCLUDE FILES:
!

REQUIRE 'EDTSRC:EDTREQ';

LIBRARY 'EDTSRC:TRANSLATE';

LIBRARY 'EDTSRC:SUPPORTS';

!
! MACROS:
!
!	NONE
!
! EQUATED SYMBOLS:
!
!	NONE
!
! OWN STORAGE:
!
!	NONE
!
! EXTERNAL REFERENCES:
!
!	In the routine

%SBTTL 'EDT$$STR_SEA  - search for a string'

GLOBAL ROUTINE EDT$$STR_SEA (			! Search for a string
    ADDR, 					! Address of the model string
    LEN, 					! Length of the model string
    DIR						! Direction to search
    ) =

!++
! FUNCTIONAL DESCRIPTION:
!
!	Search the text for a given string.
!
! FORMAL PARAMETERS:
!
!  ADDR			Address of the string to find
!
!  LEN			Length of the string to find
!
!  DIR			Direction in which to search
!
! IMPLICIT INPUTS:
!
!	EDT$$G_EXCT_MATCH
!	EDT$$A_CUR_BUF
!	EDT$$A_WK_LN
!
! IMPLICIT OUTPUTS:
!
!	EDT$$A_CUR_BUF
!	EDT$$G_CC_DONE
!
! ROUTINE VALUE:
!
!	0		Not found
!	1		Found
!	2		Terminated by control C
!
! SIDE EFFECTS:
!
!	NONE
!
!--

    BEGIN

    EXTERNAL ROUTINE
	EDT$$CHK_CC,				! Check to see if a CTRL/C has been typed
	EDT$$RD_NXTLN,				! Move forward a line
	EDT$$RD_PRVLN,				! Move backward a line
	EDT$$STR_CMP;				! Compare two strings of equal length

    EXTERNAL
	EDT$$G_EXCT_MATCH,			! Type of string matching to do
	EDT$$A_CUR_BUF : REF TBCB_BLOCK,	! The current buffer tbcb
	EDT$$A_WK_LN : REF LIN_BLOCK,		! Current line pointer
	EDT$$G_CC_DONE;				! Set to 1 if control C actually aborted something

%IF SUPPORT_VT220
%THEN

    BIND
	GENERAL_TABLE = UPLIT (BYTE (CHAR_GENERAL)) : VECTOR [256, BYTE];

%FI

    LOCAL
	REM,
	LP,
	LE,
	FC,
	L_LEN,					! Local copy of length parameter

%IF SUPPORT_VT220
%THEN
	P_GEN_TABLE : REF VECTOR [256, BYTE];	! Pointer to table declared above

%ELSE
    TC;
%FI

!+
! Remember the first character so we can avoid compares
! when first characters cannot possibly match.
!-
    FC = CH$RCHAR (.ADDR);
!+
! Get a pointer to the translate table, to speed access to it.
!-

%IF SUPPORT_VT220
%THEN
    P_GEN_TABLE = GENERAL_TABLE [0];
%ELSE

    IF ((.FC GEQ %C'a') AND (.FC LEQ %C'z')) THEN FC = .FC - %C'a' + %C'A';

%FI

!+
! Get a local copy of the length parameter, to speed tests of it.
!-
    L_LEN = .LEN;
!
    LP = CH$PTR (EDT$$A_WK_LN [LIN_TEXT], .EDT$$A_CUR_BUF [TBCB_CHAR_POS]);
    LE = CH$PTR (EDT$$A_WK_LN [LIN_TEXT], .EDT$$A_WK_LN [LIN_LENGTH]);

    WHILE 1 DO
	BEGIN

	IF ((REM = CH$DIFF (.LE, .LP)) GEQ .L_LEN)
	THEN
!+
! Perform a quick test for feasibility; this will avoid calling EDT$$STR_CMP for many
! non-matches.
!-

%IF SUPPORT_VT220
%THEN

	    IF (.P_GEN_TABLE [CH$RCHAR (.LP)] EQL .P_GEN_TABLE [.FC])
	    THEN
%ELSE
		TC = CH$RCHAR (.LP);

	IF ((.TC GEQ %C'a') AND (.TC LEQ %C'z')) THEN TC = .TC - %C'a' + %C'A';

	IF (.TC EQL .FC)
	THEN
%FI

	    IF EDT$$STR_CMP (.LP, .ADDR, .L_LEN, .EDT$$G_EXCT_MATCH)
	    THEN
		BEGIN
		EDT$$A_CUR_BUF [TBCB_CHAR_POS] = CH$DIFF (.LP, CH$PTR (EDT$$A_WK_LN [LIN_TEXT]));
		RETURN (1);
		END;

	IF (.DIR EQL DIR_BACKWARD)
	THEN

	    IF (.LP EQL CH$PTR (EDT$$A_WK_LN [LIN_TEXT]))
	    THEN
		BEGIN

		IF ( NOT EDT$$RD_PRVLN ()) THEN RETURN (0);

		IF EDT$$CHK_CC ()
		THEN
		    BEGIN
		    EDT$$G_CC_DONE = 1;
		    RETURN (2);
		    END;

		LP = LE = CH$PTR (EDT$$A_WK_LN [LIN_TEXT], .EDT$$A_WK_LN [LIN_LENGTH]);
		END
	    ELSE
		LP = CH$PLUS (.LP, -1)

	ELSE

	    IF (.REM LEQ .L_LEN)
	    THEN
		BEGIN

		IF ( NOT EDT$$RD_NXTLN ()) THEN RETURN (0);

		IF EDT$$CHK_CC ()
		THEN
		    BEGIN
		    EDT$$G_CC_DONE = 1;
		    RETURN (2);
		    END;

		LP = CH$PTR (EDT$$A_WK_LN [LIN_TEXT]);
		LE = CH$PTR (.LP, .EDT$$A_WK_LN [LIN_LENGTH]);
		END
	    ELSE
		LP = CH$PLUS (.LP, 1)

	END

    END;					! of routine EDT$$STR_SEA

!<BLF/PAGE>

END						! of module EDT$CHMSCHSTR

ELUDOM
