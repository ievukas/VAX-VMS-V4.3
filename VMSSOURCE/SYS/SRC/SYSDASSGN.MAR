	.TITLE	SYSDASSGN - SYSTEM SERVICE DEASSIGN I/O CHANNEL
	.IDENT	'V04-000'
 
;
;****************************************************************************
;*									    *
;*  COPYRIGHT (c) 1978, 1980, 1982, 1984 BY				    *
;*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
;*  ALL RIGHTS RESERVED.						    *
;* 									    *
;*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
;*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
;*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
;*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
;*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
;*  TRANSFERRED.							    *
;* 									    *
;*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
;*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
;*  CORPORATION.							    *
;* 									    *
;*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
;*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
;* 									    *
;*									    *
;****************************************************************************
;
; D. N. CUTLER 26-AUG-76
;
; MODIFIED BY:
;
;	V03-015	HH0049		Hai Huang		16-Aug-1984
;		Retract HH0048. Device deallocation on dismount will
;		be done in the file systems and IOC$DISMOUNT.
;
;	V03-014	HH0048		Hai Huang		15-Aug-1984
;		Deallocate the device on last channel deassign if the 
;		device owner has gone away.
;
;	V03-013	ACG0441		Andrew C. Goldstein,	8-Aug-1984  15:16
;		Remove foreign dismount logic (moved to DISMOUNT)
;
;	V03-012	HH0033		Hai Huang		06-Jul-1984
;		Do foreign volume cleanups if the device is allocated
;		to the top level process in the process tree.		
;
;	V03-011	HH0023		Hai Huang		05-Jun-1984
;		Correctly handle last channel deassign on an allocated 
;		device. 
;
;	V03-010	LMP0221		L. Mark Pilant,		30-Mar-1984  15:42
;		Change UCB$L_OWNUIC to ORB$L_OWNER and UCB$W_VPROT to
;		ORB$W_PROT.
;
;	V03-009	ACG0399		Andrew C. Goldstein,	24-Feb-1984  22:59
;		Incorporate I/O database locking rewrite, move LAST_CHAN
;		routine to IOSUBNPAG so it can be shared by DEALLOCATE,
;		correct flow in deallocating device on dismount.
;
;	V03-008	CDS0001		Christian D. Saether	22-Sep-1983
;		Move deallocate on dismount action here from ioc$dismount
;		so that the device deallaction does not occur until
;		the last channel goes away.
;
;	V03-007	JLV0301		Jake VanNoy		30-JUL-1983
;		Add second call to IOC$VERIFYCHAN to prevent double
;		deassign.
;
;	V03-006	TCM0002		Trudy C. Matthews	28-Jun-1983
;		Small change to interface to EXE$UNLOCK_DEV.
;
;	V03-005	ROW0189		Ralph O. Weber		21-JUN-1983
;		Correct action taken upon discovery of a pending kernel mode 
;		AST during "wait for all outstanding I/O to finish" logic.  
;		Change method for lowering IPL to 0 from SETIPL to REI.  The 
;		intent of lowering IPL is to allow the kernel mode AST to be 
;		delivered.  However, the AST will be delivered only if IPL is 
;		lowered via an REI.  (Only the REI instruction delivers AST 
;		"interrupts.")
;
;	V03-004	TCM0001		Trudy C. Matthews	17-May-1983
;		Dequeue cluster-wide lock on last channel de-assign.
;
;	V03-003	ROW0170		Ralph O. Weber		12-MAR-1983
;		Reorder actual deassignment logic to be consistant with the 
;		notion that the mailbox driver should perform all mailbox 
;		dependent processing in its cancel I/O routine.  Setup use of 
;		CAN$C_AMBXDGN cancel reason code to signal mailbox driver when 
;		it is being called due to last reference deassignment on an 
;		associated mailbox.
;
;	V03-002	ROW0127		Ralph O. Weber		 5-OCT-1982
;		Make changes required to use new UCB creation and deletion 
;		routines in UCBCREDEL.  Modify the delete-UCB check at the end 
;		of this module to call IOC$DELMBX if the device independent 
;		characteristics indicate a mailbox or call IOC$DELETE_UCB if 
;		the device independent characteristics do not indicate a 
;		mailbox.
;
;	V03-001	KDM0002		Kathleen D. Morse	28-Jun-1982
;		Added $DEVDEF.
;
; SYSTEM SERVICE DEASSIGN I/O CHANNEL
;
; MACRO LIBRARY CALLS
;
 
	$CANDEF				;DEFINE CANCEL REASON CODES
	$CCBDEF				;DEFINE CCB OFFSETS
	$DDBDEF				;DEFINE DDB OFFSETS
	$DDTDEF				;DEFINE DDT OFFSETS
	$DEVDEF				;DEFINE DEVICE TYPES
	$IODEF				;DEFINE I/O FUNCTION CODES
	$IPLDEF				;DEFINE INTERRUPT PRIORITY LEVELS
	$JIBDEF				;DEFINE JIB OFFSETS
	$ORBDEF				;DEFINE OBJECT'S RIGHTS BLOCK OFFSETS
	$PCBDEF				;DEFINE PCB OFFSETS
	$PRDEF				;DEFINE PROCESSOR REGISTERS
	$RSNDEF				;DEFINE RESOURCE WAIT NUMBERS
	$SSDEF				;DEFINE SYSTEM STATUS VALUES
	$UCBDEF				;DEFINE UCB OFFSETS
 
;
; LOCAL SYMBOLS
;
; ARGUMENT LIST OFFSET DEFINITIONS
;
 
CHAN=4					;I/O CHANNEL NUMBER


	.PSECT	AEXENONPAGED

	.SBTTL	DEASSIGN I/O CHANNEL
;+
; EXE$DASSGN - DEASSIGN I/O CHANNEL
;
; THIS SERVICE DEASSIGNS A PREVIOUSLY ASSIGNED I/O CHANNEL AND CLEARS THE
; LINKAGE AND CONTROL INFORMATION IN THE CORRESPONDING CHANNEL CONTROL BLOCK.
; IF ANY I/O IS OUTSTANDING ON THE CHANNEL IT IS CANCELLED. IF A FILE IS
; OPEN ON THE CHANNEL IT IS CLOSED. IF A MAILBOX WAS ASSOCIATED WITH THE
; DEVICE WHEN IT WAS ASSIGNED, THE LINKAGE TO THE MAILBOX IS CLEARED. IF THE
; THE CHANNEL IS LAST ONE ASSIGNED TO THE DEVICE AND IT IS MARKED FOR DIS-
; MOUNT, THEN THE DISMOUNT IS COMPLETED.
;
; INPUTS:
;
;	CHAN(AP) = NUMBER OF THE I/O CHANNEL TO DEASSIGN.
;
;	R4 = CURRENT PROCESS PCB ADDRESS.
;
; OUTPUTS:
;
;	R0 LOW BIT CLEAR INDICATES FAILURE TO DEASSIGN CHANNEL.
;
;		R0 = SS$_IVCHAN - INVALID CHANNEL NUMBER SPECIFIED.
;
;		R0 = SS$_NOPRIV - SPECIFIED CHANNEL IS NOT ASSIGNED TO A
;			DEVICE OR THE CALLER DOES NOT HAVE SUFFICIENT
;			PRIVILEGE TO ACCESS THE CHANNEL.
;
;	R0 LOW BIT SET INDICATES SUCCESSFUL COMPLETION.
;
;		R0 = SS$_NORMAL - NORMAL COMPLETION.
;-
 
	.ENTRY	EXE$DASSGN,^M<R2,R3,R4,R5,R6,R7,R8>
	MOVZWL	CHAN(AP),R5		;GET CHANNEL NUMBER
	MOVL	R5,R0			;COPY I/O CHANNEL NUMBER
	BSBW	IOC$VERIFYCHAN		;VERIFY CHANNEL NUMBER
	BLBC	R0,50$			;IF LBC INVALID CHANNEL
	MOVL	R1,R6			;COPY ADDRESS OF CCB
	MOVL	R2,R7			;SAVE CHANNEL INDEX
	MOVZBL	#CAN$C_DASSGN,-(SP)	;PUSH DEASSIGN CODE
	MOVZWL	R5,-(SP)		;PUSH CHANNEL NUMBER
	CALLS	#2,EXE$CANCELN		;CANCEL I/O ON CHANNEL
	;
	; Channel is verified again. This is because the $CANCEL could
	; have activated a kernel mode AST routine which did another
	; $DASSGN.  (This can happen in $BRKTHRU, for example)
	;
	MOVL	R5,R0			;COPY I/O CHANNEL NUMBER
	BSBW	IOC$VERIFYCHAN		;VERIFY CHANNEL NUMBER
	BLBC	R0,50$			;IF LBC INVALID CHANNEL
20$:	TSTL	CCB$L_WIND(R6)		;FILE ACCESSED ON CHANNEL?
	BEQL	30$			;IF EQL NO
	$QIOW_S	#30,R5,#IO$_DEACCESS	;DEACCESS FILE
	BLBS	R0,30$			;IF LBS SUCCESSFUL COMPLETION
	CMPW	#SS$_FILNOTACC,R0	;NO FILE ACCESSED?
	BNEQ	50$			;IF NEQ NO
30$:	MOVPSL	-(SP)			;SAVE CURRENT PROCESSOR STATUS
	SETIPL	#IPL$_ASTDEL		;RAISE TO AST DELIVERY LEVEL
	TSTW	CCB$W_IOC(R6)		;ANY I/O STILL OUTSTANDING?
	BEQL	60$			;IF EQL NO
	SETIPL	#IPL$_SYNCH		;RAISE TO SYNCHRONIZATION LEVEL
	MFPR	#PR$_ASTLVL,R0		;READ CURRENT AST LEVEL
	BEQL	55$			;IF EQL KERNEL AST QUEUED
	MOVZWL	#RSN$_ASTWAIT,R0	;SET AST WAIT RESOURCE WAIT NUMBER
	BSBW	SCH$RWAIT		;WAIT FOR AST
40$:	SETIPL	#0			;ALLOW INTERRUPTS
	BRB	20$			;
50$:	RET				;

55$:	PUSHAB	B^20$			;ALLOW KERNEL AST TO BE DELIVERED
	REI				;AND CONTINUE AT 20$

;
; DEASSIGN CHANNEL 
;
60$:	BSBW	SCH$IOLOCKW		;LOCK I/O DATABASE FOR WRITE ACCESS
	MOVL	CCB$L_UCB(R6),R5	;GET ASSIGNED DEVICE UCB ADDRESS
	CLRB	CCB$B_AMOD(R6)		;DEASSIGN CHANNEL
;
; CHECK IF CHANNEL ASSOCIATED A MAILBOX AND IF SO, CLEAN IT UP
;
	BBC	#CCB$V_AMB, -		; Branch if no MBX associated
		CCB$B_STS(R6), 70$	; by this channel.
	MOVL	R5, R3			; Copy address of device UCB.
	MOVL	UCB$L_AMB(R5), R5	; Get associated mailbox UCB address.
	BEQL	70$			; Branch if none.
	BBC	#DEV$V_MBX, -		; Branch if associated device is
		UCB$L_DEVCHAR(R5), 70$	; not a mailbox.
	CLRL	UCB$L_AMB(R3)		; Clear associated mailbox addresss.
	DECW	UCB$W_REFC(R5)		; Decrement mailbox UCB reference count.
	BNEQ	70$			; Branch if mailbox still referenced.
	BSBW	IOC$LAST_CHAN_AMBX	; Else, process last channel deassign
					; for the associated mailbox.

;
; DECREMENT REFERENCE COUNT
; CHECK FOR AND PROCESS LAST CHANNEL DEASSIGN
;
70$:	MOVL	CCB$L_UCB(R6), R5	; Get device UCB address back.
	DECW	UCB$W_REFC(R5)		; Decrement device reference count.
	BNEQ	80$			; Branch if not very last reference.
;
; Handle ref count reaching zero.
;
	CLRL	UCB$L_PID(R5)		; Clear owner process id.
	BBC	#DEV$V_CLU, -		; Branch if device not available
		UCB$L_DEVCHAR2(R5),100$	; cluster-wide.
	BSBW	IOC$UNLOCK_DEV		; Dequeue cluster-wide device lock.
	BRB	100$			; Do rest of last channel deassign
;
; Check for last channel deassign on an allocated device
;
80$:	CMPW	#1, UCB$W_REFC(R5)	; UCB reference count one?
	BNEQ	110$			; If not one, branch to finish request

	BBC	#DEV$V_ALL, -		; If device not allocated,
		UCB$L_DEVCHAR(R5), 110$ ; branch to finish request.
;
; Call driver's cancel I/O routine with CAN$C_DASSGN reason code and
; if appropriate, delete UCB
;
100$:	MOVL	R7,R2			; Get channel index
	BSBW	IOC$LAST_CHAN		; Do common last channel deassign.
;
; SET STATUS AND EXIT
;
110$:	MOVZWL	#SS$_NORMAL, R0		; Set normal completion.
	BRW	IOC$UNLOCK		; Unlock I/O data base and return.


	.END
