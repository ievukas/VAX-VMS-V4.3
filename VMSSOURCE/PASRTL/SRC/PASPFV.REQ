! Pascal File Variable (PFV$) field definitions
! File: PASPFV.REQ, Edit: SBL1001
!
!****************************************************************************
!*									    *
!*  COPYRIGHT (c) 1978, 1980, 1982, 1984 BY				    *
!*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
!*  ALL RIGHTS RESERVED.						    *
!* 									    *
!*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
!*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
!*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
!*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
!*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
!*  TRANSFERRED.							    *
!* 									    *
!*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
!*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
!*  CORPORATION.							    *
!* 									    *
!*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
!*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
!* 									    *
!*									    *
!****************************************************************************
!
! Author: Steven B. Lionel, 1-April-1981
!
! 1-001 - Original.  SBL 1-April-1981
!--

!+
! The Pascal File Variable (PFV) is a dynamically allocated block whose
! address is passed to the Run-Time Library to uniquely identify a file.
! For more information, see the VAX-11 Language Support Procedures reference
! Manual
!-

! PFV structure definition

FIELD
    PFV$FIELDS =
	SET

	PFV$R_PFV	= [0,0,0,0],	! Field to address the entire structure.

	PFV$A_BUFFER	= [0,0,32,0],	! Address of the user file buffer.  If
					! PFV$V_RELBUF is set, this address is
					! relative to the PFV address, otherwise
					! it is absolute.


	PFV$B_VERSION	= [4,0,8,0],	! The version number of the PFV layout.
					! The latest version number is defined by
					! the symbol PFV$K_CUR_VERSION.

	PFV$W_FLAGS	= [4,16,16,0],	! Status flags which the Run-Time Library
					! sets and clears to indicate the current status
					! of the file.

	PFV$V_VALID	= [4,16,1,0],	! Buffer is valid.  If this bit is set, then
					! the remaining status bits and the file buffer
					! itself may be read by the compiled code.  If
					! clear, PAS$LOOK_AHEAD must be called to make
					! the information valid.

	PFV$V_DFB	= [4,17,1,0],	! Buffer is defined.  If set, the last file
					! operation resulted in a "defined" file buffer
					! by the semantics of Pascal.  If clear, the
					! file buffer is "undefined".  If PFV$V_EOF_DEFINED
					! is set, EOF(f) is equivalent to .NOT. PAS$V_DFB

	PFV$V_EOF_DEFINED = [4,18,1,0],	! EOF(f) is a valid test.  After some file
					! operations, EOF(f) is not a valid test to make.
					! If this bit is set, EOF(f) is true if and only
					! if PAS$V_DFB is clear.

	PFV$V_EOLN	= [4,19,1,0],	! File is at end-of-line.

	PFV$V_RELBUF	= [4,27,1,0],	! PFV$A_BUFFER address is relative to
					! the PFV address.  If clear, the address
					! is absolute.

	PFV$V_RELPFD	= [4,28,1,0],	! PFV$A_PFD address is relative to the
					! PFV address.  If clear, the address is
					! absolute.

	PFV$V_OPEN	= [4,29,1,0],	! File is open.

	PFV$V_FCB_VALID	= [4,30,1,0],	! This bit is set when PFV$A_FCB contains
					! the address of a valid FCB.  If clear,
					! PFV$A_FCB contains the condition code
					! for the last error to occur on that
					! file.

	PFV$V_LOCK	= [4,31,1,0],	! This is the interlock bit used by the Run-Time
					! Library to prevent recursive I/O on the same
					! file.

	PFV$A_PFD	= [8,0,32,0],	! Address of the Pascal File Descriptor
					! (PFD).  If PFV$V_RELPFD is set, this
					! is relative to the PFV address, otherwise
					! it is absolute.

	PFV$A_FCB	= [12,0,32,0],	! Address of the Run-Time Library's internal
					! File Control Block (FCB) for this file.  This
					! field must be initially zero! the Run-Time
					! Library fills it in when the file is opened.

	PFV$L_STATUS	= [12,0,32,0]	! A synonym for PFV$A_FCB.
					! If PFV$V_FCB_VALID is clear, this
					! field is used to store the condition
					! code of the last error to occur on this
					! file when the file was not open.

	TES;

LITERAL
    PFV$K_CUR_VERSION	= 0,			! Current version of PFV
    PFV$K_SIZE		= 16;			! Size of PFV in bytes

MACRO
    $PAS$PFV_FILE_VARIABLE = BLOCK [PFV$K_SIZE, BYTE] FIELD (PFV$FIELDS) %;

! End of file PASPFV.REQ
