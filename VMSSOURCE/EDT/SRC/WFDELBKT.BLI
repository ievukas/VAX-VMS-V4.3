%TITLE 'EDT$WFDELBKT - delete the current bucket'
MODULE EDT$WFDELBKT (				! Delete the current bucket
		IDENT = 'V04-000'			! File: WFDELBKT.BLI Edit: STS1004
		) =
BEGIN
!
!****************************************************************************
!*									    *
!*  COPYRIGHT (c) 1978, 1980, 1982, 1984 BY				    *
!*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
!*  ALL RIGHTS RESERVED.						    *
!* 									    *
!*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
!*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
!*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
!*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
!*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
!*  TRANSFERRED.							    *
!* 									    *
!*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
!*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
!*  CORPORATION.							    *
!* 									    *
!*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
!*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
!* 									    *
!*									    *
!****************************************************************************
!

!++
! FACILITY:	EDT -- The DEC Standard Editor
!
! ABSTRACT:
!
!	Delete a bucket.
!
! ENVIRONMENT:	Runs at any access mode - AST reentrant
!
! AUTHOR: Bob Kushlis, CREATION DATE: October 16, 1978
!
! MODIFIED BY:
!
! 1-001	- Original.  DJS 23-Feb-1981.  This module was created by
!	extracting routine DELETE_BUKT from module EDTWF.
! 1-002	- Regularize headers.  JBS 16-Mar-1981
! 1-003	- Remove EDT$$SET_WKLN.  JBS 14-Sep-1982
! 1-004 - Remove call to EDT$$WF_RELBUK. STS 11-Oct-1982
!--


%SBTTL 'Declarations'
!
! TABLE OF CONTENTS:
!

REQUIRE 'EDTSRC:TRAROUNAM';

FORWARD ROUTINE
    EDT$$WF_DELBUK : NOVALUE;

!
! INCLUDE FILES:
!

REQUIRE 'EDTSRC:EDTREQ';

!
! MACROS:
!
!	NONE
!
! EQUATED SYMBOLS:
!
!	NONE
!
! OWN STORAGE:
!
!	NONE
!
! EXTERNAL REFERENCES:
!
!	In the routine

%SBTTL 'EDT$$WF_DELBUK  - delete the current bucket'

GLOBAL ROUTINE EDT$$WF_DELBUK 			! Delete the current bucket
    : NOVALUE =

!++
! FUNCTIONAL DESCRIPTION:
!
!	This routine is called when all the text in a bucket has been deleted.
!	If this is not the only bucket in the text buffer, then update the links
!	of the previous and next bucket to point to each other, handling the
!	special case of the first and last bucket.
!
! FORMAL PARAMETERS:
!
!	NONE
!
! IMPLICIT INPUTS:
!
!	EDT$$A_CUR_BUF
!	EDT$$A_WK_BUK
!	EDT$$G_WK_CURBUK
!
! IMPLICIT OUTPUTS:
!
!	EDT$$G_WK_MODFD
!	EDT$$A_CUR_BUF
!	EDT$$G_WK_CURBUK
!	EDT$$A_WK_LN
!
! ROUTINE VALUE:
!
!	NONE
!
! SIDE EFFECTS:
!
!	Changes the current bucket.
!
!--

    BEGIN

    EXTERNAL ROUTINE
	EDT$$WF_MAKECUR : NOVALUE,
	EDT$$RD_NXTLN;

    EXTERNAL
	EDT$$A_CUR_BUF : REF TBCB_BLOCK,	! Current text buffer control block
	EDT$$A_WK_BUK : 			! Pointer to current bucket
	    REF BLOCK [WF_BUKT_SIZE, BYTE] FIELD (WFB_FIELDS),
    	EDT$$G_WK_AVAIL,
	EDT$$G_WK_CURBUK,			! Number of the current bucket
	EDT$$G_WK_MODFD,			! Flag indicating bucket was modified
	EDT$$A_WK_LN : REF LIN_BLOCK;		! Pointer to work line

    LOCAL
	NEXT,
	PREV;

!+
! Keep track of its previous and next bucket pointers.
!-
    NEXT = .EDT$$A_WK_BUK [WFB_NEXT_BUKT];
    PREV = .EDT$$A_WK_BUK [WFB_PREV_BUKT];
!+
! If this is the only bucket in the text buffer just update
! EDT$$A_WK_LN  and get out.
!-

    IF ((.NEXT OR .PREV) EQL 0)
    THEN
	BEGIN
	EDT$$RD_NXTLN ();
	RETURN;
	END;

!+
! Release the bucket.
!-
    EDT$$A_WK_BUK[WFB_NEXT_BUKT] = .EDT$$G_WK_AVAIL;
    EDT$$G_WK_AVAIL = .EDT$$G_WK_CURBUK;
    EDT$$G_WK_MODFD = 1;

!+
! Link the previous bucket to the next one.
!-

    IF (.PREV EQL 0)
    THEN
	EDT$$A_CUR_BUF [TBCB_FIRST_BUKT] = .NEXT
    ELSE
	BEGIN
	EDT$$WF_MAKECUR (.PREV);
	EDT$$A_WK_BUK [WFB_NEXT_BUKT] = .NEXT;
	EDT$$G_WK_MODFD = 1;
	END;

!+
! If this was the last bucket then update EDT$$A_CUR_BUF , otherwise
! go to the next bucket and update it's pointers.
!-

    IF (.NEXT EQL 0)
    THEN
	BEGIN
	EDT$$A_CUR_BUF [TBCB_LAST_BUKT] = EDT$$A_CUR_BUF [TBCB_CUR_BUKT] = .PREV;
	EDT$$A_CUR_BUF [TBCB_LINE_ADDR] = .EDT$$A_WK_BUK [WFB_END];
	EDT$$RD_NXTLN ();
	END
    ELSE
	BEGIN
	EDT$$WF_MAKECUR (.NEXT);
	EDT$$A_WK_BUK [WFB_PREV_BUKT] = .PREV;
	EDT$$A_CUR_BUF [TBCB_LINE_ADDR] = WFB_FIXED_SIZE;
	EDT$$A_WK_LN = CH$PTR (.EDT$$A_WK_BUK, .EDT$$A_CUR_BUF [TBCB_LINE_ADDR]);
	EDT$$G_WK_MODFD = 1;
	END;

!+
! Update the current bucket field.
!-
    EDT$$A_CUR_BUF [TBCB_CUR_BUKT] = .EDT$$G_WK_CURBUK;
    END;					! of routine EDT$$WF_DELBUK

!<BLF/PAGE>

END						! of module EDT$WFDELBKT

ELUDOM
