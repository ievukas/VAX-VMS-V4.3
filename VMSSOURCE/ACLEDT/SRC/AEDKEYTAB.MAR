	.TITLE	AED$KEY_TABLE - Default key definition table
	.IDENT	/V04-000/
	.ENABL	DBG

;****************************************************************************
;*									    *
;*  COPYRIGHT (c) 1978, 1980, 1982, 1984 BY				    *
;*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
;*  ALL RIGHTS RESERVED.						    *
;* 									    *
;*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
;*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
;*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
;*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
;*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
;*  TRANSFERRED.							    *
;* 									    *
;*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
;*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
;*  CORPORATION.							    *
;* 									    *
;*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
;*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
;* 									    *
;*									    *
;****************************************************************************

;++
;
; FACILITY:	Miscellaneous utilities
;
; ABSTRACT:
;
;	This module contains the default definitions for the ACL editor
;	actions.  These are replaced by those read in from the initialization
;	file if there is one.
;
; ENVIRONMENT:
;
;	VAX/VMS operating system, user mode utilities.
;
;--
;
;
; AUTHOR:	L. Mark Pilant		CREATION DATE:	24-Jan-1983  16:30
;
; MODIFIED BY:
;
;	V03-005	LMP0233		L. Mark Pilant,		16-Apr-1984  15:52
;		Make the LK201 "DO" key the same as "ENTER".
;
;	V03-004	LMP0213		L. Mark Pilant,		24-Mar-1984  12:23
;		Add support for locking and unlocking the object's ACL.
;
;	V03-003	LMP0193		L. Mark Pilant,		14-Feb-1984  10:20
;		Add reset, quit, and delete EOL to the defined actions.
;
;	V03-002	LMP0172		L. Mark Pilant,		28-Nov-1983  12:11
;		Numerous bug fixes, support for VT2xx terminals, and a
;		session keystroke logger.
;
;	V03-001	LMP0103		L. Mark Pilant,		21-Apr-1983  12:13
;		Add support for HIDDEN and PROTECTED ACEs.
;
;**

; MACROS TO DEFINE STRUCTURES

	AED$LCLDEF

	.MACRO	KEY_DEF	KEY_CODE_NAME,KEY_FLAGS,KEY_TEXT,C0_C1
	CUR_FLINK=	.		; NOTE THE CURRENT POSITION
	KEY_A_'KEY_CODE_NAME'=	.	; SET ADDRESS OF THE ENTRY

; SET UP THE VARIOUS LINK POINTERS IN THE QUEUE ENTRY

	.=	PREV_FLINK
	.LONG	CUR_FLINK
	.=	CUR_FLINK
	.LONG	START_FLINK
	.=	CUR_FLINK+KEY_L_BLINK
	.LONG	PREV_FLINK
	.=	START_FLINK+KEY_L_BLINK
	.LONG	CUR_FLINK

; PLACE THE INFORMATION IN THE DEFINITION BLOCK

	.=	CUR_FLINK+KEY_B_ACTION
	.BYTE	KEY_C_'KEY_CODE_NAME'
	.=	CUR_FLINK+KEY_B_FLAGS
	.BYTE	KEY_FLAGS
	.=	CUR_FLINK+KEY_T_TEXT

; SPECIAL CASE - RUBOUT CHARACTER

.IF	IDN	<KEY_TEXT>,RUBOUT
	.BYTE	^X7F
.ENDC;	IDN	<KEY_TEXT>,RUBOUT

; CONTROL CHARACTERS

.IF	NE	KEY_FLAGS&KEY_M_CTRLCHAR
	.BYTE	^A\'KEY_TEXT'\-^X40
.ENDC;	NE	KEY_FLAGS&KEY_M_CTRLCHAR

; STANDARD ESCAPE SEQUENCES (TYPICALLY VT52)

.IF	NE	KEY_FLAGS&KEY_M_ESCSEQ
	.BYTE	^X1B
	.ASCII	\'KEY_TEXT'\
.ENDC;	NE	KEY_FLAGS&KEY_M_ESCSEQ

; VT1XX & VT2XX TERMINAL ESCAPE SEQUENCES

.IF	NE	KEY_FLAGS&KEY_M_CSI
.IF	IDN	C0_C1,C0
	.BYTE	^X1B,^X5B
.IFF
	.BYTE	^X9B
.ENDC;	IDN	C0_C1,C0
	.ASCII	\'KEY_TEXT'\
.ENDC;	NE	KEY_FLAGS&KEY_M_CSI

.IF	NE	KEY_FLAGS&KEY_M_SS3
.IF	IDN	C0_C1,C0
	.BYTE	^X1B,^X4F
.IFF
	.BYTE	^X8F
.ENDC;	IDN	C0_C1,C0
	.ASCII	\'KEY_TEXT'\
.ENDC;	NE	KEY_FLAGS&KEY_M_SS3

; SET THE SIZE OF THE DEFINITION BLOCK

	CUR_BLOCKSIZE=	.-CUR_FLINK
	CUR_TEXTSIZE=	CUR_BLOCKSIZE-KEY_T_TEXT
	.=	CUR_FLINK+KEY_B_SIZE
	.BYTE	CUR_TEXTSIZE
	.=	CUR_FLINK+CUR_BLOCKSIZE+<8-<CUR_BLOCKSIZE&7>>
	PREV_FLINK=	CUR_FLINK
	.ENDM	KEY_DEF

	.PSECT	AED_KEY_DEF,NOEXE,RD,WRT,QUAD

KEY_TABLE::
	.ADDRESS	KEY_TABLE,KEY_TABLE

	START_FLINK=	KEY_TABLE
	PREV_FLINK=	START_FLINK

; DEFINE BASIC KEYPAD KEYS.

	KEY_DEF		GOLD,<KEY_M_SS3>,<P>,C0
	KEY_DEF		GOLD,<KEY_M_SS3>,<P>,C1
	KEY_DEF		GOLD,<KEY_M_ESCSEQ>,<P>
	KEY_DEF		HELP,<KEY_M_SS3>,<Q>,C0
	KEY_DEF		HELP,<KEY_M_SS3>,<Q>,C1
	KEY_DEF		HELP,<KEY_M_ESCSEQ>,<Q>
	KEY_DEF		HELP,<KEY_M_CSI>,<28~>,C0
	KEY_DEF		HELP,<KEY_M_CSI>,<28~>,C1
	KEY_DEF		HELPFMT,<KEY_M_GOLDREQ!KEY_M_SS3>,<Q>,C0
	KEY_DEF		HELPFMT,<KEY_M_GOLDREQ!KEY_M_SS3>,<Q>,C1
	KEY_DEF		HELPFMT,<KEY_M_ESCSEQ>,<Q>
	KEY_DEF		HELPFMT,<KEY_M_CSI>,<26~>,C0
	KEY_DEF		HELPFMT,<KEY_M_CSI>,<26~>,C1
	KEY_DEF		FIND_STR,<KEY_M_GOLDREQ!KEY_M_SS3>,<R>,C0
	KEY_DEF		FIND_STR,<KEY_M_GOLDREQ!KEY_M_SS3>,<R>,C1
	KEY_DEF		FIND_STR,<KEY_M_GOLDREQ!KEY_M_ESCSEQ>,<?x>
	KEY_DEF		FIND_STR,<KEY_M_CSI>,<1~>,C0
	KEY_DEF		FIND_STR,<KEY_M_CSI>,<1~>,C1
	KEY_DEF		FIND_NXT,<KEY_M_SS3>,<R>,C0
	KEY_DEF		FIND_NXT,<KEY_M_SS3>,<R>,C1
	KEY_DEF		FIND_NXT,<KEY_M_ESCSEQ>,<?x>
	KEY_DEF		DEL_ACE,<KEY_M_SS3>,<S>,C0
	KEY_DEF		DEL_ACE,<KEY_M_SS3>,<S>,C1
	KEY_DEF		DEL_ACE,<KEY_M_ESCSEQ>,<R>
	KEY_DEF		UNDEL_ACE,<KEY_M_GOLDREQ!KEY_M_SS3>,<S>,C0
	KEY_DEF		UNDEL_ACE,<KEY_M_GOLDREQ!KEY_M_SS3>,<S>,C1
	KEY_DEF		UNDEL_ACE,<KEY_M_GOLDREQ!KEY_M_ESCSEQ>,<R>
	KEY_DEF		SEL_FIELD,<KEY_M_SS3>,<w>,C0
	KEY_DEF		SEL_FIELD,<KEY_M_SS3>,<w>,C1
	KEY_DEF		SEL_FIELD,<KEY_M_ESCSEQ>,<?w>
	KEY_DEF		ADV_FIELD,<KEY_M_GOLDREQ!KEY_M_SS3>,<w>,C0
	KEY_DEF		ADV_FIELD,<KEY_M_GOLDREQ!KEY_M_SS3>,<w>,C1
	KEY_DEF		ADV_FIELD,<KEY_M_GOLDREQ!KEY_M_ESCSEQ>,<?w>
	KEY_DEF		DEL_WRD,<KEY_M_SS3>,<m>,C0
	KEY_DEF		DEL_WRD,<KEY_M_SS3>,<m>,C1
	KEY_DEF		DEL_WRD,<KEY_M_ESCSEQ>,<?y>
	KEY_DEF		UNDEL_WRD,<KEY_M_GOLDREQ!KEY_M_SS3>,<m>,C0
	KEY_DEF		UNDEL_WRD,<KEY_M_GOLDREQ!KEY_M_SS3>,<m>,C1
	KEY_DEF		UNDEL_WRD,<KEY_M_GOLDREQ!KEY_M_ESCSEQ>,<?y>
	KEY_DEF		ADVANCE,<KEY_M_SS3>,<t>,C0
	KEY_DEF		ADVANCE,<KEY_M_SS3>,<t>,C1
	KEY_DEF		ADVANCE,<KEY_M_ESCSEQ>,<?t>
	KEY_DEF		BACKUP,<KEY_M_SS3>,<u>,C0
	KEY_DEF		BACKUP,<KEY_M_SS3>,<u>,C1
	KEY_DEF		BACKUP,<KEY_M_ESCSEQ>,<?u>
	KEY_DEF		BOTTOM,<KEY_M_GOLDREQ!KEY_M_SS3>,<t>,C0
	KEY_DEF		BOTTOM,<KEY_M_GOLDREQ!KEY_M_SS3>,<t>,C1
	KEY_DEF		BOTTOM,<KEY_M_GOLDREQ!KEY_M_ESCSEQ>,<?t>
	KEY_DEF		TOP,<KEY_M_GOLDREQ!KEY_M_SS3>,<u>,C0
	KEY_DEF		TOP,<KEY_M_GOLDREQ!KEY_M_SS3>,<u>,C1
	KEY_DEF		TOP,<KEY_M_GOLDREQ!KEY_M_ESCSEQ>,<?u>
	KEY_DEF		DEL_CHR,<KEY_M_SS3>,<l>,C0
	KEY_DEF		DEL_CHR,<KEY_M_SS3>,<l>,C1
	KEY_DEF		DEL_CHR,<KEY_M_ESCSEQ>,<?v>
	KEY_DEF		UNDEL_CHR,<KEY_M_GOLDREQ!KEY_M_SS3>,<l>,C0
	KEY_DEF		UNDEL_CHR,<KEY_M_GOLDREQ!KEY_M_SS3>,<l>,C1
	KEY_DEF		UNDEL_CHR,<KEY_M_GOLDREQ!KEY_M_ESCSEQ>,<?v>
	KEY_DEF		MOVE_WRD,<KEY_M_SS3>,<q>,C0
	KEY_DEF		MOVE_WRD,<KEY_M_SS3>,<q>,C1
	KEY_DEF		MOVE_WRD,<KEY_M_ESCSEQ>,<?q>
	KEY_DEF		MOVE_EOL,<KEY_M_SS3>,<r>,C0
	KEY_DEF		MOVE_EOL,<KEY_M_SS3>,<r>,C1
	KEY_DEF		MOVE_EOL,<KEY_M_ESCSEQ>,<?r>
	KEY_DEF		MOVE_EOL,<KEY_M_CTRLCHAR>,E
	KEY_DEF		DEL_EOL,<KEY_M_GOLDREQ!KEY_M_SS3>,<r>,C0
	KEY_DEF		DEL_EOL,<KEY_M_GOLDREQ!KEY_M_SS3>,<r>,C1
	KEY_DEF		DEL_EOL,<KEY_M_GOLDREQ!KEY_M_ESCSEQ>,<?r>
	KEY_DEF		INSERT,<KEY_M_GOLDREQ!KEY_M_SS3>,<p>,C0
	KEY_DEF		INSERT,<KEY_M_GOLDREQ!KEY_M_SS3>,<p>,C1
	KEY_DEF		INSERT,<KEY_M_GOLDREQ!KEY_M_ESCSEQ>,<?p>
	KEY_DEF		INSERT,<KEY_M_CSI>,<2~>,C0
	KEY_DEF		INSERT,<KEY_M_CSI>,<2~>,C1
	KEY_DEF		MOVE_ACE,<KEY_M_SS3>,<p>,C0
	KEY_DEF		MOVE_ACE,<KEY_M_SS3>,<p>,C1
	KEY_DEF		MOVE_ACE,<KEY_M_ESCSEQ>,<?p>
	KEY_DEF		SEL_ITEM,<KEY_M_SS3>,<n>,C0
	KEY_DEF		SEL_ITEM,<KEY_M_SS3>,<n>,C1
	KEY_DEF		SEL_ITEM,<KEY_M_ESCSEQ>,<?n>
	KEY_DEF		ENTER,<KEY_M_SS3>,<M>,C0
	KEY_DEF		ENTER,<KEY_M_SS3>,<M>,C1
	KEY_DEF		ENTER,<KEY_M_ESCSEQ>,<?M>
	KEY_DEF		ENTER,<KEY_M_CSI>,<29~>,C0
	KEY_DEF		ENTER,<KEY_M_CSI>,<29~>,C1
	KEY_DEF		PREV_SCREEN,<KEY_M_CSI>,<5~>,C0
	KEY_DEF		PREV_SCREEN,<KEY_M_CSI>,<5~>,C1
	KEY_DEF		NEXT_SCREEN,<KEY_M_CSI>,<6~>,C0
	KEY_DEF		NEXT_SCREEN,<KEY_M_CSI>,<6~>,C1

;  THE ARROW KEYS

	KEY_DEF		UP,<KEY_M_SS3>,<A>,C0
	KEY_DEF		UP,<KEY_M_SS3>,<A>,C1
	KEY_DEF		UP,<KEY_M_CSI>,<A>,C0
	KEY_DEF		UP,<KEY_M_CSI>,<A>,C1
	KEY_DEF		UP,<KEY_M_ESCSEQ>,<A>
	KEY_DEF		DOWN,<KEY_M_SS3>,<B>,C0
	KEY_DEF		DOWN,<KEY_M_SS3>,<B>,C1
	KEY_DEF		DOWN,<KEY_M_CSI>,<B>,C0
	KEY_DEF		DOWN,<KEY_M_CSI>,<B>,C1
	KEY_DEF		DOWN,<KEY_M_ESCSEQ>,<B>
	KEY_DEF		RIGHT,<KEY_M_SS3>,<C>,C0
	KEY_DEF		RIGHT,<KEY_M_SS3>,<C>,C1
	KEY_DEF		RIGHT,<KEY_M_CSI>,<C>,C0
	KEY_DEF		RIGHT,<KEY_M_CSI>,<C>,C1
	KEY_DEF		RIGHT,<KEY_M_ESCSEQ>,<C>
	KEY_DEF		LEFT,<KEY_M_SS3>,<D>,C0
	KEY_DEF		LEFT,<KEY_M_SS3>,<D>,C1
	KEY_DEF		LEFT,<KEY_M_CSI>,<D>,C0
	KEY_DEF		LEFT,<KEY_M_CSI>,<D>,C1
	KEY_DEF		LEFT,<KEY_M_ESCSEQ>,<D>

;  THE REMAINING MISCELLANEOUS KEYS

	KEY_DEF		OVERSTRIKE,<KEY_M_CTRLCHAR>,A
	KEY_DEF		MOVE_BOL,<KEY_M_CTRLCHAR>,H
	KEY_DEF		MOVE_BOL,<KEY_M_CSI>,<24~>,C0
	KEY_DEF		MOVE_BOL,<KEY_M_CSI>,<24~>,C1
	KEY_DEF		RUB_WRD,<KEY_M_CTRLCHAR>,J
	KEY_DEF		RUB_WRD,<KEY_M_CSI>,<25~>,C0
	KEY_DEF		RUB_WRD,<KEY_M_CSI>,<25~>,C1
	KEY_DEF		REFRESH,<KEY_M_CTRLCHAR>,R
	KEY_DEF		REFRESH,<KEY_M_CTRLCHAR>,W
	KEY_DEF		RESET,<KEY_M_GOLDREQ!KEY_M_CTRLCHAR>,R
	KEY_DEF		RESET,<KEY_M_GOLDREQ!KEY_M_CTRLCHAR>,W
	KEY_DEF		RUB_BOL,<KEY_M_CTRLCHAR>,U
	KEY_DEF		RUB_BOL,<KEY_M_CTRLCHAR>,X
	KEY_DEF		UNDEL_LIN,<KEY_M_GOLDREQ!KEY_M_CTRLCHAR>,U
	KEY_DEF		UNDEL_LIN,<KEY_M_GOLDREQ!KEY_M_CTRLCHAR>,X
	KEY_DEF		EXIT,<KEY_M_CTRLCHAR>,Z
	KEY_DEF		EXIT,<KEY_M_CSI>,<17~>,C0
	KEY_DEF		EXIT,<KEY_M_CSI>,<17~>,C1
	KEY_DEF		EXIT,<KEY_M_CSI>,<19~>,C0
	KEY_DEF		EXIT,<KEY_M_CSI>,<19~>,C1
	KEY_DEF		EXIT,<KEY_M_CSI>,<21~>,C0
	KEY_DEF		EXIT,<KEY_M_CSI>,<21~>,C1
	KEY_DEF		QUIT,<KEY_M_GOLDREQ!KEY_M_CTRLCHAR>,Z
	KEY_DEF		RUB_CHR,0,RUBOUT
	KEY_DEF		DEBUG,<KEY_M_CTRLCHAR>,D

	.END
