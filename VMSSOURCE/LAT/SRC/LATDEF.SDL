{ TITLE LATDEF  DEFINITIONS FOR LAT HOST DRIVER
{
{ ident 'V04-000'
{
{****************************************************************************
{*									    *
{*  COPYRIGHT (c) 1978, 1980, 1982, 1984 BY				    *
{*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
{*  ALL RIGHTS RESERVED.						    *
{* 									    *
{*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
{*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
{*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
{*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
{*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
{*  TRANSFERRED.							    *
{* 									    *
{*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
{*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
{*  CORPORATION.							    *
{* 									    *
{*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
{*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
{* 									    *
{*									    *
{****************************************************************************

MODULE	$latdef;

/*++
/*
/* FACILITY:	LAT host driver
/*
/* ABSTRACT:	Data structure definitions for LAT host driver
/*
/* ENVIRONMENT:	VAX/VMS operating system
/*
/* AUTHOR:	Darrell Duffy,
/*		Joe Marchesani
/*
/* DATE: 	4-JULY-1983
/*
/* MODIFIED BY:
/*
/* V03-009	RNG0009		Rod Gamache	 5-Jul-1984
/*		Add definition for history buffer structure.
/*
/* V03-008	RNG0008		Rod Gamache	 2-Mar-1984
/*		Add Transmit error code, XERRCOD.
/*		Remove LAST INTERRUPT TIME and MAXIMIM INTERRUPT TIME.
/*
/* V03-007	RNG0007		Rod Gamache	27-Mar-1984
/*		Add constants for number of maximum active CSBs and
/*		maximum inactive CSBs.
/*		Add constant for counter area in CSB.
/*
/* V02-006	RNG0006		Rod Gamache	 2-Mar-1984
/*		Make a common counters aggregate.
/*
/* V02-005	djd0001		Darrell Duffy	29-feb-1984
/*		Add lat and vms versions and pointers to csb lists and queues
/* V02-004	RNG0004		Rod Gamache	3-Jan-1984
/*		Minor modifications for new LTDRIVER
/*--



/*
/*  LAT circuit block counters
/*

aggregate LCBDEF structure fill prefix LCB_;

    MSG_XMT	longword unsigned;		/* Messages sent
    MSG_RCV	longword unsigned;		/* Messages received
    MSG_REXMT	longword unsigned;		/* Messages retransmitted
    SEQ_ERR	word	unsigned;		/* Messages received out of sequence
    INV_MSG	byte	unsigned;		/* Invalid messages received
    INV_SLOT	byte	unsigned;		/* Invalid slots received

    constant "LENGTH" equals . tag K;		/* Structure size
    constant "LENGTH" equals . tag C;		/* Structure size

end LCBDEF;

/*
/* LAT history buffer format
/*

aggregate HBFDEF structure fill prefix HBF_;

    NEXT	longword unsigned;		/* Pointer to next slot in bufr
    BUFEND	longword unsigned;		/* Pointer to end of bufr
    SIZE	word	unsigned;		/* Size of history buffer
    TYPE	byte	unsigned;		/* Type of structure
    SPARE	byte	unsigned;		/* SPARE BYTE
    DATA	byte	unsigned tag Z;		/* Start of history data

    constant "LENGTH" equals . tag K;		/* Structure size
    constant "LENGTH" equals . tag C;		/* Structure size

end HBFDEF;

/*
/*  LAT communications area
/*

aggregate COMM_AREA structure prefix GHB$ ;

    VMSVERSION	word unsigned;			/* Version of VMS
    LATVERSION	byte unsigned;			/* LAT protocol version
    LATECO	byte unsigned;			/* LAT protocol eco
    SETENTRY	longword unsigned;		/* Address of the set entry
    HISTORY	longword unsigned;	 	/* Pointer to the history
    SHUTENTRY	longword unsigned;	 	/* Address of shutdown entry
    STRENTRY	longword unsigned;	 	/* Address of startup entry
    UCB		longword unsigned;		/* Address of Data Link UCB
    TIM_ACT	longword unsigned;	 	/* Timer active flag
    NODE	longword unsigned;	 	/* Pointer to the multicast
						/*     data area
    CSBLST	longword unsigned;		/* Pointer to list of csbs
    OLD_CSBS	quadword unsigned;		/* Queue of old csbs

    #COUNTERS	= .;
    COUNTERS	character length 0;		/* Start of counter block

    RCOUNT	longword unsigned;	 	/* Total frames received
    RCHECK	longword unsigned;	 	/* Receive error count
    DUPLMSG	longword unsigned;	 	/* Duplicates received
    XCOUNT	longword unsigned;	 	/* Total frames transmitted
    XERR	longword unsigned;	 	/* Transmit error count
    XERRCOD	longword unsigned;		/* Last Transmit error code
    RETRANS	longword unsigned;		/* Retransmissions
    CIRCDOWN	longword unsigned;	 	/* Circuit timeouts
    PROTOCOL	longword unsigned;	 	/* Protocol error
    PROTOMASK	structure longword unsigned;	/* Protocol error mask

/*
/*	Protocol error mask bits
/*

	START		bitfield mask;		/* Other than start msg
						/* with svci of zero
	CSBZERO		bitfield mask;		/* csb index zero
	CSBRANGE	bitfield mask;		/* csb index out of range
	CSBINVALID	bitfield mask;		/* csb index invalid
	CSBSTALE	bitfield mask;		/* csb stale reference
	HALT		bitfield mask;		/* circuit forced to halt
	INVALIDREMID	bitfield mask;		/* invalid remote id
	INVALIDLOCID	bitfield mask;		/* invalid local id
	BADCREDITS	bitfield mask;		/* bad number of credits in slot
	REPCREATE	bitfield mask;		/* repeat create of slot by master
	INVALIDSEQ	bitfield mask;		/* Invalid seq num received
	REPDISC		bitfield mask;		/* repeat disconnect
    END PROTOMASK;

    RESOURCE	longword unsigned;	 	/* Resource error of some type
    NOXBFR	longword unsigned;	 	/* No buffer for transmit
    UCBKILL	longword unsigned;	 	/* We found no ucb to dealloc

    constant CTRLENGTH equals . - #COUNTERS;	/* size of counters

    constant "LENGTH" equals .;			/* size of structure header

    constant ACT_CSBS equals 32;		/* Maximum number of active CSBs
    constant INACT_CSBS equal 10;		/* Maximum inactive CSBs

    constant CSBCTR equals 12 tag T;		/* Offset to start of counters
						/*    in CSB (after std header)
    constant "NAMELEN" equals 16;		/* Size of NODE/SERVER names
						/* Node/server name must follow
						/*    counters in CSB
    constant "IDLEN" equals 64;			/* Size of NODE/SERVICE IDs

    constant HISTSIZE equals 80*32;		/* Size of the history buffer
						/*    in bytes.
END COMM_AREA;

END_MODULE;
