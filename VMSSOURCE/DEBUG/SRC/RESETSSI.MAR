	.TITLE	RESETSSV -- Reset System Service Vector
	.IDENT	'V04-000'

;
;****************************************************************************
;*									    *
;*  COPYRIGHT (c) 1978, 1980, 1982, 1984 BY				    *
;*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
;*  ALL RIGHTS RESERVED.						    *
;* 									    *
;*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
;*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
;*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
;*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
;*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
;*  TRANSFERRED.							    *
;* 									    *
;*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
;*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
;*  CORPORATION.							    *
;* 									    *
;*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
;*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
;* 									    *
;*									    *
;****************************************************************************
;

;++
; Facility: VAX/VMS System Service Monitor
;
; Abstract:
;
;	This routine puts the systerm service vector back in shape and
;	deletes the P0 space.  
;	(This routine is called when SYS$RUNDWN is encountered and
;	 System service vector has been modified.)
;
; Environment:	VAX/VMS
;
;--
;
; Author: D.W. Thiel,	 Creation Date: 30-Dec-1981
;
; Modified By:
;
;	  P. Sager,      20-Sep-1983
;
;**
;


	.SBTTL	DECLARATIONS

	.ENABLE	SUPPRESSION

    	.EXTERNAL INTERCEPT,RANGE,SSV_MUNGED_FLAG

;
; EQUATED SYMBOLS:
;

    	$SGNDEF
    	$IPLDEF

;
; OWN STORAGE:
;
    	.PSECT	$RESETDATA$, NOEXE, LONG, PIC

    	.PSECT	$RESETCODE$, NOWRT, BYTE, PIC, EXE

	.SBTTL	RESET_SSV	

;++
;
; FUNCTIONAL DESCRIPTION:
;	This routine is called at image run down time to copy the
;	original system service vector back and get rid of the P0.
; CALLING SEQUENCE:
;	This routine is called from SSI_USS by passing SYS$RUNDWN in as 
;	second parameter.  All the other parameters are ignored.
;--


    	.ENTRY	RESET_SSV,^M<R4>

    	MOVL	INTERCEPT,R1		; Pointer to P0 saved copy

; If this module is part of the installed privileged shareable
; image then $CHMKRL is not needed in here to copy the vector back.
; For in user defined system service vector already has CHMK
; instruction which grands the privilege.  
;
; In testing stage, it is easier if we reduce the amount of code in kernel
; mode, strip off the interface module (SSIDISP.MAR which defines the user
; system service in KERNEL mode), call the essential routines via $CHMKRL,
; so that we still could test the remaining code in lesser mode environment.
; After testing is done, then we put interface module in place to execute
; the whole image in the proper mode environment.
;
; I have strip off all the other $CHMKRL in the other parts of this image
; except this one.  For this one has a different call interface, see
; the comment below, otherwise it would not work.  So I kept it here
; to save the need of finding out how to call $CHMKRL in here if there is a 
; need to set up a test environment, since it does not hurt to keep it.  
; -Ping
;  
    	PUSHL	#0			; Just about to put original one back
    	PUSHAB	B^COPY_SAVED_SSV	; Routine to be executed in Kernel
    					;  Mode
    	CALLS	#2,-			; Call $CHMKRL through saved vector in
    		W^<SYS$CMKRNL-SYS$QIOW>(R1); P0 (must be this way, for the
    					;    state is going to change after RET)
    	RET				; Now, everything is back to normal

COPY_SAVED_SSV::
    	.WORD	^M<>
    	MOVL	INTERCEPT,R1		; Pointer to P0 saved copy
    	PUSHR	#^M<R2,R3,R4,R5>	; save volatile registers
	DSBINT	#IPL$_ASTDEL		; disable AST's
	MOVC3	#SGN$C_SYSVECPGS*512, -	; length of transfer vector
		(R1),		      -	; saved transfer vector address
    		@#SYS$QIOW		; Put system service vector back
    	CLRL	SSV_MUNGED_FLAG		; Clear flag which says whether
    					;    the system service vector has
    					;    been modified by us
	ENBINT				; restore IPL
	POPR	#^M<R2,R3,R4,R5>	; restore volatile registers
    	MOVL	#1,R0
    	RET

	.END

