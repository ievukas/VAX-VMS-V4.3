	.TITLE	BANNER - GENERATE A WIDE LINE ON PRINTER
	.IDENT	'V04-000'

;
;****************************************************************************
;*									    *
;*  COPYRIGHT (c) 1978, 1980, 1982, 1984 BY				    *
;*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
;*  ALL RIGHTS RESERVED.						    *
;* 									    *
;*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
;*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
;*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
;*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
;*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
;*  TRANSFERRED.							    *
;* 									    *
;*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
;*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
;*  CORPORATION.							    *
;* 									    *
;*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
;*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
;* 									    *
;*									    *
;****************************************************************************
;

;++
; FACILITY:	VAX/VMS PRINT SYMBIONT
;
; ABSTRACT:	THIS ROUTINE WILL PRINT WIDE LINE OF CARACTERS
;		ON THE PRINTER FOR FLAG/BURST PAGES
;
;
; ENVIRONMENT:	NATIVE/USER MODE NON-PRIVILEGED CODE
;
; AUTHOR:	H.B.BOSWELL, CREATION DATE: 21-APR-77
;
; MODIFIED BY:
;
;	V03-006 RRB0013		Rowland R. Bradley	22-Mar-1984
;		Change to force lowercase to uppercae.
;
;	V03-005	GRR0009		Gregory R. Robert	29-Sep-1983
;		Changed library module name from smbdef to prtsmbdef.
;
;	V3B-004 GRR4004		Gregory R. Robert	29-Jul-1983
;		Changed module name from PSM$BANNER to BANNER and changed
;		returned size to word context.
;
;	V3B-003 GRR4003		Gregory R. Robert	27-May-1983
;		Changed entry point from PSM$BANNER to PSM$$BANNER.
;
;	V03-002	GRR0002		GREGORY R BOBERT	19-MAY-1983
;		HANDLE ZERO LENGTH STRINGS CORRECTLY
;
;	V03-001	GRR0001		GREGORY R ROBERT	07-OCT-1982
;		REVISED TO SERVE AS TEMPORARY WIDE/TALL CHARACTER
;		GENERATOR FOR NEW PRINT SYMBIONT FLAG PAGE ROUTINES
;
;	, : VERSION
; 01	- 
;--
	.PAGE
	.SBTTL	DECLARATIONS

	$prtsmbdef

;
; MACROS:
;
;	MACRO TO GENERATE A TABLE FOR CHARACTER DECODING
;
	.MACRO	DECTAB	HI,LO,TABLE
	.ASCII	\HI'LO\
	.WORD	TABLE-.
	.ENDM

;
; EQUATED SYMBOLS:
;
;	DEFINE THE OFFSET TO INPUT ARGUMENTS AS THE APPEAR
;	IN THE ARGUEMENT BLOCK
;
	ARGCNT	= 0			;ARGUEMENT COUNT
	SCB	= 4			;STREAM CONTROL BLOCK
	COUNT	= 8			;BYTE COUNT
	ADR	= 12			;BUFFER ADDRESS
	SPACOUT	= 16			;PRECEEDING SPACE COUNT
	HEIGHT	= 20			;NUMBER OF LINES PER ROW
	WIDTH	= 24			;NUMBER OF CHARACTERS PER COLUMN
	SPACING	= 28			;INTER CHARACTER SPACING
	CHAR	= 32			;FONT CHARACTER
	ADDRESS	= 36			;ADDRESS OF OUTPUT BUFFER
	LINENO	= 40			;CURRENT LINE NUMBER
	RETLEN	= 44			;ADDRESS OF WORD FOR RESULTANT LENGTH

;
; OWN STORAGE:
;

;
; THE FOLLOWING TABLES ARE USED TO GENERATE THE CHARACTERS
; EACH ENTRY IS 35 BITS LONG, 1 BIT FOR EACH POSITION IN
; A 5X7 MATRIX.
;
;
ALPHA:
	.WORD	^O143056,^O061770,^O030574,^O014276,^O007637,^O102041
	.WORD	^O057740,^O030614,^O173706,^O074103,^O176041,^O141037
	.WORD	^O020413,^O010370,^O107502,^O143056,^O061770,^O107214
	.WORD	^O041020,^O101610,^O141020,^O056430,^O164614,^O014244
	.WORD	^O004103,^O102041,^O073437,^O030615,^O014306,^O146547
	.WORD	^O135061,^O061430,^O167214,^O174305,^O004102,^O143056
	.WORD	^O111530,^O030575,^O111276,^O007642,^O040701,^O037370
	.WORD	^O102041,^O011020,^O106143,^O177061,^O061430,^O105214
	.WORD	^O014304,^O156543,^O043061,^O052105,^O030614,^O041052
	.WORD	^O174410,^O010420,^O037021,^O0
 
;
; BIT MASK TABLE FOR NUMBERS 0-9
;
 
NUMERIC:
	.WORD	^O163056,^O121472,^O103043,^O041020,^O105634
	.WORD	^O010420,^O056761,^O004204,^O113506,^O175122,^O120410,^O007037
	.WORD	^O150602,^O010271,^O106136,^O040756,^O104210,^O027010,^O013506
	.WORD	^O071643,^O075061,^O016410
 
;
; BIT MASK FOR UNDER SCORE CHARACTER
;
UNDERSCORE:
	.WORD	^O0,^O140000,^O7
 
;
; THE DOLLAR SIGN
;
 
DOLLARS:
	.WORD	^O013704,^O017507,^O1
 
;
; BIT MASK TABLE FOR '.'
;
 
DOT:
	.WORD	^O0,^O14000,^O3
 
;
; BIT MASK FOR ':;'
;
 
COLONS:	.WORD	^O30600,^O14300,^O006140,^O103060,^O10
 
;
; BIT MASK TABLE FOR ' '
;
 
BLANK:
	.WORD	^O0,^O0,^O0
 
; THE FOLLOWING TABLE IS USED TO DECODE WHICH BIT TABLE CONTAINS
; THE INFORMATION ABOUT A GIVEN CHARACTER.
;
DECODE:	
	DECTAB	Z,A,ALPHA		;DECODE ALPHAS
	DECTAB	9,0,NUMERIC		;AND NUMBERS
	DECTAB	<;>,<:>,COLONS		;THE COLONS
	DECTAB	<_>,<_>,UNDERSCORE	;THE UNDERSCORE CHARACTER
	DECTAB	<$>,<$>,DOLLARS		;THE OLD BUCK MARKER
	DECTAB	<.>,<.>,DOT		;THE PERIOD
	.BYTE	255,0			;CATCH ALL
	.WORD	BLANK-.			;PRINT A SPACE
	.PAGE
	.SBTTL	GENERATE THE CHARACTERS	
;++
; FUNCTIONAL DESCRIPTION:
;
;	THIS ROUTINE USES A 5X7 ARRAY OF BITS TO GENERATE
;	CHARACTERS ON THE PRINTER.  THE ROUTINE IS USED TO GENERATE
;	THE BANNER CHARACTERS FOR FLAG PAGES
;
; CALLING SEQUENCE:
;
;	CALL	PSM$BANNER
;
; INPUT PARAMETERS:
;
;	P01 SCB:	ADDRESS OF THE STREAM CONTROL BLOCK
;	P02 COUNT:	COUNT OF STRING TO OUTPUT
;	P03 ADR:	ADDRESS OF STRING TO OUTPUT
;	P04 SPACOUT:	NUMBER OF LEADING SPACES ON EACH LINE
;	P05 WIDTH:	NUMBER OF TIMES TO REPEAT A CHARACTER ON A ROW
;	P06 HEIGHT:	NUMBER OF TIMES EACH LINE IS PRINTED
;	P07 SPACING:	NUMBER OF BLANK CHARACTERS BETWEEN BIG CHARACTERS
;	P08 CHAR:	BANNER CONSTRUCTION CHARACTER, IF NOT SELF
;	P09 ADDRESS:	ADDRESS OF OUTPUT BUFFER
;	P10 LINENO:	CURRENT LINE NUMBER (0 to (6 * HEIGHT))
;	P11 RETLEN:	ADDRESS OF WORD TO RECEIVE RESULTANT LENGTH
;
; IMPLICIT INPUTS:
;
;	NONE
;
; OUTPUT PARAMETERS:
;
;	NONE
;
; IMPLICIT OUTPUTS:
;
;	THE WIDE LINE IS PRINTED
;
; COMPLETION CODES:
;
;	ALWAYS SS$_SUCCESS
;
; SIDE EFFECTS:
;
;	NONE
;
;--
 
PSM$BANNER::				;PRINT A WIDE LINE
	.WORD	^M<R2,R3,R4,R5,R6,R7,R8,R9>;SAVE NON-VOLATILE REGISTERS
	MOVL	SCB(AP),R0		;FETCH ADDRESS OF SCB
	DIVL3	HEIGHT(AP),LINENO(AP),R8;COMPUTE LINE NUMBER
	MOVQ	COUNT(AP),R6		;GET COUNT TO R6, LINE ADDRESS TO R7
	MOVL	ADDRESS(AP),R9		;GET ADDRESS OF LOCAL BUFFER
	MOVL	SPACOUT(AP),R2		;COUNT OF LEADING SPACES ON THE LINE
	BEQL	27$			;BR IF NO LEADING SPACES WANTED
20$:	MOVZBL	#^A/ /,R1		;GET A SPACE 
25$:	MOVB	R1,(R9)+		;STORE THE CHARACTER
	SOBGTR	R2,25$			;REPEAT IF NECESSARY
27$:	TSTL	R6			;CHECK FOR ZERO LENGTH STRING
	BEQL	90$			;BRANCH IF NO INPUT
30$:	MOVZBL	(R7),R3			;GET CHARACTER TO PRINT
	CMPB	#^X60,R3		;CHECK CHAR FOR LOWERCASE - LOW LIMIT
	BLEQ	38$			; BRANCH IF LESS THAN 'A'
	CMPB	#^X7B,R3		; HIGH LIMIT
	BGEQ	38$			; BRANCH IF GREATER THAN 'Z'
	SUBB2	#^X20,R3		; FORCE UPPERCASE
38$:	MOVAL	DECODE-3,R4		;ADDRESS OF DECODE TABLE
40$:
	ADDL	#3,R4			;ADVANCE TO NEXT TABLE ENTRY
	CMPB	R3,(R4)+		;CHECK AGAINST HIGH LIMIT
	BGTRU	40$			;BR IF OUT OF LIMIT
	CMPB	R3,(R4)			;NOW CHECK LOW LIMIT
	BLSSU	40$			;BR IF IN RANGE OF TABLE
	SUBB	(R4)+,R3		;REMOVE TABLE BIAS
	CVTWL	(R4),R1			;GET OFFSET TO BIT TABLE
	ADDL	R1,R4			;FIND REAL ADDRESS OF TABLE
	MULL	#35,R3			;FIND INDEX TO FIRST BIT IN CHARACTER
	MULL3	#5,R8,R1		;FIND INDEX FOR PROPER ROW
	ADDL	R1,R3			;FIND FIRST BIT TO TEST FOR THIS ROW
	MOVL	#5,R5			;SET NUMBER OF COLUMNS TO OUTPUT
70$:	MOVZBL	CHAR(AP),R1		;GET THE FONT CHARACTER
	BNEQ	75$			;BRANCH IF WE GOT ONE
	MOVZBL	(R7),R1			;USE THE CHARACTER ITSELF
75$:	BBS	R3,(R4),80$		;BR IF NO SPACE THIS TIME
	MOVZBL	#^A/ /,R1		;PRINT SPACES
80$:	MOVZBL	WIDTH(AP),R2		;GET NUMBER OF CHARACTERS PER COLUMN 
82$:	MOVB	R1,(R9)+		;STORE THE CHARACTER
	SOBGTR	R2,82$			;REPEAT IF NECESSARY
	INCL	R3			;ADJUST BIT NUMBER UP 1
	SOBGTR	R5,70$			;REPEAT FOR 5 TIMES-NUMBER COLUMNS PER
	MOVZBL	SPACING(AP),R2		;GET NUMBER OF BLANKS FOR SEPARATION
	INCL	R7			;ADVANCE CHARACTER POINTER
	SOBGTR	R6,20$			;LOOP AROUND IF MORE CHARACTERS TO DO
90$:	SUBL3	ADDRESS(AP),R9,R0	;COMPUTE LENGTH
	MOVW	R0,@RETLEN(AP)		;STORE COMPUTED LENGTH
	MOVZBL	#SS$_NORMAL,R0		;RETURN SUCCESS
	RET
 
	.END
