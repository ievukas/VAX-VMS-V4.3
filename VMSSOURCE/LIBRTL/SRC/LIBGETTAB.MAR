	.TITLE	LIB$$GETXXI_TABLES - Tables for LIB$GETxxI routines
	.IDENT	/1-004/			; File: LIBGETTAB.MAR Edit: SBL1004

;
;****************************************************************************
;*									    *
;*  COPYRIGHT (c) 1978, 1980, 1982, 1984 BY				    *
;*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
;*  ALL RIGHTS RESERVED.						    *
;* 									    *
;*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
;*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
;*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
;*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
;*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
;*  TRANSFERRED.							    *
;* 									    *
;*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
;*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
;*  CORPORATION.							    *
;* 									    *
;*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
;*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
;* 									    *
;*									    *
;****************************************************************************
;

;++
; FACILITY: General Utility Library
;
; ABSTRACT:
;
;	This module contains the tables used by the LIB$$GETxxI routines
;	in module LIB$$LEXICAL that give, for each xxI$_ item code, the type
;	of that value.
;
; ENVIRONMENT: No executeable code
;
; AUTHOR: Steven B. Lionel, CREATION DATE: 7-March-1983
;
; MODIFIED BY:
;
; 1-001	- Original. SBL 7-Mar-1983
; 1-002 - Reflect change to JPI_ITEM_CODE macro argument order.  SBL 14-Mar-1983
; 1-003 - Add HEXSTR.  SBL 20-May-1983
; 1-004 - For $GETJPI, separate out JPI$_STATE and JPI$_MODE as special cases
;	  with their own formats.  SBL 9-Sep-1983
;--

	.SBTTL	DECLARATIONS
;
; LIBRARY MACRO CALLS:
;
	$DVIDEF		; DVI$_ codes
	$JPIDEF		; JPI$_ codes
	$SYIDEF		; SYI$_ codes
	$LIBFMTDEF	; LIB$K_FMT_ codes

; The following macros are invoked from SYSBLDMLB.MLB:
;
;	DVI_GENERATE_TABLE
;	JPI_GENERATE_TABLE
;	SYI_GENERATE_TABLE
;
; EXTERNAL DECLARATIONS:
;
	.DSABL	GBL		; Force all external symbols to be declared
;
; MACROS:
;
;	See below
;
; EQUATED SYMBOLS:
;
;	NONE
;
; OWN STORAGE:
;
;	NONE
;
; PSECT DECLARATIONS:
;
	.PSECT _LIB$CODE PIC, USR, CON, REL, LCL, SHR, -
			EXE, RD, NOWRT, LONG


	.SBTTL	Tables for LIB$$GETDVI
;++
; FUNCTIONAL DESCRIPTION:
;
;	This module defines a macro called DVI_ITEM_CODE that is called
;	repetitively by the DVI_GENERATE_TABLE macro.  DVI_ITEM_CODE constructs
;	a table entry of the following format:
;
;			CODE - 1 word
;			TYPE - 1 byte
;
;	CODE is the DVI$_ code for this item.
;	TYPE is the LIB$K_FMT_xxx type code for this item.
;
;	Note that not all parameters to DVI_ITEM_CODE are used and that not
;	all invocations of DVI_ITEM_CODE result in a table entry.  Those items
;	whose format is a decimal integer are not stored.
;
;--

	.MACRO	DVI_ITEM_CODE -
			NAME, SPECIAL, SOURCE, DTYPE, BITPOS, OUTLEN, -
			STRUCT, DEVTYP

	.IIF	IDN DTYPE,DECNUM,	.MEXIT
	.IIF	IDN DTYPE,BITVEC,	.MEXIT

	.WORD	DVI$_'NAME
	.IF	IDN DTYPE,STDTIM
	  .BYTE	LIB$K_FMT_DATE
	  .MEXIT
	  .ENDC
	.IF	IDN DTYPE,STDUIC
	  .BYTE	LIB$K_FMT_UIC
	  .MEXIT
	  .ENDC
	.IF	IDN DTYPE,HEXNUM
	  .BYTE	LIB$K_FMT_HEX
	  .MEXIT
	  .ENDC
	.IF	IDN DTYPE,PRVMSK
	  .BYTE	LIB$K_FMT_PRIVILEGE
	  .MEXIT
	  .ENDC
	.IF	IDN DTYPE,STRDSC
	  .BYTE	LIB$K_FMT_STRING
	  .MEXIT
	  .ENDC
	.IF	IDN DTYPE,CNTSTR
	  .BYTE	LIB$K_FMT_ASCIC
	  .MEXIT
	  .ENDC
	.IF	IDN DTYPE,PADSTR
	  .BYTE	LIB$K_FMT_PSTRING
	  .MEXIT
	  .ENDC
	.IF	IDN DTYPE,BITVAL
	  .BYTE	LIB$K_FMT_BOOLEAN
	  .MEXIT
	  .ENDC
	.IF	IDN DTYPE,PRTMSK
	  .BYTE	LIB$K_FMT_VPROT
	  .MEXIT
	  .ENDC
	.IF	IDN DTYPE,ACPTYP
	  .BYTE	LIB$K_FMT_ACP
	  .MEXIT
	  .ENDC
	.IF	IDN DTYPE,HEXSTR
	  .BYTE	LIB$K_FMT_HEXSTRING
	  .MEXIT
	  .ENDC

	.WARN	DTYPE ; Type not known by LIBGETTAB.MAR
	.ENDM

;+
; Now invoke the DVI_GENERATE_TABLE macro
;-

LIB$$AB_GETDVI_TABLE::
	DVI_GENERATE_TABLE
	.WORD		; End of table

	.SBTTL	Tables for LIB$$GETJPI
;++
; FUNCTIONAL DESCRIPTION:
;
;	This module defines a macro called JPI_ITEM_CODE that is called
;	repetitively by the JPI_GENERATE_TABLE macro.  JPI_ITEM_CODE constructs
;	a table entry of the following format:
;
;			CODE - 1 word
;			TYPE - 1 byte
;
;	CODE is the JPI$_ code for this item.
;	TYPE is the LIB$K_FMT_xxx type code for this item.
;
;	Note that not all parameters to JPI_ITEM_CODE are used and that not
;	all invocations of JPI_ITEM_CODE result in a table entry.  Those items
;	whose format is a decimal integer are not stored.
;
;--

	.MACRO	JPI_ITEM_CODE -
		BASE, NAME, SOURCE, DTYPE, BITPOS, BITSIZ, OUTLEN, STRUCT

	.IF	IDN NAME,STATE
	  .WORD	JPI$_'NAME
	  .BYTE	LIB$K_FMT_STATE
	  .MEXIT
	  .ENDC
	.IF	IDN NAME,MODE
	  .WORD	JPI$_'NAME
	  .BYTE LIB$K_FMT_MODE
	  .MEXIT
	  .ENDC

	.IIF	IDN DTYPE,BITVEC,	.MEXIT
	.IIF	IDN DTYPE,DECNUM,	.MEXIT

	.WORD	JPI$_'NAME

	.IF	IDN DTYPE,STDTIM
	  .BYTE	LIB$K_FMT_DATE
	  .MEXIT
	  .ENDC
	.IF	IDN DTYPE,STDUIC
	  .BYTE	LIB$K_FMT_UIC
	  .MEXIT
	  .ENDC
	.IF	IDN DTYPE,HEXNUM
	  .BYTE	LIB$K_FMT_HEX
	  .MEXIT
	  .ENDC
	.IF	IDN DTYPE,PRVMSK
	  .BYTE	LIB$K_FMT_PRIVILEGE
	  .MEXIT
	  .ENDC
	.IF	IDN DTYPE,STRDSC
	  .BYTE	LIB$K_FMT_STRING
	  .MEXIT
	  .ENDC
	.IF	IDN DTYPE,CNTSTR
	  .BYTE	LIB$K_FMT_ASCIC
	  .MEXIT
	  .ENDC
	.IF	IDN DTYPE,PADSTR
	  .BYTE	LIB$K_FMT_PSTRING
	  .MEXIT
	  .ENDC
	.IF	IDN DTYPE,BITVAL
	  .BYTE	LIB$K_FMT_BOOLEAN
	  .MEXIT
	  .ENDC
	.IF	IDN DTYPE,HEXSTR
	  .BYTE	LIB$K_FMT_HEXSTRING
	  .MEXIT
	  .ENDC

	.WARN	DTYPE ; Type not known by LIBGETTAB.MAR
	.ENDM

;+
; Now invoke the JPI_GENERATE_TABLE macro
;-

LIB$$AB_GETJPI_TABLE::
	JPI_GENERATE_TABLE
	.WORD	0	; End of table

	.SBTTL	Tables for LIB$$GETSYI
;++
; FUNCTIONAL DESCRIPTION:
;
;	This module defines a macro called SYI_ITEM_CODE that is called
;	repetitively by the SYI_GENERATE_TABLE macro.  SYI_ITEM_CODE constructs
;	a table entry of the following format:
;
;			CODE - 1 word
;			TYPE - 1 byte
;
;	CODE is the SYI$_ code for this item.
;	TYPE is the LIB$K_FMT_xxx type code for this item.
;
;	Note that not all parameters to SYI_ITEM_CODE are used and that not
;	all invocations of SYI_ITEM_CODE result in a table entry.  Those items
;	whose format is a decimal integer are not stored.
;
;--

	.MACRO	SYI_ITEM_CODE -
			BASE, NAME, SOURCE, DTYPE, BITPOS, BITSIZ, OUTLEN

	.IIF	IDN DTYPE,DECNUM,	.MEXIT
	.IIF	IDN DTYPE,BITVEC,	.MEXIT

	.WORD	SYI$_'NAME
	.IF	IDN DTYPE,STDTIM
	  .BYTE	LIB$K_FMT_DATE
	  .MEXIT
	  .ENDC
	.IF	IDN DTYPE,STDUIC
	  .BYTE	LIB$K_FMT_UIC
	  .MEXIT
	  .ENDC
	.IF	IDN DTYPE,HEXNUM
	  .BYTE	LIB$K_FMT_HEX
	  .MEXIT
	  .ENDC
	.IF	IDN DTYPE,PRVMSK
	  .BYTE	LIB$K_FMT_PRIVILEGE
	  .MEXIT
	  .ENDC
	.IF	IDN DTYPE,STRDSC
	  .BYTE	LIB$K_FMT_STRING
	  .MEXIT
	  .ENDC
	.IF	IDN DTYPE,CNTSTR
	  .BYTE	LIB$K_FMT_ASCIC
	  .MEXIT
	  .ENDC
	.IF	IDN DTYPE,PADSTR
	  .BYTE	LIB$K_FMT_PSTRING
	  .MEXIT
	  .ENDC
	.IF	IDN DTYPE,BITVAL
	  .BYTE	LIB$K_FMT_BOOLEAN
	  .MEXIT
	  .ENDC
	.IF	IDN DTYPE,HEXSTR
	  .BYTE	LIB$K_FMT_HEXSTRING
	  .MEXIT
	  .ENDC

	.WARN	DTYPE ; Type not known by LIBGETTAB.MAR
	.ENDM

;+
; Now invoke the SYI_GENERATE_TABLE macro
;-

GETSYISW = 1	; Needed for SYI_GENERATE_TABLE
LIB$$AB_GETSYI_TABLE::
	SYI_GENERATE_TABLE
	.WORD	0	; End of table

	.END				; End of module LIB$$GETXXI_TABLES
