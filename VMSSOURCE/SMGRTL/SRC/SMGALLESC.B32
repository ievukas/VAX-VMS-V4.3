%TITLE 'SMG$ALLOW_ESCAPE - Virtual Display -- Allow escape sequences'
MODULE SMG$ALLOW_ESCAPE (
		IDENT = '1-003'	! File: SMGDISCHA.B32 Edit: PLL1003
		) =
BEGIN
!
!****************************************************************************
!*									    *
!*  COPYRIGHT (c) 1978, 1980, 1982, 1984 BY				    *
!*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
!*  ALL RIGHTS RESERVED.						    *
!* 									    *
!*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
!*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
!*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
!*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
!*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
!*  TRANSFERRED.							    *
!* 									    *
!*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
!*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
!*  CORPORATION.							    *
!* 									    *
!*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
!*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
!* 									    *
!*									    *
!****************************************************************************
!

!++
! FACILITY:	Screen Management
!
! ABSTRACT:
!
!	This routine sets a bit in the DCB data base to allow escape
!	sequences to be parsed and interpretted.
!
!
! ENVIRONMENT:	User mode, Shared library routines.
!
! AUTHOR: P. Levesque, CREATION DATE: 23-Aug-1983
!
! MODIFIED BY:
!
! 1-001	- Original.  PLL 23-Aug-1983
! 1-002 - Make this a single dollar entry point and add an optional
!	  device parameter.  PLL 
! 1-003 - Remove optional device parameter.  Feature was never implemented.
!	  Also, change the way the simulated device type is chosen.
!	  PLL 20-Mar-1984
!--


%SBTTL 'Declarations'
!
! SWITCHES:
!

!
! LINKAGES:
!
!	NONE
!
! TABLE OF CONTENTS:
!

FORWARD ROUTINE

    SMG$ALLOW_ESCAPE;			! set allow escape bit


! INCLUDE FILES
!

REQUIRE 'RTLIN:SMGPROLOG';		! defines psects, macros, tcb,
					!  wcb, & terminal symbols

EXTERNAL
    SMG$_FATERRLIB,	! Fatal error in SMG$ -- internal consistancy
			! check failed.
    SMG$_INVARG,	! Invalid argument
    SMG$_INVDIS_ID,	! Invalid virtual display id
    SMG$_WRONUMARG;	! Wrong number of arguments

!<BLF/PAGE>

%SBTTL 'SMG$ALLOW_ESCAPE - Allow escape sequences to display'
GLOBAL ROUTINE SMG$ALLOW_ESCAPE (
                        DISPLAY_ID,
                        ESC_FLAG : REF VECTOR [,LONG]
			         ) =
!++
! FUNCTIONAL DESCRIPTION:
!
!	Text written to a virtual display normally cannot contain
!	escape sequences.  An escape sequence is usually treated as
!	a terminator.  This routine allows escape sequences sent to
!	a virtual display to be re-interpretted as valid operations.
!
!	The device simulated is the device type of the pasteboard.
!
!	This routine does not cause any output to occur.
!
! CALLING SEQUENCE:
!
!       ret_status.wlc.v = SMG$ALLOW_ESCAPE (
!                               DISPLAY_ID.rl.r,
!				ESC_FLAG.rl.r
!
! FORMAL PARAMETERS:
!
!       DISPLAY_ID.rl.r         Display id of desired virtual display.
!
!	ESC_FLAG.rl.r		Flag to turn on & off escape parsing
!				Passed by reference, 0 = off and 1 = on
!
! IMPLICIT INPUTS:
!
!       NONE
!
! IMPLICIT OUTPUTS:
!
!       NONE
!
! COMPLETION STATUS:
!
!       SS$_NORMAL      Normal successful completion
!
! SIDE EFFECTS:
!
!       NONE
!--
    BEGIN
    
    BUILTIN
	NULLPARAMETER;

    LOCAL
	CURR_PP : REF $PP_DECL,		! Addr of pasting packet
	PBCB : REF $PBCB_DECL,		! Addr of pasteboard control block
	DCB : REF BLOCK [,BYTE];	! Addr of display control block

    LITERAL
	K_DEVICE_ARG = 3;

    $SMG$GET_DCB ( .DISPLAY_ID, DCB);	! Get address of display control
					! block

    $SMG$VALIDATE_ARGCOUNT (2,2);

!+
! There are two ways to get escape parsing.  One is automatic, with the
! autobended LIB$/SCR$ routines.  This case sets DCB_V_ALLOW_ESC and
! DCB_V_AUTOBENDED.  The second case is by SMG$ user request - this sets
! only DCB_V_ALLOW_ESC.
!-

    IF .ESC_FLAG [0] NEQ 0
    THEN
    	DCB [DCB_V_ALLOW_ESC] = 1
    ELSE
	DCB [DCB_V_ALLOW_ESC] = 0;

!+
! Set up the device type to simulate.  Use the pasteboard
! device type.  
!-
 
    CURR_PP = .DCB [DCB_A_PP_NEXT];
    PBCB = .CURR_PP [PP_A_PBCB_ADDR];

    SELECTONE .PBCB [PBCB_B_PHY_DEV_TYPE] OF
    SET
	[DT$_VT52, DT$_VT55]:
	    DCB [DCB_SIM_DEV_TYPE] = VT52;

	[OTHERWISE]:
	    BEGIN
	    BIND
		DEVDEPEND2 = PBCB [PBCB_L_DEVDEPEND2] : BLOCK [,BYTE];
	    IF .DEVDEPEND2 [TT2$V_ANSICRT]
	    THEN
		DCB [DCB_SIM_DEV_TYPE] = VT100
	    ELSE
		DCB [DCB_SIM_DEV_TYPE] = UNKNOWN;
	    END;
    TES;

    RETURN (SS$_NORMAL);
    END;				! End of routine SMG$ALLOW_ESCAPE
!<BLF/PAGE>

GLOBAL BIND ROUTINE SMG$$ALLOW_ESCAPE = SMG$ALLOW_ESCAPE;
				! this can go away by release time
!<BLF/PAGE>

END			! End of module SMG$ALLOW_ESCAPE

ELUDOM
