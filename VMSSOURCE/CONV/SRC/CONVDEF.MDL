;	CONVDEF
;
;	IDENT	'V04-000'
;
;****************************************************************************
;*									    *
;*  COPYRIGHT (c) 1978, 1980, 1982, 1984 BY				    *
;*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
;*  ALL RIGHTS RESERVED.						    *
;* 									    *
;*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
;*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
;*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
;*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
;*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
;*  TRANSFERRED.							    *
;* 									    *
;*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
;*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
;*  CORPORATION.							    *
;* 									    *
;*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
;*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
;* 									    *
;*									    *
;****************************************************************************

;
;	VAX-11 CONVERT
;
;	CONVERT control structure definitions
;
;	Created by:
;			Keith Thompson			June-1981
;
;	Modified by:
;
;	V03-004	JWT0185		Jim Teague		29-Jun-1984
;		Add flags necessary to keep track of context for
;		FTN --> STM conversion.
;
;	V03-003	KBT0386		Keith B. Thompson	27-Oct-1982
;		Add ctx$w_free and remove conv$v_recl
;
;	V03-002	KBT0372		Keith B. Thompson	20-Oct-1982
;		Reorganize flags for user definitions
;
;	V03-001	KBT0356		Keith B. Thompson	6-Oct-1982
;		Merge the convert and reclaim definitions into one
;		context block
;

;	CONVERT flag control bytes
;
;	The first 16 bits are user definied flags, the second 16 are internal
;

	$STRUCT		CONV

	F USER,W	; User flags
	 V < M
	 SIGNAL		; Signal errors
	 FDL_STRING	; The fdl spec. is a fdl string not a file name
	  >
	F INTERNAL,W	; Internal flags
	 V < M
	 IN		; Input file open
	 OUT		; Output file
	 EXC		; Exception file
	 SOR		; Sort file
	 RFA		; Rfa file
	 SORTINIT	; Sort has been initialized
	 PROLOG		; The prologue option has been specified
	 MAPFTN,2	; 1: FTN -> PRN, 2: FTN -> STM, 3: PRN -> FTN
	 LAST_CR,	; Did last record end with <CR>? (for FTN -> STM)
	 FIRST_REC	; Is this first record in FTN -> STM conversion?
	 >

	E

;	CONVERT fast load and RECLAIM contex block definitions
;
;	NOTE:	The address of the buffer and the VBN of the bucket
;		in the buffer must be in consecutive longwords.
;
;
	$STRUCT		CTX

	F CTRL,B		; Control bytes
	  V <M
	  FST			; First record in index
	  STATUS		; Status
	  RDY			; Bucket ready
	  DBF			; Double buffering flag
	  DBX			; Double buffering contex, bucket 0 - 1
	  VBN,2			; Bucket VBN size
	  >
	F AREA,B		; Area of bucket
	F LEVEL,B		; Level of bucket
	F ,B			; Spare
	F CURRENT_BUFFER,L	; Pointer to current buffer
	F CURRENT_VBN,L		; VBN of current bucket
	F END,L			; Pointer to end of current bucket
	F PT0,L			; Pointer to bucket 0
	F EN0,L			; pointer to end of bucket 0
	F PT1,L			; Pointer to bucket 1
	F EN1,L			; pointer to end of bucket 1
	F SIZ,L			; Size in bytes of the bucket, has to be longword
	F FIRST_VBN,L		; First VBN in chain

;	CONVERT specific definitions
;

	F FREE,W		; Amount of freespace available in empty bucket
	F SPC,W			; Amount of freespace left in bucket
	F USE,W			; Amount of freespace used in bucket
	F VSZ,B			; VBN pointer size
	F ,B			; Spare
	F RCP,L			; Record control pointer
	F RDP,L			; Record data pointer
	F RCS,W			; Record control size
	F RDS,W			; Record data size
	F LKP,L			; Last key pointer

	L BLN_CONV

;	RECLAIM specific definitions
;

	F PREVIOUS_BUFFER,L	; Pointer to previous buffer
	F PREVIOUS_VBN,L	; VBN of previous bucket
	F LAST_BUFFER		; Pointer to last buffer
	F LAST_VBN		; Last VBN in chain
	F NEXT_VBN,L		; Next VBN in chain
	F SAVE_VBN,L		; Place keeper VBN
	F BUCKET_SIZE,W		; Size in bytes of the bucket
	F ,W			; Spare

	L BLN_RECL

	L BLN			; Length of block

	E
