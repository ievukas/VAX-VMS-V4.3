	.TITLE	LIB$SIGSTOP	Convert a signal to a stop
	.IDENT	/1-001/ 	; File: LIBSIGSTO.MAR  EDIT: FM1001

;
;****************************************************************************
;*									    *
;*  COPYRIGHT (c) 1978, 1980, 1982, 1984 BY				    *
;*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
;*  ALL RIGHTS RESERVED.						    *
;* 									    *
;*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
;*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
;*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
;*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
;*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
;*  TRANSFERRED.							    *
;* 									    *
;*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
;*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
;*  CORPORATION.							    *
;* 									    *
;*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
;*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
;* 									    *
;*									    *
;****************************************************************************
;
;++
; FACILITY: Common Run-time library.
;
; AUTHOR:
;	FAROKH MORSHED 22-APR-83 VMS V3B
;
; MODIFIED BY:
;
;--

;
; PSECT DEFINITION
;
	.PSECT _LIB$CODE PIC, SHR, LONG, NOWRT

;
; MACRO LIBRARY CALLS
;
	$CHFDEF				; Condition Handling arglst offsets
	$STSDEF				; Status code fields

;
; EXTERNAL REFERENCES
;
	.DSABL		GBL
	.EXTERNAL	LIB$_INVARG	; We return this error condition
					; when SIGARGS condition code is
					; SS$_UNWIND.
	.EXTERNAL	SS$_UNWIND	; Unwind condition code
	.EXTERNAL	SS$_NORMAL	; Successful completion status

	.SBTTL	Change a signal to a stop

;++
; FUNCTIONAL DESCRIPTION:
;	This routine sets the stop bit associated with the exception whose
;	mechanism argument is passed.  The mechanism argument address is used
;	in a "dead reckon" fashion to find the flag longword.  The signal
;	argument address is used to set the severity of the condition to
;	severe.  This routine is used to convert a particular signal to 
;	appear as if it was signalled by a LIB$STOP.  If the condition value
;	in SIGARGS is SS$_UNWIND, then this routine returns an error condition.
;	The SS$_UNWIND condition code is compared with the SIGARGS condition
;	code in a fashion that is only "correct" when a non-facility specific
;	condition code (which SS$_UNWIND indeed is one) is being compared 
;	against any other condition code (this is to avoid the overhead of
;	calling LIB$MATCH_COND).
;
; CALLING SEQUENCE:
;	LIB$SIG_TO_STOP (SIGARGS.mr.r, MCHARGS.rr.r)
;
; FORMAL PARAMETERS:
;	SIGARGS		The signal's signal argument
;	MCHARGS		The signal's mechanism argument
;
; IMPLICIT INPUTS:
;	NONE
;
; IMPLICIT OUTPUTS:
;	NONE
;
; COMPLETION CODES:
;	SS$_NORMAL		; Success
;	LIB$_INVARG		; The condition code is SS$_UNWIND
;
; SIDE EFFECTS:
;
;--

	MCHARGS_TO_FLAGS_OFFSET	= 20	 	; Dead reckon offset to flag 
	V_STOP_BIT 	= 1		 	; Position of stop bit
	M_STOP_BIT	= 1@V_STOP_BIT	 	; Mask for stop bit
	V_SIGNAL_BIT	= 0		 	; Pos of signal bit
	M_SIGNAL_BIT	= 1@V_SIGNAL_BIT 	; Mask for signal bit

UNWIND_MSG:
	.LONG SS$_UNWIND@-STS$S_SEVERITY; The message portion of SS$_UNWIND

	.ENTRY LIB$SIG_TO_STOP,	^M<>

	MOVL	CHF$L_SIGARGLST(AP), R0		; R0 <- SIGARGS

	CMPZV	#STS$V_MSG_NO, #STS$S_MSG_NO,-
		CHF$L_SIG_NAME(R0), UNWIND_MSG	; SS$_UNWIND?
	BEQL	10$				; Yes.

	INSV	#STS$K_SEVERE, #STS$V_SEVERITY,-
		#STS$S_SEVERITY,CHF$L_SIG_NAME(R0); Set severity to severe

	MOVL	CHF$L_MCHARGLST(AP), R0		; R0 <- MCHARGS
	BISB2	#M_STOP_BIT, MCHARGS_TO_FLAGS_OFFSET(R0)
						; Set the stop bit
	BICB2	#M_SIGNAL_BIT, MCHARGS_TO_FLAGS_OFFSET(R0)
						; Clear signal bit
	MOVL	#SS$_NORMAL, R0			; Success
	BRB	20$				;  and return
10$:
	MOVL	#LIB$_INVARG, R0		; Condition code is SS$_UNWIND
20$:
	RET					;

	.END
