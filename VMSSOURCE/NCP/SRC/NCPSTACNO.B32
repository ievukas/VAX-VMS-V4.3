%TITLE	'Clear/Purge Node Parse States and Data'
MODULE NCPSTACNO (IDENT = 'V04-000', LIST(NOOBJECT)) =
BEGIN

!
!****************************************************************************
!*									    *
!*  COPYRIGHT (c) 1978, 1980, 1982, 1984 BY				    *
!*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
!*  ALL RIGHTS RESERVED.						    *
!* 									    *
!*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
!*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
!*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
!*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
!*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
!*  TRANSFERRED.							    *
!* 									    *
!*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
!*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
!*  CORPORATION.							    *
!* 									    *
!*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
!*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
!* 									    *
!*									    *
!****************************************************************************
!

!++
! FACILITY:	Network Control Program (NCP)
!
! ABSTRACT:
!
!	States and data for the parsing of NCP clear and purge node command
!
! ENVIRONMENT:	VAX/VMS Operating System
!
! AUTHOR:	Bob Grosso, 	CREATION DATE:	13-July-82
!
! MODIFIED BY:
!
!	V03-004	PRD0042		Paul R. DeStefano	05-Jan-1984
!		Add SERVICE NODE VERSION parameter.
!
!	V03-003	TMH0003		Tim Halvorsen		13-Jul-1983
!		Add EXECUTOR ALIAS parameter
!
!	V03-002	RPG0002		Bob Grosso		25-Feb-1983
!		Add CLEAR EXEC FORWARDING BUFFER SIZE.
!
!	V03-001	RPG0001		Bob Grosso		22-Sep-1982
!		Fix BROADCAST in MAX BROADCAST to be a noise word.
!
!--

%SBTTL	'Definitions'

!
! INCLUDE FILES:
!

	LIBRARY 'LIB$:NMALIBRY';
	LIBRARY 'LIB$:NCPLIBRY';
	LIBRARY 'SYS$LIBRARY:TPAMAC';

!
! EXTERNAL REFERENCES:
!

	ACT_DFN				! External symbols for action routines


%SBTTL	'Parameter blocks'

!
! BIND DATA:
!

!
!	Parameter blocks for node & executor parameters
!

	BUILD_PCL

	(CNO,

	STA, LITB,	PCNO_STA, ,
	ID,  LITB,	PCNO_IDE, ,
	SLI, LITB,	PCNO_SLI, ,
	SPW, LITB,	PCNO_SPA, ,
	SDV, LITB,	PCNO_SDV, ,
	CPU, LITB,	PCNO_CPU, ,
	SNV, LITB,	PCNO_SNV, ,
	HWA, LITB,	PCNO_HWA, ,
	LFL, LITB,	PCNO_LOA, ,
	SLF, LITB,	PCNO_SLO, ,
	TLF, LITB,	PCNO_TLO, ,
	DGF, LITB,	PCNO_DFL, ,
	STY, LITB,	PCNO_STY, ,
	SID, LITB,	PCNO_SID, ,
	DFL, LITB,	PCNO_DUM, ,
	SDF, LITB,	PCNO_SDU, ,
	DAD, LITB,	PCNO_DAD, ,
	DCT, LITB,	PCNO_DCT, ,
	HOS, LITB,	PCNO_IHO, ,
	CTM, LITB,	PCNO_CTI, ,
	NAM, LITB,	PCNO_NNA, ,
	LIN, LITB,	PCNO_NLI, ,
	ADR, LITB,	PCNO_ADD, ,
	INT, LITB,	PCNO_ITI, ,
	OTM, LITB,	PCNO_OTI, ,
	MLK, LITB,	PCNO_MLK, ,
	DFC, LITB,	PCNO_DFA, ,
	DWT, LITB,	PCNO_DWE, ,
	IAT, LITB,	PCNO_IAT, ,
	RFC, LITB,	PCNO_RFA, ,
	TYP, LITB,	PCNO_ETY, ,
	RTM, LITB,	PCNO_RTI, ,
	SAD, LITB,	PCNO_SAD, ,
	BRT, LITB,	PCNO_BRT, ,
	MAD, LITB,	PCNO_MAD, ,
	MLN, LITB,	PCNO_MLN, ,
	MCO, LITB,	PCNO_MCO, ,
	MHP, LITB,	PCNO_MHO, ,
	MVS, LITB,	PCNO_MVI, ,
	MAR, LITB,	PCNO_MAR, ,
	MBE, LITB,	PCNO_MBE, ,
	MBR, LITB,	PCNO_MBR, ,
	AMC, LITB,	PCNO_AMC, ,
	AMH, LITB,	PCNO_AMH, ,
	MBF, LITB,	PCNO_MBU, ,
	BSZ, LITB,	PCNO_BUS, ,
	FBS, LITB,	PCNO_FBS, ,
	SBS, LITB,	PCNO_SBS, ,
	RPW, LITB,	PCNO_RPA, ,
	TPW, LITB,	PCNO_TPA, ,
	NAC, LITB,	PCNO_NAC, ,
	NPW, LITB,	PCNO_NPW, ,
	NUS, LITB,	PCNO_NUS, ,
	PAC, LITB,	PCNO_PAC, ,
	PPW, LITB,	PCNO_PPW, ,
	PUS, LITB,	PCNO_PUS, ,
	ACC, LITB,	PCNO_ACC, ,
	DAC, LITB,	PCNO_DAC, ,
	PIQ, LITB,	PCNO_PIQ, ,
	ALI, LITB,	PCNO_ALI, ,
	PRX, LITB,	PCNO_PRX, ,
	DPX, LITB,	PCNO_DPX, ,

	, END, , ,

	)


	BUILD_PBK

	(CNO,

	ALL, LITB, 0, VRB_ALL,
	ENT, NADR, , VRB_ENT,
	STA, LITB, 0, ,
	ID,  LITB, 0, ,
	SLI, LITB, 0, ,
	SPW, LITB, 0, ,
	SDV, LITB, 0, ,
	SNV, LITB, 0, ,
	CPU, LITB, 0, ,
	HWA, LITB, 0, ,
	LFL, LITB, 0, ,
	SLF, LITB, 0, ,
	TLF, LITB, 0, ,
	DGF, LITB, 0, ,
	STY, LITB, 0, ,
	SID, LITB, 0, ,
	DFL, LITB, 0, ,
	SDF, LITB, 0, ,
	DAD, LITB, 0, ,
	DCT, LITB, 0, ,
	HOS, LITB, 0, ,
	HOE, LITB, 0, CNO_HOS,
	CTM, LITB, 0, ,
	CTE, LITB, 0, CNO_CTM,
	NAM, LITB, 0, ,
	NAE, LITB, 0, CNO_NAM,
	LIN, LITB, 0, ,
	ADR, LITB, 0, ,
	INT, LITB, 0, ,
	OTM, LITB, 0, ,
	MLK, LITB, 0, ,
	DFC, LITB, 0, ,
	DWT, LITB, 0, ,
	IAT, LITB, 0, ,
	RFC, LITB, 0, ,
	TYP, LITB, 0, ,
	RTM, LITB, 0, ,
	SAD, LITB, 0, ,
	BRT, LITB, 0, ,
	MAD, LITB, 0, ,
	MLN, LITB, 0, ,
	MCO, LITB, 0, ,
	MHP, LITB, 0, ,
	MVS, LITB, 0, ,
	MAR, LITB, 0, ,
	MBE, LITB, 0, ,
	MBR, LITB, 0, ,
	AMC, LITB, 0, ,
	AMH, LITB, 0, ,
	MBF, LITB, 0, ,
	BSZ, LITB, 0, ,
	FBS, LITB, 0, ,
	SBS, LITB, 0, ,
	RPW, LITB, 0, ,
	TPW, LITB, 0, ,
	NAC, LITB, 0, ,
	NPW, LITB, 0, ,
	NUS, LITB, 0, ,
	PAC, LITB, 0, ,
	PPW, LITB, 0, ,
	PUS, LITB, 0, ,
	ACC, LITB, 0, ,
	DAC, LITB, 0, ,
	PRX, LITB, 0, ,
	DPX, LITB, 0, ,
	PIQ, LITB, 0, ,
	ALI, LITB, 0, ,

	)


	BUILD_PBK
	(CEX,

	ENT, LITL, 0, VRB_ENT,

	)


!
!	Executor and Node SDB
!

	BUILD_SDB

	(CNO, NMA$C_ENT_NOD, VRB_ENT, CNO)


%SBTTL	'Prompt strings'

!
!	Build prompt strings
!

BIND

!	PROMPT_STRINGS
!	(CNO,

!	CTM, 'Counter timer     (Y, N): ',
!	CTE, 'Counter timer     (Y, N): ',
!	HOS, 'Host node ID      (Y, N): ',
!	HOE, 'Host node ID      (Y, N): ',
!	ID,  'System ID string  (Y, N): ',
!	ACC, 'Link access       (Y, N): ',
!	PRX, 'Proxy access      (Y, N): ',
!	PIQ, 'Pipeline quota    (Y, N): ',

!	);


	PROMPT_STRINGS
	(CNO,

	ALL, 'All parameters       (Y, N): ',
!	SDV, 'Service device       (Y, N): ',
!	CPU, 'Processor type       (Y, N): ',
!	STY, 'Software type        (Y, N): ',
!	SID, 'Software id          (Y, N): ',
!	DAD, 'Dump address         (Y, N): ',
!	DCT, 'Dump count           (Y, N): ',
!	DFL, 'Dump file            (Y, N): ',
!	LIN, 'Associated line      (Y, N): ',
!	LFL, 'Load file            (Y, N): ',
!	RPW, 'Receive password     (Y, N): ',
!	SDF, 'Secondary dumper     (Y, N): ',
!	SLF, 'Secondary loader     (Y, N): ',
!	SLI, 'Service line         (Y, N): ',
!	SPW, 'Service password     (Y, N): ',
!	SNV, 'Service node version (Y, N): ',
!	TLF, 'Tertiary loader      (Y, N): ',
!	TPW, 'Transmit password    (Y, N): ',

!	NAC, 'Non-priv account     (Y, N): ',
!	NPW, 'Non-priv password    (Y, N): ',
!	NUS, 'Non-priv user ID     (Y, N): ',
!	PAC, 'Priv account         (Y, N): ',
!	PPW, 'Priv password        (Y, N): ',
!	PUS, 'Priv user ID         (Y, N): ',
!	DAC, 'Default link access  (Y, N): ',
!	DPX, 'Default proxy access (Y, N): ',

!	ENT, 'Node ID (node-name, node-address): ',

	);

%SBTTL	'Clear/Purge Executor'

!
!	CLEAR/PURGE Executor
!

$INIT_STATE (NCP$G_STTBL_CEX, NCP$G_KYTBL_CEX);

$STATE	(ST_CEX,
	(TPA$_LAMBDA, , ACT$SAVPRM, , , PBK$G_CEX_ENT)
	);

$STATE	(,
	(TPA$_EOS),
	( (ST_CNO_PRC), ST_CEX_DOIT)
	);

$STATE	(,
	(TPA$_LAMBDA, ST_CNO_PMT_ALL));		! Use NODE prompting

$STATE	(ST_CEX_DOIT,
	(TPA$_LAMBDA, ST_CNO_DOIT)
	);

%SBTTL	'Clear/Purge Nodes'

!
!	Clear purge nodes
!

$INIT_STATE (NCP$G_STTBL_CNO, NCP$G_KYTBL_CNO);

!
!	Come here after KNOWN NODES
!	either prompt or process keywords
!

$STATE	(ST_CNO,
	(TPA$_EOS),
	( (ST_CNO_PRC), ST_CNO_DOIT)
	);

	QUERY_STATES			! Query for node parameters
	(CNO,

	ALL
	
	)

$STATE	(ST_CNO_DOIT,			! Perform the function
	(TPA$_LAMBDA, , , NMA$C_ENT_NOD, NCP$GL_OPTION, )
	);

$STATE	(,
	(TPA$_EOS, TPA$_EXIT, ACT$VRB_UTILITY, , , SDB$G_CNO)
	);


%SBTTL	'Node Dispatch States'

!
!	Dispatch states
!

$STATE	(ST_CNO_PRC,

	DISPATCH_STATES
	(CNO,

	ACC, 'ACCESS',
	ADR, 'ADDRESS',
	ALI, 'ALIAS',
	ALL, 'ALL',
	ARE, 'AREA',
	BRO, 'BROADCAST',
	BSZ, 'BUFFER',
	MCO, 'COST',
	CTM, 'COUNTER',
	CPU, 'CPU',
	DEF, 'DEFAULT',
	DLY, 'DELAY',
	DGF, 'DIAGNOSTIC',
	DUM, 'DUMP',
	FOR, 'FORWARDING',
	HWA, 'HARDWARE',
	MHP, 'HOPS',
	HOS, 'HOST',
	ID,  'IDENTIFICATION',
	IAT, 'INACTIVITY',
	INT, 'INCOMING',
	LIN, 'CIRCUIT',
	LFL, 'LOAD',
	MLK, 'LINKS',
	MAX, 'MAXIMUM',
	NAM, 'NAME',
	NPR, 'NONPRIVILEGED',
	OTM, 'OUTGOING',
	PIQ, 'PIPELINE',
	PRV, 'PRIVILEGED',
	PRX, 'PROXY',
	RPW, 'RECEIVE',
	RFC, 'RETRANSMIT',
	RTM, 'ROUTING',
	SEC, 'SECONDARY',
	SEG, 'SEGMENT',
	SOF, 'SOFTWARE',
	SVC, 'SERVICE',
	STA, 'STATE',
	SAD, 'SUBADDRESSES',
	TLF, 'TERTIARY',
	TPW, 'TRANSMIT',
	TYP, 'TYPE',
	MVS, 'VISITS'

	)

	,(TPA$_EOS, TPA$_EXIT)
	);

%SBTTL	'Node Process States'

!
!	Process states
!

	PROCESS_STATES
	(CNO,

	ADR, ,
	AMC, ,
	AMH, ,
	BSZ, 'SIZE',
	CTM, 'TIMER',
	DFC, ,
	DWT, ,
	HOS, ,
	ID, ,
	IAT, 'TIMER',
	INT, 'TIMER',
	MAD, ,
	MAR, ,
	MBE, ,
	MBF, ,
	MBR, ,
	MCO, ,
	MHP, ,
	MLN, ,
	MLK, ,
	MVS, ,
	NAM, ,
	OTM, 'TIMER',
	RFC, 'FACTOR',
	RTM, 'TIMER',
	SAD, ,
	SNV, 'VERSION',
	STA, ,
	TYP, ,

	ALL, ,
	BRT, 'TIMER',
	CPU, ,
	DAD, ,
	DCT, ,
	DFL, ,
	DGF, 'FILE',
	HWA, 'ADDRESS',
	LIN, ,
	LFL, 'FILE',
	RPW, 'PASSWORD',
	FBS, 'SIZE',
	SBS, 'SIZE',
	SID, ,
	SLF, ,
	SDF, ,
	SDV, ,
	STY, ,
	SPW, ,
	SLI, ,
	TLF, 'LOADER',
	TPW, 'PASSWORD',
	ACC, ,
	DAC, ,
	PIQ, 'QUOTA',
	ALI, 'ADDRESS',
	PRX, ,
	DPX, ,

	)



$STATE	(ST_CNO_PRC_ARE,		! AREA keyword dispatch

	('MAXIMUM'),
	(TPA$_LAMBDA)
	);

$STATE	(,
	('COST', ST_CNO_PRC_AMC),
	('HOPS', ST_CNO_PRC_AMH)
	);


$STATE	(ST_CNO_PRC_BRO,		! BROADCAST keyword dispatch

	('ROUTING', ST_CNO_PRC_BRT),	! routing is a noise word
	('TIMER', ST_CNO_PRC_BRT),	! timer is a noise word
	(TPA$_LAMBDA, ST_CNO_PRC_BRT)
	);


$STATE	(ST_CNO_PRC_MAX,		! MAXIMUM keyword dispatch

	('BROADCAST'),			! Make a noise word of the BROADCAST
	(TPA$_LAMBDA)			!  in MAX BROADCAST ROUTERS/NONROUTERS
	);

$STATE	(,

	DISPATCH_STATES
	(CNO,

	MAD, 'ADDRESS',
	MAR, 'AREA',
	MBF, 'BUFFERS',
	MCO, 'COST',
	MHP, 'HOPS',
	MLN, 'CIRCUITS',
	MLK, 'LINKS',
	MBE, 'NONROUTERS',
	MBR, 'ROUTERS',
	MVS, 'VISITS',

	));

$STATE	(ST_CNO_PRC_DLY,			! DELAY keyword dispatch

	DISPATCH_STATES
	(CNO,

	DFC, 'FACTOR',
	DWT, 'WEIGHT',

	));

$STATE	(ST_CNO_PRC_SVC,			! SERVICE keyword dispatch

	DISPATCH_STATES
	(CNO,

	SDV, 'DEVICE',
	SLI, 'CIRCUIT',
	SNV, 'NODE',
	SPW, 'PASSWORD',

	));

$STATE	(ST_CNO_PRC_SEC,			! SECONDARY keyword dispatch

	DISPATCH_STATES
	(CNO,

	SDF, 'DUMPER',
	SLF, 'LOADER',

	));

$STATE	(ST_CNO_PRC_FOR,		! FORWARDING keyword dispatch

	('BUFFER', ST_CNO_PRC_FBS),	! buffer is a noise word
	('SIZE', ST_CNO_PRC_FBS),	! size is a noise word
	(TPA$_LAMBDA, ST_CNO_PRC_FBS)
	);

$STATE	(ST_CNO_PRC_SEG,		! SEGMENT keyword dispatch

	('BUFFER', ST_CNO_PRC_SBS),	! buffer is a noise word
	('SIZE', ST_CNO_PRC_SBS),	! size is a noise word
	(TPA$_LAMBDA, ST_CNO_PRC_SBS)
	);

$STATE	(ST_CNO_PRC_DUM,		! DUMP keyword dispatch

	DISPATCH_STATES
	(CNO,

	DFL, 'FILE',
	DAD, 'ADDRESS',
	DCT, 'COUNT',

	));

$STATE	(ST_CNO_PRC_SOF,			! SOFTWARE keyword dispatch

	DISPATCH_STATES
	(CNO,

	SID, 'IDENTIFICATION',
	STY, 'TYPE',

	));

$STATE	(ST_CNO_PRC_DEF,			! DEFAULT keyword dispatch

	DISPATCH_STATES
	(CNO,

	DAC, 'ACCESS',
	DPX, 'PROXY',

	));


!
!	Process states for nonprivileged parameters
!

$STATE	(ST_CNO_PRC_NPR,
	('ACCOUNT',	ST_CNO_PRC_NAC),
	('PASSWORD',	ST_CNO_PRC_NPW),
	('USER',	ST_CNO_PRC_NUS),
	(TPA$_LAMBDA,	ST_CNO_PRC)
	);

$STATE	(ST_CNO_PRC_NAC,
	( (ST_CNO_NAC), ST_CNO_PRC_NPR)
	);

$STATE	(ST_CNO_PRC_NPW,
	( (ST_CNO_NPW), ST_CNO_PRC_NPR)
	);

$STATE	(ST_CNO_PRC_NUS,
	( (ST_CNO_NUS), ST_CNO_PRC_NPR)
	);

!
!	Process states for privileged parameters
!

$STATE	(ST_CNO_PRC_PRV,
	('ACCOUNT',	ST_CNO_PRC_PAC),
	('PASSWORD',	ST_CNO_PRC_PPW),
	('USER',	ST_CNO_PRC_PUS),
	(TPA$_LAMBDA,	ST_CNO_PRC)
	);

$STATE	(ST_CNO_PRC_PAC,
	( (ST_CNO_PAC), ST_CNO_PRC_PRV)
	);

$STATE	(ST_CNO_PRC_PPW,
	( (ST_CNO_PPW), ST_CNO_PRC_PRV)
	);

$STATE	(ST_CNO_PRC_PUS,
	( (ST_CNO_PUS), ST_CNO_PRC_PRV)
	);

%SBTTL	'Node Subexpression States'

!
!	Subexpression states
!

!
!	Build sub-expressions to capture parameters
!

	SUB_EXPRESSIONS
	(CNO,

	ADR, TPA$_LAMBDA,
	AMC, TPA$_LAMBDA,
	AMH, TPA$_LAMBDA,
	BRT, TPA$_LAMBDA,
	BSZ, TPA$_LAMBDA,
	CTM, TPA$_LAMBDA,
	CTE, TPA$_LAMBDA,
	DFC, TPA$_LAMBDA,
	DWT, TPA$_LAMBDA,
	DGF, TPA$_LAMBDA,
	HWA, TPA$_LAMBDA,
	HOS, TPA$_LAMBDA,
	HOE, TPA$_LAMBDA,
	ID,  TPA$_LAMBDA,
	IAT, TPA$_LAMBDA,
	INT, TPA$_LAMBDA,
	MAD, TPA$_LAMBDA,
	MBF, TPA$_LAMBDA,
	MCO, TPA$_LAMBDA,
	MHP, TPA$_LAMBDA,
	MLN, TPA$_LAMBDA,
	MLK, TPA$_LAMBDA,
	MAR, TPA$_LAMBDA,
	MBE, TPA$_LAMBDA,
	MBR, TPA$_LAMBDA,
	MVS, TPA$_LAMBDA,
	NAM, TPA$_LAMBDA,
	NAE, TPA$_LAMBDA,
	OTM, TPA$_LAMBDA,
	RFC, TPA$_LAMBDA,
	RTM, TPA$_LAMBDA,
	SAD, TPA$_LAMBDA,
	FBS, TPA$_LAMBDA,
	SBS, TPA$_LAMBDA,
	STA, TPA$_LAMBDA,
	TYP, TPA$_LAMBDA,

	ALL, TPA$_EOS,
	CPU, TPA$_LAMBDA,
	DAD, TPA$_LAMBDA,
	DCT, TPA$_LAMBDA,
	DFL, TPA$_LAMBDA,
	LIN, TPA$_LAMBDA,
	LFL, TPA$_LAMBDA,
	RPW, TPA$_LAMBDA,
	SDV, TPA$_LAMBDA,
	SID, TPA$_LAMBDA,
	SLI, TPA$_LAMBDA,
	SNV, TPA$_LAMBDA,
	SPW, TPA$_LAMBDA,
	SDF, TPA$_LAMBDA,
	SLF, TPA$_LAMBDA,
	STY, TPA$_LAMBDA,
	TLF, TPA$_LAMBDA,
	TPW, TPA$_LAMBDA,
	NAC, TPA$_LAMBDA,
	NPW, TPA$_LAMBDA,
	NUS, TPA$_LAMBDA,
	PAC, TPA$_LAMBDA,
	PPW, TPA$_LAMBDA,
	PUS, TPA$_LAMBDA,
	ACC, TPA$_LAMBDA,
	DAC, TPA$_LAMBDA,
	PIQ, TPA$_LAMBDA,
	ALI, TPA$_LAMBDA,
	PRX, TPA$_LAMBDA,
	DPX, TPA$_LAMBDA,

	)

%SBTTL	'Define Subexpressions from Library'

!
!	Define subexpressions from library
!

	SEM_NODE_ID		! Node id strings
	SEM_QUERY		! Query state subexpressions

%SBTTL	'Object Listing of Parse Table'

END				!End of module
ELUDOM
