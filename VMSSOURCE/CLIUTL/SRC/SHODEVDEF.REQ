!	SHODEVDEF.REQ - SHOW DEVICES Common Definitions
!
!	Version	'V04-000'
!
!****************************************************************************
!*									    *
!*  COPYRIGHT (c) 1978, 1980, 1982, 1984 BY				    *
!*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
!*  ALL RIGHTS RESERVED.						    *
!* 									    *
!*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
!*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
!*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
!*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
!*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
!*  TRANSFERRED.							    *
!* 									    *
!*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
!*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
!*  CORPORATION.							    *
!* 									    *
!*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
!*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
!* 									    *
!*									    *
!****************************************************************************
!

!++
!
! FACILITY:  SHOW utility.
!
! ABSTRACT:
!	This file contains the common definitions for SHOW DEVICES.
!
! ENVIRONMENT:
!	VAX native, user mode.
!
!--
!
! AUTHOR:  Gerry Smith		 CREATION DATE:  29-Jun-1982
!
! MODIFIED BY:
!
!	V03-013	CWH3013			CW Hobbs	25-Jul-1984
!		Add state bits and cells to scratch area
!
!	V03-012 AEW0001			Anne E. Warner  10-Jul-1984
!		Add flag bit devi$v_served for qualifier /SERVED.
!
!	V03-011	CWH3011			CW Hobbs	12-Apr-1984
!		Add some more state bits
!
!	V03-010	CWH3010			CW Hobbs	22-Mar-1984
!		Add D_V_REMOTE_MOUNTS bit to tell if the device is
!		mounted on remote nodes
!
!	V03-009	CWH3009			CW Hobbs	3-Mar-1984
!		Add field to permit sorting by device name, also
!		cache name field
!
!	V03-008	CWH3008			CW Hobbs	27-Feb-1984
!		Add more displays for dual-path devices.  Align the
!		fields on longword boundaries for the most part.
!
!	V03-006	TCM0001			Trudy Matthews	10-Oct-1983
!		Add displays for dual-path devices.
!
!	V03-005	GAS0149			Gerry Smith	28-Jun-1983
!		Use IOC$CVT_DEVNAM to get the device name.
!
!	V03-004 GAS0135			Gerry Smith	18-May-1983
!		Move MCOUNT so that it doesn't clobber journal data.
!
!	V03-003	GAS0110			Gerry Smith	28-Feb-1983
!		Add support for cluster devices.
!
!	V03-002 GAS0109			Gerry Smith	15-Feb-1983
!		Add D_T_GRPNAM, the tape shadow group name, as well as
!		D_L_FIL_MXVBN, the disk journal file size, 
!		D_L_JNL_CHAR, the VCB journal characteristics, and
!		D_T_JNL_SPL, the "journal spooled" byte.
!
!	V03-001	GAS0107			Gerry Smith	11-Feb-1983
!		Add support for journals.
!
!**

!
! Define the flags longword bits.
!
MACRO
    devi$v_allocated	=	0, 0, 1, 0%,		! /ALLOCATED
    devi$v_full		=	0, 1, 1, 0%,		! /FULL
    devi$v_mounted	=	0, 2, 1, 0%,		! /MOUNTED
    devi$v_files	=	0, 3, 1, 0%,		! /FILES
    devi$v_system	=	0, 4, 1, 0%,		! /SYSTEM
    devi$v_user		=	0, 5, 1, 0%,		! /NOSYSTEM
    devi$v_windows	=	0, 6, 1, 0%,		! /WINDOWS
    devi$v_perm		=	0, 7, 1, 0%,		! /PERM (terminal)
    devi$v_printer	=	1, 0, 1, 0%,		! SHOW PRINTER was invoked
    devi$v_term		=	1, 1, 1, 0%,		! SHOW TERMINAL
    devi$v_tape		=	1, 2, 1, 0%,		! SHOW MAGTAPE
    devi$v_header	=	1, 3, 1, 0%,		! to show header printed
    devi$v_allocls	=	1, 4, 1, 0%,		! the node field is a longword allocation class
    devi$v_displayed	=	1, 5, 1, 0%,		! A device was actually displayed
    devi$v_served	=	1, 6, 1, 0%;		! /SERVED


!
! Define macros to describe the fields in the scratch area.
!
COMPILETIME
    byte_offset = 0,
    width = 0,
    length = 0;

MACRO
	define_each_field [item_name, item_tag, item_length] =
	%ASSIGN (byte_offset, byte_offset + length)
	%IF %IDENTICAL (item_tag, q)
	%THEN
	    %ASSIGN (width, 0)
	    %ASSIGN (length, 8) %FI
	%IF %IDENTICAL (item_tag, l)
	%THEN
	    %ASSIGN (width, 32)
	    %ASSIGN (length, 4) %FI
	%IF %IDENTICAL (item_tag, w)
	%THEN
	    %ASSIGN (width, 16)
	    %ASSIGN (length, 2) %FI
	%IF %IDENTICAL (item_tag, b)
	%THEN
	    %ASSIGN (width, 8)
	    %ASSIGN (length, 1) %FI
	%IF %IDENTICAL (item_tag, t)
	%THEN
	    %ASSIGN (width, 8)
	    %ASSIGN (length, %NUMBER(item_length))
	    LITERAL %NAME('d_s_', item_name) = length; %FI

	MACRO %NAME('d_', item_tag, '_', item_name) = 
	    %QUOTE %EXPAND %NUMBER (byte_offset),
	    0,
	    %QUOTE %EXPAND %NUMBER (width),
	    0 %QUOTE % %QUOTE ; %,

    define_fields (base) =
	%IF NOT %IDENTICAL(base, 0)
	%THEN %ASSIGN(byte_offset, %NUMBER(base)) %FI
	%ASSIGN (length, 0)
	define_each_field(%REMAINING)%;

define_fields	(0,				! Start at beginning
		ucb,		l,,		! Device UCB address (unique ID) and
						!  link field for sorting devices
						!** Sort routine assumes this is the first item!
		bits,		w,,		! Sundry status bits (defined later)
    		devlen,		b,,		! Device name length
		fill_1,		b,,		! Fill for alignment
		device,		t,	20,	! Device name
		host_name,	t,	16,	! Host name (ascic)
		host_type,	l,,		! Host type (V780,V750,HS50) (primary)
		host2_name,	t,	16,	! Host name
		host2_type,	l,,		! Host type (V780,V750,HS50)
		sort_name,	t,	16,	! Name in format for sorting
		allocls,	l,,		! Host allocation class
		ownuic,		l,,		! Owner UIC
		pid,		l,,		! Owner PID
		prcnam,		t,	16,	! Owner process name
		devchar,	l,,		! Device characteristics
		devchar2,	l,,		! 2nd longword of chars.
		devclass,	b,,		! Device class
		devtype,	b,,		! Device type
		devbufsiz,	w,,		! Default buffer size
		devdepend,	l,,		! Dev-dependent longword #1
		devdepnd2,	l,,		! Dev-dependent longword #2
		vprot,		w,,		! Volume protection
		refc,		w,,		! Reference count
		sts,		l,,		! Status
		opcnt,		l,,		! Number of operations completed
		devsts,		w,,		! Device status
		errcnt,		w,,		! Number of errors
		maxblock,	l,,		! UCB$L_MAXBLOCK for disks
		orb_flags,	b,,		! ORB$B_FLAGS byte
		cont,		b,,		! More data?
		status,		b,,		! Volume status (in the VCB)
		trans,		w,,		! Transaction count
		aqbtype,	b,,		! Type of ACP
		acpnam,		t,	24,	! ACP name or XQP cache name
		rvn,		w,,		! Relative volume number
		volnam,		t,	20,	! Volume label
		mcount,		w,,		! Number of /SHARE mounters
		cluster,	w,,		! Cluster size
		extend,		w,,		! Default extend quantity
		free,		l,,		! Number of free blocks
		maxfiles,	l,,		! Maximum number of files
		window,		b,,		! Window size
		lru_lim,	b,,		! LRU limit
		status2,	b,,		! Second status byte
						!** following two fields assumed to be adjacent
		retainmin,	q,,		! Minimum retention period
		retainmax,	q,,		! Maximum retention period
		fidsize,	w,,		! FID cache size
		extsize,	w,,		! Extent cache size
		extlimit,	w,,		! Extent cache limit (in percent/10)
		exttotal,	l,,		! Extent cache current blocks
		quosize,	w,,		! Quota cache size
		bfrcnt,		w,,);		! Number of cache buffers

!
! Overlay two words, the group and member parts of the owner UIC.
!
define_fields	($BYTEOFFSET(d_l_ownuic),
	    	group,		w,,
	    	member,		w,,);

!
! Overlay disk geometry on devdepend longword (since that is what
! devdepend is used for in disks)
!
define_fields	($BYTEOFFSET(d_l_devdepend),
	    	sectors,	b,,
	    	tracks,		b,,
	    	cylinders,	w,,);

!
! Overlay the unit number on the end of the sort field (where it will be used)
!
LITERAL unit_off = $BYTEOFFSET(d_t_sort_name)+14;
define_fields	(unit_off,
	    	unit,		w,,);

!
! For a spooled device, capture the intermediate device name as well as the
! name of the queue to which it is spooled.
!
define_fields	($BYTEOFFSET(d_b_status),
	    	intdev,		t,	20,	! Intermediate device name
	    	intlen,		l,,		! and length
	    	qname,		t,	20);	! Queue name

!
! For magtapes, the maximum recordsize in bytes
!
define_fields	($BYTEOFFSET(d_w_cluster),
	    	recordsz,	w,,);

!
! For journals, start overlaying at the W_CLUSTER part of the record.
!
define_fields	($BYTEOFFSET(d_w_cluster),
		grpnam,		t,	14,	! Shadow group name
		fil_mxvbn,	l,,		! Disk file size
		jnl_char,	l,,		! VCB journal characteristics
		jnl_mask,	l,,		! Journal mask
		jnl_seqno,	l,,		! Maximum sequence number
		jnl_asid,	l,,		! Highest assigned seq. no.
		jnl_quot,	l,,		! Journal quota (RU only)
		jnl_refc,	l,,		! Channel count
		jnl_trefc,	l,,		! Node count
		jnl_id,		w,,		! Journal ID
		jnl_char,	w,,		! Characteristics word
		amod,		b,,		! Access mode
		jnl_cop,	w,,		! Number of copies
		jnl_spl,	b,,		! Tape file is spooled
		jnl_avl,	b,,);		! Number of journals available


!
! Determine the maximum length of the data record.
!
LITERAL d_k_length = $BYTEOFFSET(d_w_quosize) + $FIELDWIDTH(d_w_quosize);

!
! Define the bits word bits.
!
COMPILETIME
    byt_off = $BYTEOFFSET (d_w_bits);

MACRO
    d_v_displayed	= byt_off, 0, 1, 0%,	! Device has been displayed
    d_v_host_avail	= byt_off, 1, 1, 0%,	! Host is available
    d_v_host2_avail	= byt_off, 2, 1, 0%,	! Alternate host is available
    d_v_remote_device	= byt_off, 3, 1, 0%,	! Device is served by remote host
    d_v_shadow_master	= byt_off, 4, 1, 0%,	! Device is master for a shadow set
    d_v_cachename	= byt_off, 5, 1, 0%,	! D_T_ACPNAM is really the cache name
    d_v_local_mount	= byt_off, 6, 1, 0%,	! Device is mounted on the local node
    d_v_remote_mounts	= byt_off, 7, 1, 0%,	! Device is mounted on other nodes
    d_v_remote_all	= byt_off, 8, 1, 0%,	! Device is allocated on remote node
    d_v_acl_present	= byt_off, 9, 1, 0%;	! Device has an access control list
