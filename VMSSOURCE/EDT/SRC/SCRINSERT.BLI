%TITLE 'EDT$SCRINSERT - insert a line on the screen'
MODULE EDT$SCRINSERT (				! Insert a line on the screen
		IDENT = 'V04-000'			! File: SCRINSERT.BLI Edit: JBS1022
		) =
BEGIN
!
!****************************************************************************
!*									    *
!*  COPYRIGHT (c) 1978, 1980, 1982, 1984 BY				    *
!*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
!*  ALL RIGHTS RESERVED.						    *
!* 									    *
!*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
!*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
!*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
!*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
!*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
!*  TRANSFERRED.							    *
!* 									    *
!*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
!*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
!*  CORPORATION.							    *
!* 									    *
!*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
!*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
!* 									    *
!*									    *
!****************************************************************************
!

!++
! FACILITY:	EDT -- The DEC Standard Editor
!
! ABSTRACT:
!
!	This module updates the screen information vector to
!	reflect the insertion of a line.
!
! ENVIRONMENT:	Runs at any access mode - AST reentrant
!
! AUTHOR: Bob Kushlis, CREATION DATE: September 8, 1979
!
! MODIFIED BY:
!
! 1-001	- Original.  DJS 12-Feb-1981.  This module was created by
!	extracting the routine EDT$$SC_INSLN  from module SCREEN.
! 1-002	- Regularize headers.  JBS 13-Mar-1981
! 1-003	- Repaint when a line is inserted above the top of the screen,
!	   but not when a line is inserted at the top of the screen.
!	   JBS 24-Sep-1981
! 1-004	- Check a new flag for scrolling regions.  JBS 31-Aug-1982
! 1-005 - Modify for the new screen updater.  SMB 17-Sep-1982
! 1-006 - Modify to use new 48 bit macros. STS 01-Oct-1982
! 1-007 - Take out references to L_CUR_SCRLN.  SMB 04-Oct-1982
! 1-008 - Reduce parameters to SC_LNINS.  SMB 06-Oct-1982
! 1-009 - Change the way SC_FNDREC is used.  SMB 08-Oct-1982
! 1-010	- Change EDT$$G_SCR_CHGD to EDT$$G_SCR_REBUILD.  JBS 09-Oct-1982
! 1-011 - Set the current screen pointer when a line is inserted.  SMB 10-Oct-1982
! 1-012	- Add support for NOTRUNCATE mode.  JBS 11-Oct-1982
! 1-013 - Update L_CUR_SCRLN on insert.  SMB 13-Oct-1982
! 1-014	- Don't rebuild the screen after deleting a line.  JBS 23-Oct-1982
! 1-015	- Don't increment the record number if our record was replaced
!	   rather than inserted before.  JBS 25-Oct-1982
! 1-016	- Check for replacing a multi-line record.  JBS 26-Oct-1982
! 1-017 - Fix notruncate bug on searching for deleted lines.  SMB 02-Dec-1982
! 1-018	- Remove the edit buffer.  JBS 27-Dec-1982
! 1-019	- Remove the unused reference to EDT$$G_CS_CHNO.  JBS 27-Dec-1982
! 1-020	- Support EDT$$G_ANY_CHANGES.  JBS 05-Apr-1983
! 1-021	- Worry about replacing the current line when the cursor is on
!	   a continuation line of it.  JBS 06-Jul-1983
! 1-022	- Maintain EDT$$L_CUR_SCRLN even if the current line is outside of
!	   the screen data base.  JBS 25-Jul-1983
!--


%SBTTL 'Declarations'
!
! TABLE OF CONTENTS:
!

REQUIRE 'EDTSRC:TRAROUNAM';

FORWARD ROUTINE
    EDT$$SC_INSLN : NOVALUE;

!
! INCLUDE FILES:
!

REQUIRE 'EDTSRC:EDTREQ';

!
! MACROS:
!
!	NONE
!
! OWN STORAGE:
!
!	NONE
!
! EXTERNAL REFERENCES:
!
!	In the routine

%SBTTL 'EDT$$SC_INSLN  - mark a line for insert'

GLOBAL ROUTINE EDT$$SC_INSLN (			! Mark a work file line for insert
    REC_ADDR, 					! Address of new line
    REC_LEN					! Length of new line
    ) : NOVALUE =

!++
! FUNCTIONAL DESCRIPTION:
!
!	A line has been inserted.  Mark the line for insert in the screen
!	information structure.
!
! FORMAL PARAMETERS:
!
!  REC_ADDR 		the address of the new line
!
!  REC_LEN 		the length of the new line
!
! IMPLICIT INPUTS:
!
!	EDT$$A_LN_PTR
!	EDT$$T_LN_BUF
!	EDT$$A_SCR_BUF
!	EDT$$A_CUR_BUF
!
! IMPLICIT OUTPUTS:
!
!	EDT$$L_CUR_SCRLN
!	EDT$$A_CSR_SCRPTR
!	EDT$$G_ANY_CHANGES
!
! ROUTINE VALUE:
!
!	NONE
!
! SIDE EFFECTS:
!
!	NONE
!
!--

    BEGIN

    EXTERNAL ROUTINE
	EDT$$SC_LNINS,				! Insert a line into sceen structure
	EDT$$SC_FNDREC;				! Find a record in the data structure

    EXTERNAL
	EDT$$A_LN_PTR,
	EDT$$L_CUR_SCRLN : LN_BLOCK,		! Current screen line
	EDT$$T_LN_BUF,				! Workfile line buffer
	EDT$$A_CSR_SCRPTR : REF SCREEN_LINE,	! Pointer to current line screen info
	EDT$$A_SCR_BUF : REF TBCB_BLOCK,	! Current screen block
	EDT$$A_CUR_BUF : REF TBCB_BLOCK,	! Current text buffer control block'
	EDT$$G_ANY_CHANGES;			! 1 = a change has been mode to the screen data structure

    LOCAL
	CURSOR_LINE,				! Relative cursor line
	CURSOR_POS,				! Cursor position on the line
	SCRPTR : REF SCREEN_LINE,		! Current line screen info
	CURSOR_DELETED,				! 1 = the cursor line had been deleted
	DISP,					! Displacement from cursor line
	SCRLN_POS;				! Our position relative to the screen line

!+
! Only perform this routine if the current buffer is on the screen and the screen data structure exists.
!-

    IF (.EDT$$A_SCR_BUF NEQA .EDT$$A_CUR_BUF) THEN RETURN;

!+
! Compute our position relative to the screen line.
!-
    SCRLN_POS = CMPLNO (EDT$$A_CUR_BUF [TBCB_CUR_LIN], EDT$$L_CUR_SCRLN);
!+
! Get the pointer which corresponds to the current record.  The insert will be just
! before that record.
!-
    SCRPTR = EDT$$SC_FNDREC (.EDT$$A_LN_PTR - EDT$$T_LN_BUF, DISP);
!+
! We will do the insert above the current screen information block.
! If there is a deleted line before the current screen information block
! we will replace it.  If that line is the cursor line, don't increment
! the record number of the cursor line.
!-

    IF (.SCRPTR NEQA 0)
    THEN
	BEGIN
!+
! Tell the screen updater to search the screen data structure for any changes.
!-
	EDT$$G_ANY_CHANGES = 1;
!+
! See if the cursor line has already been deleted.
!-

	IF ((.EDT$$A_CSR_SCRPTR [SCR_EDIT_FLAGS] AND SCR_EDIT_DELLN) NEQ 0)
	THEN
	    CURSOR_DELETED = 1
	ELSE
	    CURSOR_DELETED = 0;

!+
! Now insert just before the current line.
!-
	EDT$$SC_LNINS (.SCRPTR, .REC_ADDR, .REC_LEN);
!+
! If we just replaced the current screen line, don't increment it's record number.
!-

	IF ( NOT (.CURSOR_DELETED AND ((.EDT$$A_CSR_SCRPTR [SCR_EDIT_FLAGS] AND SCR_EDIT_DELLN) EQL 0)))
	THEN
	    BEGIN

	    IF (.SCRLN_POS LEQ 0) THEN ADDLINE (NUMBER_ONE, EDT$$L_CUR_SCRLN);

	    END;

	END
    ELSE
!+
! If the line to be inserted is in the buffer being displayed on the screen but outside
! the screen data base we must still maintain EDT$$L_CUR_SCRLN.
!-
	BEGIN

	IF (.SCRLN_POS LEQ 0) THEN ADDLINE (NUMBER_ONE, EDT$$L_CUR_SCRLN);

	END;

    END;					! of routine EDT$$SC_INSLN

!<BLF/PAGE>

END						! of module EDT$SCRINSERT

ELUDOM
