	.TITLE GET_DEVICE_INFO - Get device information
	.IDENT	'V04-000'

;
;****************************************************************************
;*									    *
;*  COPYRIGHT (c) 1978, 1980, 1982, 1984 BY				    *
;*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
;*  ALL RIGHTS RESERVED.						    *
;* 									    *
;*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
;*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
;*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
;*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
;*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
;*  TRANSFERRED.							    *
;* 									    *
;*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
;*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
;*  CORPORATION.							    *
;* 									    *
;*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
;*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
;* 									    *
;*									    *
;****************************************************************************

;++
; FACILITY: Performance Monitoring
;
; ABSTRACT:
;	Collects device information for performance 
;	monitoring and returns same in supplied buffer.
;
; ENVIRONMENT:
;	MODE = KERNEL
;
; AUTHOR: S. S. AMWAY, CREATION DATE: 24-Oct-83
;
; MODIFIED BY:
;
;	V03-002	SSA0024		Stan Amway	 9-Apr-1984
;		Ignore disk UCB's with CDP bit set in UCB$L_DEVCHAR2.
;		(No I/O can ever take place to these units.)
;
;	V03-001	SSA0006		Stan Amway	 1-Feb-1984
;		Call IOC$CVT_DEVNAM requesting allocation 
;		class format of device name.
;
;--

	.SBTTL	DECLARATIONS

;
; INCLUDE FILES:
;

	$DCDEF
	$DEVDEF
	$SSDEF
	$UCBDEF

;
; EQUATED SYMBOLS:
;

BUFADDR=4
BUFLEN=8
DCLASS=12
DEVTYPE=16
DEVCOUNT=20


	.SBTTL	GET_DEVICE_INFO - Collect device information

;++
; FUNCTIONAL DESCRIPTION:
;	Collects device information for specified device classes & types.
;
; CALLING SEQUENCE:
;	CALLS/CALLG GET_DEVICE_INFO
;
; INPUT PARAMETERS:
;	 4(AP)=Buffer address
;	 8(AP)=Buffer length
;	12(AP)=Device class
;	16(AP)=Device type
;
; IMPLICIT INPUTS:
;	NONE
;
; OUTPUT PARAMETERS:
;	20(AP)=Count of devices in buffer
;
; IMPLICIT OUTPUTS:
;	Buffer is filled with device data
;
; COMPLETION CODES:
;	SS$_NORMAL
;	SS$_INSFARG
;	SS$_IVBUFLEN
;	SS$_ACCVIO
;
; SIDE EFFECTS:
;	NONE
;
;--
	.PSECT	$CODE ,  PIC,CON,REL,LCL,  SHR,  EXE,  RD,NOWRT,LONG

	.ENTRY	GET_DEVICE_INFO,^M<R2,R3,R4,R5,R6,R7,R8,R9,R10,R11>
	MOVZWL	#SS$_INSFARG,R0
	CMPL	(AP),#5			; Must have 5 arguments
	BEQL	5$
1$:	BRW	9999$
5$:	MOVZWL	#SS$_IVBUFLEN,R0
	MOVL	BUFLEN(AP),R7		; R7 <= buffer length
	DIVL3	#32,R7,R8		; R8 <= max # of devices
	BLEQ	1$			; Error if <= 0
	MOVL	BUFADDR(AP),R6		; R6 <= buffer address
	MOVZWL	#SS$_ACCVIO,R0
	IFNOWRT	SIZ=R7,-		; Make sure buffer
		ADR=(R6),-
		DEST=1$
	IFNOWRT	SIZ=#4,-		; and device name counter
		ADR=@DEVCOUNT(AP),-	; are writable
		DEST=1$
	CLRL	@DEVCOUNT(AP)		; Zero device name counter
	MOVL	G^SCH$GL_CURPCB,R4	; R4 <= PCB address of this process
	JSB	G^SCH$IOLOCKR		; Lock I/O database (returns @ IPL 2)
	CLRQ	R10			; Clear UCB/DDB context
10$:	JSB	G^IOC$SCAN_IODB		; Get next device UCB address
	BLBC	R0,100$			; Quit if done
	TSTB	DCLASS(AP)		; Accept all devices classes ?
	BLSS	20$			; BR if yes
	CMPB	DCLASS(AP),UCB$B_DEVCLASS(R10)	; Device class match ?
	BEQL	20$			; BR if yes
	CLRL	R10			; Skip entire controller
	BRB	10$
20$:	TSTB	DEVTYPE(AP)		; Accept all device types ?
	BLSS	30$			; BR if yes
	CMPB	DEVTYPE(AP),UCB$B_DEVTYPE(R10)	; Device type match ?
	BEQL	30$			; BR if yes
	BRB	10$			; Get next device
30$:	CMPB	UCB$B_DEVCLASS(R10),#DC$_DISK ; If disk device and
	BNEQ	40$			; CDP bit set,
	BBS	#DEV$V_CDP,UCB$L_DEVCHAR2(R10),10$ ; get next device
40$:	MOVL	R10,(R6)+		; Buffer gets UCB address
	SUBL2	#4,R7			; R7 <= updated buffer length
	MOVL	R6,R1			; R1 <= buffer address
	MOVL	R7,R0			; R0 <= buffer length
	MOVL	#1,R4			; R4 <= Format control
	MOVL	R10,R5			; R5 <= UCB address
	JSB	G^IOC$CVT_DEVNAM
	BLBC	R0,100$
	MOVC5	R1,(R6),#^A/ /,#16,(R6)	; Pad device name to 16 characters
	MOVL	R3,R6			; R6 <= updated buffer address
	MOVQ	UCB$Q_DEVCHAR(R10),(R6)+; Get device characteristics

	ASSUME	UCB$B_DEVTYPE	EQ	UCB$B_DEVCLASS+1

	MOVZWL	UCB$B_DEVCLASS(R10),-	; Get device class & type
		(R6)+
	SUBL2	#28,R7			; R7 <= updated buffer length
	INCL	@DEVCOUNT(AP)		; Count another device name
	SOBGTR	R8,10$
100$:	MOVL	G^SCH$GL_CURPCB,R4	; R4 <= PCB address of this process
	JSB	G^SCH$IOUNLOCK		; Unlock I/O database
	SETIPL	#0			; Restore IPL
9998$:	MOVZWL	#SS$_NORMAL,R0
9999$:	RET

	.END
