	.TITLE	MONDAT - Data Structures For MONITOR utility
	.IDENT	'V04-000'

;
;****************************************************************************
;*									    *
;*  COPYRIGHT (c) 1978, 1980, 1982, 1984 BY				    *
;*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
;*  ALL RIGHTS RESERVED.						    *
;* 									    *
;*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
;*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
;*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
;*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
;*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
;*  TRANSFERRED.							    *
;* 									    *
;*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
;*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
;*  CORPORATION.							    *
;* 									    *
;*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
;*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
;* 									    *
;*									    *
;****************************************************************************

;++
; FACILITY:  VAX/VMS MONITOR Utility
;
; ABSTRACT:
;
;	This module is a collection of data structures used by the
;	various executable modules of the Monitor utility.
;
;	Included are the CDB Table, the IDB table and the
;	CLASSTABLE. The CDB Table is a set of contiguous Class
;	Descriptor Blocks, one for each class, in order by class
;	number. The IDB table (PERFTABLE) is a set of contiguous
;	Item Descriptor Blocks, one for each Monitor data item,
;	in an order determined by the $PMSDEF macro. The CLASSTABLE
;	is a set of contiguous longword pairs, one pair for each
;	class; each pair consists of a pointer to a counted ASCII
;	string naming the class, followed by a longword class number.
;
; ENVIRONMENT:  Non-executable data structures.
;
; AUTHOR: H. M. Levy	, CREATION DATE: 2-May-1977
;
; MODIFIED BY:
;
;	V03-021	TLC1088		Thomas L. Cafarella	25-Jul-1984	14:00
;		Free virtual memory obtained for multi-file summary.
;
;	V03-020	TLC1085		Thomas L. Cafarella	22-Jul-1984	14:00
;		Calculate scale values for Free and Modified List bar graphs.
;
;	V03-020	TLC1084		Thomas L. Cafarella	24-Jul-1984	11:00
;		Disable VMS1 class; update structure level ID.
;
;	V03-019	TLC1079		Thomas L. Cafarella	11-Jul-1984	11:00
;		Miscellaneous name and label changes.
;
;	V03-018	TLC1072		Thomas L. Cafarella	17-Apr-1984	11:00
;		Add volume name to DISK display.
;
;	V03-017	TLC1066		Thomas L. Cafarella	01-Apr-1984	11:00
;		Add SYSTEM class.
;
;	V03-017	PRS1014		Paul R. Senn		29-Mar-1984	11:00
;		Misc. changes to VMS1 class
;
;	V03-016	TLC1061		Thomas L. Cafarella	18-Mar-1984	11:00
;		Identify dual-path disks by allocation class.
;
;	V03-016	TLC1056		Thomas L. Cafarella	22-Mar-1984	11:00
;		Disable journaling classes and exclude class which is disabled.
;
;	V03-015	PRS1010		Paul R. Senn		27-FEB-1984	 9:00
;		Add Deadlock Message Rate to DLOCK class
;
;	V03-015	PRS1009		Paul R. Senn		22-FEB-1984	14:00
;		Add Internal-use-only VMS1 Class 
;
;	V03-015	PRS1007		Paul R. Senn		17-FEB-1984	14:00
;		Misc. changes to ACPCACHE and FCP classes related to the XQP
;		(including changing the name of ACPCACHE class to XQPCACHE)
;
;	V03-015	PRS1006		Paul R. Senn		17-FEB-1984	14:00
;		Add support for "computed" items 
;
;	V03-015	TLC1052		Thomas L. Cafarella	17-Feb-1984	11:00
;		Add multi-file summary capability.
;
;	V03-014	PRS1005		Paul R. Senn		13-JAN-1983	10:00
;		Allow flexible spacing between screen items
;
;	V03-014	PRS1004		Paul R. Senn		11-JAN-1983	16:00
;		Misc. changes to POOL class
;
;	V03-013	PRS1001		Paul R. Senn		27-Dec-1983	16:00
;		Add ALL CLASSES Pseudo-class
;
;	V03-012	TLC1050		Thomas L. Cafarella	06-Dec-1983	11:00
;		Change directory information in DLOCK class.
;
;	V03-011	SPC0004		Stephen P. Carney	24-Jun-1983	16:00
;		Add SCS class.
;
;	V03-010	TLC1042		Thomas L. Cafarella	19-Jun-1983	15:00
;		Add /ITEM qualifier for homogeneous classes.
;
;	V03-010	TLC1040		Thomas L. Cafarella	15-Jun-1983	10:00
;		Add directory node indicator to DLOCK class.
;
;	V03-010	TLC1036		Thomas L. Cafarella	10-Jun-1983	15:00
;		Properly recognize Revision Level 0.
;
;	V03-009	TLC1035		Thomas L. Cafarella	06-Jun-1983	15:00
;		Add homogeneous class type and DISK class.
;
;	V03-009	TLC1034		Thomas L. Cafarella	06-Jun-1983	15:00
;		Add DLOCK class.
;
;	V03-009	SPC0003		Stephen P. Carney	06-Jun-1983	15:00
;		Add JDEVICE class.
;
;	V03-008	TLC1032		Thomas L. Cafarella	27-May-1983	15:00
;		Add Blocking AST Rate to LOCK class.
;
;	V03-007	SPC0002		Stephen P. Carney	22-Apr-1983	14:00
;		Add ACPCACHE class.
;
;	V03-007	TLC1029		Thomas L. Cafarella	21-Apr-1983	10:00
;		Correctly calculate "Interrupt Stack" string.
;
;	V03-006	TLC1028		Thomas L. Cafarella	14-Apr-1983	16:00
;		Add interactive user interface.
;
;	V03-006	TLC1027		Thomas L. Cafarella	14-Apr-1983	16:00
;		Enhance file compatibility features.
;
;	V03-006 TLC1026		Thomas L. Cafarella	14-Apr-1983	16:00
;		Miscellaneous updates to JOURNALING, RU and FCP classes
;
;	V03-005	TLC1023		Thomas L. Cafarella	14-Jul-1982	10:00
;		Lengthen title string and class-name for the
;		RECOVERY class (now RECOVERY_UNIT).
;
;	V03-004	TLC1022		Thomas L. Cafarella	12-Jul-1982	16:00
;		Add CDB's and BLDIDB macros for the JOURNALING
;		and RECOVERY classes.
;
;	V03-003	TLC43701	Thomas L. Cafarella	12-Jul-1982	15:00
;		Pick up "File Lookups" from correct counter (FCP class).
;
;	V03-002	TLC1015		Thomas L. Cafarella	01-Apr-1982	16:00
;		Change .PSECT options in order to group image sections.
;
;	V03-001	TLC1004		Thomas L. Cafarella	25-Mar-1982	17:00
;		Correct wording of MODES Interrupt Stack label.
;
;		Eliminate unused labels and add form-feeds for readability.
;
;--

	.SBTTL	DECLARATIONS
	.PSECT	DSPDATA,QUAD,NOEXE

;
; INCLUDE FILES:
;

	$CDBDEF				; Class Descriptor Block definitions
	$IDBDEF				; Item Descriptor Block definitions
	$PFNDEF				; Page frame data base
	$PHDDEF				; Define process header
	$PMSDEF				; Define data items
	$MONDEF				; Monitor Recording File definitions

;
; MACROS:
;

;
; Local Macro Definitions
;

;
; CSTRING Macro - Construct a counted ascii string
;

	.MACRO	CSTRING STRING,?LAA,?LBB
	.BYTE	LBB-LAA
LAA:	.ASCII	\STRING\
LBB:	
	.ENDM	CSTRING

;
; BLDIDB Macro - Build Item Descriptor Block.  Blocks are indexed in
; PERFTABLE by the item number times the length of each block.
;

	.MACRO	BLDIDB	NAME,SSTRING,LSTRING,SIZE=LONG,-
			TYPE,ADDR,?LAA,?LBB,FLAGS=0
	.SAVE
	.PSECT	$$STRINGS,NOEXE
LAA:	CSTRING	<SSTRING>
LBB:	CSTRING	<LSTRING>
	.RESTORE
	$$T1 = .
	$$VAL=IDB$K_ILENGTH*PMS$C_'NAME
	.=PERFTABLE+$$VAL
	.LONG	LAA
	.LONG	LBB
	.WORD	SIZE'_SIZE
	.WORD	TYPE'_TYPE
	.LONG	ADDR
	.BYTE	FLAGS
	.=$$T1
	.ENDM	BLDIDB

;
; CHDHDR Macro - Build CHange Descriptors Header. The header consists of
; a single byte representing the current Revision Level for the class.
; Following the CHDHDR macro must be a CHD macro for each revision level
; up to and including the current level.
;

	.MACRO	CHDHDR	ADDRESS,REVLEVEL
	ASSUME $$CHD_COUNT EQ $$CHD_PRES ; Check CHD count from previous class
	$$CHD_PRES = 0			; Init CHDs actually present
	$$CHD_COUNT = REVLEVEL + 1	; Set CHD count
ADDRESS': .BYTE	REVLEVEL		; Generate byte revision level
	.ENDM	CHDHDR

;
; CHD Macro - Build CHange Descriptor. The change descriptor provides
; information necessary to define a change to the item structure of
; a class. A CHD macro is required for each change (including Rev Level 0).
; All CHDs for a single class follow in chronological order after the
; CHDHDR macro. When a new CHD is added, the REVLEVEL field in the
; CHDHDR macro must be changed. 
;

	.MACRO	CHD	ITEMCOUNT,ITEMSTRING,BLOCKLEN,ELIDLEN=0,DISPCTL=0
	.LONG	ITEMCOUNT		; Generate item count
	.LONG	ITEMSTRING		; Generate item string address
	.WORD	BLOCKLEN		; Generate block len (for PROCESSES)
	.BYTE	ELIDLEN			; Generate elt ID length (for homogs)
	.WORD	DISPCTL			; Generate display control bit string
	$$CHD_PRES = $$CHD_PRES + 1	; Incr no. of CHDs present this class
	.ENDM	CHD

;
; EQUATED SYMBOLS:
;


;
; The following size indicators specify how many bits should be
; fetched for each data item.

; The types specify what transformations should be performed on the
; data once it is fetched.  For example, if the data is an accumulated
; time, it is usually subtracted from the previous value to compute
; the time spent during the interval.  
;

	BYTE_SIZE == 0 			; Indicator for BYTE datum
	WORD_SIZE == 1			; Indicator for WORD datum
	LONG_SIZE == 2			; Indicator for LONG datum

	OWN_TYPE == 0			; Do nothing with value
	COUNT_TYPE == 1			; Indicates data item is a count
	LEVEL_TYPE == 2			; Indicates data item is a level

	PROCS_CLSNO == 0		; Class number for PROCESSES class
	STATES_CLSNO == 1		; Class number for STATES class
	MODES_CLSNO == 2		; Class number for MODES class
	DISK_CLSNO == 12		; Class number for DISK class
	DLOCK_CLSNO == 14		; Class number for DLOCK class
	SYSTEM_CLSNO == 17		; Class number for SYSTEM class

	TOP_RANGE == 20			; Range for TOP bar displays (exc. TOPCPU

	MODES_ICOUNT == 7		; Number of MODES items (Rev. Level 0)




;
;	The MONITOR recording file structure level identification is:
;
;				MONdduff
;
;		where dd is a 2-character Data Level. It is changed every time a
;		change occurs to the definition of one or more classes, or when
;		item(s) are annexed to the File Header Record or the System Information
;		Record. These changes must be upward-compatible. MONITOR does not
;		examine the dd field.
;
;		u is an unused character. MONITOR does not examine it.
;
;		ff is a 2-character Format Level. It is changed every time a change
;		is made to the file format which cannot be made upward-compatible.
;		MONITOR examines this field. If the format level of the incoming
;		playback file does not match the current format level (in ST_LEVEL_CUR)
;		exactly, the MONITOR request is terminated with an error.
;

ST_LEVEL_CUR::
		.ASCII	\MON17001\	; Current MONITOR recording file structure level


;
; Class Descriptor Blocks
;
; As a possible future enhancement, write a BLDCDB macro which builds a
; CDB for each class and builds the CLASSTABLE (which is hard-coded below).
; Include ASSUME macros to verify at assembly time that the CDB structure
; definition is in sync with the BLDCDB macro (particularly CDB$K_SIZE).
;

CDBHEAD::				; head of CDB table

; 
; CDB for PROCESSES class
;

	.LONG	0,0			; FAO control string descr (addr MBZ)
	.LONG	0,0			; m.f. summ buff str descr (addr MBZ)
	.LONG	REGTITLE		; title string
	.BLKL	1			; number of items for TOP displays
	.BLKL	1			; same as above
	.LONG	0			; addr of PDD (Revision Level 0)
	.BLKW	1			; data block length
	.LONG	PROC_PRE		; pre-collection routine
	.LONG	0			; no post-collection routine
	.BLKL	2			; collection buffer block string descriptor
	.LONG	0			; address of CDX (0 if heterogeneous)
	.WORD	0			; display control bit string 
	.LONG	0,TOP_RANGE		; min and max values for TOP displays
	.BLKB	2			; lengths of FAO segments (for homogs)
	.BLKB	1			; active PROCESSES display type
	.BYTE	REG_PROC		; default PROCESSES display type
	.BLKB	1			; current PROCESSES display type
	.BLKW	1			; active qualifier flags
	.WORD	0			; default qualifier flags
	.BLKW	1			; current qualifier flags
	.LONG	0			; flags
	.LONG	PROCESSES_CHD		; addr of change descriptors
;
; CDB for STATES class
;

	.LONG	0,0			; FAO control string descr (addr MBZ)
	.LONG	0,0			; m.f. summ buff str descr (addr MBZ)
	.LONG	STATETITLE		; title string
	.BLKL	3			; no. items, display elts, item str addr
	.BLKW	1			; block length (calc at run time)
	.LONG	STATES_PRE		; pre-collection routine
	.LONG	0			; post-collection routine
	.BLKL	2			; collection buffer block string descriptor
	.LONG	0			; address of CDX (0 if heterogeneous)
	.WORD	0			; display control bit string 
	.LONG	0,40			; expected min and max values
	.BLKB	2			; lengths of FAO segments (for homogs)
	.BLKB	1			; active statistic
	.BYTE	CUR_STAT		; default statistic
	.BLKB	1			; current statistic
	.BLKW	1			; active qualifier flags
	.WORD	0			; default qualifier flags
	.BLKW	1			; current qualifier flags
	.LONG	CDB$M_UNIFORM+CDB$M_STD	; flags
	.LONG	STATES_CHD		; addr of change descriptors

;
; CDB for MODES class
;

	.LONG	0,0			; FAO control string descr (addr MBZ)
	.LONG	0,0			; m.f. summ buff str descr (addr MBZ)
	.LONG	MODETITLE		; title string
	.BLKL	3			; no. items, display elts, item str addr
	.BLKW	1			; block length (calc at run time)
	.LONG	MODES_PRE		; pre-collection routine
	.LONG	0			; post-collection routine
	.BLKL	2			; collection buffer block string descriptor
	.LONG	0			; address of CDX (0 if heterogeneous)
	.WORD	0			; display control bit string 
	.LONG	0,100			; expected min and max values
	.BLKB	2			; lengths of FAO segments (for homogs)
	.BLKB	1			; active statistic
	.BYTE	CUR_STAT		; default statistic
	.BLKB	1			; current statistic
	.BLKW	1			; active qualifier flags
	.WORD	CDB$M_CPU		; default qualifier flags
	.BLKW	1			; current qualifier flags
	.LONG	CDB$M_CTPRES+CDB$M_UNIFORM+CDB$M_STD
					; flags
	.LONG	MODES_CHD		; addr of change descriptors
;
; CDB for PAGE class
;

	.LONG	0,0			; FAO control string descr (addr MBZ)
	.LONG	0,0			; m.f. summ buff str descr (addr MBZ)
	.LONG	PAGETITLE		; title string
	.BLKL	3			; no. items, display elts, item str addr
	.BLKW	1			; block length (calc at run time)
	.LONG	PAGE_PRE		; pre-collection routine
	.LONG	0			; post-collection routine
	.BLKL	2			; collection buffer block string descriptor
	.LONG	0			; address of CDX (0 if heterogeneous)
	.WORD	0			; display control bit string 
	.LONG	0,80			; expected min and max values
	.BLKB	2			; lengths of FAO segments (for homogs)
	.BLKB	1			; active statistic
	.BYTE	ALL_STAT		; default statistic
	.BLKB	1			; current statistic
	.BLKW	1			; active qualifier flags
	.WORD	0			; default qualifier flags
	.BLKW	1			; current qualifier flags
	.LONG	CDB$M_CTPRES+CDB$M_STD	; flags
	.LONG	PAGE_CHD		; addr of change descriptors

;
; CDB for IO class
;

	.LONG	0,0			; FAO control string descr (addr MBZ)
	.LONG	0,0			; m.f. summ buff str descr (addr MBZ)
	.LONG	IORATETITLE		; title string
	.BLKL	3			; no. items, display elts, item str addr
	.BLKW	1			; block length (calc at run time)
	.LONG	0			; pre-collection routine
	.LONG	0			; post-collection routine
	.BLKL	2			; collection buffer block string descriptor
	.LONG	0			; address of CDX (0 if heterogeneous)
	.WORD	0			; display control bit string 
	.LONG	0,80			; expected min and max values
	.BLKB	2			; lengths of FAO segments (for homogs)
	.BLKB	1			; active statistic
	.BYTE	ALL_STAT		; default statistic
	.BLKB	1			; current statistic
	.BLKW	1			; active qualifier flags
	.WORD	0			; default qualifier flags
	.BLKW	1			; current qualifier flags
	.LONG	CDB$M_CTPRES+CDB$M_STD	; flags
	.LONG	IO_CHD			; addr of change descriptors
;
; CDB for FCP (File Control Primitives) class
;

	.LONG	0,0			; FAO control string descr (addr MBZ)
	.LONG	0,0			; m.f. summ buff str descr (addr MBZ)
	.LONG	FCPTITLE		; title string address
	.BLKL	3			; no. items, display elts, item str addr
	.BLKW	1			; block length (calc at run time)
	.LONG	FCP_PRE			; pre-collection routine
	.LONG	0			; post-collection routine
	.BLKL	2			; collection buffer block string descriptor
	.LONG	0			; address of CDX (0 if heterogeneous)
	.WORD	0			; display control bit string 
	.LONG	0,20			; expected min and max values
	.BLKB	2			; lengths of FAO segments (for homogs)
	.BLKB	1			; active statistic
	.BYTE	ALL_STAT		; default statistic
	.BLKB	1			; current statistic
	.BLKW	1			; active qualifier flags
	.WORD	0			; default qualifier flags
	.BLKW	1			; current qualifier flags
	.LONG	CDB$M_CTPRES+CDB$M_STD	; flags
	.LONG	FCP_CHD			; addr of change descriptors

;
; CDB for POOL class
;

	.LONG	0,0			; FAO control string descr (addr MBZ)
	.LONG	0,0			; m.f. summ buff str descr (addr MBZ)
	.LONG	POOLTITLE		; title string
	.BLKL	3			; no. items, display elts, item str addr
	.BLKW	1			; block length (calc at run time)
	.LONG	POOL_PRE		; pre-collection routine
	.LONG	0			; post-collection routine
	.BLKL	2			; collection buffer block string descriptor
	.LONG	0			; address of CDX (0 if heterogeneous)
	.WORD	0			; display control bit string 
	.LONG	0,100000		; expected min and max values
	.BLKB	2			; lengths of FAO segments (for homogs)
	.BLKB	1			; active statistic
	.BYTE	ALL_STAT		; default statistic
	.BLKB	1			; current statistic
	.BLKW	1			; active qualifier flags
	.WORD	0			; default qualifier flags
	.BLKW	1			; current qualifier flags
	.LONG	CDB$M_STD+CDB$M_KUNITS	; flags
	.LONG	POOL_CHD		; addr of change descriptors
;
; CDB for LOCK (Lock Management statistics) class
;

	.LONG	0,0			; FAO control string descr (addr MBZ)
	.LONG	0,0			; m.f. summ buff str descr (addr MBZ)
	.LONG	LOCKTITLE		; title string
	.BLKL	3			; no. items, display elts, item str addr
	.BLKW	1			; block length (calc at run time)
	.LONG	LOCK_PRE		; pre-collection routine
	.LONG	0			; post-collection routine
	.BLKL	2			; collection buffer block string descriptor
	.LONG	0			; address of CDX (0 if heterogeneous)
	.WORD	0			; display control bit string 
	.LONG	0,20			; expected min and max values
	.BLKB	2			; lengths of FAO segments (for homogs)
	.BLKB	1			; active statistic
	.BYTE	ALL_STAT		; default statistic
	.BLKB	1			; current statistic
	.BLKW	1			; active qualifier flags
	.WORD	0			; default qualifier flags
	.BLKW	1			; current qualifier flags
	.LONG	CDB$M_CTPRES+CDB$M_STD	; flags
	.LONG	LOCK_CHD		; addr of change descriptors

;
; CDB for DECnet class
;

	.LONG	0,0			; FAO control string descr (addr MBZ)
	.LONG	0,0			; m.f. summ buff str descr (addr MBZ)
	.LONG	DECNETTITLE		; title string
	.BLKL	3			; no. items, display elts, item str addr
	.BLKW	1			; block length (calc at run time)
	.LONG	DECNET_PRE		; pre-collection routine
	.LONG	0			; post-collection routine
	.BLKL	2			; collection buffer block string descriptor
	.LONG	0			; address of CDX (0 if heterogeneous)
	.WORD	0			; display control bit string 
	.LONG	0,20			; expected min and max values
	.BLKB	2			; lengths of FAO segments (for homogs)
	.BLKB	1			; active statistic
	.BYTE	ALL_STAT		; default statistic
	.BLKB	1			; current statistic
	.BLKW	1			; active qualifier flags
	.WORD	0			; default qualifier flags
	.BLKW	1			; current qualifier flags
	.LONG	CDB$M_CTPRES+CDB$M_STD	; flags
	.LONG	DECNET_CHD		; addr of change descriptors

;
; CDB for Journaling class
;

	.LONG	0,0			; FAO control string descr (addr MBZ)
	.LONG	0,0			; m.f. summ buff str descr (addr MBZ)
	.LONG	JOURNALTITLE		; title string
	.BLKL	3			; no. items, display elts, item str addr
	.BLKW	1			; block length (calc at run time)
	.LONG	0			; pre-collection routine
	.LONG	0			; post-collection routine
	.BLKL	2			; collection buffer block string descriptor
	.LONG	0			; address of CDX (0 if heterogeneous)
	.WORD	0			; display control bit string 
	.LONG	0,100			; expected min and max values
	.BLKB	2			; lengths of FAO segments (for homogs)
	.BLKB	1			; active statistic
	.BYTE	ALL_STAT		; default statistic
	.BLKB	1			; current statistic
	.BLKW	1			; active qualifier flags
	.WORD	0			; default qualifier flags
	.BLKW	1			; current qualifier flags
	.LONG	CDB$M_CTPRES+CDB$M_STD+CDB$M_DISABLE	; flags
	.LONG	JOURNAL_CHD		; addr of change descriptors

;
; CDB for RU class (Recovery Units Facility)
;

	.LONG	0,0			; FAO control string descr (addr MBZ)
	.LONG	0,0			; m.f. summ buff str descr (addr MBZ)
	.LONG	RECOVERYTITLE		; title string
	.BLKL	3			; no. items, display elts, item str addr
	.BLKW	1			; block length (calc at run time)
	.LONG	0			; pre-collection routine
	.LONG	0			; post-collection routine
	.BLKL	2			; collection buffer block string descriptor
	.LONG	0			; address of CDX (0 if heterogeneous)
	.WORD	0			; display control bit string 
	.LONG	0,20			; expected min and max values
	.BLKB	2			; lengths of FAO segments (for homogs)
	.BLKB	1			; active statistic
	.BYTE	ALL_STAT		; default statistic
	.BLKB	1			; current statistic
	.BLKW	1			; active qualifier flags
	.WORD	0			; default qualifier flags
	.BLKW	1			; current qualifier flags
	.LONG	CDB$M_CTPRES+CDB$M_STD+CDB$M_DISABLE	; flags
	.LONG	RU_CHD			; addr of change descriptors

;
; CDB for FILE_SYSTEM_CACHE class
;

	.LONG	0,0			; FAO control string descr (addr MBZ)
	.LONG	0,0			; m.f. summ buff str descr (addr MBZ)
	.LONG	FSCACHETITLE		; title string
	.BLKL	3			; no. items, display elts, item str addr
	.BLKW	1			; block length (calc at run time)
	.LONG	FSCACHE_PRE		; pre-collection routine
	.LONG	0			; post-collection routine
	.BLKL	2			; collection buffer block string descriptor
	.LONG	0			; address of CDX (0 if heterogeneous)
	.WORD	0			; display control bit string 
	.LONG	0,20			; expected min and max values
	.BLKB	2			; lengths of FAO segments (for homogs)
	.BLKB	1			; active statistic
	.BYTE	ALL_STAT		; default statistic
	.BLKB	1			; current statistic
	.BLKW	1			; active qualifier flags
	.WORD	0			; default qualifier flags
	.BLKW	1			; current qualifier flags
	.LONG	CDB$M_CTPRES+CDB$M_STD	; flags
	.LONG	FSCACHE_CHD		; addr of change descriptors

;
; CDB for DISK class
;

	.LONG	0,0			; FAO control string descr (addr MBZ)
	.LONG	0,0			; m.f. summ buff str descr (addr MBZ)
	.LONG	DISKTITLE		; title string
	.BLKL	3			; no. items, display elts, item str addr
	.BLKW	1			; block length (calc at run time)
	.LONG	DISK_PRE		; pre-collection routine
	.LONG	0			; post-collection routine
	.BLKL	2			; collection buffer block string descriptor
	.LONG	DISK_CDX		; address of CDX (0 if heterogeneous)
	.WORD	0			; display control bit string 
	.LONG	0,20			; expected min and max values
	.BLKB	2			; lengths of FAO segments (for homogs)
	.BLKB	1			; active statistic
	.BYTE	ALL_STAT		; default statistic
	.BLKB	1			; current statistic
	.BLKW	1			; active qualifier flags
	.WORD	0			; default qualifier flags
	.BLKW	1			; current qualifier flags
	.LONG	CDB$M_CTPRES+CDB$M_UNIFORM+CDB$M_HOMOG+CDB$M_STD
					; flags
	.LONG	DISK_CHD		; addr of change descriptors

;
; CDB for JDEVICE class
;

	.LONG	0,0			; FAO control string descr (addr MBZ)
	.LONG	0,0			; m.f. summ buff str descr (addr MBZ)
	.LONG	JDEVICETITLE		; title string
	.BLKL	3			; no. items, display elts, item str addr
	.BLKW	1			; block length (calc at run time)
	.LONG	JDEVICE_PRE		; pre-collection routine
	.LONG	0			; post-collection routine
	.BLKL	2			; collection buffer block string descriptor
	.LONG	JDEVICE_CDX		; address of CDX (0 if heterogeneous)
	.WORD	0			; display control bit string 
	.LONG	0,20			; expected min and max values
	.BLKB	2			; lengths of FAO segments (for homogs)
	.BLKB	1			; active statistic
	.BYTE	ALL_STAT		; default statistic
	.BLKB	1			; current statistic
	.BLKW	1			; active qualifier flags
	.WORD	0			; default qualifier flags
	.BLKW	1			; current qualifier flags
	.LONG	CDB$M_CTPRES+CDB$M_UNIFORM+CDB$M_HOMOG+CDB$M_STD+CDB$M_DISABLE
					; flags
	.LONG	JDEVICE_CHD		; addr of change descriptors

;
; CDB for DLOCK class (Distributed Lock Management class)
;

	.LONG	0,0			; FAO control string descr (addr MBZ)
	.LONG	0,0			; m.f. summ buff str descr (addr MBZ)
	.LONG	DLOCKTITLE		; title string
	.BLKL	3			; no. items, display elts, item str addr
	.BLKW	1			; block length (calc at run time)
	.LONG	DLOCK_PRE		; pre-collection routine
	.LONG	0			; post-collection routine
	.BLKL	2			; collection buffer block string descriptor
	.LONG	0			; address of CDX (0 if heterogeneous)
	.WORD	0			; display control bit string 
	.LONG	0,20			; expected min and max values
	.BLKB	2			; lengths of FAO segments (for homogs)
	.BLKB	1			; active statistic
	.BYTE	ALL_STAT		; default statistic
	.BLKB	1			; current statistic
	.BLKW	1			; active qualifier flags
	.WORD	0			; default qualifier flags
	.BLKW	1			; current qualifier flags
	.LONG	CDB$M_CTPRES+CDB$M_STD	; flags
	.LONG	DLOCK_CHD		; addr of change descriptors


;
; CDB for SCS class
;

	.LONG	0,0			; FAO control string descr (addr MBZ)
	.LONG	0,0			; m.f. summ buff str descr (addr MBZ)
	.LONG	SCSTITLE		; title string
	.BLKL	3			; no. items, display elts, item str addr
	.BLKW	1			; block length (calc at run time)
	.LONG	SCS_PRE			; pre-collection routine
	.LONG	0			; post-collection routine
	.BLKL	2			; collection buffer block string descriptor
	.LONG	SCS_CDX			; address of CDX (0 if heterogeneous)
	.WORD	0			; display control bit string 
	.LONG	0,20			; expected min and max values
	.BLKB	2			; lengths of FAO segments (for homogs)
	.BLKB	1			; active statistic
	.BYTE	ALL_STAT		; default statistic
	.BLKB	1			; current statistic
	.BLKW	1			; active qualifier flags
	.WORD	0			; default qualifier flags
	.BLKW	1			; current qualifier flags
	.LONG	CDB$M_CTPRES+CDB$M_UNIFORM+CDB$M_HOMOG+CDB$M_STD
					; flags
	.LONG	SCS_CHD			; addr of change descriptors

;
; CDB for VMS1 class (Internal-use-only class for VMS dev. purposes)
;

	.LONG	0,0			; FAO control string descr (addr MBZ)
	.LONG	0,0			; m.f. summ buff str descr (addr MBZ)
	.LONG	VMS1TITLE		; title string
	.BLKL	3			; no. items, display elts, item str addr
	.BLKW	1			; block length (calc at run time)
	.LONG	FCP_PRE			; pre-collection routine
	.LONG	0			; post-collection routine
	.BLKL	2			; collection buffer block string descriptor
	.LONG	0			; address of CDX (0 if heterogeneous)
	.WORD	0			; display control bit string 
	.LONG	0,20			; expected min and max values
	.BLKB	2			; lengths of FAO segments (for homogs)
	.BLKB	1			; active statistic
	.BYTE	ALL_STAT		; default statistic
	.BLKB	1			; current statistic
	.BLKW	1			; active qualifier flags
	.WORD	0			; default qualifier flags
	.BLKW	1			; current qualifier flags
	.LONG	CDB$M_CTPRES+CDB$M_STD+CDB$M_DISABLE	; flags
	.LONG	VMS1_CHD		; addr of change descriptors

;
; CDB for SYSTEM class
;

	.LONG	0,0			; FAO control string descr (addr MBZ)
	.LONG	0,0			; m.f. summ buff str descr (addr MBZ)
	.LONG	SYSTEMTITLE		; title string
	.BLKL	3			; no. items, display elts, item str addr
	.BLKW	1			; block length (calc at run time)
	.LONG	0			; pre-collection routine
	.LONG	0			; post-collection routine
	.BLKL	2			; collection buffer block string descriptor
	.LONG	0			; address of CDX (0 if heterogeneous)
	.WORD	0			; display control bit string 
	.LONG	0,100			; expected min and max values
	.BLKB	2			; lengths of FAO segments (for homogs)
	.BLKB	1			; active statistic
	.BYTE	CUR_STAT		; default statistic
	.BLKB	1			; current statistic
	.BLKW	1			; active qualifier flags
	.WORD	0			; default qualifier flags
	.BLKW	1			; current qualifier flags
	.LONG	CDB$M_CTPRES+CDB$M_STD+CDB$M_SYSCLS ; flags
	.LONG	SYSTEM_CHD		; addr of change descriptors

;
; Insert new CDBs here
; The ALL class pseudo-class CDB must always be the last CDB
;

;
; CDB for ALL pseudo-class.
; (This CDB is needed for the purposes of the GET_CLASS_QUALS
; routine in MONMAIN)
;

	.LONG	0,0			; FAO control string descr (addr MBZ)
	.BLKL	2			; multi-file summary buffer string descr
	.LONG	0			; title string (none)
	.BLKL	3			; no. items, display elts, item str addr
	.BLKW	1			; block length (calc at run time)
	.LONG	0			; pre-collection routine
	.LONG	0			; post-collection routine
	.BLKL	2			; collection buffer block string descriptor
	.LONG	0			; address of CDX (0 if heterogeneous)
	.WORD	0			; display control bit string 
	.LONG	0,0			; expected min and max values
	.BLKB	2			; lengths of FAO segments (for homogs)
	.BLKB	1			; active statistic
	.BYTE	ALL_STAT		; default statistic
	.BLKB	1			; current statistic
	.BLKW	1			; active qualifier flags
	.WORD	0			; default qualifier flags
	.BLKW	1			; current qualifier flags
	.LONG	CDB$M_CTPRES+CDB$M_STD	; flags
	.LONG	0			; addr of change descriptors

;
; End of CDB Table
;

;
; CDX's (CDB Extension Blocks) for homogeneous classes
;

;
; CDX for DISK homogeneous class
;

DISK_CDX:

	.BLKW	1			; Active item bits
	.WORD	^X0001			; Default item bits
	.BLKW	1			; Current item bits
	.BLKB	1			; Count of items to display
	.BLKB	2			; Consec no. & index of curr disp item
	.BLKB	1			; Element ID length
	.BLKW	1			; Cumulative element count
	.BLKL	2			; Element ID Table and SCB Table addrs
	.LONG	0,0			; Super Elm'nt ID Table descr (addr MBZ)
	.BLKL	2			; Cnt of elts to display (curr & prev)
	.LONG	DISK_LTAB		; Address of item key lookup table
	.LONG	DISK_DISPNAM		; Address of device name display rtn
	.LONG	0			; Address of device name FAO ctrl string
					; (Loaded at run time)

;
; CDX for JDEVICE homogeneous class
;

JDEVICE_CDX:

	.BLKW	1			; Active item bits
	.WORD	^X0001			; Default item bits
	.BLKW	1			; Current item bits
	.BLKB	1			; Count of items to display
	.BLKB	2			; Consec no. & index of curr disp item
	.BLKB	1			; Element ID length
	.BLKW	1			; Cumulative element count
	.BLKL	2			; Element ID Table and SCB Table addrs
	.LONG	0,0			; Super Elm'nt ID Table descr (addr MBZ)
	.BLKL	2			; Cnt of elts to display (curr & prev)
	.LONG	JDEVICE_LTAB		; Address of item key lookup table
	.LONG	DISK_DISPNAM		; Address of device name display rtn
	.LONG	0			; Address of device name FAO ctrl string
					; (Loaded at run time)


;
; CDX for SCS homogeneous class
;

SCS_CDX:

	.BLKW	1			; Active item bits
	.WORD	^X0200			; Default item bits
	.BLKW	1			; Current item bits
	.BLKB	1			; Count of items to display
	.BLKB	2			; Consec no. & index of curr disp item
	.BLKB	1			; Element ID length (Revision Level 0)
	.BLKW	1			; Cumulative element count
	.BLKL	2			; Element ID Table and SCB Table addrs
	.LONG	0,0			; Super Elm'nt ID Table descr (addr MBZ)
	.BLKL	2			; Cnt of elts to display (curr & prev)
	.LONG	SCS_LTAB		; Address of item key lookup table
	.LONG	SCS_DISPNAM		; Address of device name display rtn
	.LONG	SCS_FAO			; Address of device name FAO ctrl string

;
; Item keyword lookup tables for homogeneous classes
;

ALL_KEYWORD:
	.ascic	\ALL\			; ALL keyword -- used by all classes

;
; DISK Class item keyword lookup table
;

DISK_LTAB:
	
	.long	8
	.long	ALL_KEYWORD
	.long	15			; ALL_KEYWORD must be 15
	.long	10$
	.long	0
	.long	20$
	.long	1
	.long	30$
	.long	2

10$:	.ascic	\OPERATION_RATE\
20$:	.ascic	\QUEUE_LENGTH\
30$:	.ascic	\JOURNAL_OP_RATE\

;
; JDEVICE Class item keyword lookup table
;

JDEVICE_LTAB:
	
	.long	14
	.long	ALL_KEYWORD
	.long	15			; ALL_KEYWORD must be 15
	.long	10$
	.long	0
	.long	20$
	.long	1
	.long	30$
	.long	2
	.long	40$
	.long	3
	.long	50$
	.long	4
	.long	60$
	.long	5

10$:	.ascic	\WRITE_RATE\
20$:	.ascic	\BUFF_WRITE_RATE\
30$:	.ascic	\NORMAL_QUEUE\
40$:	.ascic	\WAIT_QUEUE\
50$:	.ascic	\FORCE_QUEUE\
60$:	.ascic	\EXTEND_RATE\


;
; SCS Class item keyword lookup table
;

SCS_LTAB:
	
	.long	26
	.long	ALL_KEYWORD
	.long	15			; ALL_KEYWORD must be 15
	.long	10$
	.long	0
	.long	20$
	.long	1
	.long	30$
	.long	2
	.long	40$
	.long	3
	.long	50$
	.long	4
	.long	60$
	.long	5
	.long	70$
	.long	6
	.long	80$
	.long	7
	.long	90$
	.long	8
	.long	100$
	.long	9
	.long	110$
	.long	10
	.long	120$
	.long	11

10$:	.ascic	\D_SEND\
20$:	.ascic	\D_RECEIVE\
30$:	.ascic	\D_DISCARD\
40$:	.ascic	\M_SEND\
50$:	.ascic	\M_RECEIVE\
60$:	.ascic	\SEND_DATA\
70$:	.ascic	\KB_SEND\
80$:	.ascic	\REQUEST_DATA\
90$:	.ascic	\KB_REQUEST\
100$:	.ascic	\KB_MAP\
110$:	.ascic	\SEND_CREDIT\
120$:	.ascic	\BUFFER_DESCRIPTOR\



;
; Title strings and item identifier strings
;

MODETITLE::
	CSTRING	<TIME IN PROCESSOR MODES>
MODESTR::
	.BYTE	PMS$C_PINTERRUPT
	.BYTE	PMS$C_PKERNEL
	.BYTE	PMS$C_PEXEC
	.BYTE	PMS$C_PSUPER
	.BYTE	PMS$C_PUSER
	.BYTE	PMS$C_PCOMPAT
	.BYTE	PMS$C_PIDLE
	.BYTE	PMS$C_SINTERRUPT
	.BYTE	PMS$C_SKERNEL
	.BYTE	PMS$C_SEXEC
	.BYTE	PMS$C_SSUPER
	.BYTE	PMS$C_SUSER
	.BYTE	PMS$C_SCOMPAT
	.BYTE	PMS$C_SIDLE

PROCTITLE::
	.LONG	REGTITLE
	.LONG	TOPCTITLE
	.LONG	TOPDTITLE
	.LONG	TOPBTITLE
	.LONG	TOPFTITLE

REGTITLE:	CSTRING <PROCESSES>
TOPCTITLE:	CSTRING <TOP CPU TIME PROCESSES>
TOPDTITLE:	CSTRING <TOP DIRECT I/O RATE PROCESSES>
TOPBTITLE:	CSTRING <TOP BUFFERED I/O RATE PROCESSES>
TOPFTITLE:	CSTRING <TOP PAGE FAULT RATE PROCESSES>

FCPTITLE:
	CSTRING <FILE PRIMITIVE STATISTICS>
FCPSTR:
	.BYTE	PMS$C_FCPCALLS
	.BYTE	PMS$C_ALLOC
	.BYTE	PMS$C_FCPCREATE
	.BYTE	PMS$C_FCPREAD
	.BYTE	PMS$C_FCPWRITE
	.BYTE	PMS$C_FCPCACHE
	.BYTE	PMS$C_FCPCPU
	.BYTE	PMS$C_FCPTURN
	.BYTE	PMS$C_ACCESS
	.BYTE	PMS$C_OPENS
	.BYTE	PMS$C_FCPFAULT
	.BYTE	PMS$C_FCPERASE

FCPSTR1:
	.BYTE	PMS$C_FCPCALLS
	.BYTE	PMS$C_ALLOC
	.BYTE	PMS$C_FCPCREATE
	.BYTE	PMS$C_FCPREAD
	.BYTE	PMS$C_FCPWRITE
	.BYTE	PMS$C_VOLWAIT
	.BYTE	PMS$C_FCPCPU
	.BYTE	PMS$C_FCPTURN
	.BYTE	PMS$C_ACCESS
	.BYTE	PMS$C_OPENS
	.BYTE	PMS$C_FCPFAULT
	.BYTE	PMS$C_FCPERASE
FCPSTR2:
	.BYTE	PMS$C_FCPCALLS
	.BYTE	PMS$C_ALLOC
	.BYTE	PMS$C_FCPCREATE
	.BYTE	PMS$C_FCPREAD
	.BYTE	PMS$C_FCPWRITE
	.BYTE	PMS$C_VOLWAIT
	.BYTE	PMS$C_FCPCPU
	.BYTE	PMS$C_FCPFAULT
	.BYTE	PMS$C_FCPTURN
	.BYTE	PMS$C_ACCESS
	.BYTE	PMS$C_OPENS
	.BYTE	PMS$C_FCPERASE

PAGESTR:
	.BYTE	PMS$C_FAULTS		
	.BYTE	PMS$C_PREADS
	.BYTE	PMS$C_PREADIO
	.BYTE	PMS$C_PWRITES
	.BYTE	PMS$C_PWRITIO
	.BYTE	PMS$C_FREFLTS
	.BYTE	PMS$C_MFYFLTS
	.BYTE	PMS$C_DZROFLTS
	.BYTE	PMS$C_GVALFLTS
	.BYTE	PMS$C_WRTINPROG
	.BYTE	PMS$C_SYSFAULTS
	.BYTE	PMS$C_FRLIST		
	.BYTE	PMS$C_MODLIST
PAGETITLE:
	CSTRING	<PAGE MANAGEMENT STATISTICS>

POOLSTR:
	.BYTE	PMS$C_SRPCNT		
	.BYTE	PMS$C_IRPCNT		
	.BYTE	PMS$C_LRPCNT
	.BYTE	PMS$C_HOLESUM
	.BYTE	PMS$C_HOLECNT
	.BYTE	PMS$C_BIGHOLE
	.BYTE	PMS$C_SMALLHOLE
	.BYTE	PMS$C_SMALLCNT

POOLSTR1:
	.BYTE	PMS$C_SRPCNT		
	.BYTE	PMS$C_SRPINUSE
	.BYTE	PMS$C_IRPCNT		
	.BYTE	PMS$C_IRPINUSE
	.BYTE	PMS$C_LRPCNT
	.BYTE	PMS$C_LRPINUSE
	.BYTE	PMS$C_HOLESUM
	.BYTE	PMS$C_DYNINUSE
	.BYTE	PMS$C_HOLECNT
	.BYTE	PMS$C_BIGHOLE
	.BYTE	PMS$C_SMALLHOLE
	.BYTE	PMS$C_SMALLCNT

POOLTITLE:
	CSTRING	<NONPAGED POOL STATISTICS>

LOCKSTR:
	.BYTE	PMS$C_ENQNEW
	.BYTE	PMS$C_ENQCVT
	.BYTE	PMS$C_DEQ
	.BYTE	PMS$C_ENQWAIT
	.BYTE	PMS$C_ENQNOTQD
	.BYTE	PMS$C_DLCKSRCH
	.BYTE	PMS$C_DLCKFND
	.BYTE	PMS$C_NUMLOCKS
	.BYTE	PMS$C_NUMRES

LOCKSTR1:
	.BYTE	PMS$C_ENQNEW
	.BYTE	PMS$C_ENQCVT
	.BYTE	PMS$C_DEQ
	.BYTE	PMS$C_BLKAST
	.BYTE	PMS$C_ENQWAIT
	.BYTE	PMS$C_ENQNOTQD
	.BYTE	PMS$C_DLCKSRCH
	.BYTE	PMS$C_DLCKFND
	.BYTE	PMS$C_NUMLOCKS
	.BYTE	PMS$C_NUMRES

LOCKTITLE:
	CSTRING	<LOCK MANAGEMENT STATISTICS>

DECNETSTR:
	.BYTE	PMS$C_ARRLOCPK
	.BYTE	PMS$C_DEPLOCPK
	.BYTE	PMS$C_ARRTRAPK
	.BYTE	PMS$C_TRCNGLOS
	.BYTE	PMS$C_RCVBUFFL
	.BYTE	PMS$C_LRPCNT
DECNETTITLE:
	CSTRING	<DECNET STATISTICS>

STATETITLE:
	CSTRING	<PROCESS STATES>
STATESTR:
	.BYTE	PMS$C_COLPG		
	.BYTE	PMS$C_MWAIT
	.BYTE	PMS$C_CEF
	.BYTE	PMS$C_PFW
	.BYTE	PMS$C_LEF
	.BYTE	PMS$C_LEFO
	.BYTE	PMS$C_HIB
	.BYTE	PMS$C_HIBO
	.BYTE	PMS$C_SUSP
	.BYTE	PMS$C_SUSPO
	.BYTE	PMS$C_FPG
	.BYTE	PMS$C_COM
	.BYTE	PMS$C_COMO
	.BYTE	PMS$C_CUR

IORATETITLE:
	CSTRING	<I/O SYSTEM STATISTICS>

IORATESTR:
	.BYTE	PMS$C_DIRIO
	.BYTE	PMS$C_BUFIO
	.BYTE	PMS$C_MBWRITES
	.BYTE	PMS$C_FCPTURN
	.BYTE	PMS$C_LOGNAM
	.BYTE	PMS$C_OPENS
	.BYTE	PMS$C_FAULTS
	.BYTE	PMS$C_PREADS
	.BYTE	PMS$C_PREADIO
	.BYTE	PMS$C_PWRITES
	.BYTE	PMS$C_PWRITIO
	.BYTE	PMS$C_ISWPCNT
	.BYTE	PMS$C_FRLIST		
	.BYTE	PMS$C_MODLIST

JOURNALTITLE:
	CSTRING	<JOURNALING FACILITY STATISTICS>

JOURNALSTR:
	.BYTE	PMS$C_JNLJRNLS
	.BYTE	PMS$C_JNLCHNLS
	.BYTE	PMS$C_JNLWRTAI
	.BYTE	PMS$C_JNLWRTBI
	.BYTE	PMS$C_JNLWRTAT
	.BYTE	PMS$C_JNLWRTRU
	.BYTE	PMS$C_JNLDIRIO
	.BYTE	PMS$C_JNLBUFIO
	.BYTE	PMS$C_JNLWRTSS
	.BYTE	PMS$C_JNLFORNL
	.BYTE	PMS$C_JNLFORFL
        .BYTE	PMS$C_JNLBUFWR
        .BYTE	PMS$C_JNLWRTFM

JOURNALSTR1:
	.BYTE	PMS$C_JNLJRNLS
	.BYTE	PMS$C_JNLCHNLS
	.BYTE	PMS$C_JNLWRTSS
        .BYTE	PMS$C_JNLBUFWR
	.BYTE	PMS$C_JNLWRTAI
	.BYTE	PMS$C_JNLWRTBI
	.BYTE	PMS$C_JNLWRTAT
	.BYTE	PMS$C_JNLWRTRU
	.BYTE	PMS$C_JNLDIRIO
	.BYTE	PMS$C_JNLBUFIO
	.BYTE	PMS$C_JNLFORFL
	.BYTE	PMS$C_JNLFORNL
        .BYTE	PMS$C_JNLWRTFM

RECOVERYTITLE:
	CSTRING	<RECOVERY UNIT FACILITY STATISTICS>

RECOVERYSTR:
	.BYTE	PMS$C_RUFACTIV
	.BYTE	PMS$C_RUFJNLS
	.BYTE	PMS$C_RUFCHNLS
	.BYTE	PMS$C_RUFWRTS
	.BYTE	PMS$C_RUFREADS
	.BYTE	PMS$C_RUFXTNDS
	.BYTE	PMS$C_RUFMARK
	.BYTE	PMS$C_RUFMRKRB
	.BYTE	PMS$C_RUFABORT

FSCACHETITLE:
	CSTRING	<FILE SYSTEM CACHING STATISTICS>

FSCACHESTR:
	.BYTE	PMS$C_FIDHIT
	.BYTE	PMS$C_FIDMISS
	.BYTE	PMS$C_DIRFCB_HIT
	.BYTE	PMS$C_DIRFCB_MISS
	.BYTE	PMS$C_EXTHIT
	.BYTE	PMS$C_EXTMISS
	.BYTE	PMS$C_QUOHIT
	.BYTE	PMS$C_QUOMISS

FSCACHESTR1:
	.BYTE	PMS$C_DIRFCB_HITPCNT
	.BYTE	PMS$C_DIRFCB_HIT
	.BYTE	PMS$C_DIRFCB_TRIES
	.BYTE	PMS$C_DIRDATA_HITPCNT
	.BYTE	PMS$C_DIRDATA_HIT
	.BYTE	PMS$C_DIRDATA_TRIES
	.BYTE	PMS$C_FILHDR_HITPCNT
	.BYTE	PMS$C_FILHDR_HIT
	.BYTE	PMS$C_FILHDR_TRIES
	.BYTE	PMS$C_FIDHITPCNT
	.BYTE	PMS$C_FIDHIT
	.BYTE	PMS$C_FID_TRIES
	.BYTE	PMS$C_EXTHITPCNT
	.BYTE	PMS$C_EXTHIT
	.BYTE	PMS$C_EXT_TRIES
	.BYTE	PMS$C_QUOHITPCNT
	.BYTE	PMS$C_QUOHIT
	.BYTE	PMS$C_QUO_TRIES
	.BYTE	PMS$C_STORAGMAP_HITPCNT
	.BYTE	PMS$C_STORAGMAP_HIT
	.BYTE	PMS$C_STORAGMAP_TRIES

DISKTITLE:
	CSTRING	<DISK I/O STATISTICS>

DISKSTR:
	.BYTE	PMS$C_OPCNT
	.BYTE	PMS$C_IOQUELEN
	.BYTE	PMS$C_JNLIOCNT

JDEVICETITLE:
	CSTRING	<JOURNAL DEVICE I/O STATISTICS>

JDEVICESTR:
	.BYTE	PMS$C_JNLWRTSS
	.BYTE	PMS$C_JNLBUFWR
	.BYTE	PMS$C_JDNQLEN
	.BYTE	PMS$C_JDWQLEN
	.BYTE	PMS$C_JDFQLEN
	.BYTE	PMS$C_JDEXCNT

DLOCKTITLE:
	CSTRING	<DISTRIBUTED LOCK MANAGEMENT STATISTICS>

DLOCKSTR:
	.BYTE	PMS$C_ENQNEWLOC
	.BYTE	PMS$C_ENQNEWIN
	.BYTE	PMS$C_ENQNEWOUT
	.BYTE	PMS$C_ENQCVTLOC
	.BYTE	PMS$C_ENQCVTIN
	.BYTE	PMS$C_ENQCVTOUT
	.BYTE	PMS$C_DEQLOC
	.BYTE	PMS$C_DEQIN
	.BYTE	PMS$C_DEQOUT
	.BYTE	PMS$C_BLKLOC
	.BYTE	PMS$C_BLKIN
	.BYTE	PMS$C_BLKOUT
	.BYTE	PMS$C_DIRLOOK
	.BYTE	PMS$C_DIRINS
	.BYTE	PMS$C_DIRDEL

DLOCKSTR1:
	.BYTE	PMS$C_ENQNEWLOC
	.BYTE	PMS$C_ENQNEWIN
	.BYTE	PMS$C_ENQNEWOUT
	.BYTE	PMS$C_ENQCVTLOC
	.BYTE	PMS$C_ENQCVTIN
	.BYTE	PMS$C_ENQCVTOUT
	.BYTE	PMS$C_DEQLOC
	.BYTE	PMS$C_DEQIN
	.BYTE	PMS$C_DEQOUT
	.BYTE	PMS$C_BLKLOC
	.BYTE	PMS$C_BLKIN
	.BYTE	PMS$C_BLKOUT
	.BYTE	PMS$C_DIRIN
	.BYTE	PMS$C_DIROUT

DLOCKSTR2:
	.BYTE	PMS$C_ENQNEWLOC
	.BYTE	PMS$C_ENQNEWIN
	.BYTE	PMS$C_ENQNEWOUT
	.BYTE	PMS$C_ENQCVTLOC
	.BYTE	PMS$C_ENQCVTIN
	.BYTE	PMS$C_ENQCVTOUT
	.BYTE	PMS$C_DEQLOC
	.BYTE	PMS$C_DEQIN
	.BYTE	PMS$C_DEQOUT
	.BYTE	PMS$C_BLKLOC
	.BYTE	PMS$C_BLKIN
	.BYTE	PMS$C_BLKOUT
	.BYTE	PMS$C_DIRIN
	.BYTE	PMS$C_DIROUT
	.BYTE	PMS$C_DLCKMSGS

SCSTITLE:
	CSTRING <SCS STATISTICS>

SCSSTR:
	.BYTE	PMS$C_DGSENT
	.BYTE	PMS$C_DGRCVD
	.BYTE	PMS$C_DGDISCARD
	.BYTE	PMS$C_MSGSENT
	.BYTE	PMS$C_MSGRCVD
	.BYTE	PMS$C_SNDATS
	.BYTE	PMS$C_KBYTSENT
	.BYTE	PMS$C_REQDATS
	.BYTE	PMS$C_KBYTREQD
	.BYTE	PMS$C_KBYTMAPD
	.BYTE	PMS$C_QCR_CNT
	.BYTE	PMS$C_QBDT_CNT

VMS1TITLE:
	CSTRING <VMS DEVELOPMENT 1>

VMS1STR:
	.BYTE	PMS$C_FCPCALLS
	.BYTE	PMS$C_VOLLCK
	.BYTE	PMS$C_VOLWAIT
	.BYTE	PMS$C_SYNCHLCK
	.BYTE	PMS$C_SYNCHWAIT
	.BYTE	PMS$C_ACCLCK
	.BYTE	PMS$C_XQPCACHEWAIT

SYSTEMTITLE:
	CSTRING	<SYSTEM STATISTICS>

SYSTEMSTR:				; This item string for collection only
	.BYTE	PMS$C_CPUBUSY
	.BYTE	PMS$C_OTHSTAT
	.BYTE	PMS$C_PROCS
	.BYTE	PMS$C_FAULTS
	.BYTE	PMS$C_PREADIO
	.BYTE	PMS$C_FRLIST
	.BYTE	PMS$C_MODLIST
	.BYTE	PMS$C_DIRIO
	.BYTE	PMS$C_BUFIO

ITMSTR_SYS_SINGLE::			; This item string for display only
	.BYTE	PMS$C_CPUBUSY
	.BYTE	PMS$C_LEF
	.BYTE	PMS$C_LEFO
	.BYTE	PMS$C_HIB
	.BYTE	PMS$C_HIBO
	.BYTE	PMS$C_COM
	.BYTE	PMS$C_COMO
	.BYTE	PMS$C_PFW
	.BYTE	PMS$C_MWAIT
	.BYTE	PMS$C_OTHSTAT
	.BYTE	PMS$C_PROCS
	.BYTE	PMS$C_FAULTS
	.BYTE	PMS$C_PREADIO
	.BYTE	PMS$C_FRLIST	; NOTE -- FRLIST and MODLIST are referenced
	.BYTE	PMS$C_MODLIST	; as the 14th and 15th items explicitly in
				; COLLEVT.PLI and REQUEST.PLI.
	.BYTE	PMS$C_DIRIO
	.BYTE	PMS$C_BUFIO
ISS_END:

ECOUNT_SYS_SINGLE == ISS_END - ITMSTR_SYS_SINGLE
				; Number of elts for single statistic display


BU_SYS_SINGLE::			; Vector of lwords representing highest bar graph
				; values for each item in a single SYSTEM display
	.LONG	100
	.LONG	0,0,0,0,0,0,0,0,0,0 ; No bars for these
	.LONG	100
	.LONG	100
	.LONG	BALSETMEM_DEF
	.LONG	MPWHILIM_DEF
	.LONG	60
	.LONG	150

;
; Codes for the FMT_SYS_SINGLE array below
;

NUMB_BAR  == 0
NUMB_ONLY == 1

FMT_SYS_SINGLE::		; Vector of bytes representing format codes for
				; each item in a single SYSTEM display.
	.BYTE	NUMB_BAR
	.BYTE	NUMB_ONLY
	.BYTE	NUMB_ONLY
	.BYTE	NUMB_ONLY
	.BYTE	NUMB_ONLY
	.BYTE	NUMB_ONLY
	.BYTE	NUMB_ONLY
	.BYTE	NUMB_ONLY
	.BYTE	NUMB_ONLY
	.BYTE	NUMB_ONLY
	.BYTE	NUMB_ONLY
	.BYTE	NUMB_BAR
	.BYTE	NUMB_BAR
	.BYTE	NUMB_BAR
	.BYTE	NUMB_BAR
	.BYTE	NUMB_BAR
	.BYTE	NUMB_BAR

ITMSTR_SYS_ALL::			; This item string for display only
	.BYTE	PMS$C_PINTERRUPT
	.BYTE	PMS$C_PKERNEL
	.BYTE	PMS$C_PEXEC
	.BYTE	PMS$C_PSUPER
	.BYTE	PMS$C_PUSER
	.BYTE	PMS$C_PCOMPAT
	.BYTE	PMS$C_PIDLE
	.BYTE	PMS$C_PROCS
	.BYTE	PMS$C_FAULTS
	.BYTE	PMS$C_PREADIO
	.BYTE	PMS$C_FRLIST
	.BYTE	PMS$C_MODLIST
	.BYTE	PMS$C_DIRIO
	.BYTE	PMS$C_BUFIO
ISA_END:

ECOUNT_SYS_ALL == ISA_END - ITMSTR_SYS_ALL ; Number of elements for /ALL display


;
; Change Descriptors for all classes
;

$$CHD_COUNT = 0				; Initialize CHD count for first class
$$CHD_PRES  = 0				; Initialize CHD's actually present

;
; Change Descriptors for all classes must be placed contiguously here.
; The format is:
;
;		CHDHDR (chdhdr_addr,revlevel)
;		CHD (itemcount,itemstring_addr,blklen,elidlen)
;		CHD (itemcount,itemstring_addr,blklen,elidlen)
;		.
;		.
;		CHDHDR (chdhdr_addr,revlevel)
;		.
;		.
;
; There is one CHDHDR macro per class, followed by a CHD for each change
; to that class (including one for Rev Level 0). The number of CHD's
; following each CHDHDR macro for each class MUST be one greater than
; the REVLEVEL indicated in the CHDHDR macro.
;

	CHDHDR	ADDRESS=PROCESSES_CHD,-	; PROCESSES change descriptors
		REVLEVEL=1

	CHD	ITEMCOUNT=8,-		; Rev Level 0
		ITEMSTRING=0,-
		BLOCKLEN=MNR_PRO$K_REV0DSIZE,-
		ELIDLEN=0

	CHD	ITEMCOUNT=8,-		; Rev Level 1
		ITEMSTRING=0,-
		BLOCKLEN=MNR_PRO$K_REV1DSIZE,-
		ELIDLEN=0


	CHDHDR	ADDRESS=STATES_CHD,-	; STATES change descriptors
		REVLEVEL=0

	CHD	ITEMCOUNT=14,-		; Rev Level 0
		ITEMSTRING=STATESTR,-
		BLOCKLEN=0,-
		ELIDLEN=0,-
		DISPCTL= <^B111111110111111>


	CHDHDR	ADDRESS=MODES_CHD,-	; MODES change descriptors
		REVLEVEL=0

	CHD	ITEMCOUNT=MODES_ICOUNT,- ; Rev Level 0
		ITEMSTRING=MODESTR,-
		BLOCKLEN=0,-
		ELIDLEN=0


	CHDHDR	ADDRESS=PAGE_CHD,-	; PAGE change descriptors
		REVLEVEL=0

	CHD	ITEMCOUNT=13,-		; Rev Level 0
		ITEMSTRING=PAGESTR,-
		BLOCKLEN=0,-
		ELIDLEN=0,-
		DISPCTL = <^B110111111011111>



	CHDHDR	ADDRESS=IO_CHD,-	; IO change descriptors
		REVLEVEL=0

	CHD	ITEMCOUNT=14,-		; Rev Level 0
		ITEMSTRING=IORATESTR,-
		BLOCKLEN=0,-
		ELIDLEN=0,-
		DISPCTL = <^B111111110111111>


	CHDHDR	ADDRESS=FCP_CHD,-	; FCP change descriptors
		REVLEVEL=3

	CHD	ITEMCOUNT=10,-		; Rev Level 0
		ITEMSTRING=FCPSTR,-
		BLOCKLEN=0,-
		ELIDLEN=0

	CHD	ITEMCOUNT=12,-		; Rev Level 1
		ITEMSTRING=FCPSTR,-
		BLOCKLEN=0,-
		ELIDLEN=0

	CHD	ITEMCOUNT=12,-		; Rev Level 2
		ITEMSTRING=FCPSTR1,-
		BLOCKLEN=0,-
		ELIDLEN=0

	CHD	ITEMCOUNT=12,-		; Rev Level 3
		ITEMSTRING=FCPSTR2,-
		BLOCKLEN=0,-
		ELIDLEN=0


	CHDHDR	ADDRESS=POOL_CHD,-	; POOL change descriptors
		REVLEVEL=1

	CHD	ITEMCOUNT=8,-		; Rev Level 0
		ITEMSTRING=POOLSTR,-
		BLOCKLEN=0,-
		ELIDLEN=0

	CHD	ITEMCOUNT=12,-		; Rev Level 1
		ITEMSTRING=POOLSTR1,-
		BLOCKLEN=0,-
		ELIDLEN=0,-
		DISPCTL = <^B111111011011011>


	CHDHDR	ADDRESS=LOCK_CHD,-	; LOCK change descriptors
		REVLEVEL=1

	CHD	ITEMCOUNT=9,-		; Rev Level 0
		ITEMSTRING=LOCKSTR,-
		BLOCKLEN=0,-
		ELIDLEN=0

	CHD	ITEMCOUNT=10,-		; Rev Level 1
		ITEMSTRING=LOCKSTR1,-
		BLOCKLEN=0,-
		ELIDLEN=0


	CHDHDR	ADDRESS=DECNET_CHD,-	; DECNET change descriptors
		REVLEVEL=0

	CHD	ITEMCOUNT=6,-		; Rev Level 0
		ITEMSTRING=DECNETSTR,-
		BLOCKLEN=0,-
		ELIDLEN=0


	CHDHDR	ADDRESS=JOURNAL_CHD,-	; JOURNALING change descriptors
		REVLEVEL=1

	CHD	ITEMCOUNT=11,-		; Rev Level 0
		ITEMSTRING=JOURNALSTR,-
		BLOCKLEN=0,-
		ELIDLEN=0

	CHD	ITEMCOUNT=13,-		; Rev Level 1
		ITEMSTRING=JOURNALSTR1,-
		BLOCKLEN=0,-
		ELIDLEN=0


	CHDHDR	ADDRESS=RU_CHD,-	; RU change descriptors
		REVLEVEL=0

	CHD	ITEMCOUNT=9,-		; Rev Level 0
		ITEMSTRING=RECOVERYSTR,-
		BLOCKLEN=0,-
		ELIDLEN=0

	CHDHDR	ADDRESS=FSCACHE_CHD,-	; FILE_SYSTEM_CACHE change descriptors
		REVLEVEL=1

	CHD	ITEMCOUNT=8,-		; Rev Level 0
		ITEMSTRING=FSCACHESTR,-
		BLOCKLEN=0,-
		ELIDLEN=0

	CHD	ITEMCOUNT=21,-		; Rev Level 1
		ITEMSTRING=FSCACHESTR1,-
		BLOCKLEN=0,-
		ELIDLEN=0,-
		DISPCTL = <^B111111011111111>

	CHDHDR	ADDRESS=DISK_CHD,-	; DISK change descriptors
		REVLEVEL=2

	CHD	ITEMCOUNT=3,-		; Rev Level 0
		ITEMSTRING=DISKSTR,-
		BLOCKLEN=0,-
		ELIDLEN=14

	CHD	ITEMCOUNT=2,-		; Rev Level 1
		ITEMSTRING=DISKSTR,-
		BLOCKLEN=0,-
		ELIDLEN=15

	CHD	ITEMCOUNT=2,-		; Rev Level 2
		ITEMSTRING=DISKSTR,-
		BLOCKLEN=0,-
		ELIDLEN=27


	CHDHDR	ADDRESS=JDEVICE_CHD,-	; JDEVICE change descriptors
		REVLEVEL=0

	CHD	ITEMCOUNT=6,-		; Rev Level 0
		ITEMSTRING=JDEVICESTR,-
		BLOCKLEN=0,-
		ELIDLEN=14


	CHDHDR	ADDRESS=DLOCK_CHD,-	; DLOCK change descriptors
		REVLEVEL=2

	CHD	ITEMCOUNT=15,-		; Rev Level 0
		ITEMSTRING=DLOCKSTR,-
		BLOCKLEN=0,-
		ELIDLEN=0

	CHD	ITEMCOUNT=14,-		; Rev Level 1
		ITEMSTRING=DLOCKSTR1,-
		BLOCKLEN=0,-
		ELIDLEN=0, -
		DISPCTL = <^B011111111111111>

	CHD	ITEMCOUNT=15,-		; Rev Level 2
		ITEMSTRING=DLOCKSTR2,-
		BLOCKLEN=0,-
		ELIDLEN=0, -
		DISPCTL = <^B111111111111111>


	CHDHDR	ADDRESS=SCS_CHD,-	; SCS change descriptors
		REVLEVEL=0

	CHD	ITEMCOUNT=12,-		; Rev Level 0
		ITEMSTRING=SCSSTR,-
		BLOCKLEN=0,-
		ELIDLEN=8

	CHDHDR	ADDRESS=VMS1_CHD,-	; VMS1 change descriptors
		REVLEVEL=0

	CHD	ITEMCOUNT=7,-		; Rev Level 0
		ITEMSTRING=VMS1STR,-
		ELIDLEN=0, -
		DISPCTL = <^B001010101010101>

	CHDHDR	ADDRESS=SYSTEM_CHD,-	; SYSTEM change descriptors
		REVLEVEL=0

	CHD	ITEMCOUNT=9,-		; Rev Level 0
		ITEMSTRING=SYSTEMSTR,-
		BLOCKLEN=0,-
		ELIDLEN=0


	CHDHDR	ADDRESS=LAST_CHD,-	; This dummy CHDHDR must be last
		REVLEVEL=0



;
; The following table contains one item descriptor block for
; each possible piece of data.  The blocks are indexed by 
; data key values.
;

PERFTABLE::
	.BLKB	PMS$C_TABLESIZE*IDB$K_ILENGTH	; allocate table space

MAX_NAME_SIZE == 26		; Maximum size of a name (label) string
WIDE_NAME_SIZE == 34		; Size of a string for a wide display (DISK)

;
; Define the entries in the table.
;

;
; Entries for MODES class
;

MODES_STRLEN == 25		; Length of "Interrupt Stack" string
				; NOTE -- update if string length is changed

	BLDIDB	NAME=PINTERRUPT,-
		SSTRING=<INTER>,-
		LSTRING=<Interrupt Stack   PRIMARY>,-
		SIZE=LONG,-
		TYPE=COUNT,-
		ADDR=0
	
	BLDIDB	NAME=PKERNEL,-
		SSTRING=<KERNEL>,-
		LSTRING=<Kernel Mode>,-
		SIZE=LONG,-
		TYPE=COUNT,-
		ADDR=0
	
	BLDIDB	NAME=PEXEC,-
		SSTRING=<EXEC>,-
		LSTRING=<Executive Mode>,-
		SIZE=LONG,-
		TYPE=COUNT,-
		ADDR=0
	
	BLDIDB	NAME=PSUPER,-
		SSTRING=<SUPER>,-
		LSTRING=<Supervisor Mode>,-
		SIZE=LONG,-
		TYPE=COUNT,-
		ADDR=0
	
	BLDIDB	NAME=PUSER,-
		SSTRING=<USER>,-
		LSTRING=<User Mode>,-
		SIZE=LONG,-
		TYPE=COUNT,-
		ADDR=0
	
	BLDIDB	NAME=PCOMPAT,-
		SSTRING=<COMPAT>,-
		LSTRING=<Compatibility Mode>,-
		SIZE=LONG,-
		TYPE=COUNT,-
		ADDR=0

	BLDIDB	NAME=PIDLE,-
		SSTRING=<IDLE>,-
		LSTRING=<Idle Time>,-
		SIZE=LONG,-
		TYPE=COUNT,-
		ADDR=0

	BLDIDB	NAME=SINTERRUPT,-
		SSTRING=<INTER>,-
		LSTRING=<Interrupt Stack   ATTACHED>,-
		SIZE=LONG,-
		TYPE=COUNT,-
		ADDR=0
	
	BLDIDB	NAME=SKERNEL,-
		SSTRING=<KERNEL>,-
		LSTRING=<Kernel Mode>,-
		SIZE=LONG,-
		TYPE=COUNT,-
		ADDR=0
	
	BLDIDB	NAME=SEXEC,-
		SSTRING=<EXEC>,-
		LSTRING=<Executive Mode>,-
		SIZE=LONG,-
		TYPE=COUNT,-
		ADDR=0
	
	BLDIDB	NAME=SSUPER,-
		SSTRING=<SUPER>,-
		LSTRING=<Supervisor Mode>,-
		SIZE=LONG,-
		TYPE=COUNT,-
		ADDR=0
	
	BLDIDB	NAME=SUSER,-
		SSTRING=<USER>,-
		LSTRING=<User Mode>,-
		SIZE=LONG,-
		TYPE=COUNT,-
		ADDR=0
	
	BLDIDB	NAME=SCOMPAT,-
		SSTRING=<COMPAT>,-
		LSTRING=<Compatibility Mode>,-
		SIZE=LONG,-
		TYPE=COUNT,-
		ADDR=0

	BLDIDB	NAME=SIDLE,-
		SSTRING=<IDLE>,-
		LSTRING=<Idle Time>,-
		SIZE=LONG,-
		TYPE=COUNT,-
		ADDR=0

	BLDIDB	NAME=CPUBUSY,-
		SSTRING=<BUSY>,-
		LSTRING=<CPU Busy>,-
		SIZE=LONG,-
		TYPE=COUNT,-
		ADDR=CPU_BUSY

;
; Entries for state display
;

	BLDIDB 	NAME=COLPG,-
		SSTRING=<COLPG>,-
		LSTRING=<Collided Page Wait>,-
		SIZE=LONG,-
		TYPE=LEVEL,-
		ADDR=0

	BLDIDB	NAME=MWAIT,-
		SSTRING=<MWAIT>,-
		LSTRING=<Mutex & Misc Resource Wait>,-
		SIZE=LONG,-
		TYPE=LEVEL,-
		ADDR=0

	BLDIDB	NAME=CEF,-
		SSTRING=<CEF>,-
		LSTRING=<Common Event Flag Wait>,-
		SIZE=LONG,-
		TYPE=LEVEL,-
		ADDR=0

	BLDIDB 	NAME=PFW,-
		SSTRING=<PFW>,-
		LSTRING=<Page Fault Wait>,-
		SIZE=LONG,-
		TYPE=LEVEL,-
		ADDR=0

	BLDIDB 	NAME=LEF,-
		SSTRING=<LEF>,-
		LSTRING=<Local Event Flag Wait>,-
		SIZE=LONG,-
		TYPE=LEVEL,-
		ADDR=0

	BLDIDB	NAME=LEFO,-
		SSTRING=<LEFO>,-
		LSTRING=<Local Evt Flg (Outswapped)>,-
		SIZE=LONG,-
		TYPE=LEVEL,-
		ADDR=0

	BLDIDB	NAME=HIB,-
		SSTRING=<HIB>,-
		LSTRING=<Hibernate>,-
		SIZE=LONG,-
		TYPE=LEVEL,-
		ADDR=0

	BLDIDB	NAME=HIBO,-
		SSTRING=<HIBO>,-
		LSTRING=<Hibernate (Outswapped)>,-
		SIZE=LONG,-
		TYPE=LEVEL,-
		ADDR=0

	BLDIDB	NAME=SUSP,-
		SSTRING=<SUSP>,-
		LSTRING=<Suspended>,-
		SIZE=LONG,-
		TYPE=LEVEL,-
		ADDR=0

	BLDIDB	NAME=SUSPO,-
		SSTRING=<SUSPO>,-
		LSTRING=<Suspended (Outswapped)>,-
		SIZE=LONG,-
		TYPE=LEVEL,-
		ADDR=0

	BLDIDB	NAME=FPG,-
		SSTRING=<FPG>,-
		LSTRING=<Free Page Wait>,-
		SIZE=LONG,-
		TYPE=LEVEL,-
		ADDR=0

	BLDIDB	NAME=COM,-
		SSTRING=<COM>,-
		LSTRING=<Compute>,-
		SIZE=LONG,-
		TYPE=LEVEL,-
		ADDR=0

	BLDIDB	NAME=COMO,-
		SSTRING=<COMO>,-
		LSTRING=<Compute (Outswapped)>,-
		SIZE=LONG,-
		TYPE=LEVEL,-
		ADDR=0

	BLDIDB	NAME=CUR,-
		SSTRING=<CUR>,-
		LSTRING=<Current Process>,-
		SIZE=LONG,-
		TYPE=LEVEL,-
		ADDR=0

	BLDIDB	NAME=OTHSTAT,-
		SSTRING=<OTH>,-
		LSTRING=<Other>,-
		SIZE=LONG,-
		TYPE=LEVEL,-
		ADDR=OTHER_STATES

	BLDIDB	NAME=PROCS,-
		SSTRING=<PROCS>,-
		LSTRING=<Process Count>,-
		SIZE=LONG,-
		TYPE=LEVEL,-
		ADDR=PROC_COUNT

;
; Entries for page statistics display
;

	BLDIDB	NAME=FRLIST,-
		SSTRING=<FR LIST SIZE>,-
		LSTRING=<Free List Size>,-
		SIZE=LONG,-
		TYPE=LEVEL,-
		ADDR=SCH$GL_FREECNT

	BLDIDB	NAME=MODLIST,-
		SSTRING=<MOD LST SIZE>,-
		LSTRING=<Modified List Size>,-
		SIZE=LONG,-
		TYPE=LEVEL,-
		ADDR=SCH$GL_MFYCNT

	BLDIDB	NAME=FAULTS,-
		SSTRING=<FAULTS>,-
		LSTRING=<Page Fault Rate>,-
		SIZE=LONG,-
		TYPE=COUNT,-
		ADDR=PMS$GL_FAULTS

	BLDIDB	NAME=PREADS,-
		SSTRING=<RDFLTS>,-
		LSTRING=<Page Read Rate>,-
		SIZE=LONG,-
		TYPE=COUNT,-
		ADDR=PMS$GL_RDFLTS

	BLDIDB	NAME=PWRITES,-
		SSTRING=<PWRITES>,-
		LSTRING=<Page Write Rate>,-
		SIZE=LONG,-
		TYPE=COUNT,-
		ADDR=PMS$GL_PWRITES

	BLDIDB 	NAME=FREFLTS,-
		SSTRING=<FREFLTS>,-
		LSTRING=<Free List Fault Rate>,-
		SIZE=LONG,-
		TYPE=COUNT,-
		ADDR=PMS$AL_TRANSFLT+<4*PFN$C_FREPAGLST>

	BLDIDB	NAME=MFYFLTS,-
		SSTRING=<MFYLST>,-
		LSTRING=<Modified List Fault Rate>,-
		SIZE=LONG,-
		TYPE=COUNT,-
		ADDR=PMS$AL_TRANSFLT+<4*PFN$C_MFYPAGLST>

	BLDIDB	NAME=DZROFLTS,-
		SSTRING=<DZRO>,-
		LSTRING=<Demand Zero Fault Rate>,-
		SIZE=LONG,-
		TYPE=COUNT,-
		ADDR=PMS$GL_DZROFLTS

	BLDIDB	NAME=GVALFLTS,-
		SSTRING=<GVAL>,-
		LSTRING=<Global Valid Fault Rate>,-
		SIZE=LONG,-
		TYPE=COUNT,-
		ADDR=PMS$GL_GVALID

	BLDIDB	NAME=WRTINPROG,-
		SSTRING=<WRTINPRG>,-
		LSTRING=<Wrt In Progress Fault Rate>,-
		SIZE=LONG,-
		TYPE=COUNT,-
		ADDR=PMS$AL_TRANSFLT+<4*PFN$C_WRTINPROG>

	BLDIDB	NAME=PWRITIO,-
		SSTRING=<PWRITIO>,-
		LSTRING=<Page Write I/O Rate>,-
		SIZE=LONG,-
		TYPE=COUNT,-
		ADDR=PMS$GL_PWRITIO

	BLDIDB	NAME=PREADIO,-
		SSTRING=<PREADIO>,-
		LSTRING=<Page Read I/O Rate>,-
		SIZE=LONG,-
		TYPE=COUNT,-
		ADDR=PMS$GL_PREADIO

	BLDIDB	NAME=SYSFAULTS,-
		SSTRING=<SYSFLTS>,-
		LSTRING=<System Fault Rate>,-
		SIZE=LONG,-
		TYPE=COUNT,-
		ADDR=SYSFAULTS

;
; Entries for Pool display
;

	BLDIDB	NAME=SRPCNT,-
		SSTRING=<SRPCNT>,-
		LSTRING=<SRPs Available>,-
		SIZE=LONG,-
		TYPE=LEVEL,-
		ADDR=SRPCNT

	BLDIDB	NAME=SRPINUSE,-
		SSTRING=<SRPINUSE>,-
		LSTRING=<SRPs In Use>,-
		SIZE=LONG,-
		TYPE=LEVEL,-
		ADDR=SRPINUSE

	BLDIDB	NAME=IRPCNT,-
		SSTRING=<IRPCNT>,-
		LSTRING=<IRPs Available>,-
		SIZE=LONG,-
		TYPE=LEVEL,-
		ADDR=IRPCNT

	BLDIDB	NAME=IRPINUSE,-
		SSTRING=<IRPINUSE>,-
		LSTRING=<IRPs In Use>,-
		SIZE=LONG,-
		TYPE=LEVEL,-
		ADDR=IRPINUSE

	BLDIDB	NAME=LRPCNT,-
		SSTRING=<LRPCNT>,-
		LSTRING=<LRPs Available>,-
		SIZE=LONG,-
		TYPE=LEVEL,-
		ADDR=LRPCNT

	BLDIDB	NAME=LRPINUSE,-
		SSTRING=<LRPINUSE>,-
		LSTRING=<LRPs In Use>,-
		SIZE=LONG,-
		TYPE=LEVEL,-
		ADDR=LRPINUSE

	BLDIDB	NAME=HOLECNT,-
		SSTRING=<HOLES>,-
		LSTRING=<Holes In Pool>,-
		SIZE=LONG,-
		TYPE=LEVEL,-
		ADDR=HOLECNT

	BLDIDB	NAME=HOLESUM,-
		SSTRING=<SPACE>,-
		LSTRING=<Dynamic Bytes Available>,-
		SIZE=LONG,-
		TYPE=LEVEL,-
		ADDR=HOLESUM

	BLDIDB	NAME=DYNINUSE,-
		SSTRING=<DYNINUSE>,-
		LSTRING=<Dynamic Bytes In Use>,-
		SIZE=LONG,-
		TYPE=LEVEL,-
		ADDR=DYNINUSE

	BLDIDB	NAME=BIGHOLE,-
		SSTRING=<LARGEST>,-
		LSTRING=<Largest Block>,-
		SIZE=LONG,-
		TYPE=LEVEL,-
		ADDR=BIGHOLE

	BLDIDB	NAME=SMALLHOLE,-
		SSTRING=<SMALLEST>,-
		LSTRING=<Smallest Block>,-
		SIZE=LONG,-
		TYPE=LEVEL,-
		ADDR=SMALLHOLE

	BLDIDB	NAME=SMALLCNT,-
		SSTRING=<# LEQ 32>,-
		LSTRING=<Blocks Less or Eq 32 Bytes>,-
		SIZE=LONG,-
		TYPE=LEVEL,-
		ADDR=SMALLCNT




;
; Entries for I/O rates display
;

	BLDIDB	NAME=ISWPCNT,-
		SSTRING=<INSWAP>,-
		LSTRING=<Inswap Rate>,-
		SIZE=LONG,-
		TYPE=COUNT,-
		ADDR=SWP$GL_ISWPCNT

	BLDIDB	NAME=DIRIO,-
		SSTRING=<DIRIO>,-
		LSTRING=<Direct I/O Rate>,-
		SIZE=LONG,-
		TYPE=COUNT,-
		ADDR=PMS$GL_DIRIO

	BLDIDB	NAME=BUFIO,-
		SSTRING=<BUFIO>,-
		LSTRING=<Buffered I/O Rate>,-
		SIZE=LONG,-
		TYPE=COUNT,-
		ADDR=PMS$GL_BUFIO

	BLDIDB	NAME=MBREADS,-
		SSTRING=<MBREADS>,-
		LSTRING=<Mailbox Read Rate>,-
		SIZE=LONG,-
		TYPE=COUNT,-
		ADDR=PMS$GL_MBREADS

	BLDIDB	NAME=MBWRITES,-
		SSTRING=<MBWRITES>,-
		LSTRING=<Mailbox Write Rate>,-
		SIZE=LONG,-
		TYPE=COUNT,-
		ADDR=PMS$GL_MBWRITES

	BLDIDB	NAME=LOGNAM,-
		SSTRING=<LOGNAM>,-
		LSTRING=<Log Name Translation Rate>,-
		SIZE=LONG,-
		TYPE=COUNT,-
		ADDR=PMS$GL_LOGNAM

	BLDIDB	NAME=ACCESS,-
		SSTRING=<ACCESS>,-
		LSTRING=<File Lookup Rate>,-
		SIZE=LONG,-
		TYPE=COUNT,-
		ADDR=PMS$GL_FCP2+<4*6>

;
; IDBs for FCP display
;

	BLDIDB	NAME=FCPCALLS,-
		SSTRING=<CALLS>,-
		LSTRING=<FCP Call Rate>,-
		SIZE=LONG,-
		TYPE=COUNT,-
		ADDR=FCPCALLS

	BLDIDB	NAME=ALLOC,-
		SSTRING=<ALLOC>,-
		LSTRING=<Allocation Rate>,-
		SIZE=LONG,-
		TYPE=COUNT,-
		ADDR=PMS$GL_FCP2+<4*8>

	BLDIDB	NAME=FCPCREATE,-
		SSTRING=<CREATES>,-
		LSTRING=<Create Rate>,-
		SIZE=LONG,-
		TYPE=COUNT,-
		ADDR=PMS$GL_FCP2+44


	BLDIDB	NAME=FCPREAD,-
		SSTRING=<READS>,-
		LSTRING=<Disk Read Rate>,-
		SIZE=LONG,-
		TYPE=COUNT,-
		ADDR=FCPREAD

	BLDIDB	NAME=FCPWRITE,-
		SSTRING=<WRITES>,-
		LSTRING=<Disk Write Rate>,-
		SIZE=LONG,-
		TYPE=COUNT,-
		ADDR=FCPWRITE

	BLDIDB	NAME=FCPCACHE,-
		SSTRING=<CACHE>,-
		LSTRING=<Cache Hit Rate>,-
		SIZE=LONG,-
		TYPE=COUNT,-
		ADDR=FCPCACHE

	BLDIDB	NAME=VOLWAIT,-
		SSTRING=<VOLWAIT>,-
		LSTRING=<Volume Lock Wait Rate>,-
		SIZE=LONG,-
		TYPE=COUNT,-
		ADDR=PMS$GL_VOLWAIT

	BLDIDB	NAME=FCPCPU,-
		SSTRING=<CPUTIM>,-
		LSTRING=<CPU Tick Rate>,-
		SIZE=LONG,-
		TYPE=COUNT,-
		ADDR=FCPCPU

	BLDIDB	NAME=FCPTURN,-
		SSTRING=<TURNS>,-
		LSTRING=<Window Turn Rate>,-
		SIZE=LONG,-
		TYPE=COUNT,-
		ADDR=PMS$GL_TURN

	BLDIDB	NAME=FCPSPLIT,-
		SSTRING=<SPLIT TRANS.>,-
		LSTRING=<Split Transfers>,-
		SIZE=LONG,-
		TYPE=COUNT,-
		ADDR=PMS$GL_SPLIT

	BLDIDB	NAME=FCPHIT,-
		SSTRING=<HITS>,-
		LSTRING=<Window Hits>,-
		SIZE=LONG,-
		TYPE=COUNT,-
		ADDR=PMS$GL_HIT

	BLDIDB	NAME=OPENS,-
		SSTRING=<OPENS>,-
		LSTRING=<File Open Rate>,-
		SIZE=LONG,-
		TYPE=COUNT,-
		ADDR=PMS$GL_OPENS

	BLDIDB	NAME=FCPFAULT,-
		SSTRING=<FAULTS>,-
		LSTRING=<File Sys Page Fault Rate>,-
		SIZE=LONG,-
		TYPE=COUNT,-
		ADDR=FCPFAULT

	BLDIDB	NAME=FCPERASE,-
		SSTRING=<ERASES>,-
		LSTRING=<Erase Rate>,-
		SIZE=LONG,-
		TYPE=COUNT,-
		ADDR=PMS$GL_ERASEIO

;
; IDB's for the LOCK class
;

	BLDIDB	NAME=ENQNEW,-
		SSTRING=<ENQ NEWS>,-
		LSTRING=<New ENQ Rate>,-
		SIZE=LONG,-
		TYPE=COUNT,-
		ADDR=ENQNEW

	BLDIDB	NAME=ENQCVT,-
		SSTRING=<ENQ CVTS>,-
		LSTRING=<Converted ENQ Rate>,-
		SIZE=LONG,-
		TYPE=COUNT,-
		ADDR=ENQCVT

	BLDIDB	NAME=DEQ,-
		SSTRING=<DEQs>,-
		LSTRING=<DEQ Rate>,-
		SIZE=LONG,-
		TYPE=COUNT,-
		ADDR=DEQ

	BLDIDB	NAME=BLKAST,-
		SSTRING=<BLK ASTs>,-
		LSTRING=<Blocking AST Rate>,-
		SIZE=LONG,-
		TYPE=COUNT,-
		ADDR=BLKAST

	BLDIDB	NAME=ENQWAIT,-
		SSTRING=<FWAITs>,-
		LSTRING=<ENQs Forced To Wait Rate>,-
		SIZE=LONG,-
		TYPE=COUNT,-
		ADDR=PMS$GL_ENQWAIT

	BLDIDB	NAME=ENQNOTQD,-
		SSTRING=<ENQNOTQs>,-
		LSTRING=<ENQs Not Queued Rate>,-
		SIZE=LONG,-
		TYPE=COUNT,-
		ADDR=PMS$GL_ENQNOTQD

	BLDIDB	NAME=DLCKSRCH,-
		SSTRING=<DLCK SRCH>,-
		LSTRING=<Deadlock Search Rate>,-
		SIZE=LONG,-
		TYPE=COUNT,-
		ADDR=PMS$GL_DLCKSRCH

	BLDIDB	NAME=DLCKFND,-
		SSTRING=<DLCK FIND>,-
		LSTRING=<Deadlock Find Rate>,-
		SIZE=LONG,-
		TYPE=COUNT,-
		ADDR=PMS$GL_DLCKFND

	BLDIDB	NAME=NUMLOCKS,-
		SSTRING=<TOT LOCKS>,-
		LSTRING=<Total Locks>,-
		SIZE=LONG,-
		TYPE=LEVEL,-
		ADDR=LOCKCNT

	BLDIDB	NAME=NUMRES,-
		SSTRING=<RESOURCES>,-
		LSTRING=<Total Resources>,-
		SIZE=LONG,-
		TYPE=LEVEL,-
		ADDR=RESCNT

;
; IDB's for the DECNET class
;

	BLDIDB	NAME=ARRLOCPK,-
		SSTRING=<ARR L PK>,-
		LSTRING=<Arriving Local Packet Rate>,-
		SIZE=LONG,-
		TYPE=COUNT,-
		ADDR=PMS$GL_ARRLOCPK

	BLDIDB	NAME=DEPLOCPK,-
		SSTRING=<DEP L PK>,-
		LSTRING=<Departng Local Packet Rate>,-
		SIZE=LONG,-
		TYPE=COUNT,-
		ADDR=PMS$GL_DEPLOCPK

	BLDIDB	NAME=ARRTRAPK,-
		SSTRING=<ARR T PK>,-
		LSTRING=<Arriving Trans Packet Rate>,-
		SIZE=LONG,-
		TYPE=COUNT,-
		ADDR=PMS$GL_ARRTRAPK

	BLDIDB	NAME=TRCNGLOS,-
		SSTRING=<T CNG LS>,-
		LSTRING=<Trans Congestion Loss Rate>,-
		SIZE=LONG,-
		TYPE=COUNT,-
		ADDR=PMS$GL_TRCNGLOS

	BLDIDB	NAME=RCVBUFFL,-
		SSTRING=<RCVBFFLs>,-
		LSTRING=<Receiver Buff Failure Rate>,-
		SIZE=LONG,-
		TYPE=COUNT,-
		ADDR=PMS$GL_RCVBUFFL

;
; IDB's for the JOURNALING class
;

	BLDIDB	NAME=JNLJRNLS,-
		SSTRING=<>,-
		LSTRING=<Active Journals>,-
		SIZE=LONG,-
		TYPE=LEVEL,-
		ADDR=PMS$GL_JNLJRNLS

	BLDIDB	NAME=JNLCHNLS,-
		SSTRING=<>,-
		LSTRING=<Journal Channels Assigned>,-
		SIZE=LONG,-
		TYPE=LEVEL,-
		ADDR=PMS$GL_JNLCHNLS

	BLDIDB	NAME=JNLWRTAI,-
		SSTRING=<>,-
		LSTRING=<AI Journal Write Rate>,-
		SIZE=LONG,-
		TYPE=COUNT,-
		ADDR=PMS$GL_JNLWRTAI

	BLDIDB	NAME=JNLWRTBI,-
		SSTRING=<>,-
		LSTRING=<BI Journal Write Rate>,-
		SIZE=LONG,-
		TYPE=COUNT,-
		ADDR=PMS$GL_JNLWRTBI

	BLDIDB	NAME=JNLWRTAT,-
		SSTRING=<>,-
		LSTRING=<AT Journal Write Rate>,-
		SIZE=LONG,-
		TYPE=COUNT,-
		ADDR=PMS$GL_JNLWRTAT

	BLDIDB	NAME=JNLWRTRU,-
		SSTRING=<>,-
		LSTRING=<RU Journal Write Rate>,-
		SIZE=LONG,-
		TYPE=COUNT,-
		ADDR=PMS$GL_JNLWRTRU

	BLDIDB	NAME=JNLDIRIO,-
		SSTRING=<>,-
		LSTRING=<Journal Direct I/O Rate>,-
		SIZE=LONG,-
		TYPE=COUNT,-
		ADDR=PMS$GL_JNLDIRIO

	BLDIDB	NAME=JNLBUFIO,-
		SSTRING=<>,-
		LSTRING=<Journal Buffered I/O Rate>,-
		SIZE=LONG,-
		TYPE=COUNT,-
		ADDR=PMS$GL_JNLBUFIO

	BLDIDB	NAME=JNLWRTSS,-
		SSTRING=<>,-
		LSTRING=<Journal Write Rate>,-
		SIZE=LONG,-
		TYPE=COUNT,-
		ADDR=PMS$GL_JNLWRTSS

	BLDIDB	NAME=JNLFORNL,-
		SSTRING=<>,-
		LSTRING=<FORCEJNL Null Rate>,-
		SIZE=LONG,-
		TYPE=COUNT,-
		ADDR=PMS$GL_JNLFORNL

	BLDIDB	NAME=JNLFORFL,-
		SSTRING=<>,-
		LSTRING=<FORCEJNL Flush Rate>,-
		SIZE=LONG,-
		TYPE=COUNT,-
		ADDR=PMS$GL_JNLFORFL

	BLDIDB	NAME=JNLBUFWR,-
		SSTRING=<>,-
		LSTRING=<Journal Buffer-write Rate>,-
		SIZE=LONG,-
		TYPE=COUNT,-
		ADDR=PMS$GL_JNLBUFWR

	BLDIDB	NAME=JNLWRTFM,-
		SSTRING=<>,-
		LSTRING=<Force Modifier Write Rate>,-
		SIZE=LONG,-
		TYPE=COUNT,-
		ADDR=PMS$GL_JNLWRTFM

;
; IDB's for the RU class
;

	BLDIDB	NAME=RUFACTIV,-
		SSTRING=<>,-
		LSTRING=<Active Recovery Units>,-
		SIZE=LONG,-
		TYPE=LEVEL,-
		ADDR=PMS$GL_RUFACTIV

	BLDIDB	NAME=RUFJNLS,-
		SSTRING=<>,-
		LSTRING=<Active RU Journals>,-
		SIZE=LONG,-
		TYPE=LEVEL,-
		ADDR=PMS$GL_RUFJNLS

	BLDIDB	NAME=RUFCHNLS,-
		SSTRING=<>,-
		LSTRING=<RU Channels Assigned>,-
		SIZE=LONG,-
		TYPE=LEVEL,-
		ADDR=PMS$GL_RUFCHNLS

	BLDIDB	NAME=RUFWRTS,-
		SSTRING=<>,-
		LSTRING=<RU Journal Write Rate>,-
		SIZE=LONG,-
		TYPE=COUNT,-
		ADDR=PMS$GL_RUFWRTS

	BLDIDB	NAME=RUFREADS,-
		SSTRING=<>,-
		LSTRING=<RU Journal Read Rate>,-
		SIZE=LONG,-
		TYPE=COUNT,-
		ADDR=PMS$GL_RUFREADS

	BLDIDB	NAME=RUFXTNDS,-
		SSTRING=<>,-
		LSTRING=<RU Journal Extend Rate>,-
		SIZE=LONG,-
		TYPE=COUNT,-
		ADDR=PMS$GL_RUFXTNDS

	BLDIDB	NAME=RUFMARK,-
		SSTRING=<>,-
		LSTRING=<Mark ID Rate>,-
		SIZE=LONG,-
		TYPE=COUNT,-
		ADDR=PMS$GL_RUFMARK

	BLDIDB	NAME=RUFMRKRB,-
		SSTRING=<>,-
		LSTRING=<Mark ID Rollback Rate>,-
		SIZE=LONG,-
		TYPE=COUNT,-
		ADDR=PMS$GL_RUFMRKRB

	BLDIDB	NAME=RUFABORT,-
		SSTRING=<>,-
		LSTRING=<RU Abort Rate>,-
		SIZE=LONG,-
		TYPE=COUNT,-
		ADDR=PMS$GL_RUFABORT

;
; IDB's for the FILE_SYSTEM_CACHE class
;

	BLDIDB	NAME=FILHDR_HITPCNT,-
		SSTRING=<>,-
		LSTRING=<File Hdr   (Hit %)>,-
		SIZE=LONG,-
		TYPE=LEVEL,-
		ADDR=0,-
		FLAGS=IDB$M_PCNT

	BLDIDB	NAME=FILHDR_HIT,-
		SSTRING=<>,-
		LSTRING=<File Hdr Cache Hit Rate>,-
		SIZE=LONG,-
		TYPE=COUNT,-
		ADDR=PMS$GL_FILHDR_HIT

	BLDIDB	NAME=FILHDR_TRIES,-
		SSTRING=<>,-
		LSTRING=<           (Attempt Rate)>,-
		SIZE=LONG,-
		TYPE=COUNT,-
		ADDR=FILHDR_TRIES

	BLDIDB	NAME=FIDHITPCNT,-
		SSTRING=<>,-
		LSTRING=<File ID    (Hit %)>,-
		SIZE=LONG,-
		TYPE=LEVEL,-
		ADDR=0,-
		FLAGS=IDB$M_PCNT

	BLDIDB	NAME=FIDHIT,-
		SSTRING=<>,-
		LSTRING=<File Id Cache Hit Rate>,-
		SIZE=LONG,-
		TYPE=COUNT,-
		ADDR=PMS$GL_FIDHIT

	BLDIDB	NAME=FID_TRIES,-
		SSTRING=<>,-
		LSTRING=<           (Attempt Rate)>,-
		SIZE=LONG,-
		TYPE=COUNT,-
		ADDR=FID_TRIES

	BLDIDB	NAME=FIDMISS,-
		SSTRING=<>,-
		LSTRING=<File Id Cache Miss Rate>,-
		SIZE=LONG,-
		TYPE=COUNT,-
		ADDR=PMS$GL_FIDMISS

	BLDIDB	NAME=DIRFCB_HITPCNT,-
		SSTRING=<>,-
		LSTRING=<Dir FCB    (Hit %)>,-
		SIZE=LONG,-
		TYPE=LEVEL,-
		ADDR=0,-
		FLAGS=IDB$M_PCNT

	BLDIDB	NAME=DIRFCB_HIT,-
		SSTRING=<>,-
		LSTRING=<Dir. FCB Cache Hit Rate>,-
		SIZE=LONG,-
		TYPE=COUNT,-
		ADDR=PMS$GL_DIRHIT

	BLDIDB	NAME=DIRFCB_TRIES,-
		SSTRING=<>,-
		LSTRING=<           (Attempt Rate)>,-
		SIZE=LONG,-
		TYPE=COUNT,-
		ADDR=DIRFCB_TRIES

	BLDIDB	NAME=DIRFCB_MISS,-
		SSTRING=<>,-
		LSTRING=<Dir. FCB Cache Miss Rate>,-
		SIZE=LONG,-
		TYPE=COUNT,-
		ADDR=PMS$GL_DIRMISS

	BLDIDB	NAME=DIRDATA_HITPCNT,-
		SSTRING=<>,-
		LSTRING=<File Hdr   (Hit %)>,-
		LSTRING=<Dir Data   (Hit %)>,-
		SIZE=LONG,-
		TYPE=LEVEL,-
		ADDR=0,-
		FLAGS=IDB$M_PCNT

	BLDIDB	NAME=DIRDATA_HIT,-
		SSTRING=<>,-
		LSTRING=<Directory Cache Hit Rate>,-
		SIZE=LONG,-
		TYPE=COUNT,-
		ADDR=PMS$GL_DIRDATA_HIT

	BLDIDB	NAME=DIRDATA_TRIES,-
		SSTRING=<>,-
		LSTRING=<           (Attempt Rate)>,-
		SIZE=LONG,-
		TYPE=COUNT,-
		ADDR=DIRDATA_TRIES

	BLDIDB	NAME=EXTHITPCNT,-
		SSTRING=<>,-
		LSTRING=<Extent     (Hit %)>,-
		SIZE=LONG,-
		TYPE=LEVEL,-
		ADDR=0,-
		FLAGS=IDB$M_PCNT

	BLDIDB	NAME=EXTHIT,-
		SSTRING=<>,-
		LSTRING=<Extent Cache Hit Rate>,-
		SIZE=LONG,-
		TYPE=COUNT,-
		ADDR=PMS$GL_EXTHIT

	BLDIDB	NAME=EXT_TRIES,-
		SSTRING=<>,-
		LSTRING=<           (Attempt Rate)>,-
		SIZE=LONG,-
		TYPE=COUNT,-
		ADDR=EXT_TRIES

	BLDIDB	NAME=EXTMISS,-
		SSTRING=<>,-
		LSTRING=<Extent Cache Miss Rate>,-
		SIZE=LONG,-
		TYPE=COUNT,-
		ADDR=PMS$GL_EXTMISS

	BLDIDB	NAME=QUOHITPCNT,-
		SSTRING=<>,-
		LSTRING=<Quota      (Hit %)>,-
		SIZE=LONG,-
		TYPE=LEVEL,-
		ADDR=0,-
		FLAGS=IDB$M_PCNT

	BLDIDB	NAME=QUOHIT,-
		SSTRING=<>,-
		LSTRING=<Quota Cache Hit Rate>,-
		SIZE=LONG,-
		TYPE=COUNT,-
		ADDR=PMS$GL_QUOHIT

	BLDIDB	NAME=QUO_TRIES,-
		SSTRING=<>,-
		LSTRING=<           (Attempt Rate)>,-
		SIZE=LONG,-
		TYPE=COUNT,-
		ADDR=QUO_TRIES

	BLDIDB	NAME=QUOMISS,-
		SSTRING=<>,-
		LSTRING=<Quota Cache Miss Rate>,-
		SIZE=LONG,-
		TYPE=COUNT,-
		ADDR=PMS$GL_QUOMISS

	BLDIDB	NAME=STORAGMAP_HITPCNT,-
		SSTRING=<>,-
		LSTRING=<Bitmap     (Hit %)>,-
		SIZE=LONG,-
		TYPE=LEVEL,-
		ADDR=0,-
		FLAGS=IDB$M_PCNT

	BLDIDB	NAME=STORAGMAP_HIT,-
		SSTRING=<>,-
		LSTRING=<Bitmap Hit Rate>,-
		SIZE=LONG,-
		TYPE=COUNT,-
		ADDR=PMS$GL_STORAGMAP_HIT

	BLDIDB	NAME=STORAGMAP_TRIES,-
		SSTRING=<>,-
		LSTRING=<           (Attempt Rate)>,-
		SIZE=LONG,-
		TYPE=COUNT,-
		ADDR=STORAGMAP_TRIES


;
; IDB's for the DISK class
;

	BLDIDB	NAME=OPCNT,-
		SSTRING=<>,-
		LSTRING=<I/O Operation Rate>,-
		SIZE=LONG,-
		TYPE=COUNT,-
		ADDR=0

	BLDIDB	NAME=IOQUELEN,-
		SSTRING=<>,-
		LSTRING=<I/O Request Queue Length>,-
		SIZE=LONG,-
		TYPE=LEVEL,-
		ADDR=0

	BLDIDB	NAME=JNLIOCNT,-
		SSTRING=<>,-
		LSTRING=<Journal I/O Operation Rate>,-
		SIZE=LONG,-
		TYPE=COUNT,-
		ADDR=0

;
; IDB's for the JDEVICE class (some for JDEVICE are in JOURNALING class)
;

	BLDIDB	NAME=JDNQLEN,-
		SSTRING=<>,-
		LSTRING=<Normal Queue Length>,-
		SIZE=LONG,-
		TYPE=LEVEL,-
		ADDR=0

	BLDIDB	NAME=JDWQLEN,-
		SSTRING=<>,-
		LSTRING=<Wait Queue Length>,-
		SIZE=LONG,-
		TYPE=LEVEL,-
		ADDR=0

	BLDIDB	NAME=JDFQLEN,-
		SSTRING=<>,-
		LSTRING=<Force Queue Length>,-
		SIZE=LONG,-
		TYPE=LEVEL,-
		ADDR=0

	BLDIDB	NAME=JDEXCNT,-
		SSTRING=<>,-
		LSTRING=<Journal Extend Rate>,-
		SIZE=LONG,-
		TYPE=COUNT,-
		ADDR=0

;
; IDB's for the DLOCK class
;

	BLDIDB	NAME=ENQNEWLOC,-
		SSTRING=<>,-
		LSTRING=<New ENQ Rate       (Local)>,-
		SIZE=LONG,-
		TYPE=COUNT,-
		ADDR=PMS$GL_ENQNEW_LOC

	BLDIDB	NAME=ENQNEWIN,-
		SSTRING=<>,-
		LSTRING=<                (Incoming)>,-
		SIZE=LONG,-
		TYPE=COUNT,-
		ADDR=PMS$GL_ENQNEW_IN

	BLDIDB	NAME=ENQNEWOUT,-
		SSTRING=<>,-
		LSTRING=<                (Outgoing)>,-
		SIZE=LONG,-
		TYPE=COUNT,-
		ADDR=PMS$GL_ENQNEW_OUT

	BLDIDB	NAME=ENQCVTLOC,-
		SSTRING=<>,-
		LSTRING=<Converted ENQ Rate (Local)>,-
		SIZE=LONG,-
		TYPE=COUNT,-
		ADDR=PMS$GL_ENQCVT_LOC

	BLDIDB	NAME=ENQCVTIN,-
		SSTRING=<>,-
		LSTRING=<                (Incoming)>,-
		SIZE=LONG,-
		TYPE=COUNT,-
		ADDR=PMS$GL_ENQCVT_IN

	BLDIDB	NAME=ENQCVTOUT,-
		SSTRING=<>,-
		LSTRING=<                (Outgoing)>,-
		SIZE=LONG,-
		TYPE=COUNT,-
		ADDR=PMS$GL_ENQCVT_OUT

	BLDIDB	NAME=DEQLOC,-
		SSTRING=<>,-
		LSTRING=<DEQ Rate           (Local)>,-
		SIZE=LONG,-
		TYPE=COUNT,-
		ADDR=PMS$GL_DEQ_LOC

	BLDIDB	NAME=DEQIN,-
		SSTRING=<>,-
		LSTRING=<                (Incoming)>,-
		SIZE=LONG,-
		TYPE=COUNT,-
		ADDR=PMS$GL_DEQ_IN

	BLDIDB	NAME=DEQOUT,-
		SSTRING=<>,-
		LSTRING=<                (Outgoing)>,-

		SIZE=LONG,-
		TYPE=COUNT,-
		ADDR=PMS$GL_DEQ_OUT

	BLDIDB	NAME=BLKLOC,-
		SSTRING=<>,-
		LSTRING=<Blocking AST Rate  (Local)>,-
		SIZE=LONG,-
		TYPE=COUNT,-
		ADDR=PMS$GL_BLK_LOC

	BLDIDB	NAME=BLKIN,-
		SSTRING=<>,-
		LSTRING=<                (Incoming)>,-
		SIZE=LONG,-
		TYPE=COUNT,-
		ADDR=PMS$GL_BLK_IN

	BLDIDB	NAME=BLKOUT,-
		SSTRING=<>,-
		LSTRING=<                (Outgoing)>,-
		SIZE=LONG,-
		TYPE=COUNT,-
		ADDR=PMS$GL_BLK_OUT

	BLDIDB	NAME=DIRLOOK,-
		SSTRING=<>,-
		LSTRING=<Dir Lookup Rate (     ing)>,-
		SIZE=LONG,-
		TYPE=COUNT,-
		ADDR=0

	BLDIDB	NAME=DIRINS,-
		SSTRING=<>,-
		LSTRING=<Dir Insert Rate (     ing)>,-
		SIZE=LONG,-
		TYPE=COUNT,-
		ADDR=0

	BLDIDB	NAME=DIRDEL,-
		SSTRING=<>,-
		LSTRING=<Dir Delete Rate (     ing)>,-
		SIZE=LONG,-
		TYPE=COUNT,-
		ADDR=0

	BLDIDB	NAME=DIRIN,-
		SSTRING=<>,-
		LSTRING=<Dir Functn Rate (Incoming)>,-
		SIZE=LONG,-
		TYPE=COUNT,-
		ADDR=PMS$GL_DIR_IN

	BLDIDB	NAME=DIROUT,-
		SSTRING=<>,-
		LSTRING=<                (Outgoing)>,-
		SIZE=LONG,-
		TYPE=COUNT,-
		ADDR=PMS$GL_DIR_OUT

	BLDIDB	NAME=DLCKMSGS,-
		SSTRING=<>,-
		LSTRING=<Deadlock Message Rate>,-
		SIZE=LONG,-
		TYPE=COUNT,-
		ADDR=DLCKMSGS

;
; IDB's for the SCS class 
;

	BLDIDB	NAME=DGSENT,-
		SSTRING=<>,-
		LSTRING=<Datagram Send Rate>,-
		SIZE=LONG,-
		TYPE=COUNT,-
		ADDR=0

	BLDIDB	NAME=DGRCVD,-
		SSTRING=<>,-
		LSTRING=<Datagram Receive Rate>,-
		SIZE=LONG,-
		TYPE=COUNT,-
		ADDR=0

	BLDIDB	NAME=DGDISCARD,-
		SSTRING=<>,-
		LSTRING=<Datagram Discard Rate>,-
		SIZE=LONG,-
		TYPE=COUNT,-
		ADDR=0

	BLDIDB	NAME=MSGSENT,-
		SSTRING=<>,-
		LSTRING=<Message Send Rate>,-
		SIZE=LONG,-
		TYPE=COUNT,-
		ADDR=0

	BLDIDB	NAME=MSGRCVD,-
		SSTRING=<>,-
		LSTRING=<Message Receive Rate>,-
		SIZE=LONG,-
		TYPE=COUNT,-
		ADDR=0

	BLDIDB	NAME=SNDATS,-
		SSTRING=<>,-
		LSTRING=<Send Data Rate>,-
		SIZE=LONG,-
		TYPE=COUNT,-
		ADDR=0

	BLDIDB	NAME=KBYTSENT,-
		SSTRING=<>,-
		LSTRING=<Kbytes Send Rate>,-
		SIZE=LONG,-
		TYPE=COUNT,-
		ADDR=0

	BLDIDB	NAME=REQDATS,-
		SSTRING=<>,-
		LSTRING=<Request Data Rate>,-
		SIZE=LONG,-
		TYPE=COUNT,-
		ADDR=0

	BLDIDB	NAME=KBYTREQD,-
		SSTRING=<>,-
		LSTRING=<Kbytes Request Rate>,-
		SIZE=LONG,-
		TYPE=COUNT,-
		ADDR=0

	BLDIDB	NAME=KBYTMAPD,-
		SSTRING=<>,-
		LSTRING=<Kbytes Map Rate>,-
		SIZE=LONG,-
		TYPE=COUNT,-
		ADDR=0

	BLDIDB	NAME=QCR_CNT,-
		SSTRING=<>,-
		LSTRING=<Send Credit Queued Rate>,-
		SIZE=LONG,-
		TYPE=COUNT,-
		ADDR=0

	BLDIDB	NAME=QBDT_CNT,-
		SSTRING=<>,-
		LSTRING=<Buffer Descr. Queued Rate>,-
		SIZE=LONG,-
		TYPE=COUNT,-
		ADDR=0


;
; IDBs for VMS1 - VMS development class
;

	BLDIDB	NAME=VOLLCK,-
		SSTRING=<VOLLCK>,-
		LSTRING=<Volume Lock Req. Rate>,-
		SIZE=LONG,-
		TYPE=COUNT,-
		ADDR=PMS$GL_VOLLCK

	BLDIDB	NAME=SYNCHLCK,-
		SSTRING=<SYNCHLCK>,-
		LSTRING=<Other Sync Lock Req. Rate>,-
		SIZE=LONG,-
		TYPE=COUNT,-
		ADDR=PMS$GL_SYNCHLCK

	BLDIDB	NAME=SYNCHWAIT,-
		SSTRING=<SYNCHWAIT>,-
		LSTRING=<Other Sync Lock Wait Rate>,-
		SIZE=LONG,-
		TYPE=COUNT,-
		ADDR=PMS$GL_SYNCHWAIT

	BLDIDB	NAME=ACCLCK,-
		SSTRING=<ACCLCK>,-
		LSTRING=<Access Lock Req. Rate>,-
		SIZE=LONG,-
		TYPE=COUNT,-
		ADDR=PMS$GL_ACCLCK

	BLDIDB	NAME=XQPCACHEWAIT,-
		SSTRING=<XQPCACHEWAIT>,-
		LSTRING=<Cache Wait Rate>,-
		SIZE=LONG,-
		TYPE=COUNT,-
		ADDR=PMS$GL_XQPCACHEWAIT



;
; The CLASSTABLE will ultimately be generated by the BLDCDB macro; it is
; temporarily being hard-coded here.
;

classtable::
	

;
; The first longword below contains the count of longwords in CLASSTABLE
;

	.long	<<all_clsno + 1>*2>
	.long	10$
	.long	0
	.long	20$
	.long	1
	.long	30$
	.long	2
	.long	40$
	.long	3
	.long	50$
	.long	4
	.long	60$
	.long	5
	.long	70$
	.long	6
	.long	80$
	.long	7
	.long	90$
	.long	8
	.long	100$
	.long	9
	.long	110$
	.long	10
	.long	120$
	.long	11
	.long	130$
	.long	12
	.long	140$
	.long	13
	.long	150$
	.long	14
	.long	160$
	.long	15
	.long	170$
	.long	16
	.long	180$
	.long	17
;
;  Insert new classes here
;  ALL Pseudo-class must always be last class
;
	.long	1280$			
	.long	ALL_CLSNO		; ALL classes pseudo-class

max_class_no == 17			; maximum class number 
all_clsno == max_class_no + 1		; All-class pseudo-class number

10$:	.ascic	\PROCESSES\
20$:	.ascic	\STATES\
30$:	.ascic	\MODES\
40$:	.ascic	\PAGE\
50$:	.ascic	\IO\
60$:	.ascic	\FCP\
70$:	.ascic	\POOL\
80$:	.ascic	\LOCK\
90$:	.ascic	\DECNET\
100$:	.ascic	\JOURNALING\
110$:	.ascic	\RU\
120$:	.ascic	\FILE_SYSTEM_CACHE\
130$:	.ascic	\DISK\
140$:	.ascic	\JDEVICE\
150$:	.ascic	\DLOCK\
160$:	.ascic	\SCS\
170$:	.ascic	\VMS1\
180$:	.ascic	\SYSTEM\
					; Insert new classes here
1280$:	.ascic	\ALL_CLASSES\
.END
