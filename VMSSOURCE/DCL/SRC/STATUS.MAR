	.TITLE	STATUS - SET COMPLETION STATUS
	.IDENT	'V04-001'
 
;
;****************************************************************************
;*									    *
;*  COPYRIGHT (c) 1978, 1980, 1982, 1984 BY				    *
;*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
;*  ALL RIGHTS RESERVED.						    *
;* 									    *
;*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
;*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
;*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
;*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
;*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
;*  TRANSFERRED.							    *
;* 									    *
;*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
;*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
;*  CORPORATION.							    *
;* 									    *
;*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
;*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
;* 									    *
;*									    *
;****************************************************************************
;
; SET COMPLETION STATUS
;
; D. N. CUTLER 18-MAY-77
;
; MODIFIED BY:
;
;	V04-001	HWS0108		Harold Schultz	14-Sep-1984
;		In the case of SS$_EXCPUTIM, SS$_FORCEDEXIT, and
;		JBC$_JOBABORT  errors, execute an implicit EXIT command
;		with error status in order to unwind all command procedures.
;		If interactive, it will cause return to the command prompt.
;		If batch, it will cause the batch job to exit.
;
;	V03-004	PCG0005		Peter George	03-Jan-1984
;		Fix broken BSBW.
;
;	V03-003	PCG0004		Peter George	27-May-1983
;		Fix broken BRW.
;
;	V03-002	PCG0003		Peter George	28-Jan-1983
;		Remove references to the ONEXIT bit.
;
;	V03-001	PCG0002		Peter George	30-Dec-1982
;		Break DCL$SET_STATUS up into two routines.
;---

;
; MACRO LIBRARY CALLS
;
 
	PRCDEF				;DEFINE PROCESS WORK AREA
	WRKDEF				;DEFINE COMMAND WORK AREA
	$PSLDEF				;DEFINE PROCESSOR STATUS REGISTER FIELDS
	$JBCMSGDEF			;DEFINE JOB CONTROLLER ERROR MESSAGES 
	$STSDEF				;DEFINE STATUS LONG WORD VALUES
;
; LOCAL DATA
;
 
	.PSECT	DCL$ZCODE,BYTE,RD,NOWRT

DCL$T_DEFONTXT::			; DEFAULT ON TEXT
EXIT:	.ASCII	<5>/EXIT/<0>		;

	.SBTTL	SET COMPLETION STATUS
;+
; DCL$SET_STATUS - SET COMPLETION STATUS
;
; THIS ROUTINE IS CALLED TO SET THE COMPLETION STATUS OF A COMMAND. IT IS
; CALLED FROM A POINT AT WHICH INDIRECT FILES AND ALL OTHER CONTEXT CAN BE
; DESTROYED IF APPROPRIATE.
;
; INPUTS:
;
;	R0 = COMPLETION STATUS VALUE.
;
;	IT IS ASSUMED THAT "ON ERROR" CONDITIONS HAVE BEEN ESTABLISHED.
;
; OUTPUTS:
;
;	THE THREE COMPONENTS OF THE COMPLETION STATUS ARE CONVERTED TO ASCII
;	AND EQUATED TO THEIR RESPECTIVE SYMBOL NAMES.
;-
 
DCL$SET_STATUS::			;SET COMPLETION STATUS
	BLBC	R0,5$			;BR IF ERROR STATUS OF SOME KIND
	BBC	#WRK_V_NOSTAT,WRK_W_FLAGS(R10),5$ ; BR IF STATUS COMMAND
	BRW	40$			;OTHERWISE, DONE
5$:	DISABLE				;DISABLE CONTROL Y/C AST'S
	CLRQ	(SP)+			;REMOVE RETURN INFORMATION FROM STACK
	BSBB	DCL$SAVE_STATUS		;SET $STATUS AND $SEVERITY
;
; SPECIAL CASE SS$_EXCPUTIM , SS$_FORCEDEXIT, AND JBC$_JOBABORT ERRORS.
; SET THE LAST STATUS VALUE, FLUSH THE COMMAND BUFFER, AND SETUP TO EXECUTE
; THE EXIT COMMAND.
;
	BBS	#PRC_V_MODE,-		;BRANCH IF NOT INTERACTIVE
		PRC_W_FLAGS(R11),7$
	TSTL	PRC_L_INDEPTH(R11)	;ARE WE AT COMMAND LEVEL 0?
	BEQL	20$			;YES, PROCESS NORMALLY

7$:	BICL	#STS$M_CONTROL,R0	;INIT. CONTROL PORTION OF ERROR CODE
	CMPL	#SS$_EXCPUTIM,R0	;EXCEEDED CPU TIME ERROR?
	BEQL	10$			;YES, SPECIAL CASE IT
	CMPL	#JBC$_JOBABORT!STS$K_ERROR,R0	;JOB ABORT FROM JOB CONTROLLER?
	BEQL	10$			;YES, SPECIAL CASE IT
	CMPL	#SS$_FORCEDEXIT,R0	;FORCED EXIT ERROR?
	BNEQ	20$			;NO, PROCESS NORMALLY

10$:	MOVL	R0,PRC_L_LSTSTATUS(R11) ;SAVE LAST STATUS VALUE FOR PROCESS
	JSB	DCL$FLUSH		;FLUSH THE COMMAND BUFFER
	BRB	25$			;SETUP TO EXECUTE 'EXIT' COMMAND.

20$:	BBS	#PRC_V_YLEVEL,PRC_W_FLAGS(R11),40$ ;IF SET, CONTROL Y/C LEVEL
	MOVL	R0,PRC_L_LSTSTATUS(R11)	;SAVE LAST STATUS VALUE FOR PROCESS
	BLBS	R0,40$			;IF LBS SUCCESSFUL COMPLETION
	EXTZV	#0,#3,R0,R0		;EXTRACT SEVERITY LEVEL
	CMPB	R0,PRC_W_ONLEVEL(R11)	;FATAL ERROR?
	BLSS	40$			;IF LSS NO
	JSB	DCL$FLUSH		;FLUSH COMMAND BUFFER
	MOVL	PRC_L_ONERROR(R11),R0	;GET ADDRESS OF ON COMMAND TEXT
	BNEQ	30$			;IF NEQ COMMAND SPECIFIED
25$:	MOVAB	EXIT,R0			;GET ADDRESS OF EXIT COMMAND TEXT
30$:	MOVZBL	(R0)+,R1		;GET LENGTH OF ON COMMAND TEXT
	MOVC	R1,(R0),WRK_G_INPBUF(R10) ;MOVE COMMAND TO INPUT BUFFER
	MOVAB	WRK_G_INPBUF-1(R10),WRK_L_CHARPTR(R10) ;SET INPUT BUFFER POINTER
	BSBW	DCL$ONRESET		;RESET ON ERROR PARAMETERS
	JMP	DCL$CMDSTART		;EXECUTE ON COMMAND
40$:	RSB				;
 

	.SBTTL	SAVE COMPLETION STATUS
;+
; DCL$SAVE_STATUS - SET COMPLETION STATUS
;
; THIS ROUTINE IS CALLED TO SET $STATUS AND $SEVERITY.
;
; INPUTS:
;
;	R0 = COMPLETION STATUS VALUE.
;
; OUTPUTS:
;
;	THE TWO COMPONENTS OF THE COMPLETION STATUS ARE CONVERTED TO ASCII
;	AND EQUATED TO THEIR RESPECTIVE SYMBOL NAMES.
;-
 
DCL$SAVE_STATUS::			;SET $STATUS AND $SEVERITY

;
; IF ABBREVIATED CLI STATUS (REPRESENTED BY NEGATIVE NUMBER), THEN TRANSLATE
; TO A NORMAL STATUS.
;
	PUSHL	R0			;SAVE COMPLETION STATUS VALUE
 	BGEQ	10$			;IF GEQ NOT COMMAND INTERPRETER STATUS
	MNEGL	R0,R0			;NEGATE COMPLETION STATUS
	BISW	#^X0E000,R0		;ADD CLI SUBSYSTEM SPECIFY DIVIDED BY 4
	MULL3	#4,R0,(SP)		;CONVERT TO SCALED ERROR NUMBER

;
; SET UP $SEVERITY.
;
10$:	EXTZV	#0,#3,(SP),R0		;EXTRACT SEVERITY LEVEL
	ADDL	#^A/0/,R0		;CONVERT SEVERITY LEVEL TO ASCII
	MOVL	PRC_L_SEVERITY(R11),R1	;GET ADDRESS OF SEVERITY LEVEL VALUE
	MOVB	R0,(R1)			;SET SEVERITY LEVEL VALUE
	MOVW	#1,-2(R1)		;SET LENGTH OF SEVERITY LEVEL VALUE

;
; SET UP $STATUS.
;
	MOVL	PRC_L_STATUS(R11),R2	;GET ADDRESS OF STATUS VALUE VALUE
	MOVL	(SP),R0			;GET STATUS VALUE
	MOVW	#10,-2(R2)		;SET LENGTH OF STRING
	MOVW	#^A/%X/,(R2)+		;SET RADIX CONTROL CHARACTERS
	BSBW	DCL$CNVHXL		;CONVERT TO HEX LONGWORD

;
; RESTORE STATUS AND RETURN.
;
	POPL	R0			;RESTORE THE STATUS
	RSB				;RETURN

	.END
