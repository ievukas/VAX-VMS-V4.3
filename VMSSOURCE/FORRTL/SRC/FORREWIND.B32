MODULE FOR$REWIND (	! FORTRAN REWIND Statement
	IDENT = '1-007'	! File: FORREWIND.B32	! Edit SBL1007
		) =
BEGIN

!
!****************************************************************************
!*									    *
!*  COPYRIGHT (c) 1978, 1980, 1982, 1984 BY				    *
!*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
!*  ALL RIGHTS RESERVED.						    *
!* 									    *
!*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
!*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
!*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
!*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
!*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
!*  TRANSFERRED.							    *
!* 									    *
!*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
!*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
!*  CORPORATION.							    *
!* 									    *
!*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
!*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
!* 									    *
!*									    *
!****************************************************************************
!

!++
! FACILITY: FORTRAN Support Library, user callable
!
! ABSTRACT:
!
!	Contains routine FOR$REWIND: rewind a FORTRAN sequential
!	access file.
!
! ENVIRONMENT: Mixture of AST level or not.
!
! AUTHOR: Jonathan M. Taylor, CREATION DATE: 10-OCT-77
!
! MODIFIED BY:
!
! 	Jonathan M. Taylor, 10-OCT-77 : VERSION 0
! Previous edit history removed.  SBL 16-June-1982
! 1-001	- Update version number and copyright notice.  JBS 16-NOV-78
! 1-002	- Change REQUIRE file names from FOR... to OTS...  JBS 06-DEC-78
! 1-003	- Change prefix of LUN literals from OPEN to LUB.  JBS 13-DEC-78
! 1-004 - Implement ERR= and IOSTAT=.  SBL 1-May-1979
! 1-005 - Error instead of no-op on not open or direct.  SBL 2-May-1979
! 1-006 - 1-005 is a mistake.  No-op if not open, error if not
!	  sequential org and access.  SBL 16-May-1979
! 1-007 - Allow errors RMS$_IOP, RMS$_BOF and RMS$_EOF from $REWIND.
!	  Move declaration of ACTUALCOUNT.  Add SWITCHES.  SBL 16-June-1982
!--

!
! SWITCHES:
!

SWITCHES ADDRESSING_MODE (EXTERNAL = GENERAL, NONEXTERNAL = WORD_RELATIVE);

!
! LINKAGES:
!
REQUIRE 'RTLIN:OTSLNK';		! Define all linkages

!
! TABLE OF CONTENTS:
!

FORWARD ROUTINE
	FOR$REWIND;			! FORTRAN REWIND statement processor

!
! INCLUDE FILES:
!

REQUIRE 'RTLML:FORERR';			! FORTRAN error number definitions
REQUIRE	'RTLML:OTSLUB';			! Logical Unit Block definitions
REQUIRE 'RTLIN:OTSMAC';			! Macros
REQUIRE 'RTLIN:RTLPSECT';		! Define DECLARE_PSECTS macro
REQUIRE 'RTLML:OTSISB';			! ISB definitions
REQUIRE 'RTLML:FORPAR';			! FORTRAN inter-module parameters
	LIBRARY 'RTLSTARLE';		! STARLET library for macros and symbols
!
! MACROS:
!	NONE

!
! EQUATED SYMBOLS:
!	NONE


!
! OWN STORAGE:
!	NONE

!
! EXTERNAL REFERENCES:
!
EXTERNAL ROUTINE
	FOR$$IOSTAT_HND,		! error condition handler
	FOR$$SIGNAL_STO: NOVALUE,	! convert error number and signal
	FOR$$CB_PUSH: JSB_CB_PUSH NOVALUE,	! create LUB/ISB/RAB, if needed
	FOR$$CB_POP: JSB_CB_POP NOVALUE;	! return I/O system to previous state

!
! PSECT DECLARATIONS:
!

	DECLARE_PSECTS (FOR);		! declare PSECTS for FOR$ facility

GLOBAL ROUTINE FOR$REWIND (
	UNIT,
	ERR_EQL)
	=

!++
! FUNCTIONAL DESCRIPTION:
!
!	Perform RMS rewind operation on the file specified by the
!	UNIT parameter.
!
! FORMAL PARAMETERS:
!
!	UNIT.rlu.v		Logical unit number
!	ERR_EQL.rl.v		If 0 or not present, signal errors
!				If non-zero, unwind to caller.
!
! IMPLICIT INPUTS:
!
!	LUB$V_DIRECT		This unit has previously been specified
!				for direct access by an OPEN statement or
!				DEFINE FILE.
!	LUB$V_OPENED		This unit has already been opened by
!				an OPEN statement or default open.
!
! IMPLICIT OUTPUTS:
!
!	LUB$L_LOG_RECNO		set to 1.
!
! ROUTINE VALUE: 
!
!	An IOSTAT value.
!
! SIDE EFFECTS:
!
!	SIGNAL_STOPs FOR$_REWERR if a non-EOF error is returned from
!	the RMS rewind call.
!
!--

    BEGIN

    GLOBAL REGISTER
	CCB = 11: REF BLOCK[, BYTE];

    LOCAL
	STATUS,				! Return status from $REWIND
	L_UNWIND_ACTION: VOLATILE,	! Unwind action code (FOR$K_UNWIND{POP or NOP})
	L_ERR_EQL_PRES: VOLATILE;	! 1 if ERR= present

    BUILTIN
	ACTUALCOUNT;

    ENABLE
	FOR$$IOSTAT_HND (L_UNWIND_ACTION, L_ERR_EQL_PRES);
					! pass info to error handler

    !+
    ! Determine if ERR= is present.
    !-

    IF ACTUALCOUNT () GTR 1 
    THEN
	L_ERR_EQL_PRES = .ERR_EQL
    ELSE
	L_ERR_EQL_PRES = 0;

    !+
    ! Set up error handler conditions in case CB_PUSH bombs
    !-

    L_UNWIND_ACTION = FOR$K_UNWINDNOP;

    !+
    ! Get a LUB for this logical unit.
    ! On return, CCB points to the current control block.
    !-

    FOR$$CB_PUSH (.UNIT, LUB$K_LUN_MIN);

    !+
    ! Unwind action (if an error occurs) is now to pop a LUB.
    !-

    L_UNWIND_ACTION = FOR$K_UNWINDPOP;

    !+
    ! Check the LUB.  If file is not open, then this is a no-op.
    ! Else must be sequential organization and access.
    !-

    IF .CCB [LUB$V_OPENED]
    THEN
	IF NOT .CCB [LUB$V_DIRECT] AND NOT .CCB [LUB$V_NOTSEQORG]
	THEN
	    BEGIN

	    !+
	    ! Call RMS to REWIND the file, all failure codes returned
	    ! cause a SIGNAL_STOP to occur, except for IOP, EOF or BOF.
	    !-

	    IF NOT (STATUS = $REWIND (RAB = .CCB))
	    THEN
		BEGIN
		IF .STATUS NEQ RMS$_IOP AND
		   .STATUS NEQ RMS$_EOF AND
		   .STATUS NEQ RMS$_BOF
		THEN
		    BEGIN
	            FOR$$SIGNAL_STO (FOR$K_REWERR);
		    RETURN 0;
		    END;
		END;

	    !+
	    ! Clear APPEND flag - OK for backspace now
	    !-

	    CCB[LUB$V_APPEND] = 0;

	    !+
	    ! Set the logical record number to 1.
	    !-

	    CCB[LUB$L_LOG_RECNO] = 1;

	    END
	ELSE
	    BEGIN
	    FOR$$SIGNAL_STO (FOR$K_REWERR);
	    RETURN 0;
	    END;

    !+
    ! Return the file system to its former state.
    !-

    FOR$$CB_POP ();
    RETURN 0;		! Success IOSTAT value
    END;

END				!End of module
ELUDOM
