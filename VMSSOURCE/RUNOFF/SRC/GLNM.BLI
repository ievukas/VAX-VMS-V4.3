MODULE glnm (	IDENT = 'V04-000'
		%BLISS32[, ADDRESSING_MODE (EXTERNAL    = LONG_RELATIVE,
					    NONEXTERNAL = LONG_RELATIVE)]
		) =
BEGIN
!
!****************************************************************************
!*									    *
!*  COPYRIGHT (c) 1978, 1980, 1982, 1984 BY				    *
!*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
!*  ALL RIGHTS RESERVED.						    *
!* 									    *
!*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
!*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
!*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
!*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
!*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
!*  TRANSFERRED.							    *
!* 									    *
!*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
!*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
!*  CORPORATION.							    *
!* 									    *
!*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
!*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
!* 									    *
!*									    *
!****************************************************************************
!
!++
! FACILITY:	DSR (Digital Standard RUNOFF) / DSRPLUS
!
! ABSTRACT:	Get a list of numbers
!
! ENVIRONMENT:	Transportable
!
! AUTHOR:	R.W.Friday	 CREATION DATE: May, 1978
!


%SBTTL 'Revision History'
!
! MODIFIED BY:
!
!	004	RER00004	Ron Randall	07-Mar-1983
!		Global edit of all modules. Updated module names, idents,
!		copyright dates. Changed require files to BLISS library.
!
!--


%SBTTL 'Module Level Declarations'

!
! TABLE OF CONTENTS:
!
! INCLUDE FILES:
!
LIBRARY 'NXPORT:XPORT';			! XPORT Library
REQUIRE 'REQ:RNODEF';			! RUNOFF variant definitions

%IF DSRPLUS %THEN
LIBRARY 'REQ:DPLLIB';			! DSRPLUS BLISS Library
%ELSE
LIBRARY 'REQ:DSRLIB';			! DSR BLISS Library
%FI

!
! EXTERNAL REFERENCES:
!
EXTERNAL
    IRA : FIXED_STRING,
    KHAR,
    NMLST : NUMBER_LIST;

EXTERNAL ROUTINE
    GETNUM,
    RSKIPS;


GLOBAL ROUTINE GLNM (COUNT) : NOVALUE =

!++
! FUNCTIONAL DESCRIPTION:
!
!	Calls GETNUM to pick up "count" numbers, at most.
! Stops when a character is encountered that is not a comma,
! and GETNUM has previously returned a null value.
!
! FORMAL PARAMETERS:
!
!	'COUNT' specifies the maximum number of numbers wanted.
!
! IMPLICIT INPUTS:	None
!
! IMPLICIT OUTPUTS:	None
!
! ROUTINE VALUE:
! COMPLETION CODES:	None
!
! SIDE EFFECTS:		None
!--

    BEGIN
    LOCAL
	GETNUM_RESULT,
	KOUNT,
	NUMBER_SIGN,
	NUMBER_VALUE,
	NUMBER_LENGTH;

    NMLST_COUNT = 0;
    !If COUNT is greater than zero, then the list can be that long,
    !at most.  If COUNT is less than or equal to zero, pick up as many
    !numbers as space is reserved for.

    IF  .COUNT GTR 0
    THEN
	KOUNT = .COUNT
    ELSE
	KOUNT = NMLST_MAXSIZE;

    INCR I FROM 1 TO .KOUNT DO
	BEGIN
	GETNUM_RESULT = GETNUM (IRA, NUMBER_VALUE, NUMBER_SIGN, NUMBER_LENGTH);
	RSKIPS (IRA);				!Skip spaces and tabs trailing a number.

	IF  .GETNUM_RESULT
	THEN
	    BEGIN				!Number was ok.

	    IF  .NUMBER_LENGTH EQL 0
	    THEN
		BEGIN

		IF  .KHAR EQL %C','
		THEN
		    BEGIN			!It really is a null number, not the end of the list
		    NMLST_COUNT = .I;
		    NMLST_VALUE (.I) = 0;
		    NMLST_DESCR (.I) = NM_NULL;
		    KCNS ();			!Skip the ','
		    END
		!No more numbers in the list.
		ELSE
		    RETURN;

		END
	    ELSE
		BEGIN				!Not a null number
		RSKIPS (IRA);			!Skip trailing spaces and tabs.

		IF  (.KHAR EQL %C',') AND
		    (.I NEQ .KOUNT)		!Don't skip any characters after the last item in the list
		THEN
		    KCNS ();			!Skip trailing comma.

		NMLST_COUNT = .I;
		NMLST_VALUE (.I) = .NUMBER_VALUE;
		NMLST_DESCR (.I) = (IF .NUMBER_SIGN EQL 1
		THEN NM_PLUS ELSE IF .NUMBER_SIGN EQL -1
		    THEN NM_MINUS ELSE NM_UNSIGNED);
		END

	    END
	ELSE
	    BEGIN				!Number in error.
	    RSKIPS (IRA);			!Skip trailing spaces and tabs.

	    IF  (.KHAR EQL %C',') AND
		(.I NEQ .KOUNT)		!Don't skip any characters after the last item in the list
	    THEN
		KCNS ();				!Skip trailing comma.

	    NMLST_COUNT = .I;
	    NMLST_VALUE (.I) = .NUMBER_VALUE;
	    NMLST_DESCR (.I) = NM_BAD;
	    END;

	END;

    END;					!End of GLNM

END						!End of module
ELUDOM
