{
{ Version:	'V04-000'
{
{****************************************************************************
{*									    *
{*  COPYRIGHT (c) 1978, 1980, 1982, 1984 BY				    *
{*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
{*  ALL RIGHTS RESERVED.						    *
{* 									    *
{*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
{*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
{*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
{*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
{*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
{*  TRANSFERRED.							    *
{* 									    *
{*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
{*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
{*  CORPORATION.							    *
{* 									    *
{*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
{*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
{* 									    *
{*									    *
{****************************************************************************

{ This is a definition of the various data structures required by the 
{  TSTCNTRL.  It includes definitions for the various bit flags as well
{  as for the major data structures.
{
{ CREATION DATE:       13-JUL-1982
{ AUTHOR:              Brian A. Axtell
{ MODIFIED BY:
{
{	V03-003	BAA0002		Brian A. Axtell,	17-Jan-1984
{		Added ASSIGN$M_PAR flag.
{
{	V03-002	BAA0001		Brian A. Axtell,	16-Dec-1982
{		Modified the way PRCINFO$_FLAGS was defined.
{
{	V03-001	LDJ0001		Larry D. Jones,		16-Dec-1982
{		Changed the name to remove the double DEF.

MODULE TCNTRL;

/*
/* first define the major data structure
/*
	#MAXRSS = 252;

	AGGREGATE PRC_INFO STRUCTURE PREFIX PRCINFO$;
		FLINK ADDRESS;
		BLINK ADDRESS;
		FINALSTS LONGWORD;
		PID LONGWORD;
		TERMTIME QUADWORD;
		CPUTIM LONGWORD;
		PAGEFLTS LONGWORD;
		PGFLPEAK LONGWORD;
		WSPEAK LONGWORD;
		BIOCNT LONGWORD;
		DIOCNT LONGWORD;
		LOGIN QUADWORD;
		FLAGS_OVERLAY UNION;
		FLAGS LONGWORD UNSIGNED;
		FLAGS_BITS STRUCTURE;
			MBX_CHAN BITFIELD MASK;
			PROC_ABORTED BITFIELD MASK;
			FLG_FILLER BITFIELD LENGTH 32 - ^;
			END FLAGS_BITS;
		END FLAGS_OVERLAY;
		MBX_CHAN WORD;
		ID_NUMB WORD;
		NODE ADDRESS;
		DEVICE ADDRESS;
		DIRECTORY ADDRESS;
		FILNAM ADDRESS;
		EXTENSION ADDRESS;
		VERSION ADDRESS;
		FILESPEC_SIZ WORD;
		NODE_SIZ WORD;
		DEVICE_SIZ WORD;
		DIR_SIZ WORD;
		FILNAM_SIZ WORD;
		EXTENSION_SIZ WORD;
		VERSION_SIZ WORD;
		SPARE WORD;
		SPARE LONGWORD;
		FILE_SPEC CHARACTER LENGTH #MAXRSS;
	END PRC_INFO;

/*
/*   Define the bit fields for the flag.
/*
	AGGREGATE FLG STRUCTURE PREFIX TCNTRL$;
		FRST_FILE_REACHED BITFIELD MASK;  /* have we reached the first process to start?
		STRT_MORE BITFIELD MASK;  /* do we need to start more processes?
		DELETE_TEMP_LOG BITFIELD MASK;  /* do we delete the temporary log files?
		LONG_REPORT BITFIELD MASK; /* is this a long (or short) report?
		ABLE_TO_WRAP BITFIELD MASK;  /* are we able to wrap-around if need to?
		WRT_MSG BITFIELD MASK;  /* should we write this message out?
		PRNT_COMMENTS BITFIELD MASK;  /* do we print the comments out?
		SET_LOGNAM BITFIELD MASK;  /* is the main log file name set?
		TIMER_SET BITFIELD MASK;  /* is the watchdog timer currently set and running?
		TERMINAL BITFIELD MASK;  /* are we running from a terminal?
		REWOUND BITFIELD MASK;  /* the data file has been rewound
		EXIT BITFIELD MASK;  /* is it time to exit?
		PROC_PEND BITFIELD MASK; /* is a process pending to be run?
		ABORT BITFIELD MASK;  /* we are aborting the TSTCNTRL
		TIME_EXP BITFIELD MASK; /* watchdog timer has expired
		EXIT_HAND BITFIELD MASK; /* we have gone through the exit handler
		PROC_NUKED BITFIELD MASK; /* the running procs. nuked by $DELPRC
		FILLER BITFIELD LENGTH 32-^;
	END FLG;

/*
/* Define the bit fields for the main control case statement.
/*
	AGGREGATE CNTRL_CASE STRUCTURE PREFIX CASE$;
		ABORT BITFIELD MASK;  /* do abnormal abortion of TSTCNTRL
		TIME_EXP BITFIELD MASK;  /* handler expiration of timer
		PROC_TERM BITFIELD MASK;  /* do process termination routine
		EOF BITFIELD MASK;  /* do end-of-file routine
		FILE BITFIELD MASK;  /* do the file routine
		ASSIGN BITFIELD MASK;  	/* do the assignment routine
		CREATE_PROC BITFIELD MASK;  /* do the create process routine
		PARSE BITFIELD MASK;  /* do the parse routine
		#BITS = ^;
		CONSTANT CNTRL_CASE_SIZE EQUALS #BITS;
		FILLER BITFIELD LENGTH 32 - #BITS;
	END CNTRL_CASE;

/*
/* Define the bit fields for the create process case statement.
/*
	AGGREGATE CRT_PROC_CASE STRUCTURE PREFIX CRTPRC$;
		EXE BITFIELD MASK;  /* it is an executable image
		EXE_PARM BITFIELD MASK;  /* it is an image with parameters
		COM BITFIELD MASK;  /* it is a command procedure
		COM_PARM BITFIELD MASK; /* it is a command procedure with parameters
		NULL BITFIELD MASK;  /* it is a null filespec
		#BITS = ^;
		CONSTANT CREAT_CASE_SIZE EQUALS #BITS;
		FILLER BITFIELD LENGTH 32 - #BITS;
	END CRT_PROC_CASE;

/*
/* Define the bit fields for the parse flags
/*
	AGGREGATE PRSE_FLAGS STRUCTURE PREFIX PARSE$;
		PROC_RUNS_OTHERS BITFIELD MASK;  /* process must run alone (0)
		GET_NXT_RCRD BITFIELD MASK;  /* get next data record
		#BITS = ^;
		FILLER BITFIELD LENGTH 32 - #BITS;
	END PRSE_FLAGS;

/*
/* Define the bit fields for the assignment case
/*
	AGGREGATE ASGN_CASE STRUCTURE PREFIX ASSIGN$;
		LOG BITFIELD MASK;  /* alter logfile name
		NAME BITFIELD MASK;  /* change process name
		START BITFIELD MASK;  /* change starting sentinel
		STOP BITFIELD MASK;  /* change stopping sentinel
		COM BITFIELD MASK;  /* comment
		TIME BITFIELD MASK; /* maxtime
		PAR BITFIELD MASK;  /* change parallel count
		#BITS = ^;
		CONSTANT ASGN_CASE_SIZ EQUALS #BITS;
		FILLER BITFIELD LENGTH 32 - #BITS;
	END ASGN_CASE;
END_MODULE;
