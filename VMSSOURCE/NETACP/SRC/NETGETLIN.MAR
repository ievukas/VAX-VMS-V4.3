	.TITLE	NETGETLIN - Check for DECnet license
	.IDENT	'V04-000'

;****************************************************************************
;*									    *
;*  COPYRIGHT (c) 1978, 1980, 1982, 1984 BY				    *
;*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
;*  ALL RIGHTS RESERVED.						    *
;* 									    *
;*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
;*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
;*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
;*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
;*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
;*  TRANSFERRED.							    *
;* 									    *
;*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
;*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
;*  CORPORATION.							    *
;* 									    *
;*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
;*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
;* 									    *
;*									    *
;****************************************************************************
;


;++
; FACILITY:	NETWORK ACP
;
; ABSTRACT:	The module implements the so called "software key" which
;		disables the turning on of circuits unless the customer
;		has installed his DECnet license.  It is the intent that
;		this module be concealed from the customer -- that is
;		it is not part of the source fiche.
; 
;
; ENVIRONMENT:	Kernel mode 
;
; AUTHOR:	A.Eldridge, CREATION DATE: 24-NOV-81
;
; MODIFIED BY:
;
;	V03-012	PRB0347		Paul Beck	13-Aug-1984  15:42
;		Change base test pattern so V3 key won't install on V4 image.
;
;	V03-011	PRB0345		Paul Beck	8-Aug-1984  14:16
;		Change key for V4.0.
;
;	V03-010	PRB0330		Paul Beck	11-Apr-1984  22:11
;		Allow routing license to be added to image already containing 
;		endnode license. Also, change the key for FT2.
;
;	V03-009	PRB0307		Paul Beck	20-Jan-1984  14:52
;		Improve security.
;
;	V008	TMH0008		Tim Halvorsen	28-Apr-1983
;		Change master pattern for routing license.
;
;	V007	TMH0007		Tim Halvorsen	15-Feb-1983
;		Add endnode license.
;
;	V006	TMH0006		Tim Halvorsen	08-Jul-1982
;		Remove $LPDDEF definition.
;
;	V005	TMH0005		Tim Halvorsen	13-Apr-1982
;		Make $$$LICENSE psect GBL, so that it can be
;		explicitly based at location 200.
;
;	V004	TMH0004		Tim Halvorsen	08-Mar-1982
;		Make the key a little tougher, by duplicating the code
;		several times, and changing the sense of the branches.
;
;	V01-02	ADE0013		A.Eldridge	13-Dec-1981
;		Return SS$_NOLICENSE if user doesn't have a DECnet license.
;
;	V01-02	ADE0012		A.Eldridge	22-Dec-1981
;		Layer executeable code in between the two halves of the 
;		"software key" in order to make it harder for a user without
;		a DECnet license to defeat the mechanism by patching out the
;		key or the code which checks it.
;
;	V01-01	ADE0011		A.Eldridge	22-Dec-1981
;		Fix stack problem.
;-

	.SBTTL	DECLARATIONS

;
; Macros
;
	.MACRO	ERROR_RETURN	ERRCOD,BRANCH
		MOVL	#ERRCOD,R0
		ADDL2	#<SS$_NOLICENSE-ERRCOD>,R0
		.IF	NOT_BLANK,BRANCH
		BRB	BRANCH
		.ENDC
	.ENDM
;
; OWN STORAGE:
;
	.PSECT	$$$LINECNF,NOWRT,NOEXE,GBL,LONG

;
;  This license area dictates what the user is allowed to do on the system.
;

KEY_SIZE = 32 * 4		; Size of software key

				; This should be at VA 200 !
	  .LONG	19383828	; Patch should verify here for routing key.
	  .LONG	23478657
	  .LONG 33797928
	  .LONG 44256098

LICENSE:			; This should be at VA 210 !
	  .LONG	19383828	; Patch should verify here for endnode key.
	  .LONG	23478657
	  .LONG 33797928		
	  .LONG 44256098

	  .LONG 10293847
	  .LONG 67584392
	  .LONG 89894643
	  .LONG 14144309

	  .LONG 15656453
	  .LONG 19398732
	  .LONG 17437664
	  .LONG 66625252

	  .LONG 18383838
	  .LONG 84847676
	  .LONG 48484874
	  .LONG 28282756

	  .LONG 38383737
	  .LONG 84865846
	  .LONG 40404665
	  .LONG 90871465

	  .LONG 65320987
	  .LONG 65857436
	  .LONG 48762246
	  .LONG 48477676

	  .LONG 48487676
	  .LONG 49848773
	  .LONG 49483727
	  .LONG 49478370

	  .LONG 48473737
	  .LONG 49494943
	  .LONG 49483272
	  .LONG 29299695


	.SBTTL	Check if DECnet license installed
;+
; NET$GET_VEC	- Check to see if user has a DECnet license.
;
; This routine is called just before a circuit is started up.  Its purpose is
; to check to see if the user has a DECnet license before continuing.  The
; comments to this effect in the caller's code (in NETDLLTRN) are somewhat
; incomplete and misleading so as not to allow customers to easily develop
; a patch to override this check.
;
; Layering the code in between two halves of the software key should
; make it harder for the user without a DECnet license to find the code
; which does the checking, or to setup the two halves of the key such
; that they match. 
;
; INPUTS:	R0	Scratch
;
; OUTPUTS:	R0	SS$_NORMAL	if successful
;			SS$_NOLICENSE	otherwise
;
;		All other registers are unmodified.
;-
NET$GET_VEC::				; True if circuit can be started
	PUSHR	#^M<R1,R2,R3,R4,R5>	; Save regs
	CMPC3	#KEY_SIZE,LICENSE,ROUTING_KEY ; Does user have a DECnet license?
	BEQL	100$			; If yes
	CMPC3	#KEY_SIZE,LICENSE,ENDNODE_KEY ; Does user have a DECnet license?
	BEQL	100$			; If yes
	ERROR_RETURN SS$_NOSUCHDEV,200$
100$:	MOVL	S^#SS$_NORMAL,R0	; Indicate success
200$:	POPR	#^M<R1,R2,R3,R4,R5>	; Restore regs
	RSB				; Return to caller

NET$GET_RTG::				; True if routing key installed
	PUSHR	#^M<R1,R2,R3,R4,R5>	; Save regs
	CMPC3	#KEY_SIZE,LICENSE,ROUTING_KEY ; Does user have a DECnet license?
	BEQL	100$			; If yes
	ERROR_RETURN SS$_NOSUCHNODE,200$
100$:	MOVL	S^#SS$_NORMAL,R0	; Indicate success
200$:	POPR	#^M<R1,R2,R3,R4,R5>	; Restore regs
	RSB				; Return to caller

NET$GET_END::				; True if endnode key installed
	PUSHR	#^M<R1,R2,R3,R4,R5>	; Save regs
	CMPC3	#KEY_SIZE,LICENSE,ENDNODE_KEY ; Does user have a DECnet license?
	BEQL	100$			; If yes
	ERROR_RETURN SS$_NOSUCHNODE,200$
100$:	MOVL	S^#SS$_NORMAL,R0	; Indicate success
200$:	POPR	#^M<R1,R2,R3,R4,R5>	; Restore regs
	RSB				; Return to caller

	.SBTTL	Routing software key

;
; This is the pattern, which, if it matches the key area, allows the
; node to operate as a full router or an endnode.
;

ROUTING_KEY:

	.LONG 113396560
	.LONG 342183894
	.LONG 740531627
	.LONG 130366721

	.LONG 426951524
	.LONG 321526364
	.LONG 250953094
	.LONG 335425650

	.LONG 309101349
	.LONG 256671389
	.LONG 148912978
	.LONG 362742859

	.LONG 389204956
	.LONG 6729418
	.LONG 241030624
	.LONG 160958878

	.LONG 428764502
	.LONG 354358661
	.LONG 153248949
	.LONG 167745108

	.LONG 169677586
	.LONG 351286972
	.LONG 392085726
	.LONG 241565656

	.LONG 229717802
	.LONG 256791684
	.LONG 658493179
	.LONG 143821224

	.LONG 387920282
	.LONG 229505064
	.LONG 312419706
	.LONG 110930803

	.SBTTL	Endnode software key

;
; This is the pattern, which, if it matches the key area, allows the
; node to operate as an endnode.
;

ENDNODE_KEY:

	.LONG 330487864
	.LONG 179730182
	.LONG 425790979
	.LONG 146713199

	.LONG 151451577
	.LONG 297775757
	.LONG 865763783
	.LONG 297290185

	.LONG 148825475
	.LONG 381214644
	.LONG 356204970
	.LONG 271722769

	.LONG 242036529
	.LONG 414805439
	.LONG 588917845
	.LONG 117052582

	.LONG 976075433
	.LONG 315917820
	.LONG 146304349
	.LONG 314548570

	.LONG 375669578
	.LONG 360069049
	.LONG 138826451
	.LONG 581895399

	.LONG 103392990
	.LONG 448509028
	.LONG 364605442
	.LONG 142816074

	.LONG 104036337
	.LONG 703743506
	.LONG 140928384
	.LONG 214978956


	.SBTTL	MORE ROUTINES TO CHECK LICENSE

	.PSECT	NET_CODE,NOWRT,EXE

;+
; NET$GET_VEC2,3 - Check to see if user has a DECnet license.
;
; This routine is called just before a circuit is started up.  Its purpose is
; to check to see if the user has a DECnet license before continuing.  The
; comments to this effect in the caller's code (in NETDLLTRN) are somewhat
; incomplete and misleading so as not to allow customers to easily develop
; a patch to override this check.
;
; INPUTS:	R6	LPD address
;		R0	Scratch
;
; OUTPUTS:	R0	SS$_NORMAL	if successful
;			SS$_NOLICENSE	otherwise
;
;		All other registers are unmodified.
;-

NET$GET_VEC2::				; True if circuit can be started
	PUSHR	#^M<R1,R2,R3,R4,R5>	; Save regs
	CMPC3	#KEY_SIZE,LICENSE,ROUTING_KEY ; Does user have a DECnet license?
	BEQL	100$			; If yes
	CMPC3	#KEY_SIZE,LICENSE,ENDNODE_KEY ; Does user have a DECnet license?
	BEQL	100$			; If yes
	ERROR_RETURN SS$_NOSUCHNODE,200$
100$:	MOVL	S^#SS$_NORMAL,R0	; Indicate success
200$:	POPR	#^M<R1,R2,R3,R4,R5>	; Restore regs
	RSB				; Return to caller

NET$GET_VEC3::				; True if circuit can be started
	PUSHR	#^M<R1,R2,R3,R4,R5>	; Save regs
	CMPC3	#KEY_SIZE,LICENSE,ROUTING_KEY ; Does user have a DECnet license?
	BEQL	100$			; If yes
	CMPC3	#KEY_SIZE,LICENSE,ENDNODE_KEY ; Does user have a DECnet license?
	BEQL	100$			; If yes
	ERROR_RETURN SS$_NOSUCHNODE,200$
100$:	MOVL	S^#SS$_NORMAL,R0	; Indicate success
200$:	POPR	#^M<R1,R2,R3,R4,R5>	; Restore regs
	RSB				; Return to caller

;
; Additional endnode key routines
;

NET$GET_RTG2::				; True if routing function to remote
					; node is allowed
	PUSHR	#^M<R1,R2,R3,R4,R5>	; Save regs
	CMPC3	#KEY_SIZE,LICENSE,ROUTING_KEY ; Does user have a DECnet license?
	BEQL	100$			; If yes
	ERROR_RETURN SS$_NOSUCHNODE,200$
100$:	MOVL	S^#SS$_NORMAL,R0	; Indicate success
200$:	POPR	#^M<R1,R2,R3,R4,R5>	; Restore regs
	RSB				; Return to caller

NET$GET_RTG3::				; True if routing function to remote
					; node is allowed
	PUSHR	#^M<R1,R2,R3,R4,R5>	; Save regs
	CMPC3	#KEY_SIZE,LICENSE,ROUTING_KEY ; Does user have a DECnet license?
	BEQL	100$			; If yes
	ERROR_RETURN SS$_NOSUCHNODE,200$
100$:	MOVL	S^#SS$_NORMAL,R0	; Indicate success
200$:	POPR	#^M<R1,R2,R3,R4,R5>	; Restore regs
	RSB				; Return to caller

.END
