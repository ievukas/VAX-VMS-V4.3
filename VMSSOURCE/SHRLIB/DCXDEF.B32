 !	DCX Public Structure Definitions 
 ! 
 !	Version 'V04-000' 
 ! 
 !**************************************************************************** 
 !*									    * 
 !*  COPYRIGHT (c) 1978, 1980, 1982, 1984 BY				    * 
 !*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    * 
 !*  ALL RIGHTS RESERVED.						    * 
 !* 									    * 
 !*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   * 
 !*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   * 
 !*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   * 
 !*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   * 
 !*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   * 
 !*  TRANSFERRED.							    * 
 !* 									    * 
 !*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   * 
 !*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   * 
 !*  CORPORATION.							    * 
 !* 									    * 
 !*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   * 
 !*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    * 
 !* 									    * 
 !*									    * 
 !**************************************************************************** 
 ! 
 ! MODIFIED BY: 
 ! 
  
 ! Item list definitions 
 ! 
 !...$DCXDEF	
  
 LITERAL	
 $EQULST (DCX$C_,GBL,1,1 			! Special items 
 	,(LIST,) 				! Sublist of items 
 	); 
 LITERAL	
 $EQULST (DCX$C_,GBL,257,1 		! Base for bit item codes 
 	,(BOUNDED,) 				! Bounded compression bit 
 	,(ONE_PASS,) 			! One analysis pass bit 
 	); 
 LITERAL	
 $EQULST (DCX$C_,GBL,513,1 		! Base for Longword item codes 
 	,(EST_RECORDS,) 			! Estimated number of records 
 	,(EST_BYTES,) 			! Estimated number of data bytes 
 	); 

  
 ! 
 ! DCX map structure definition 
 ! 
 !	This is a public structure whose interpretation must be preserved 
 !	accross new releases of VMS. 
 ! 
  
 !...$DCXMAPDEF	
  
 MACRO		DCXMAP$L_SIZE	= 0,0,32,0%; 			! Length of map 
 MACRO		DCXMAP$W_VERSION	= 4,0,16,0%; 		! Version number 
 LITERAL	
 $EQULST (DCXMAP$C_,GBL,0,1  
 	,(VERSION,0) 			! Current version number 
 	); 
 MACRO		DCXMAP$L_SANITY	= 8,0,32,0%; 		! Sanity check longword 
 LITERAL	
 $EQULST (DCXMAP$C_,GBL,0,1  
 	,(SANITY,1542824871) 		! Sanity check value 
 	); 
 MACRO		DCXMAP$L_FLAGS	= 12,0,32,0%; 			! Flags longword 
 			 
 MACRO		DCXMAP$V_UNIVERSAL	= 12,0,1,0%; 		! Universal mapping 
 			
 MACRO		DCXMAP$W_NSUBS	= 16,0,16,0%; 			! Number of sub-maps which follow 
 MACRO		DCXMAP$W_SUB0	= 18,0,16,0%; 			! Offset of initial sub-map 
 LITERAL	DCXMAP$C_LENGTH	= 20; 
 LITERAL	DCXMAP$K_LENGTH	= 20; 				! Length of fixed map area 

  
 !...$DCXSBMDEF	
  
 MACRO		DCXSBM$W_SIZE	= 0,0,16,0%; 			! Size of submap 
 MACRO		DCXSBM$B_MIN_CHAR	= 2,0,8,0%; 		! Minimum character represented 
 MACRO		DCXSBM$B_MAX_CHAR	= 3,0,8,0%; 		! Maximum character represented 
 MACRO		DCXSBM$B_ESCAPE	= 4,0,8,0%; 		! Escape character 
 			 
 MACRO		DCXSBM$V_ESCAPE	= 5,0,1,0%; 			! Escape cell valid 
 MACRO		DCXSBM$V_UNBOUNDED	= 5,1,1,0%; 		! Unbounded encoding here 
 			
 MACRO		DCXSBM$W_FLAGS	= 6,0,16,0%; 			! Offset of flag bits vector 
 MACRO		DCXSBM$W_NODES	= 8,0,16,0%; 			! Offset of nodes vector 
 MACRO		DCXSBM$W_NEXT	= 10,0,16,0%; 			! Offset of next sub-map index vector 
 LITERAL	DCXSBM$C_LENGTH	= 12; 
 LITERAL	DCXSBM$K_LENGTH	= 12; 				! Lengh of fixed sub-map area 

