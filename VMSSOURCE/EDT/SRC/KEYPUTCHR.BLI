%TITLE 'EDT$KEYPUTCHR - put a character in the command buffer'
MODULE EDT$KEYPUTCHR (				! Put a character in the command buffer
		IDENT = 'V04-000'			! File: KEYPUTCHR.BLI Edit: JBS1005
		) =
BEGIN
!
!****************************************************************************
!*									    *
!*  COPYRIGHT (c) 1978, 1980, 1982, 1984 BY				    *
!*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
!*  ALL RIGHTS RESERVED.						    *
!* 									    *
!*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
!*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
!*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
!*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
!*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
!*  TRANSFERRED.							    *
!* 									    *
!*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
!*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
!*  CORPORATION.							    *
!* 									    *
!*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
!*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
!* 									    *
!*									    *
!****************************************************************************
!

!++
! FACILITY:	EDT -- The DEC Standard Editor
!
! ABSTRACT:
!
!	Put a character in the command buffer.
!
! ENVIRONMENT:	Runs at any access mode - AST reentrant
!
! AUTHOR: Bob Kushlis, CREATION DATE: April 7, 1979
!
! MODIFIED BY:
!
! 1-001	- Original.  DJS 24-Feb-1981.  This module was created by
!	extracting routine PUT_COM_CHAR from module KEYTRAN.
! 1-002	- Regularize headers.  JBS 10-Mar-1981
! 1-003	- Use new message codes.  JBS 04-Aug-1981
! 1-004 - Use MSG_BELL for errors.  SMB 30-Jun-1982
! 1-005	- Improve the appearance of the listing.  JBS 14-Jun-1983
!--


%SBTTL 'Declarations'
!
! TABLE OF CONTENTS:
!

REQUIRE 'EDTSRC:TRAROUNAM';

FORWARD ROUTINE
    EDT$$PUT_CMDCH : NOVALUE;

!
! INCLUDE FILES:
!

REQUIRE 'EDTSRC:EDTREQ';

!
! MACROS:
!
!	NONE
!
! EQUATED SYMBOLS:
!
!	NONE
!
! OWN STORAGE:
!
!	NONE
!
! EXTERNAL REFERENCES:
!
!	In the routine

%SBTTL 'EDT$$PUT_CMDCH  - put a character in the command buffer'

GLOBAL ROUTINE EDT$$PUT_CMDCH (			! Put a character in the command buffer
    C, 						! Character to put
    FORCE_ECHO					! 1 = echo the character
    ) : NOVALUE =

!++
! FUNCTIONAL DESCRIPTION:
!
!	This routine places a character in the command buffer at EDT$$A_CMD_BUF  and
!	advances EDT$$A_CMD_BUF .
!
! FORMAL PARAMETERS:
!
!  C			The character to append to the command buffer.
!
!  FORCE_ECHO		If 1, then echo the character.
!
! IMPLICIT INPUTS:
!
!	EDT$$T_CMD_BUF
!	EDT$$A_CMD_BUF
!	EDT$$A_CMD_END
!
! IMPLICIT OUTPUTS:
!
!	EDT$$A_CMD_BUF
!
! ROUTINE VALUE:
!
!	NONE
!
! SIDE EFFECTS:
!
!	NONE
!
!--

    BEGIN

    EXTERNAL ROUTINE
	EDT$$MSG_BELL,
	EDT$$TI_ECHOCH;

    EXTERNAL
	EDT$$T_CMD_BUF,				! Command buffer
	EDT$$A_CMD_BUF,				! Pointer to next char in command buffer
	EDT$$A_CMD_END;				! Pointer to end of info in command buffer

    MESSAGES ((COMBUFEXH));
!+
! Check to make sure there is room, if not then put out a message and
! flush the entire buffer.
!-

    IF CH$PTR_EQL (.EDT$$A_CMD_BUF, .EDT$$A_CMD_END)
    THEN
	BEGIN
	EDT$$MSG_BELL (EDT$_COMBUFEXH);
	EDT$$A_CMD_BUF = CH$PTR (EDT$$T_CMD_BUF);
	END
    ELSE
	BEGIN
!+
! Echo the character if necessary then move it to the buffer.
!-

	IF .FORCE_ECHO THEN EDT$$TI_ECHOCH (.C);

	CH$WCHAR_A (.C, EDT$$A_CMD_BUF);
	END;

    END;					! of routine EDT$$PUT_CMDCH

!<BLF/PAGE>

END						! of module EDT$KEYPUTCHR

ELUDOM
