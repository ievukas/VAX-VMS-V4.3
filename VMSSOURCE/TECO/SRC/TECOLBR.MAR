.TITLE	TECOLBR	TECO's HELP command, etc.
.IDENT	/V39.00/

;****************************************************************************
;*									    *
;*  COPYRIGHT (c) 1978, 1980, 1982, 1984 BY				    *
;*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
;*  ALL RIGHTS RESERVED.						    *
;* 									    *
;*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
;*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
;*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
;*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
;*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
;*  TRANSFERRED.							    *
;* 									    *
;*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
;*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
;*  CORPORATION.							    *
;* 									    *
;*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
;*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
;* 									    *
;*									    *
;****************************************************************************

.SBTTL	TECO's HELP command, etc.

; Last edit on 27-Jul-1983 by Mark Bramhall

	$HLPDEF				; Librarian's HELP definitions
	$LBRDEF				; Librarian definitions

MAX_KEYS	=	 10		; Maximum number of keys allowed

LIB_NAME_MAX	=	255		; Maximum size of a library name

RNS_NAME_MAX	=	255		; Maximum size of a resultant name

.DEFAULT DISPLACEMENT WORD		; 16 bits should always reach

.SHOW	MEB

.PSECT	TECOEXELBR,	PAGE,NOPIC,USR,OVR,REL,GBL,  SHR,  EXE,RD,NOWRT

	TSTL	R0			; Error message printing call (-1)?
	BLSS	40$			; Yes
	TSTW	B^INDIR(R11)		; Active indirect command file?
	BNEQ	20$			; Yep, do nothing
	MOVZWL	W^QPNTR(R11), R6	; Get the size of the command line
	BEQL	30$			; Can't be a HELP command
	CMPB	R0, #27			; An ESCape?
	BEQL	10$			; Yep, go check for 2 ESCapes
	CMPB	R0, #10			; A LF?
	BNEQ	20$			; Nope
	MOVZBL	#13, R0			; Yep, check for CR/LF combination
10$:	CMPW	B^TEMP(R11), R0		; The second ESCape or CR/LF?
	BNEQ	20$			; No
	MOVZWL	B^QRSTOR(R11), R7	; Get base of Q-register storage
	ADDW	B^QZ(R11), R7		;  and add in the inuse amount
	SUBL	R6, R7			;   then back up by command's length
	MOVL	(R7)+, R1		; Get first four command characters
	BICL	#32@8!32@8!32@8!32, R1	;  and (dirty) convert to upper case
	CMPL	R1, #^A/HELP/		; Is this a HELP command?
	BEQL	50$			; Yes
20$:	CLRQ	R0			; Say nothing happened
	RSB				;  and exit

30$:	CMPB	R0, #^A'/'		; A slash?
	BNEQ	20$			; Nope
	TSTW	B^ERRPOS(R11)		; Recovering from an error?
	BLEQ	20$			; Nope again
40$:	MOVAB	230$, PRINT_ROUT	; Set a special print routine
	PUSHAQ	250$			; Set a null line
	CALLS	#1, TEC$OUT_ASCID	;  and go output it
	MOVC5	#0, (SP), #0, #MAX_KEYS*8, KEY_DESC ; Clear out key descs
	MOVQ	260$, LIB_DESC		; Set library name to TECO
	MOVQ	270$, KEY_DESC		; Set key #1 to ERRORS
	MOVL	#3, KEY_DESC+8		; Key #2 will be length 3
	MOVAB	ERROR_CODE, R2		; Get pointer to error code spot
	MOVAB	(R2), KEY_DESC+8+4	;  and set it into key #2
	MOVZWL	L^ERRCOD, R0		; Get the RAD50 code into low order
	CLRL	R1			;  and clear a high order
	EDIV	#40*40, R0, R1, R0	; Divide for the first character
	ADDB3	#^A/A/-1, R1, (R2)+	;  and set it
	CLRL	R1			; Clear a high order
	EDIV	#40, R0, R1, R0		;  and divide for 2nd and 3rd
	ADDB3	#^A/A/-1, R1, (R2)+	; Set the second character
	ADDB3	#^A/A/-1, R0, (R2)+	;  and the third
	BRW	170$			; Go print the error message help

50$:	SUBL	#4+1, R6		; Remove HELP (4) and ESCape or CR (1)
	MOVAB	TEC$OUT_ASCID, PRINT_ROUT ; Set the standard print routine
	CMPB	R0, #13			; Was this the CR/LF entry?
	BEQL	60$			; Yes
	PUSHAQ	250$			; No, ESCape, set a null line
	CALLS	#1, TEC$OUT_ASCID	;  and go output it
60$:	MOVC5	#0, (SP), #0, #MAX_KEYS*8, KEY_DESC ; Clear out key descs
	MOVAQ	KEY_DESC-8, R4		; Start a (biased) key desc pointer
70$:	ADDL	#8, R4			; Bump to the next key descriptor
80$:	MOVAB	(R7), 4(R4)		; Set pointer to key in descriptor
90$:	DECL	R6			; More command line to look at?
	BLSS	130$			; Nope, done
	CMPB	(R7)+, #32		; Is this a <SP> or lower?
	BLEQU	110$			; Yes, end of key (or ignoring junk)
	INCL	(R4)			; Count a key character in desc
	CMPB	-(R7), #^A/A/+32	; A possible lower case character?
	BLSSU	100$			; No
	CMPB	(R7), #^A/Z/+32		; Might be?
	BGTRU	100$			; But it isn't...
	BICB	#32, (R7)		; Convert lower case into upper case
100$:	CMPB	(R7)+, #^A'/'		; A slash ("/") for another key?
	BNEQ	90$			; Nope, loop for more...
	CMPL	(R4), #1		; Yep, only thing in the key?
	BEQL	90$			; Just continue if only slash so far
	DECL	(R4)			; Else remove the slash from old key
	INCL	R6			; Put the slash back into the count
	DECL	R7			;  and back up pointer over it
110$:	TSTL	(R4)			; Are we within a key?
	BEQL	80$			; No, so don't start a new key
120$:	CMPL	R4, #KEY_DESC+<<MAX_KEYS-1>*8> ; Too many keys?
	BLSSU	70$			; No, loop for the next key...
130$:	LOCC	#^A/=/, KEY_DESC, @KEY_DESC+4 ; Find any equals separator
	BEQL	160$			; None
	MOVQ	R0, R6			; Save length and pointer to remainder
	SUBL3	R0, KEY_DESC, R0	; Find size before the equals
	CMPC	R0, @KEY_DESC+4, 280$	; Is it really /LIBRARY?
	BNEQ	160$			; Nope
	MOVC	#<MAX_KEYS-1>*8, KEY_DESC+8, KEY_DESC ; Shuffle up key descs
	CLRQ	(R3)			;  and clear the last one
	INCL	R7			; Bump pointer over the equals
	DECL	R6			;  and remove the equals from length
	BNEQ	140$			; A real library name remains
	MOVQ	290$, R6		; Else use the default default name
140$:	MOVQ	R6, LIB_DESC		; Set the new library name into desc
	CMPB	(R7), #^A/=/		; Making this library name permanent?
	BNEQ	170$			; No
	INCL	R7			; Yes, bump pointer over 2nd equals
	DECL	R6			;  and remove it from length
	BNEQ	150$			; A real library name is still there
	MOVQ	290$, R6		; Else set the default default name
150$:	MOVC5	R6, (R7), #0, #LIB_NAME_MAX, @DEF_LIB_DESC+4 ; Load new name
	SUBL3	R7, R1, DEF_LIB_DESC	; Set default name descriptor length
160$:	MOVQ	DEF_LIB_DESC, LIB_DESC	; Default the library name
170$:	CMPL	LIB_DESC, #4		; Is the library name exactly 4 chars?
	BNEQ	180$			; Nope
	CMPL	@LIB_DESC+4, #^A/HELP/	; Really want system HELP library?
	BNEQ	180$			; No
	MOVQ	300$, LIB_DESC		; Yes, be good and update the name
180$:	CLRL	RNS_DESC		; Say no resultant name yet...
	PUSHAL	320$			; Arg #3 is the library type (HELP)
	PUSHAL	310$			; Arg #2 is the access mode (read)
	PUSHAL	LIB_INDEX		; Arg #1 is the librarian's index
	CALLS	#3, G^LBR$INI_CONTROL	; Init the library access
	BLBC	R0, 190$		; Abort if any error
	MOVZWL	#RNS_NAME_MAX, RNS_DESC	; Reset the resultant name descriptor
	PUSHAW	RNS_DESC		; Arg #7 is the resultant name length
	PUSHAQ	RNS_DESC		; Arg #6 is the resultant file name
	PUSHL	#0			; Arg #5 is the related name
	PUSHAQ	330$			; Arg #4 is the default file name
	PUSHL	#0			; Arg #3 is the create option
	PUSHAQ	LIB_DESC		; Arg #2 is the library file name
	PUSHAL	LIB_INDEX		; Arg #1 is the librarian's index
	CALLS	#7, G^LBR$OPEN		; Open the library
	BLBC	R0, 190$		; Abort if any error
	MOVAQ	KEY_DESC+<MAX_KEYS*8>, R0 ; Point to the key descriptor array
.REPT	MAX_KEYS
	PUSHAQ	-(R0)			; Arg #n is one of the key's
.ENDR	; MAX_KEYS
	PUSHL	#0			; Arg #4 is the user data
	PUSHL	PRINT_ROUT		; Arg #3 is the print routine
	PUSHL	#0			; Arg #2 is the line width
	PUSHAL	LIB_INDEX		; Arg #1 is the librarian's index
	CALLS	#4+MAX_KEYS, G^LBR$GET_HELP ; Go print the HELP information
190$:	MOVL	G^LBR$GL_RMSSTV, R1	; Save any RMS STV value
	MOVQ	R0, R6			; Save the final exit status
	PUSHAL	LIB_INDEX		; Arg #1 is the librarian's index
	CALLS	#1, G^LBR$CLOSE		; Close the library
	BLBC	R6, 200$		; Use previous error if any
	MOVL	R0, R6			; Else use the status we just got
	MOVL	G^LBR$GL_RMSSTV, R7	;  with any RMS STV value
200$:	BLBS	R6, 220$		; Was everything successful?
	MOVQ	RNS_DESC, R0		; Get the resultant name desciptor
	TSTW	R0			; Anything there?
	BNEQ	210$			; Yes, so use it
	MOVQ	LIB_DESC, R0		; No, use the library name descriptor
210$:	MOVC5	R0, (R1), #0, #FILSIZ-1-1, L^FILSRT ; Load the filename buffer
	CLRB	(R3)			;  making sure that it's ASCIZ
220$:	MOVQ	R6, R0			; Set the final exit status
	RSB				;  and exit

230$:	.WORD	^M<>			; Error message print routine
	MOVL	#1, R0			; Preset success
	BITL	@HLP$L_FLAGS+4(AP), -	; Check for
		#HLP$M_KEYNAMLIN!-	;  a keyword name line
		 HLP$M_OTHERINFO	;  or additional information
	BNEQ	240$			; Suppress either of those
	CALLG	(AP), TEC$OUT_ASCID	; Else go print the information
240$:	RET				; Return

250$:	.ASCID	//			; A null descriptor

260$:	.ASCID	/TECO/			; Library name for error message help

270$:	.ASCID	/ERRORS/		; Key #1 for error message help

280$:	.ASCII	'/LIBRARY'		; /LIBRARY qualifier

290$:	.ASCID	/TECO/			; Default default library name

300$:	.ASCID	/HELPLIB/		; System HELP library's real name

310$:	.LONG	LBR$C_READ		; Access is for read

320$:	.LONG	LBR$C_TYP_HLP		; Library type is a HELP library

330$:	.ASCID	/SYS$HELP:.HLB/		; Library's default file name string

.PSECT	TECOCTL,	QUAD,NOPIC,USR,CON,REL,LCL,NOSHR,NOEXE,RD,  WRT

KEY_DESC:				; Key descriptors
	.BLKQ	MAX_KEYS

LIB_DESC:				; Library name descriptor
	.BLKQ

LIB_INDEX:				; Librarian's index
	.BLKL

PRINT_ROUT:				; Librarian output print routine addr
	.BLKL

.ALIGN QUAD

DEF_LIB_DESC:				; Default library name descriptor
	.LONG	20$-10$, 10$

10$:	.ASCII	/TECO/
20$:	.BLKB	LIB_NAME_MAX-<20$-10$>

.ALIGN QUAD

RNS_DESC:				; Resultant name descriptor
	.LONG	20$-10$, 10$

10$:	.BLKB	RNS_NAME_MAX
20$:

ERROR_CODE:				; Holder for TECO's error code
	.BLKB	3

.END

