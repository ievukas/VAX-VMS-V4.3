	.TITLE	STOPREM - Stop REMACP
	.IDENT	'V04-000'

;
;****************************************************************************
;*									    *
;*  COPYRIGHT (c) 1978, 1980, 1982, 1984 BY				    *
;*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
;*  ALL RIGHTS RESERVED.						    *
;* 									    *
;*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
;*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
;*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
;*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
;*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
;*  TRANSFERRED.							    *
;* 									    *
;*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
;*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
;*  CORPORATION.							    *
;* 									    *
;*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
;*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
;* 									    *
;*									    *
;****************************************************************************

;++
;
; FACILITY:  REMACP - REMOTE I/O ACP
;
; ABSTRACT:
;
;	This program stops operation of REMACP.
;
; ENVIRONMENT:
;
;	VAX/VMS, INCLUDING PRIVILEGED SYSTEM SERVICES
;	AND INTERNAL EXEC ROUTINE.
;
; AUTHOR:  Scott G. Davis, CREATION DATE:  12-Oct-1979  15:31
;
; MODIFIED BY:
;
;	V03-003	JLV0343		Jake VanNoy		 8-APR-1984
;		Fix too-low IPL bug in calling SCH$WAKE directly.
;
;	V03-002	CWH1002		CW Hobbs		24-Feb-1983
;		Modify to call the internal SCH$WAKE routine rather
;		than the $WAKE service, since the ACPPID stored in
;		the AQB is already an internal pid.
;
;	V03-001	KDM0002		Kathleen D. Morse	28-Jun-1982
;		Added $PRDEF.
;--


	$AQBDEF
	$IPLDEF
	$PRDEF

	.PSECT	OWN,WRT

start_end:	.address	STOP_REMACP,STOP_REMACP_END

.PAGE
;++
;
; FUNCTIONAL DESCRIPTION:
;
;	This routine looks up the AQB for REMACP and clears the mount count.
;
; CALLING SEQUENCE:
;
; INPUT PARAMETERS:
;
; SIDE EFFECTS:
;
	.PSECT	INSTR,NOWRT

;--

STOP_REMACP::
	.WORD	0
	$LKWSET_S	INADR = start_end ; so IPL can be raised
	BLBC	R0,10$

	$CMKRNL_S	B^STARTUP	; Do in REMACP
10$:	RET				; Return with status


STARTUP:	.WORD	0		; ENTRY POINT
	MOVL	G^SCH$GL_CURPCB,R4	; GET OWN PCB ADDRESS
	JSB	G^SCH$IOLOCKW		; Lock the database
	MOVAB	G^IOC$GL_AQBLIST,R1	; GET THE LIST ADDRESS
	MOVL	(R1),R6			; GET FIRST AQB POINTER
70$:
	CMPB	AQB$B_ACPTYPE(R6),#AQB$K_REM ; IS THIS IT?
	BEQL	80$			; IF EQL YES
	MOVL	AQB$L_LINK(R6),R6	; GET LINK
	BNEQ	70$			; If NEQ keep looking
	JSB	G^SCH$IOUNLOCK		; Unlock I/O database
	SETIPL	#0			; Restore IPL
	MOVZWL	#SS$_NONEXPR,R0		; Couldn't find REMACP
	RET				; Go back
80$:
	CLRB	AQB$B_MNTCNT(R6)	; Mark as finished
	JSB	G^SCH$IOUNLOCK		; Unlock I/O database
	SETIPL	#IPL$_SYNCH		; Up IPL for call
	MOVL	AQB$L_ACPPID(R6),R1	; Get the internal PID
	JSB	G^SCH$WAKE		; Wake up REMACP
	SETIPL	#0			; Bring down the IPL
	RET				; Go back, wake status in R0

STOP_REMACP_END::
	.END	STOP_REMACP
