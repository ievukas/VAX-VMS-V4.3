$ !
$ !	Decompress libraries shipped in data compressed form
$ !
$ !	P1 = single library name, null to decompress all compressed libraries
$ !		The specification may only consist of a filename and an
$ !		optional file type.  Device, directory and version may
$ !		not be specified.
$ !
$	SAY = "WRITE SYS$OUTPUT"
$	REQLIB = P1
$	IF REQLIB .EQS. "" THEN GOTO SET_FLIST
$	IF F$LOCATE(":",REQLIB) .NE. F$LENGTH(REQLIB) THEN GOTO BAD_P1
$	REQLIB_NAME = F$PARSE(REQLIB,,,"NAME","SYNTAX_ONLY")
$	REQLIB_TYPE = F$PARSE(REQLIB,,,"TYPE","SYNTAX_ONLY")
$	IF REQLIB_TYPE .EQS. "." THEN REQLIB_TYPE = ""
$SET_FLIST:
$	N_DONE = 0
$	FLIST = "?[SYSHLP].HLB/HELPLIB/?[SYSLIB].OLB/STARLET/
$	FLIST = FLIST + "?[SYSHLP].HLB/MAILHELP/EDTHELP/"
$	FLIST = FLIST + "DEBUGHLP/EXCHNGHLP/NCPHELP/"
$	FLIST = FLIST + "?[SYSLIB].MLB/STARLET/LIB/"
$	CDIR = ""
$	CTYP = ""
$	F_TAILOR = F$GETSYI("TAILORED")
$	CDISK = "SYS$SYSROOT"
$	IF .NOT. F_TAILOR THEN GOTO DECOMPRESS_LOOP
$	CDISK = "LIB$SYSROOT"
$	IF .NOT. F$GETDVI("LIB$SYSDEVICE","EXISTS") THEN GOTO NOLIBDEV
$	IF F$GETDVI("LIB$SYSDEVICE","SWL") THEN GOTO LIBDEVWLK
$DECOMPRESS_LOOP:
$	F = F$ELEM(0,"/",FLIST)
$	IF F .EQS. "" THEN GOTO DECOMPRESS_DONE
$	FLIST = FLIST - "''F'/"
$	IF F$EXTRACT(0,1,F) .EQS. "?" THEN GOTO NEWDIRTYP
$	F = CDISK + ":" + CDIR + F + CTYP
$	TF = F$PARSE(F,,,,"SYNTAX_ONLY")
$	IF REQLIB .EQS. "" THEN GOTO D20
$	IF REQLIB_NAME .NES. F$PARSE(TF,,,"NAME","SYNTAX_ONLY") THEN GOTO DECOMPRESS_LOOP
$	IF REQLIB_TYPE .EQS. "" THEN GOTO D20
$	IF REQLIB_TYPE .NES. F$PARSE(TF,,,"TYPE","SYNTAX_ONLY") THEN GOTO DECOMPRESS_LOOP
$D20:
$	TF = F$SEARCH(F$PARSE(F,,,,"SYNTAX_ONLY"))
$	IF TF .EQS. "" THEN GOTO DECOMPRESS_FNF
$	TF = TF - F$PARSE(TF,,,"VERSION","SYNTAX_ONLY")
$	N_DONE = N_DONE + 1
$	BLOCKS_REQ = 1000
$	FSZ = F$FILE(TF,"ALQ")
$	IF FSZ .GT. 1000 THEN BLOCKS_REQ = (2*FSZ)+1000
$	IF F_TAILOR THEN BLOCKS_REQ = 2*FSZ
$	IF F$GETDVI(CDISK,"FREEBLOCKS") .GE. BLOCKS_REQ THEN GOTO DECOMPRESS_LIB
$	SAY "%UPGRADE-W-NOTEXPANDED, Library ''TF' was not expanded -- not enough free blocks."
$	SAY "-UPGRADE-I-EXPANDLATER, you may expand it later by hand if desired"
$	SAY "-UPGRADE-I-COMMAND, use the command LIBR /DATA=EXPAND /OUTPUT=''TF' ''TF'"
$	GOTO DECOMPRESS_LOOP
$DECOMPRESS_LIB:
$	SAY "%UPGRADE-I-EXPANDING, Decompressing library ''TF'"
$	SET NOON
$	LIBRARY /DATA=EXPAND /OUTPUT='TF' 'TF'
$	IF $STATUS THEN DELETE 'TF';-1
$	SET ON
$	GOTO DECOMPRESS_LOOP
$NEWDIRTYP:
$	CDIR = F$ELEMENT(0,".",F)
$	CTYP = F - CDIR
$	CDIR = CDIR - "?"
$	GOTO DECOMPRESS_LOOP
$DECOMPRESS_FNF:
$	SAY "%UPGRADE-W-OPENIN, Error opening input file ''F$PARSE(F,,,,"SYNTAX_ONLY")'"
$	GOTO DECOMPRESS_LOOP
$BAD_P1:
$	SAY "%UPGRADE-E-INVPARAM, Invalid parameter.  You may only specify filename and file type."
$	EXIT
$DECOMPRESS_DONE:
$	IF REQLIB .EQS. "" THEN GOTO DD20
$	IF N_DONE .EQ. 0 THEN -
	 WRITE SYS$OUTPUT "%UPGRADE-W-NOLIBS, No libraries found to match ''P1'"
$DD20:
$	EXIT
$LIBDEVWLK:
$	F = F$GETDVI("LIB$SYSDEVICE","DEVNAM")
$	@SYS$UPDATE:VMSTAILOR DISMOUNT 'F
$	GOTO MNTLIBDEV
$NOLIBDEV:
$	INQUIRE /NOPUNCT F "Where will the library disk be mounted? "
$	IF F .EQS. "" THEN GOTO NOLIBDEV
$MNTLIBDEV:
$	SAY "%UPGRADE-I-MNTLIBDSK, Mounting library disk write-enabled."
$	@SYS$UPDATE:VMSTAILOR MOUNT /WRITE 'F
$	GOTO DECOMPRESS_LOOP
