%TITLE 'EDT$WFREPLIN - replace the current line'
MODULE EDT$WFREPLIN (				! Replace the current line
		IDENT = 'V04-000'			! File: WFREPLIN.BLI Edit: JBS1008
		) =
BEGIN
!
!****************************************************************************
!*									    *
!*  COPYRIGHT (c) 1978, 1980, 1982, 1984 BY				    *
!*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
!*  ALL RIGHTS RESERVED.						    *
!* 									    *
!*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
!*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
!*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
!*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
!*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
!*  TRANSFERRED.							    *
!* 									    *
!*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
!*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
!*  CORPORATION.							    *
!* 									    *
!*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
!*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
!* 									    *
!*									    *
!****************************************************************************
!

!++
! FACILITY:	EDT -- The DEC Standard Editor
!
! ABSTRACT:
!
!	Replace the current line with a specified line.
!
! ENVIRONMENT:	Runs at any access mode - AST reentrant
!
! AUTHOR: Bob Kushlis, CREATION DATE: October 16, 1978
!
! MODIFIED BY:
!
! 1-001	- Original.  DJS 23-Feb-1981.  This module was created by
!	extracting routine EDT$$RPL_LN  from module EDTWF.
! 1-002	- Regularize headers.  JBS 19-Mar-1981
! 1-003 - Change index for line numbers from 10 to 15.  SMB 18-Jan-1982
! 1-004 - Remove original line numbers.  SMB 28-Jan-1982
! 1-005	- Do most replaces without doing delete/insert, to improve
!	   performance, especially when updating the screen.  JBS 04-Oct-1982
! 1-006	- Preserve EDT$$A_SEL_POS if we must delete and then insert.  JBS 09-Nov-1982
! 1-007	- Don't disturb the screen data base if we must delete and then insert.  JBS 01-Dec-1982
! 1-008	- No longer need to decrement EDT$$L_WK_INSCNT; now done by EDT$$DEL_CURLN.  JBS 01-Jun-1983
! 1-009	- Remove edit 1-008 : too many side effects.  JBS 01-Jun-1983
!--


%SBTTL 'Declarations'
!
! TABLE OF CONTENTS:
!

REQUIRE 'EDTSRC:TRAROUNAM';

FORWARD ROUTINE
    EDT$$RPL_LN : NOVALUE;

!
! INCLUDE FILES:
!

REQUIRE 'EDTSRC:EDTREQ';

!
! MACROS:
!
!	NONE
!
! EQUATED SYMBOLS:
!
!	NONE
!
! OWN STORAGE:
!
!	NONE
!
! EXTERNAL REFERENCES:
!
!	In the routine

%SBTTL 'EDT$$RPL_LN  - replace the current line'

GLOBAL ROUTINE EDT$$RPL_LN (			! Replace the current line
    NEWLINE, 					! Address of the new line
    LEN						! Length of the new line
    ) : NOVALUE =

!++
! FUNCTIONAL DESCRIPTION:
!
!	Replace the current line.  If the replacement line is the same size as
!	the current line, just copy the new one in its place, otherwise, delete
!	the current line and insert the new one.
!
! FORMAL PARAMETERS:
!
!  NEWLINE 		a pointer to the new line
!
!  LEN 			its length
!
! IMPLICIT INPUTS:
!
!	EDT$$A_WK_LN
!	EDT$$G_WK_MODFD
!	EDT$$L_LNO0
!	EDT$$A_CUR_BUF
!	EDT$$A_WK_BUK
!
! IMPLICIT OUTPUTS:
!
!	EDT$$A_WK_LN
!	EDT$$A_CUR_BUF
!	EDT$$A_WK_BUK
!	EDT$$L_WK_INSCNT
!
! ROUTINE VALUE:
!
!	NONE
!
! SIDE EFFECTS:
!
!	NONE
!
!--

    BEGIN

    EXTERNAL ROUTINE
	EDT$$DEL_CURLN : NOVALUE,
	EDT$$INS_LN : NOVALUE,
	EDT$$RD_PRVLN;

    EXTERNAL
	EDT$$A_WK_LN : REF LIN_BLOCK,		! Pointer to current line
	EDT$$G_WK_MODFD,			! Flag indicating bucket was modified
	EDT$$L_LNO0 : LNOVECTOR [14],		! 48-bit line numbers
	EDT$$A_CUR_BUF : REF TBCB_BLOCK,	! Current text buffer control block
	EDT$$A_WK_BUK : REF BLOCK [WF_BUKT_SIZE, BYTE] FIELD (WFB_FIELDS),
	EDT$$A_SEL_POS,				! Select position
	EDT$$G_SCR_REBUILD,			! 1 = don't touch the screen data base
	EDT$$L_WK_INSCNT : LN_BLOCK;		! Number of records inserted during this insert sequence

    LOCAL
	SAVE_LIN : LN_BLOCK,
	SAVE_SELPOS,
	SIZE,
	OLD_LEN,				! Length of the old line
	SOURCE,
	REMAINING,
	SAVE_REBUILD;

!+
! Check for a replacement which does not change the length of the
! line, and leave the work-file block structure unaltered.  This
! is not done only for speed; EDT will break if it is removed.
!-
    OLD_LEN = .EDT$$A_WK_LN [LIN_LENGTH];

    IF (.OLD_LEN EQL .LEN)
    THEN
	BEGIN
	EDT$$CPY_MEM (.LEN, .NEWLINE, EDT$$A_WK_LN [LIN_TEXT]);
	EDT$$G_WK_MODFD = 1;
	RETURN;
	END;

!+
! Check for a replacement which neither empties the block nor causes it
! to overflow.  Do such a replacement directly in the block, without
! calling the more general routines which delete and insert lines.
!-

    IF (((.EDT$$A_WK_BUK [WFB_END] - .OLD_LEN + .LEN) LSS WF_BUKT_SIZE) AND 	!
	(.EDT$$A_CUR_BUF [TBCB_LINE_ADDR] NEQ .EDT$$A_WK_BUK [WFB_END]) AND 	!
	(.EDT$$A_CUR_BUF [TBCB_LINE_ADDR] NEQ WFB_FIXED_SIZE))
    THEN
	BEGIN
!+
! Update the character count for this buffer.
!-
	EDT$$A_CUR_BUF [TBCB_CHAR_COUNT] = .EDT$$A_CUR_BUF [TBCB_CHAR_COUNT] - .OLD_LEN + .LEN;
!+
! Make room in the block for the line.  This may require either increasing or decreasing
! the amount of space now available.
!-
	SIZE = .OLD_LEN + LIN_FIXED_SIZE + 1;
	SOURCE = CH$PLUS (.EDT$$A_WK_LN, .SIZE);
	REMAINING = .EDT$$A_WK_BUK [WFB_END] - .EDT$$A_CUR_BUF [TBCB_LINE_ADDR] - .SIZE;
	EDT$$A_WK_BUK [WFB_END] = .EDT$$A_WK_BUK [WFB_END] - .OLD_LEN + .LEN;

	IF (.REMAINING NEQ 0)			!
	THEN
	    EDT$$CPY_MEM (.REMAINING, .SOURCE, .EDT$$A_WK_LN + .LEN + LIN_FIXED_SIZE + 1);

	EDT$$A_WK_LN [LIN_LENGTH] = .LEN;
	CH$WCHAR (.LEN, EDT$$CPY_MEM (.LEN, .NEWLINE, EDT$$A_WK_LN [LIN_TEXT]));
	EDT$$G_WK_MODFD = 1;
	RETURN;
	END;

!+
! This is a complex case.  Delete the old line and insert the new one.
!-
    MOVELINE (EDT$$A_WK_LN [LIN_NUM], SAVE_LIN);
    SAVE_SELPOS = .EDT$$A_SEL_POS;
    SAVE_REBUILD = .EDT$$G_SCR_REBUILD;
    EDT$$G_SCR_REBUILD = 1;
    EDT$$DEL_CURLN ();
    SUBLINE (NUMBER_ONE, EDT$$L_WK_INSCNT);
    EDT$$INS_LN (.NEWLINE, .LEN);
    EDT$$RD_PRVLN ();
    EDT$$G_SCR_REBUILD = .SAVE_REBUILD;
    EDT$$A_SEL_POS = .SAVE_SELPOS;
    MOVELINE (SAVE_LIN, EDT$$A_WK_LN [LIN_NUM]);
    RETURN;
    END;					! of routine EDT$$RPL_LN

!<BLF/PAGE>

END						! of module EDT$WFREPLIN

ELUDOM
