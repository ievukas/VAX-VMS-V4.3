%TITLE	'Connect Parse States and Data'
MODULE NCPSTACON (IDENT = 'V04-000', LIST(NOOBJECT)) =
BEGIN

!
!****************************************************************************
!*									    *
!*  COPYRIGHT (c) 1978, 1980, 1982, 1984 BY				    *
!*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
!*  ALL RIGHTS RESERVED.						    *
!* 									    *
!*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
!*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
!*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
!*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
!*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
!*  TRANSFERRED.							    *
!* 									    *
!*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
!*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
!*  CORPORATION.							    *
!* 									    *
!*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
!*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
!* 									    *
!*									    *
!****************************************************************************
!

!++
! FACILITY:	Network Control Program (NCP)
!
! ABSTRACT:
!
!	States and data for the parsing of NCP Connect command
!
! ENVIRONMENT:	VAX/VMS Operating System
!
! AUTHOR:	Bob Grosso	, CREATION DATE: March 16, 1983
!
! MODIFIED BY:
!
!	V03-001	RPG0001		Bob Grosso		dd-mmm-1983
!--

%SBTTL	'Definitions'

!
! INCLUDE FILES:
!

	LIBRARY 'LIB$:NCPLIBRY';
	LIBRARY 'LIB$:NMALIBRY';
	LIBRARY 'SYS$LIBRARY:TPAMAC';

!
! EXTERNAL REFERENCES:
!

	ACT_DFN				! External symbols for action routines
EXTERNAL
	ACT$VRB_CONNECT,		! Routine to perform connect
	NCP$GL_NOPARMS;			! Mark that entity does not require parameters

!
! LITERALS
!

LITERAL
	NO_PARM_REQ = 1;		! Mark that an entity does not require
					!  a parameter so that the check in
					!  NCPVRBACT can be disabled.


%SBTTL	'Parameter blocks'

!
! BIND DATA:
!

!
!	Parameter Blocks
!

	BUILD_PCL

	(CON,

	SLI, TKN,	PCNO_SLI, ,
	SPW, HXPS,	PCNO_SPA, ,
!!	LFL, TKN,	PCNO_LOA, ,
	PHA, NIADR,	PCNO_PHA, ,

	 ,END, , ,

	)


	BUILD_PBK

	(CON,

	NOD, NADR, , VRB_ENT,
	SLI, TKN, , ,
	SPW, HXPS, , ,
!!	LFL, TKN, , ,
	PHA, NIADR, , ,

	)

	BUILD_SDB

	(CON, NMA$C_ENT_NOD, VRB_ENT, CON)


%SBTTL	'Prompt strings'

!
!	Build prompt strings
!

BIND

	PROMPT_STRINGS
	(CON,

	ENT, 'NODE node-id,  VIA circuit-name: ',
	NOD, 'Node Console to Connect  (node-name, address): ',
	VIA, 'Circuit to use                 (circuit-name):',

	)
	;

%SBTTL	'State Table Entry'

$INIT_STATE (NCP$G_STTBL_CON, NCP$G_KYTBL_CON);

!
!	Connect Console Command
!

!
!	Dispatch to entity types and prompt if end of string
!
	
!
!	Connect command
!

	COMMAND_PROMPT
	(CON, ENT, NCP$_INVKEY,

	( 'NODE', ST_CON_NOD),
	('VIA', ST_CON_VIA)

	)

!
!	Obtain Node ID
!
	COMMAND_PROMPT
	(CON, NOD, NCP$_INVVAL,

	( (SE_NODE_ID), , ACT$SAVPRM, , , PBK$G_CON_NOD)
	)

$STATE	(,
	( (ST_CON_PRM) )
	);

$STATE	(,
	(TPA$_EOS, TPA$_EXIT, ACT$VRB_CONNECT, , , SDB$G_CON)
	);



!
!	Connect over specified circuit
!
	COMMAND_PROMPT
	(CON, VIA, NCP$_INVVAL,

	( (SE_CIRC_ID), , ACT$SAVPRM, NMA$C_ENT_CIR, NCP$GL_OPTION, PBK$G_CON_SLI)
	)

$STATE	(,
	( (ST_CON_PRM) )
	);

$STATE	(,
	(TPA$_EOS, TPA$_EXIT, ACT$VRB_CONNECT, , , SDB$G_CON)
	);


%SBTTL	'Connect Parameters'

!
!	Connect Parameters
!

$STATE	(ST_CON_PRM,
	(TPA$_EOS, TPA$_EXIT, ACT$SAVPRM, , , PBK$G_VRB_ALL),
	(TPA$_LAMBDA)
	);


%SBTTL	'Dispatch States'

!
!	Dispatch states
!

$STATE	(ST_CON_PRC,

	DISPATCH_STATES
	(CON,

!!	LFL, 'FROM',
	PHA, 'PHYSICAL',
	SPW, 'SERVICE',
	SLI, 'VIA',

	)

	,(TPA$_EOS, TPA$_EXIT)
	);

%SBTTL	'Process States'

!
!	Process States
!

	PROCESS_STATES
	(CON,

!!	LFL, 'FILE',
	PHA, 'ADDRESS',
	SPW, 'PASSWORD',
	SLI, 'CIRCUIT',

	)


%SBTTL	'Subexpressions'

!
!	Subexpressions
!

	SUB_EXPRESSIONS
	(CON,

!!	LFL, (SE_FILE_ID),
	PHA, (SE_NI_ADR),
	SPW, (SE_HEX_PSW),
	SLI, (SE_CIRC_ID),

	)


%SBTTL	'Define Subexpressions from Library'

!
!	Define subexpressions from library
!

!!	SEM_FILE_ID		! File id strings
	SEM_HEX_PSW		! Hex password
	SEM_CIRC_ID		! Circuit name strings
	SEM_LINE_ID		! Line id
	SEM_NODE_ID		! Node id strings
	SEM_NI_ADR		! NI Address
	SEM_QUOT_STR		! Quoted strings

%SBTTL	'Object Listing of Parse Table'

END				!End of module
ELUDOM
