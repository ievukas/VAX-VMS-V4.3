{
{ Version:	'V04-000'
{
{****************************************************************************
{*									    *
{*  COPYRIGHT (c) 1978, 1980, 1982, 1984 BY				    *
{*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
{*  ALL RIGHTS RESERVED.						    *
{* 									    *
{*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
{*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
{*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
{*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
{*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
{*  TRANSFERRED.							    *
{* 									    *
{*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
{*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
{*  CORPORATION.							    *
{* 									    *
{*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
{*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
{* 									    *
{*									    *
{****************************************************************************
{
{	MODIFIED BY:
{
{	0102	MCN0003		Maria del C. Nasr	15-Oct-1979   15:15
{		Add HDR3 of magnetic tape file
{

{
{ FILE HEADER DEFINITIONS FOR FILE-11 STRUCTURE LEVEL 1
{
module $FHDDEF;

aggregate FHDDEF structure prefix FHD$;
    IDOFFSET byte unsigned;				/* IDENT AREA OFFSET IN WORDS 
    MPOFFSET byte unsigned;				/* MAP AREA OFFSET IN WORDS 
    FID_OVERLAY union;
        FID word unsigned dimension 2;			/* FILE ID 
	FID_FIELDS structure;
            FID_NUM word unsigned;			/* FILE NUMBER 
            FID_SEQ word unsigned;			/* FILE SEQUENCE NUMBER 
	end FID_FIELDS;
    end FID_OVERLAY;
    STRUCLEV word unsigned;				/* FILE STRUCTURE LEVEL 
    constant LEVEL1	equals 257  prefix FHD tag $C;	/* 401 OCTAL = STRUCTURE LEVEL 1 
    FILEOWNER_OVERLAY union;
        FILEOWNER word unsigned;			/* FILE OWNER UIC 
	FILEOWNER_FIELDS structure;
            UICMEMBER byte unsigned;			/* UIC MEMBER NUMBER 
            UICGROUP byte unsigned;			/* UIC GROUP NUMBER 
	end FILEOWNER_FIELDS;
    end FILEOWNER_OVERLAY;
    FILEPROT_OVERLAY union;
        FILEPROT word unsigned;				/* FILE PROTECTION 
	FILEPROT_BITS structure;
            SYSPRO bitfield length 4;			/* SYSTEM PROTECTION 
            OWNPRO bitfield length 4;			/* OWNER PROTECTION 
            GROUPPRO bitfield length 4;			/* GROUP PROTECTION 
            WORLDPRO bitfield length 4;			/* WORLD PROTECTION 
	end FILEPROT_BITS;
    end FILEPROT_OVERLAY;
    FILECHAR_OVERLAY union;
        FILECHAR word unsigned;				/* FILE CHARACTERISTICS 
	FILECHAR_FIELDS structure;
	    USERCHAR_OVERLAY union;
                USERCHAR byte unsigned;			/* USER CONTROLLED CHARACTERISTICS 
		USERCHAR_BITS structure;
                    FILL_1 bitfield length 3 fill prefix FHDDEF tag $$;/* RESERVED 
                    READCHECK bitfield;			/* VERIFY ALL READ OPERATIONS 
                    WRITCHECK bitfield;			/* VERIFY ALL WRITE OPERATIONS 
                    CONTIGB bitfield;			/* KEEP FILE AS CONTIGUOUS AS POSSIBLE 
                    LOCKED bitfield;			/* FILE IS DEACESS LOCKED 
                    CONTIG bitfield;			/* FILE IS CONTIGUOUS 
		end USERCHAR_BITS;
	    end USERCHAR_OVERLAY;
	    SYSCHAR_OVERLAY union;
                SYSCHAR byte unsigned;			/* SYSTEM CONTROLLED CHARACTERISTICS 
		SYSCHAR_BITS structure;
                    FILL_2 bitfield length 6 fill prefix FHDDEF tag $$;/* RESERVED 
                    BADBLOCK bitfield;			/* FILE CONTAINS BAD BLOCKS 
                    MARKDEL bitfield;			/* FILE IS MARKED FOR DELETE 
		end SYSCHAR_BITS;
	    end SYSCHAR_OVERLAY;
	end FILECHAR_FIELDS;
    end FILECHAR_OVERLAY;
    RECATTR word unsigned dimension 16;			/* FILE RECORD ATTRIBUTES 
    constant "LENGTH" equals . prefix FHD$ tag K;	/* LENGTH OF HEADER AREA 
    constant "LENGTH" equals . prefix FHD$ tag C;	/* LENGTH OF HEADER AREA 
    FILL_3 word dimension 232 fill prefix FHDDEF tag $$;/* REST OF FILE HEADER 
    CHECKSUM word unsigned;				/* FILE HEADER CHECKSUM 
end FHDDEF;

end_module $FHDDEF;

module $FHIDEF;


aggregate FHIDEF structure prefix FHI$;
    FILENAME word unsigned dimension 3;			/* FILE NAME (RAD-50) 
    FILETYPE word unsigned;				/* FILE TYPE (RAD-50) 
    VERSION word unsigned;				/* VERSION NUMBER (BINARY) 
    REVISION word unsigned;				/* REVISION NUMBER (BINARY) 
    REVDATE character length 7;				/* REVISION DATE (ASCII DDMMMYY) 
    REVTIME character length 6;				/* REVISION TIME (ASCII HHMMSS) 
    CREDATE character length 7;				/* CREATION DATE (ASCII DDMMMYY) 
    CRETIME character length 6;				/* CREATION TIME (ASCII HHMMSS) 
    EXPDATE character length 7;				/* EXPIRATION DATE (ASCII DDMMMYY) 
    FILL_1 byte fill prefix FHIDEF tag $$;		/* DUMMY BYTE TO ROUND UP 
    constant "LENGTH" equals . prefix FHI$ tag K;	/* LENGTH OF IDENT AREA 
    constant "LENGTH" equals . prefix FHI$ tag C;	/* LENGTH OF IDENT AREA 
    MTHDR1 character length 80;				/* HDR1 OF ANSI MAGNETIC TAPE FILE 
    MTHDR2 character length 80;				/* HDR2 OF ANSI MAGNETIC TAPE FILE 
    MTHDR3 character length 80;				/* HDR3 OF ANSI MAGNETIC TAPE FILE 
end FHIDEF;

end_module $FHIDEF;

module $FHMDEF;


aggregate FHMDEF structure prefix FHM$;
    EX_SEGNUM byte unsigned;				/* EXTENSION SEGMENT NUMBER OF THIS HEADER 
    EX_RVN byte unsigned;				/* EXTENSION RELATIVE VOLUME NUMBER 
    EX_FILNUM word unsigned;				/* EXTENSION FILE NUMBER 
    EX_FILSEQ word unsigned;				/* EXTENSION FILE SEQUENCE NUMBER 
    COUNTSIZE byte unsigned;				/* RETRIEVAL POINTER COUNT FIELD SIZE 
    LBNSIZE byte unsigned;				/* RETRIEVAL POINTER LBN FIELD SIZE 
    INUSE byte unsigned;				/* NUMBER OF RETRIEVAL WORDS IN USE 
    AVAIL byte unsigned;				/* NUMBER OF RETRIEVAL WORDS AVAILABLE 
    constant POINTERS equals . prefix FHM$ tag K;	/* START OF RETRIEVAL POINTERS 
    constant POINTERS equals . prefix FHM$ tag C;	/* START OF RETRIEVAL POINTERS 
    constant "LENGTH" equals . prefix FHM$ tag K;	/* LENGTH OF MAP AREA 
    constant "LENGTH" equals . prefix FHM$ tag C;	/* LENGTH OF MAP AREA 
    
                                    			/* RETRIEVAL POINTER FORMAT
end FHMDEF;

aggregate FHMDEF1 structure prefix FHM$;
    HIGHLBN byte unsigned;				/* HIGH ORDER LBN 
    COUNT byte unsigned;				/* BLOCK COUNT 
    LOWLBN word unsigned;				/* LOW ORDER LBN 
end FHMDEF1;

aggregate FHMDEF2 structure prefix FHM$ origin FILL_1;
    PREVHLBN byte unsigned;
    PREVCOUNT byte unsigned;
    PREVLLBN word unsigned;				/* PREVIOUS RETRIEVAL POINTER 
    FILL_1 byte fill prefix FHMDEF tag $$;
end FHMDEF2;

end_module $FHMDEF;


module $HMBDEF;
/*+
/*
/* HOME BLOCK DEFINITIONS FOR FILES-11 STRUCTURE LEVEL 1
/*
/*-


aggregate HMBDEF structure prefix HMB$;
    IBMAPSIZE word unsigned;				/* INDEX FILE BITMAP SIZE, BLOCKS 
    IBMAPLBN longword unsigned;				/* INDEX FILE BITMAP STARTING LBN 
    MAXFILES word unsigned;				/* MAXIMUM ! FILES ON VOLUME 
    CLUSTER word unsigned;				/* STORAGE BITMAP CLUSTER FACTOR 
    DEVTYPE word unsigned;				/* DISK DEVICE TYPE 
    STRUCLEV word unsigned;				/* VOLUME STRUCTURE LEVEL 
    constant LEVEL1	equals 257  prefix HMB tag $C;	/* 401 OCTAL = STRUCTURE LEVEL 1 
    VOLNAME character length 12;			/* VOLUME NAME (ASCII) 
    FILL_1 byte dimension 4 fill prefix HMBDEF tag $$;	/* SPARE 
    VOLOWNER word unsigned;				/* VOLUME OWNER UIC 
    PROTECT_OVERLAY union;
        PROTECT word unsigned;				/* VOLUME PROTECTION 
	PROTECT_BITS structure;
            SYSPRO bitfield length 4;			/* SYSTEM PROTECTION 
            OWNPRO bitfield length 4;			/* OWNER PROTECTION 
            GROUPPRO bitfield length 4;			/* GROUP PROTECTION 
            WORLDPRO bitfield length 4;			/* WORLD PROTECTION 
	end PROTECT_BITS;
    end PROTECT_OVERLAY;
    VOLCHAR word unsigned;				/* VOLUME CHARACTERISTICS 
    FILEPROT word unsigned;				/* DEFAULT FILE PROTECTION 
    FILL_2 byte dimension 6 fill prefix HMBDEF tag $$;	/* SPARE 
    WINDOW byte unsigned;				/* DEFAULT WINDOW SIZE 
    EXTEND byte unsigned;				/* DEFAULT FILE EXTEND 
    LRU_LIM byte unsigned;				/* DEFAULT LRU LIMIT 
    FILL_3 byte dimension 11 fill prefix HMBDEF tag $$;	/* SPARE 
    CHECKSUM1 word unsigned;				/* FIRST CHECKSUM 
    CREDATE character length 14;			/* VOLUME CREATION DATE 
    FILL_4 byte dimension 398 fill prefix HMBDEF tag $$;/* SPARE 
    VOLNAME2 character length 12;			/* 2ND COPY OF VOLUME NAME 
    OWNERNAME character length 12;			/* VOLUME OWNER NAME 
    FORMAT character length 12;				/* VOLUME FORMAT TYPE 
    FILL_5 byte dimension 2 fill prefix HMBDEF tag $$;	/* SPARE 
    CHECKSUM2 word unsigned;				/* SECOND CHECKSUM 
end HMBDEF;

end_module $HMBDEF;


