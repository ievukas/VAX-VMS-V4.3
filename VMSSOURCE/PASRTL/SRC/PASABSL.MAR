	.TITLE	PAS$ABS_L - Return absolute value
	.IDENT	/1-001/			; File: PASABSL.MAR Edit: SBL1001

;
;****************************************************************************
;*									    *
;*  COPYRIGHT (c) 1978, 1980, 1982, 1984 BY				    *
;*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
;*  ALL RIGHTS RESERVED.						    *
;* 									    *
;*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
;*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
;*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
;*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
;*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
;*  TRANSFERRED.							    *
;* 									    *
;*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
;*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
;*  CORPORATION.							    *
;* 									    *
;*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
;*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
;* 									    *
;*									    *
;****************************************************************************
;

;++
; FACILITY: Pascal Language Support
;
; ABSTRACT:
;
;	This module contains PAS$ABS_L, which returns the absolute value
;	of a longword without checking for overflow.
;
; ENVIRONMENT: Runs at any access mode, AST Reentrant
;
; AUTHOR: Steven B. Lionel, CREATION DATE: 4-Nov-1980
;
; MODIFIED BY:
;
; 1-001	- Original. SBL 4-Nov-1980
;--

	.SBTTL	DECLARATIONS
;
; LIBRARY MACRO CALLS:
;
;	NONE
;
; EXTERNAL DECLARATIONS:
;
	.DSABL	GBL		; Force all external symbols to be declared
;	NONE
;
; MACROS:
;
;	NONE
;
; EQUATED SYMBOLS:
;
;	NONE
;
; OWN STORAGE:
;
;	NONE
;
; PSECT DECLARATIONS:
;
	.PSECT _PAS$CODE PIC, USR, CON, REL, LCL, SHR, -
			EXE, RD, NOWRT, LONG


	.SBTTL	PAS$ABS_L - Take absolute value unchecked
;++
; FUNCTIONAL DESCRIPTION:
;
;	This routine returns the absolute value of a signed longword
;	integer without checking for overflow.  If the argument is
;	-2**31, the result returned is -2**31.
;
; CALLING SEQUENCE:
;
;	Result.wl.v = PAS$ABS_L (Long.rl.r)
;
; FORMAL PARAMETERS:
;
;	Long	- Signed longword argument
;
; IMPLICIT INPUTS:
;
;	NONE
;
; IMPLICIT OUTPUTS:
;
;	NONE
;
; ROUTINE VALUE:
;
;	The absolute value of the argument unless the argument is -2**31
;	in which case -2**31 is returned.
;
; SIDE EFFECTS:
;
;	NONE
;
;--

	.ENTRY	PAS$ABS_L, ^M<>		; Integer overflow must be disabled

	MOVL	@4(AP), R0		; Fetch argument
	BGEQ	10$			; Done if not negative
	MNEGL	R0, R0			; Take absolute value
10$:	RET				; End of routine PAS$ABS_L

	.END				; End of module PAS$ABS_L
