	.TITLE	REQUEU - REQUEUE REQUEST TO DRIVER
	.IDENT	'V04-000'

;
;****************************************************************************
;*									    *
;*  COPYRIGHT (c) 1978, 1980, 1982, 1984 BY				    *
;*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
;*  ALL RIGHTS RESERVED.						    *
;* 									    *
;*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
;*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
;*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
;*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
;*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
;*  TRANSFERRED.							    *
;* 									    *
;*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
;*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
;*  CORPORATION.							    *
;* 									    *
;*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
;*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
;* 									    *
;*									    *
;****************************************************************************

;++
;
; FACILITY:  F11ACP STRUCTURE LEVEL 1
;
; ABSTRACT:
;
;	THIS ROUTINE REQUEUES THE INDICATED I/O PACKET TO THE DEVICE
;	DRIVER FOR WHICH IT WAS ORIGINALLY INTENDED.
;
; ENVIRONMENT:
;
;	STARLET OPERATING SYSTEM, INCLUDING PRIVILEGED SYSTEM SERVICES
;	AND INTERNAL EXEC ROUTINES. THIS ROUTINE MUST BE CALLED IN
;	KERNEL MODE.
;
;--
;
; AUTHOR:  ANDREW C. GOLDSTEIN  14-MAR-78  10:43
;
; MODIFIED BY:
;
;	V03-003	ROW0348		Ralph O. Weber		12-APR-1984
;		Change maximum byte count, UCB$L_MAXBCNT, tests to be 
;		unsigned.  This should have been done in ROW0218, when 
;		SYSACPFDT and IOCIOPOST were fixed, but what can I say, 
;		"Nobody's perfect."
;
;	V03-002	ACG0408		Andrew C. Goldstein,	23-Mar-1984  11:01
;		Make all of global storage based
;
;	V03-001	RLRMXBCNT	Robert L. Rappaport	11-Mar-1983
;		Allow for segmentation of Logical I/O (and Virtual)
;		based on the UCB$L_MAXBCNT field.
;
;**

;
; EQUATED SYMBOLS:
;
PACKET	=  4				; ADDRESS OF I/O PACKET ARG
LBN	=  8				; STARTING LBN OF TRANSFER
UNMAPPED= 12				; COUNT OF UNMAPPED BLOCKS

	$IRPDEF				; DEFINE I/O PACKET OFFSETS
	$IODEF				; DEFINE I/O FUNCTION CODES
	$UCBDEF				; DEFINE UCB OFFSETS

;++
;
; FUNCTIONAL DESCRIPTION:
;
;	THIS ROUTINE REQUEUES THE INDICATED I/O PACKET TO THE DEVICE
;	DRIVER FOR WHICH IT WAS ORIGINALLY INTENDED. IT TRANSLATES THE
;	LBN INTO THE CORRESPONDING PHYSICAL BLOCK NUMBER AND CONVERTS THE
;	I/O FUNCTION CODE INTO THE APPROPRIATE PHYSICAL FUNCTION.
;	THE NUMBER OF UNMAPPED BLOCKS IS DEDUCTED FROM THE BYTE COUNT.
;
; CALLING SEQUENCE:
;	CALL REQUEUE_REQ (ARG1, ARG2, ARG3)
;
; INPUT PARAMETERS:
;	ARG1: ADDRESS OF I/O PACKET
;	ARG2: STARTING LBN OF TRANSFER
;	ARG3: NUMBER OF BLOCKS UNMAPPED
;
; IMPLICIT INPUTS:
;	CURRENT_UCB: ADDRESS OF REQUEST UCB
;
; OUTPUT PARAMETERS:
;	NONE
;
; IMPLICIT OUTPUTS:
;	NONE
;
; ROUTINE VALUE:
;	NONE
;
; SIDE EFFECTS:
;	REQUEST QUEUED TO UCB
;
;--

	.PSECT	$CODE$,NOWRT,LONG

REQUEUE_REQ::
	.WORD	^M<R2,R3,R4,R5>		; SAVE REGISTERS
	MOVL	PACKET(AP),R3		; GET PACKET ADDRESS
	MOVL	W^CURRENT_UCB(R10),R5	; GET UCB ADDRESS
	MOVL	R5,IRP$L_UCB(R3)	; STORE POSSIBLY CHANGED UCB ADDRESS
	ASHL	#9,UNMAPPED(AP),R0	; GET BYTE COUNT OF UNMAPPED BLOCKS
	BEQL	10$			; BRANCH IF ALL MAPPED - NO FIXUP
	SUBL	R0,IRP$L_BCNT(R3)	; AND SUBTRACT FROM TRANSFER COUNT
	ADDL	#511,IRP$L_BCNT(R3)	; ROUND BYTE COUNT TO NEXT BLOCK BOUNDARY
	BICW	#511,IRP$L_BCNT(R3)	; IN CASE FULL BYTE COUNT CONTAINS A PARTIAL BLOCK
10$:	MOVL	UCB$L_MAXBCNT(R5),R0	; R0 = 0 or Max. permissible BCNT.
	BNEQ	20$			; NEQ implies Max. permissible BCNT in R0.
	MOVZWL	#512*127,R0		; If 0, use default Max. permissible.
20$:
	CMPL	R0,IRP$L_BCNT(R3)	; See if BCNT too large.
	BGEQU	30$			; GEQU implies we are OK.
	MOVL	R0,IRP$L_BCNT(R3)	; Else scale down to maximum allowed.
30$:
	MOVL	LBN(AP),R0		; GET STARTING LBN
	JSB	@#IOC$CVTLOGPHY		; CONVERT TO PHYSICAL BLOCK
	JSB	@#EXE$INSIOQ		; AND QUEUE TO DRIVER
	RET



	.END
