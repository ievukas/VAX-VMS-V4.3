	.TITLE	MPSCBVEC - MULTI-PROCESSOR SCB VECTOR
	.IDENT	'V04-000'

;
;****************************************************************************
;*									    *
;*  COPYRIGHT (c) 1978, 1980, 1982, 1984 BY				    *
;*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
;*  ALL RIGHTS RESERVED.						    *
;* 									    *
;*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
;*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
;*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
;*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
;*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
;*  TRANSFERRED.							    *
;* 									    *
;*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
;*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
;*  CORPORATION.							    *
;* 									    *
;*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
;*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
;* 									    *
;*									    *
;****************************************************************************
;

;++
;
; Facility:  Executive , Hardware fault handling
;
; Abstract:  SCB vectors 
;
; Environment: MODE=Kernel 
;
; Author:  RICHARD I. HUSTVEDT, Creation date:  15-MAY-1979
;
; Modified by:
;
;	V03-005	KDM0030		Kathleen D. Morse	18-Nov-1982
;		Remove pagefault handler, as now primary can execute
;		secondary-specific code without turning into a secondary.
;
;	V03-004	KDM0025		Kathleen D. Morse	10-Oct-1982
;		Change secondary specific routines to be MPS$xxx instead
;		of EXE$xxx (MPS$SWTIMINT, MPS$HWCLKINT).
;
;	V03-003	KDM0018		Kathleen D. Morse	10-Oct-1982
;		Add CHMK routine for secondary processor.
;
;	V03-002	KDM0005		Kathleen D. Morse	10-Oct-1982
;		Add pagefault handler for secondary processor.
;
;
;
; 01	- 
;--

	.PAGE
	.SBTTL	SCB 
;
; INCLUDE FILES:
;

;
; MACROS:
;

;
; Macro DEFVEC defines an Unused vector.
;

	.MACRO	DEFVEC,VNUM
	.LONG	ERL$VEC'VNUM+INTSTK
	.ENDM	DEFVEC

;
; EQUATED SYMBOLS:
;

	$IPLDEF			; Define IPL levels
	$PRDEF			; Define processor registers

INTSTK = 1			; Definition for interrupt stack
VNUM = 256			; Vectors ^X100-^X1FC for nexus devices

;
; OWN STORAGE:
;

 
	.PAGE
;+
;
; FUNCTIONAL DESCRIPTION:
;
; This module contains the SCB vectors which are copied into physically
; contiguous space, replacing those used by a single processor VMS system.
;
;-
	.PSECT	$$$00SCB,PAGE	;
SCB$AL_BASE::			; SCB base address
	.LONG	ERL$VEC0	; Unused, reserved to Digital
	.LONG	MPS$MCHK+INTSTK	; Machine check handler.	^X004
	.LONG	MPS$KERSTKNV+INTSTK ; Kernel stack not valid halt. ^X008
	.LONG	MPS$POWERFAIL+INTSTK ; Power fail interrupt.	^X00C
	.LONG	ERL$VEC16	; Reserved/privileged instruction fault. ^X010
	.LONG	ERL$VEC20	; Customer reserved instruction fault. ^X014
	.LONG	ERL$VEC24	; Reserved operand fault/halt.	^X018
	.LONG	ERL$VEC28	; Reserved addressing mode fault. ^X01C
	.LONG	ERL$VEC32	; Access control violation fault. ^X020
	.LONG	ERL$VEC36	; Translation not valid fault.	^X024
	.LONG	XDELTBIT	; Tbit fault.			^X028
	.LONG	XDELBPT		; Breakpoint fault.		^X02C
	.LONG	MPS$COMPAT	; Compatibility fault.		^X030
	.LONG	ERL$VEC52	; Arithmetic trap.		^X034
	.LONG	ERL$VEC56	; Unused.			^X038
	.LONG	ERL$VEC60	; Unused.			^X03C
	.LONG	MPS$CMODKRNL	; CHMK trap.			^X040
	.LONG	EXE$CMODEXEC	; CHME trap.			^X044
	.LONG	EXE$CMODSUPR	; CHMS trap.			^X048
	.LONG	EXE$CMODUSER	; CHMU trap.			^X04C
	.LONG	ERL$VEC80	; Unused.			^X050
	.LONG	MPS$INT54+INTSTK ; Cpu-dependent fault.		^X054
	.LONG	MPS$INT58+INTSTK ; Cpu-dependent fault.		^X058
	.LONG	MPS$INT5C+INTSTK ; Cpu-dependent fault.		^X05C
	.LONG	MPS$INT60+INTSTK ; Cpu-dependent fault.		^X060
	.LONG	ERL$VEC100	; Unused.			^X064
	.LONG	ERL$VEC104	; Unused.			^X068
	.LONG	ERL$VEC108	; Unused.			^X06C
	.LONG	ERL$VEC112	; Unused.			^X070
	.LONG	ERL$VEC116	; Unused.			^X074
	.LONG	ERL$VEC120	; Unused.			^X078
	.LONG	ERL$VEC124	; Unused.			^X07C
	.LONG	ERL$VEC128	; Unused.			^X080
	.LONG	ERL$VEC132 	; Software level 1 interrupt.	^X084
	.LONG	MPS$ASTDEL	  ; Software level 2 interrupt.	^X088
	.LONG	MPS$MPSCHED	  ; Software level 3 interrupt. ^X08C
	.LONG	ERL$VEC144+INTSTK ; Software level 4 interrupt.	^X090
	.LONG	ERL$VEC148+INTSTK ; Software level 5 interrupt. ^X094
	.LONG	ERL$VEC152+INTSTK ; Software level 6 interrupt.	^X098
	.LONG	MPS$SWTIMINT	  ; Software level 7 interrupt.	^X09C
	.LONG	ERL$VEC160+INTSTK ; Software level 8 interrupt.	^X0A0
	.LONG	ERL$VEC164+INTSTK ; Software level 9 interrupt.	^X0A4
	.LONG	ERL$VEC168+INTSTK ; Software level 10 interrupt. ^X0A8
	.LONG	ERL$VEC172+INTSTK ; Software level 11 interrupt. ^X0AC
	.LONG	ERL$VEC176+INTSTK ; Software level 12 interrupt. ^X0B0
	.LONG	ERL$VEC180+INTSTK ; Software level 13 interrupt. ^X0B4
	.LONG	ERL$VEC184+INTSTK ; Software level 14 interrupt. ^X0B8
	.LONG	MPS$XDELTAINT	  ; Software level 15 interrupt. ^X0BC
	.LONG	MPS$HWCLKINT+INTSTK ; Interval timer.		^X0C0
	.LONG	ERL$VEC196+INTSTK ; Unused.			^X0C4
	.LONG	ERL$VEC200+INTSTK ; Unused.			^X0C8
	.LONG	ERL$VEC204+INTSTK ; Unused.			^X0CC
	.LONG	ERL$VEC208+INTSTK ; Unused.			^X0D0
	.LONG	ERL$VEC212+INTSTK ; Unused.			^X0D4
	.LONG	ERL$VEC216+INTSTK ; Unused.			^X0D8
	.LONG	ERL$VEC220+INTSTK ; Unused.			^X0DC
	.LONG	ERL$VEC224+INTSTK ; Unused.			^X0E0
	.LONG	ERL$VEC228+INTSTK ; Unused.			^X0E4
	.LONG	ERL$VEC232+INTSTK ; Unused.			^X0E8
	.LONG	ERL$VEC236+INTSTK ; Unused.			^X0EC
	.LONG	ERL$VEC240+INTSTK ; Unused.			^X0F0
	.LONG	ERL$VEC244+INTSTK ; Unused.			^X0F4
	.LONG	ERL$VEC248+INTSTK ; Console interrupt for input ^X0F8
	.LONG	ERL$VEC252+INTSTK ; Console interrupt for output ^X0FC


	.REPT	16		; Nexus vectors, IPL ^X14
	DEFVEC	\VNUM
	VNUM=VNUM+4
	.ENDR

	.REPT	16		; Nexus vectors, IPL ^X15
	DEFVEC	\VNUM
	VNUM=VNUM+4
	.ENDR

	.REPT	16		; Nexus Vectors, IPL ^X16
	DEFVEC	\VNUM
	VNUM=VNUM+4
	.ENDR

	.REPT	16		; Nexus vectors, IPL ^X17
	DEFVEC	\VNUM
	VNUM=VNUM+4
	.ENDR

	.END
