{ REQUIRE file for FORTRAN  error codes (STS$V_CODE)
{ Filename: FORERR.SDL Edit: SBL2001
{
{****************************************************************************
{*									    *
{*  COPYRIGHT (c) 1978, 1980, 1982, 1984 BY				    *
{*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
{*  ALL RIGHTS RESERVED.						    *
{* 									    *
{*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
{*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
{*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
{*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
{*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
{*  TRANSFERRED.							    *
{* 									    *
{*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
{*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
{*  CORPORATION.							    *
{* 									    *
{*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
{*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
{* 									    *
{*									    *
{****************************************************************************
{
{
{ Author: T. Hastings
{ [Previous edit history removed.  SBL 11-Nov-1980]
{ 1-001	- Add copyright notice and change version number.  JBS 16-NOV-78
{ 1-002	- Correct minor errors in the maintenance note.  JBS 16-NOV-78
{ 1-003	- Change reference to RTLMSG to be FORMSG.  JBS 02-JAN-1979
{ 1-004 - Added error numbers 49-58 for ISAM.  SBL 09-Feb-1979
{ 1-005 - Remove error 58.  Change name of error 36 and 50.  SBL 6-Apr-79
{ 1-006 - Change FOR$K_RECSPEERR to FOR$K_INCRECTYP.  SBL 27-Apr-79
{ 1-007 - Change FOR$K_INVKEYCHG to FOR$K_INCKEYCHG,  SBL 2-May-1979
{ 1-008 - Make changes to agree with -11 F4P.  SBL 8-May-1979
{ 1-009 - Rename FOR$K_MORONEREC to FOR$K_TOOMANREC.  SBL 21-Sept-1979
{ 1-010 - Add errors 17-19 for NAMELIST.  SBL 11-Nov-1980
{ 2-001 - Convert to SDL.  SBL 23-AUG-1982


{+
{ Define short valued symbols of the form FOR$K_symbol which are used in calls to
{ the FORTRAN error Procedure of the form:
{
{	FOR$$SIGNAL (FOR$K_error_number)
{
{ which are changed into 32-bit VAX-11 condition values
{ of the form FOR$_error_number
{ before calling LIB$SIGNAL (FOR$_error_number)
{
{ In macro, the symbols may be defined either as .EXTRNs or $FORERR
{ 	$FORERR
{ will define all FORTRAN error numbers.

{*****************************************************
{
{ MAINTENANCE NOTE:
{
{	COM$$ERRSET_TST module (in file COMSETST.B32) contains the F4P/11
{	 compatibility error handler and has a table for all errors.
{	 When new error numbers are added that table may need modification.
{
{*****************************************************
{-



MODULE $FORERR;
    
{ The following messages may not be the actual text:
{ See FORMSG.MSG for the correct text

CONSTANT 
    FAC_NO	EQUALS 24  PREFIX FOR TAG $K,	{ FORTRAN facility number (STS$W_FAC_NO) 
    NOTFORSPE	EQUALS 1  PREFIX FOR TAG $K;	{ NOT A FORTRAN-SPECIFIC ERROR 
    						{ Used as a catch-all error number
    						{ for error other than FOR$ and MTH$

CONSTANT (
    SYNERRNAM,	{ SYNTAX ERROR IN NAMELIST INPUT 
    TOOMANVAL,	{ TOO MANY VALUES IN NAMELIST INPUT 
    INVREFVAR,	{ INVALID REFERENCE TO VARIABLE IN NAMELIST 
    REWERR,	{ REWIND ERROR 
    DUPFILSPE,	{ DUPLICATE FILE SPECIFICATIONS 
    INPRECTOO,	{ INPUT RECORD TOO LONG 
    BACERR,	{ BACKSPACE ERROR 
    ENDDURREA,	{ END-OF-FILE DURING READ 
    RECNUMOUT,	{ RECORD NUMBER OUTSIDE RANGE 
    OPEDEFREQ,	{ OPEN OR DEFINEFILE REQUIRED TO SPECIFY DIRECT ACCESS 
    TOOMANREC,	{ TOO MANY RECORDS IN I/O STATEMENT 
    CLOERR,	{ CLOSE ERROR 
    FILNOTFOU,	{ FILE NOT FOUND 
    OPEFAI,	{ OPEN FAILURE 
    MIXFILACC,	{ MIXED FILE ACCESS MODES 
    INVLOGUNI,	{ INVALID LOGICAL UNIT NUMBER 
    ENDFILERR,	{ ENDFILE ERROR 
    UNIALROPE,	{ UNIT ALREADY OPEN 
    SEGRECFOR,	{ SEGMENTED RECORD FORMAT ERROR 
    ATTACCNON,	{ ATTEMPT TO ACCESS NON-EXISTENT RECORD 
    INCRECLEN,	{ INCONSISTENT RECORD LENGTH 
    ERRDURWRI,	{ ERROR DURING WRITE 
    ERRDURREA,	{ ERROR DURING READ 
    RECIO_OPE,	{ RECURSIVE I/O OPERATION 
    INSVIRMEM,	{ INSUFFICIENT VIRTUAL MEMORY 
    NO_SUCDEV,	{ NO SUCH DEVICE 
    FILNAMSPE,	{ FILE NAME SPECIFICATION ERROR 
    INCRECTYP,	{ INCONSISTENT RECORD TYPE 
    KEYVALERR,	{ KEYWORD VALUE ERROR IN OPEN STATEMENT 
    INCOPECLO,	{ INCONSISTENT OPEN/CLOSE PARAMETERS 
    WRIREAFIL,	{ WRITE TO READONLY FILE 
    INVARGFOR,	{ INVALID ARGUMENT TO FORTRAN RUN-TIME LIBRARY 
    INVKEYSPE,	{ INVALID KEY SPECIFICATION 
    INCKEYCHG,	{ INCONSISTENT KEY CHANGE OR DUPLICATE KEY 
    INCFILORG,	{ INCONSISTENT FILE ORGANIZATION 
    SPERECLOC,	{ SPECIFIED RECORD LOCKED 
    NO_CURREC,	{ NO CURRENT RECORD 
    REWRITERR,	{ REWRITE ERROR 
    DELERR,	{ DELETE ERROR 
    UNLERR,	{ UNLOCK ERROR 
    FINERR,	{ FIND ERROR 
    ,		{ Unused error 58
    LISIO_SYN,	{ LIST-DIRECTED I/O SYNTAX ERROR 
    INFFORLOO,	{ INFINITE FORMAT LOOP 
    FORVARMIS,	{ FORMAT/VARIABLE-TYPE MISMATCH 
    SYNERRFOR,	{ SYNTAX ERROR IN FORMAT 
    OUTCONERR,	{ OUTPUT CONVERSION ERROR 
    INPCONERR,	{ INPUT CONVERSION ERROR 
    ,		{ Unused error 65    
    OUTSTAOVE,	{ OUTPUT STATEMENT OVERFLOWED RECORD 
    INPSTAREQ,	{ INPUT STATEMENT REQUIRED TOO MUCH DATA 
    VFEVALERR	{ VARIABLE FORMAT EXPRESSION VALUE ERROR 
    ) EQUALS 17 INCREMENT 1 PREFIX FOR TAG $K;
    
{+
{ Define arithmetic trap error numbers, even though signaled as SS$_ARITH
{ Therefore there is no corresponding error message in FORMSG.MDL for these:
{-
    
CONSTANT (
    INTOVF,	{ INTEGER OVERFLOW 
    INTZERDIV,	{ INTEGER ZERO DIVIDE 
    FLOOVE,	{ FLOATING OVERFLOW 
    FLOZERDIV,	{ FLOATING ZERO DIVIDE 
    FLOUND,	{ FLOATING UNDERFLOW 
    ,		{ Unused error 75    
    DECSTROVE,	{ DECIMAL STRING OVERFLOW 
    ARRREFOUT	{ ARRAY REFERENCE OUTSIDE ARRAY 
    ) EQUALS 70 INCREMENT 1PREFIX FOR TAG $K;
    
{ End of arithmetic trap error codes
    
    
    
CONSTANT
    ADJARRDIM	EQUALS 93 PREFIX FOR TAG $K,	{ ADJUSTABLE ARRAY DIMENSION ERROR 
    MAX_ERR	EQUALS 93 PREFIX FOR TAG $K;	{ maximum error number (NOT AN ERROR!!!) 

END_MODULE $FORERR;

{ End of file FORERR.SDL
