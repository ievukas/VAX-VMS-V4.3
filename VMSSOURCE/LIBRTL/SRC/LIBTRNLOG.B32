MODULE LIB$SYS_TRNLOG (%TITLE'Translate logical name'
	IDENT = '1-010'		! File: LIBTRNLOG.B32 EDIT: SBL1010
		      ) =
BEGIN
!
!****************************************************************************
!*									    *
!*  COPYRIGHT (c) 1978, 1980, 1982, 1984 BY				    *
!*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
!*  ALL RIGHTS RESERVED.						    *
!* 									    *
!*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
!*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
!*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
!*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
!*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
!*  TRANSFERRED.							    *
!* 									    *
!*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
!*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
!*  CORPORATION.							    *
!* 									    *
!*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
!*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
!* 									    *
!*									    *
!****************************************************************************
!

!++
! FACILITY:  General Library Support
!
! ABSTRACT:
!
!	Using $TRNLOG translate a logical name, returning the 
! resultant string using the semantics of the caller's string.
! Parameter DSBMSK is presented to this routine by-reference and
! is promoted to by-value for presentation to $TRNLOG
!
! ENVIRONMENT:  VAX-11 User Mode
!
! AUTHOR: R. Reichert, CREATION DATE: 20-SEPT-1979
!
! MODIFIED BY:
!
! 1-001	- Original.  RKR 20-SEPT-1979
! 1-002 - Change name to LIB$SYS_TRNLOG. RKR 15-OCT-79
! 1-003	- Correct some minor errors in RSLLEN and returning
!	   status, and improve the comments.  JBS 19-OCT-1979
! 1-004 - Add code to promote by-reference parameter to by-value
!	  parameter.  RKR 1-NOV-79
! 1-005 - Change STR$ codes to LIB$ codes. RKR  22-JAN-80
! 1-006 - Enhance to recognize additional classes of string descriptors
!	  on output by always getting data into internal buffer and
!	  using LIB$SCOPY_DXDX6 to deliver to caller's buffer.
!	  LIB$ANALYZE_SDESC_R3 is used to compute the number of bytes
!	  actually copied after the copy operation completes.
!	  Change to use LIB$SCOPY_DXDX6 instead of STR$COPY_DX.  This
!	  avoids having to change STR$ statuses to LIB$ statuses and
!	  eliminates need for a handler.
!	  RKR 29-MAY-1981.
! 1-007 - Add special-case code to process string descriptors that
!	  "read" like fixed string descriptors.  RKR 7-OCT-1981.
! 1-008 - Redirect jsb's from LIB$ANALYZE_SDESC_R3 to
!	  LIB$ANALYZE_SDESC_R2.  Use LIB$SCOPY_RDX6 for copying.
!	  RKR 18-NOV-1981.
! 1-009 - Use LNM$C_NAMLENGTH as the maximum name/translation length.  
!	  Use prologue file, other improvements.  SBL 10-Jan-1983
! 1-010 - Return status from $TRNLOG if otherwise successful.  SBL 15-Mar-1983
!--

!<BLF/PAGE>

!
! PROLOGUE FILE:
!

REQUIRE 'RTLIN:LIBPROLOG';			! LIB$ definitions

!
! TABLE OF CONTENTS:
!

FORWARD ROUTINE
    LIB$SYS_TRNLOG;		! Translate logical name

!
! MACROS:
!
!	NONE
!
! EQUATED SYMBOLS:
!
!	NONE
!
! OWN STORAGE:
!
!	NONE
!
! EXTERNAL REFERENCES:
!

EXTERNAL ROUTINE
    LIB$ANALYZE_SDESC_R2 : LIB$ANALYZE_SDESC_R2$LINKAGE, ! Extract length
						         ! and address of
						         ! 1st data byte
						         ! from descriptor
    LIB$SCOPY_DXDX;	! Copy string by descriptor.

GLOBAL ROUTINE LIB$SYS_TRNLOG (%SBTTL'Translate logical name'
    LOGNAM: REF BLOCK [, BYTE],		! Logical name descriptor
    RSLLEN: REF VECTOR [, WORD],	! Result length
    RSLBUF: REF BLOCK [, BYTE],		! Resultant string 
    TABLE: REF VECTOR [, BYTE],		! Table number
    ACMODE: REF VECTOR [, BYTE],	! Access mode
    DSBMSK: REF VECTOR [, BYTE]		! Disable mask
    ) =

!++
! FUNCTIONAL DESCRIPTION:
!
!	Using $TRNLOG translate a logical name, returning the 
! resultant string using the semantics of the caller's string.
! Parameter DSBMSK is presented to this routine by-reference and
! is promoted to by-value for presentation to $TRNLOG
!
!	See $TRNLOG system service description
!
! FORMAL PARAMETERS:
!
!	LOGNAM.rt.dx	address of logical name string descriptor
!
!	RSLLEN.ww.r	address of word to receive length of
!			resultant name string
!			(Optional parameter)
!
!	RSLBUF.wt.dx	address of result string buffer descriptor
!
!	TABLE.wb.r	address of byte to receive logical name table
!			number
!			(Optional parameter)
!
!	ACMODE.wb.r	address of byte to receive access mode of entry
!			(process table only)
!			(Optional parameter)
!
!	DSBMSK.rbu.r	Address of
!			table search disable mask
!			(Optional parameter)
!
!			Bit Set	Meaning
!			-------	-------
!
!			0	Do not search system
!			1	Do not search group
!			2	Do not search process
!
! IMPLICIT INPUTS:
!
!	NONE
!
! IMPLICIT OUTPUTS:
!
!	NONE
!
! COMPLETION CODES:
!
!	SS$_NORMAL	Procedure successfully completed
!	LIB$_WRONUMARG	Wrong number of arguments
! From LIB$SCOPY_DXDX
!	LIB$_STRTRU	Success, but source string truncated
!	LIB$_INSVIRMEM	Insufficient virtual memory
!	LIB$_INVSTRDES	Invalid string descriptor
! From $TRNLOG
!	SS$_NOTRAN	Successful, but input logical name string was
!			placed in output buffer because no equivalence
!			name was found.
!	SS$_ACCVIO	The logical name string or string descriptor
!			cannot be read, or the output length, output
!			buffer, or table or access mode field cannot
!			be written by the caller.
!	SS$_IVLOGNAM	The specified logical name string has a length
!			of zero or has too many characters.
!
! SIDE EFFECTS:
!
!	NONE
!
!--

    BEGIN

    BUILTIN
	NULLPARAMETER;

    LOCAL
	LOCAL_RSLBUF: VECTOR [LNM$C_NAMLENGTH, BYTE],	! Local resultant buffer
	LOCAL_RSLBUF_DESC : BLOCK [8, BYTE],	! Descriptor for local buffer
	LOCAL_LOGNAM_DESC: BLOCK [8, BYTE],	! Local copy of LOGNAM descriptor
	STATUS1, TRNLOG_STATUS, COPY_STATUS;	! Statuses from called routines

    !+
    ! Validate argument count.
    !-

    $LIB$VALIDATE_ARGCOUNT (3,6);

    !+
    ! Construct static descriptor to describe LOGNAM string.
    !-

    LOCAL_LOGNAM_DESC [DSC$B_DTYPE] = DSC$K_DTYPE_T;
    LOCAL_LOGNAM_DESC [DSC$B_CLASS] = DSC$K_CLASS_S;
    STATUS1 = LIB$ANALYZE_SDESC_R2 (LOGNAM [0,0,0,0];
	LOCAL_LOGNAM_DESC [DSC$W_LENGTH], LOCAL_LOGNAM_DESC [DSC$A_POINTER]);
    IF NOT .STATUS1
    THEN
	RETURN .STATUS1;

    !+
    ! Construct a static descriptor to receive the translated string from
    ! VAX/VMS
    !-

    LOCAL_RSLBUF_DESC [DSC$W_LENGTH] = LNM$C_NAMLENGTH;
    LOCAL_RSLBUF_DESC [DSC$B_DTYPE] = DSC$K_DTYPE_T;
    LOCAL_RSLBUF_DESC [DSC$B_CLASS] = DSC$K_CLASS_S;
    LOCAL_RSLBUF_DESC [DSC$A_POINTER] = LOCAL_RSLBUF;

    !+
    ! Do the $TRNLOG.
    !-

    TRNLOG_STATUS = $TRNLOG (
			LOGNAM = LOCAL_LOGNAM_DESC [0,0,0,0],
			RSLLEN = LOCAL_RSLBUF_DESC [DSC$W_LENGTH],
			RSLBUF = LOCAL_RSLBUF_DESC [0,0,0,0],
			TABLE  = (IF NULLPARAMETER(4) THEN 0 ELSE TABLE [0]),
			ACMODE = (IF NULLPARAMETER(5) THEN 0 ELSE ACMODE [0]),
			DSBMSK = (IF NULLPARAMETER(6) THEN 0 ELSE .DSBMSK [0]));
			
    !+
    ! Copy internal buffer to caller's buffer, letting LIB$SCOPY_DXDX
    ! worry about its semantics.
    !-

    COPY_STATUS = LIB$SCOPY_DXDX (LOCAL_RSLBUF_DESC [0,0,0,0], 
	RSLBUF [0,0,0,0]);

    !+
    ! Store result string length if desired.
    !-

    IF RSLLEN [0] NEQA 0
    THEN
	BEGIN
	LIB$ANALYZE_SDESC_R2 (RSLBUF [0,0,0,0]; RSLLEN [0]);
	IF .RSLLEN [0] GTRU .LOCAL_RSLBUF_DESC [DSC$W_LENGTH]
	THEN
	    RSLLEN [0] = .LOCAL_RSLBUF_DESC [DSC$W_LENGTH];
	END;

    !+
    ! At this point we have 2 statuses that we could return to caller.
    ! Determine which one is the "most meaningful".
    ! If $TRNLOG returned anything other than SS$_NORMAL, then return that
    ! status, otherwise return the copy status.
    !-

    IF .TRNLOG_STATUS NEQU SS$_NORMAL
    THEN
	RETURN .TRNLOG_STATUS;
    RETURN .COPY_STATUS;

    END;			! end of LIB$SYS_TRNLOG

END				! end of module LIB$SYS_TRNLOG

ELUDOM
