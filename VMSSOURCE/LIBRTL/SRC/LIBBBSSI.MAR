	.TITLE	LIB$BBSSI - Test and set bit interlocked
	.IDENT	/1-001/			; File: LIBBBSSI.MAR Edit: SBL1001

;
;****************************************************************************
;*									    *
;*  COPYRIGHT (c) 1978, 1980, 1982, 1984 BY				    *
;*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
;*  ALL RIGHTS RESERVED.						    *
;* 									    *
;*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
;*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
;*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
;*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
;*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
;*  TRANSFERRED.							    *
;* 									    *
;*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
;*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
;*  CORPORATION.							    *
;* 									    *
;*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
;*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
;* 									    *
;*									    *
;****************************************************************************
;

;++
; FACILITY: General Utility Library
;
; ABSTRACT:
;
;	LIB$BBSSI tests and sets a bit with interlock.
;
; ENVIRONMENT: Runs at any access mode, AST Reentrant
;
; AUTHOR: Steven B. Lionel, CREATION DATE: 16-AUG-1982
;
; MODIFIED BY:
;
; 1-001	- Original. SBL 16-AUG-1982
;--

	.SBTTL	DECLARATIONS
;
; LIBRARY MACRO CALLS:
;
;	NONE
;
; EXTERNAL DECLARATIONS:
;
	.DSABL	GBL		; Force all external symbols to be declared
;	NONE
;
; MACROS:
;
;	NONE
;
; EQUATED SYMBOLS:
;
;	NONE
;
; OWN STORAGE:
;
;	NONE
;
; PSECT DECLARATIONS:
;
	.PSECT _LIB$CODE PIC, USR, CON, REL, LCL, SHR, -
			EXE, RD, NOWRT, LONG


	.SBTTL	LIB$BBSSI - Test and set a bit with interlock
;++
; FUNCTIONAL DESCRIPTION:
;
;	LIB$BBSSI tests and sets a selected bit under memory interlock.  
;	LIB$BBSSI makes the VAX-11 BBSSI instruction available as a 
;	callable procedure.
;
;	The single bit specified by the "position" and "base" arguments 
;	is tested, the previous state of the bit remembered, and the bit set.  
;	The reading of the state of the bit and the setting of it constitute 
;	an interlocked operation, interlocked against similar operations by 
;	other processors or devices in the system.  The remembered previous 
;	state of the bit is then returned as the function value of LIB$BBSSI.
;
;	For more information, see the VAX-11 Architecture Reference Manual.
;
; CALLING SEQUENCE:
;
;	previous-state.wv.v = LIB$BBSSI (position.rl.r, base.rz.r)
;
; FORMAL PARAMETERS:
;
	position = 4	; The signed longword bit position, relative to "base", 
			; of the bit being tested and set.  Passed by reference.

	base = 8	; The byte which contains bit zero of the object
			; being tested and set.  Passed by reference.
;
; IMPLICIT INPUTS:
;
;	NONE
;
; IMPLICIT OUTPUTS:
;
;	NONE
;
; ROUTINE VALUE:
;
;	The previous value of the bit which was tested and set.
;
; SIDE EFFECTS:
;
;	Sets the specified bit.
;
;--

	.ENTRY	LIB$BBSSI, ^M<>
	MOVL	#1, R0			; Initially, assume bit set
	BBSSI	@position(AP), @base(AP), 10$	; Skip if bit set
	CLRL	R0			; Bit was clear
10$:	RET				; Return previous state

	.END				; End of module LIB$BBSSI
