MODULE ERFOUTPUT
(%TITLE 'ERF output routines'
IDENT = 'V04-000') =
	
BEGIN
	
!
!****************************************************************************
!*									    *
!*  COPYRIGHT (c) 1978, 1980, 1982, 1984 BY				    *
!*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
!*  ALL RIGHTS RESERVED.						    *
!* 									    *
!*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
!*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
!*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
!*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
!*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
!*  TRANSFERRED.							    *
!* 									    *
!*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
!*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
!*  CORPORATION.							    *
!* 									    *
!*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
!*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
!* 									    *
!*									    *
!****************************************************************************

!++
! FACILITY:  ERF, Error Log Report Generator
!
! ABSTRACT:
!
! 	This module contains the text outputting routines for ERF.
!
! ENVIRONMENT:
!
!	VAX/VMS operating system, user mode.
!
! AUTHOR:  Sharon Reynolds,	CREATION DATE:	Feb-1984
!
!
!--
REQUIRE 'SRC$:ERFDEF.REQ' ;

EXTERNAL ROUTINE
    Write_msg ;


GLOBAL Routine OUTPUT_LINES : NOVALUE = 
Begin

!++
!
! Calling Sequence:
!
!    OUTPUT_LINES (control_string,param_list) 
!	NOTE: This routine will calculate the actual number of parameters
!	      that were passed to it. This means that there can be multiple
!	      sets (control_string/param_list) of call parameters specified.
!
! Input Parameters:
!
!    Control_string = address of descriptor containing fao control string.
!    Param_list	= address of parameter list.
!
! Output Parameters:
!
!    None
!
!--

BUILTIN
    Actualcount,
    Actualparameter ;

LOCAL
    Msg_buffer:		Vector[1024,byte],
    Control_string,
    Msg_desc:		Vector [2],
    Out_flag:		Initial (0),
    Param_list,
    Status ;

!
! Get the fao control string and the parameter list.
!
Incr I from 1 to ACTUALCOUNT()/2 do
    Begin
    Control_string = ACTUALPARAMETER(2*(.I - 1) + 1) ;
    Param_list = ACTUALPARAMETER(2*(.I - 1) + 2) ;

    Msg_desc[0] = %ALLOCATION(msg_buffer) ;
    Msg_desc[1] = msg_buffer ;

    If NOT (status = $FAOL (CTRSTR = .control_string,
			    OUTBUF = msg_desc,
			    OUTLEN = msg_desc,
			    PRMLST = .param_list))

    Then Signal_stop (.status) ;


    !
    ! Output the message to the user specified output device.
    !
    WRITE_MSG (msg_desc,out_flag) ;

    End ;

Return ;
End ;	! routine

End	! module
ELUDOM
