! SMGTPACTL.REQ - SMG TPARSE Control Block Defs 
! Version 1-002 - Edit: PLL1001

!
!****************************************************************************
!*									    *
!*  COPYRIGHT (c) 1978, 1980, 1982, 1984 BY				    *
!*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
!*  ALL RIGHTS RESERVED.						    *
!* 									    *
!*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
!*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
!*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
!*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
!*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
!*  TRANSFERRED.							    *
!* 									    *
!*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
!*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
!*  CORPORATION.							    *
!* 									    *
!*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
!*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
!* 									    *
!*									    *
!****************************************************************************
!

! AUTHOR: P. Levesque

! EDIT HISTORY:
! 1-001 - Original.  PLL 28-Nov-1983


LITERAL
    SMG$K_PARAM_BLOCK_SIZE = TPA$K_LENGTH0 + 60; ! TPARSE parameter block length


!+
! Two parameter blocks are actually allocated together and are adjacent.
! The first is the TPARSE parameter block, and the second is a private
! parameter block needed to pass info between the routines in SMGBLDTRM.B32.
! The TPARSE action routines in SMGTPATAB.B32 also need these variables.
!
! TPARSE symbols (TPA$_xxx) are defined in RTLTPAMAC.REQ.  Only private
! symbols are defined here.
!-

MACRO
    PARAM_A_TXT_FAB 		= TPA$K_LENGTH0 + 0, 0, 32, 0%,
					! addr of FAB for TERMTABLE.TXT
    PARAM_A_TXT_RAB		= TPA$K_LENGTH0 + 4, 0, 32, 0%,
					! addr of RAB for TERMTABLE.TXT
    PARAM_A_BINARY_FAB		= TPA$K_LENGTH0 + 8, 0, 32, 0%,
					! addr of FAB for TERMTABLE.EXE
    PARAM_A_BINARY_RAB		= TPA$K_LENGTH0 +12, 0, 32, 0%,
					! addr of RAB for TERMTABLE.EXE
    PARAM_A_CAP_PTRS		= TPA$K_LENGTH0 +16, 0, 32, 0%,
					! addr of buffer for cap offsets
    PARAM_A_CAP_DATA		= TPA$K_LENGTH0 +20, 0, 32, 0%,
					! addr of buffer for data
    PARAM_A_HEADER		= TPA$K_LENGTH0 +24, 0, 32, 0%,
					! addr of buffer with header info
    PARAM_L_TERM_INDEX_SIZE	= TPA$K_LENGTH0 +28, 0, 32, 0%,
					! # bytes in term index    
    PARAM_A_TERM_INDEX		= TPA$K_LENGTH0 +32, 0, 32, 0%,
					! address of temp. storage
					! for terminal index
    PARAM_L_CUR_TERM_DEF	= TPA$K_LENGTH0 +36, 0, 32, 0%,
					! points to current term def
    PARAM_L_CUR_DATA_BYTE	= TPA$K_LENGTH0 +40, 0, 32, 0%,
					! next available data byte
    PARAM_L_CUR_CAP_NUMBER	= TPA$K_LENGTH0 +44, 0, 32, 0%,
					! number of capability currently
					! being parsed
    PARAM_L_SAVED_TOKENCNT	= TPA$K_LENGTH0 +48, 0, 32, 0%,
					! remember how many chars in
					! current cap string
    PARAM_L_SAVED_TOKENSTR	= TPA$K_LENGTH0 +52, 0, 32, 0%,
					! pointer to start of current
					! cap string
    PARAM_L_ORIG_TXT		= TPA$K_LENGTH0 +56, 0, 32, 0%;
					! address of buffer containing
					! text string (pre-upcase)
! End of SMGTPACTL.REQ
