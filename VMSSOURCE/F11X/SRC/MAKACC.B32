MODULE MAKACC (
		LANGUAGE (BLISS32),
		IDENT = 'V04-000'
		) =
BEGIN

!
!****************************************************************************
!*									    *
!*  COPYRIGHT (c) 1978, 1980, 1982, 1984 BY				    *
!*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
!*  ALL RIGHTS RESERVED.						    *
!* 									    *
!*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
!*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
!*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
!*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
!*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
!*  TRANSFERRED.							    *
!* 									    *
!*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
!*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
!*  CORPORATION.							    *
!* 									    *
!*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
!*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
!* 									    *
!*									    *
!****************************************************************************

!++
!
! FACILITY:  F11ACP Structure Level 1
!
! ABSTRACT:
!
!	This routine makes the necessary hookups in the I/O database to
!	reflect a new file access.
! ENVIRONMENT:
!
!	STARLET operating system, including privileged system services
!	and internal exec routines. This routine must be called
!	in kernel mode.
!
!--
!
!
! AUTHOR:  Andrew C. Goldstein,	 CREATION DATE:  20-Dec-1976  17:28
!
! MODIFIED BY:
!
!	V03-004	CDS0003		Christian D. Saether	19-Apr-1984
!		Bump REFCNT in Fcb.  Do not bump other counts if
!		this is NOACCLOCK.  Remove reference to old dirfcb index.
!
!	V03-003	CDS0002		Christian D. Saether	 2-Mar-1984
!		Set WRITE_TURN flag in WCB if index file, storage bitmap,
!		or a directory is being write accessed.
!
!	V03-002	CDS0001		Christian D. Saether	30-Dec-1983
!		Use L_NORM linkage and BIND_COMMON macro.
!
!	V03-001	LMP0059		L. Mark Pilant,		4-Jan-1983  12:28
!		Don't insert the FCB into the queue as it is done when the
!		FCB is created.
!
!	V02-002	LMP0003		L. Mark Pilant,		20-Nov-1981  9:30
!		Modify so that all the segments to a window get inserted into
!		the window queue.
!
!	V02-001	ACG0167		Andrew C. Goldstein,	16-Apr-1980  19:26
!		Previous revision history moved to F11B.REV
!**


LIBRARY 'SYS$LIBRARY:LIB.L32';
REQUIRE 'SRC$:FCPDEF.B32';

GLOBAL ROUTINE MAKE_ACCESS (FCB, WINDOW, ABD) : L_NORM NOVALUE =

!++
!
! FUNCTIONAL DESCRIPTION:
!
!	This routine makes the necessary hookups in the I/O database to
!	reflect a new file access.
!
! CALLING SEQUENCE:
!	MAKE_ACCESS (ARG1, ARG2, ARG3)
!
! INPUT PARAMETERS:
!	ARG1: address of FCB to access
!	ARG2: address of window to link up
!	ARG3: address of buffer descriptors
!
! IMPLICIT INPUTS:
!	CURRENT_VCB: VCB of volume in process
!
! OUTPUT PARAMETERS:
!	NONE
!
! IMPLICIT OUTPUTS:
!	NONE
!
! ROUTINE VALUE:
!	NONE
!
! SIDE EFFECTS:
!	VCB transaction count bumped, access counts in FCB adjusted,
!	FCB and window hooked up.
!
!--

BEGIN

MAP
	FCB		: REF BBLOCK,	! FCB arg
	WINDOW		: REF BBLOCK,	! window arg
	ABD		: REF BBLOCKVECTOR [,ABD$C_LENGTH];
					! buffer descriptor arg

LOCAL
	WINDOW_SEGMENT	: REF BBLOCK;	! address of the current window segment

BIND_COMMON;

EXTERNAL
	PMS$GL_OPEN	: ADDRESSING_MODE (ABSOLUTE),
					! system count of currently open files
	PMS$GL_OPENS	: ADDRESSING_MODE (ABSOLUTE);
					! system count of files opened

! Now hook the window onto the FCB and adjust the access counts
! according to the access control bits in the window.
!

WINDOW_SEGMENT = .WINDOW;
DO
    BEGIN
    INSQUE (.WINDOW_SEGMENT, .FCB[FCB$L_WLBL]);
    WINDOW_SEGMENT = .WINDOW_SEGMENT[WCB$L_LINK];
    END
UNTIL .WINDOW_SEGMENT EQL 0;

FCB [FCB$W_REFCNT] = .FCB [FCB$W_REFCNT] + 1;	! bump reference count

IF NOT .WINDOW [WCB$V_NOACCLOCK]
THEN
    BEGIN

    FCB[FCB$W_ACNT] = .FCB[FCB$W_ACNT] + 1;	! bump access count

    IF .WINDOW[WCB$V_NOREAD]
    THEN FCB[FCB$V_EXCL] = 1;		! set exclusive access

    IF .WINDOW[WCB$V_NOWRITE]
    THEN FCB[FCB$W_LCNT] = .FCB[FCB$W_LCNT] + 1; ! no writers

    IF .WINDOW[WCB$V_NOTRUNC]
    THEN FCB[FCB$W_TCNT] = .FCB[FCB$W_TCNT] + 1; ! no truncates

    END;

! For a write access, bump the writer count. If this is the
! first write, and the file is the index file or the storage map, set
! the appropriate flag in the VCB.
!

IF .WINDOW[WCB$V_WRITE]
THEN
    BEGIN
    IF .FCB [FCB$B_FID_NMX] EQL 0
    THEN
	BEGIN
	IF .FCB[FCB$W_FID_NUM] EQL 1
	THEN
	    BEGIN
	    CURRENT_VCB[VCB$V_WRITE_IF] = 1;
	    WINDOW [WCB$V_WRITE_TURN] = 1;
	    END;

	IF .FCB[FCB$W_FID_NUM] EQL 2
	THEN
	    BEGIN
	    CURRENT_VCB[VCB$V_WRITE_SM] = 1;
	    WINDOW [WCB$V_WRITE_TURN] = 1;
	    END;
	END;

    IF .FCB[FCB$V_DIR]
    THEN
	BEGIN
	FCB[FCB$W_DIRSEQ] = .FCB[FCB$W_DIRSEQ] + 1;
	WINDOW [WCB$V_WRITE_TURN] = 1;
	END;

    IF NOT .WINDOW [WCB$V_NOACCLOCK]
    THEN
	FCB[FCB$W_WCNT] = .FCB[FCB$W_WCNT] + 1;

    END;

! Count the access in the volume transaction count and return
! the window address for the user's CCB.
!

PMS$GL_OPEN = .PMS$GL_OPEN + 1;		! bump open file count
PMS$GL_OPENS = .PMS$GL_OPENS + 1;	! bump count of opens
CURRENT_VCB[VCB$W_TRANS] = .CURRENT_VCB[VCB$W_TRANS] + 1;

ABD[ABD$C_WINDOW, ABD$W_COUNT] = 4;	! enable write-back
.ABD[ABD$C_WINDOW, ABD$W_TEXT] + ABD[ABD$C_WINDOW, ABD$W_TEXT] + 1 = .WINDOW;
					! put window address in buffer text

! Mark the access complete in the cleanup action flags.
!

CLEANUP_FLAGS[CLF_DEACCESS] = 1;

END;					! end of routine MAKE_ACCESS

END
ELUDOM
