MODULE OUTTXT (					!
		IDENT = 'V04-000'
%BLISS32[,
	ADDRESSING_MODE(EXTERNAL=LONG_RELATIVE,NONEXTERNAL=LONG_RELATIVE)
	]
		) =
BEGIN
!
!****************************************************************************
!*									    *
!*  COPYRIGHT (c) 1978, 1980, 1982, 1984 BY				    *
!*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
!*  ALL RIGHTS RESERVED.						    *
!* 									    *
!*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
!*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
!*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
!*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
!*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
!*  TRANSFERRED.							    *
!* 									    *
!*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
!*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
!*  CORPORATION.							    *
!* 									    *
!*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
!*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
!* 									    *
!*									    *
!****************************************************************************
!
!++
! FACILITY:	 DSR (Digital Standard RUNOFF) / DSRPLUS
!
! ABSTRACT: Outputs a single line of text optionally centered.
!
!
! ENVIRONMENT: Transportable
!
! AUTHOR: R.W.Friday	 CREATION DATE: April, 1979
!

%SBTTL 'Revision History'
!
! MODIFIED BY:
!
!	007	KFA00007	Ken Alden	16-Mar-1983
!		SCA is now initialized the same for both DSR and PLUS
!
!	006	KAD00006	Keith Dawson	07-Mar-1983
!		Global edit of all modules. Updated module names, idents,
!		copyright dates. Changed require files to BLISS library.
!
!--

%SBTTL 'Module Level Declarations'

!
! TABLE OF CONTENTS:
!
!
! INCLUDE FILES:
!

LIBRARY 'NXPORT:XPORT';			! XPORT Library
REQUIRE 'REQ:RNODEF';			! RUNOFF variant definitions

%IF DSRPLUS %THEN
LIBRARY 'REQ:DPLLIB';			! DSRPLUS BLISS Library
%ELSE
LIBRARY 'REQ:DSRLIB';			! DSR BLISS Library
%FI

!
! MACROS:
!
!
! EQUATED SYMBOLS:
!
EXTERNAL LITERAL
    RINTES : UNSIGNED(8);

!
! OWN STORAGE:
!
OWN
    PP_SCA : $H_R_SCA_BLOCK;	!Used in PUSH_SCA, POP_SCA macros (defined in SCA.REQ).
!
! EXTERNAL REFERENCES:
!

EXTERNAL
    MRA : REF FIXED_STRING,
    SCA : SCA_DEFINITION,
    TSF : TSF_DEFINITION;

EXTERNAL ROUTINE
    ENDCHR,
    OUTNJ;

GLOBAL ROUTINE OUTTXT (TEXT_PTR, TEXT_LENGTH, CENTERED) : NOVALUE =

!++
! FUNCTIONAL DESCRIPTION:
!
!	Outputs a generated line of text in the "official" way.
!	This means that an MRA/TSF pair have to be allocated and set up.
!	This routine is needed when there is no convenient MRA/TSF pair
!	around that can be used for outputting text.
!
! FORMAL PARAMETERS:
!
!	TEXT_PTR is a CH$PTR to the text to be centered and output.
!	TEXT_LENGTH is the length of the text.
!	CENTERED is the page width in which the text should be centered.
!
! IMPLICIT INPUTS:	None
!
! IMPLICIT OUTPUTS:	None
!
! ROUTINE VALUE:
! COMPLETION CODES:	None
!
! SIDE EFFECTS:	None
!
!--

    BEGIN
    LOCAL
	HOLD_MRA,
	HOLD_SCA : VECTOR[SCA_SIZE],
	HOLD_TSF,
	TEMP_MRA : FIXED_STRING[100],
	TEMP_TSF : VECTOR[TSF_SIZE],
	PTR;

    !Remember location of current TSF
    HOLD_TSF = .TSF;
    !Set up substitute TSF
    INCR I FROM 0 TO TSF_SIZE - 1 DO TEMP_TSF[.I] = 0;
    TSF = TEMP_TSF;
    !Set change-bar character to space.
    TSF_BAR_CHAR = %C' ';

    !Remember location of current MRA
    HOLD_MRA = .MRA;
    !Set up substitute MRA;
    FS_MAXSIZE(TEMP_MRA) = 100;
    FS_INIT(TEMP_MRA);
    MRA = TEMP_MRA;

    !Copy SCA before setting up a new one.
    PUSH_SCA;	!Save the SAVEd SCA bits.

    INCR I FROM 0 TO SCA_SIZE -1 DO HOLD_SCA[.I] = .SCA[.I];

    INCR I FROM 0 TO SCA_SAVE_START -1 DO SCA[.I] = 0;
    INCR I FROM SCA_SAVE_END +1 TO SCA_SIZE -1 DO SCA[.I] = 0;
    SCA_CC_OK = 0;
    SCA_KER = 0;
    SCA_AUTOTITLE = 0;

    !Initialize SCA.
    SCA_FC_CASE = TRUE;
    SCA_RM = 150;
    SCA_LM = 0;
    SCA_SPACING = 1;
    SCA_FC = TRUE;
    SCA_FILL = TRUE;
    SCA_JUSTIFY = TRUE;
    SCA_CROCK = TRUE;
    SCA_WRD_PNTR = .FS_START (MRA);
    SCA_WRD_CPEND = RINTES;
    !Set change-bar character(s) to space.
    SCA_BAR_CHAR = %C' ';
    SCA_WRD_BAR_CHR = %C' ';

    PTR = .TEXT_PTR;

    INCR I FROM 1 TO .TEXT_LENGTH DO
        ENDCHR (CH$RCHAR_A (PTR));

    !Center the text
    TSF_ADJUST = MAX ((.CENTERED - .TEXT_LENGTH)/2, 0);
    !Output the line containing the centered text.
    OUTNJ ();

    !Restore original SCA
    INCR I FROM 0 TO SCA_SIZE - 1 DO SCA[.I] = .HOLD_SCA[.I];

    POP_SCA;	!Restore the SAVEd SCA bits.

    !Restore original MRA
    MRA = .HOLD_MRA;

    !Restore original TSF
    TSF = .HOLD_TSF;

    END;					!End of OUTTXT

END						!End of module
ELUDOM
