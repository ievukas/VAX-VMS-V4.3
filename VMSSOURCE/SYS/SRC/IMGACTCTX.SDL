{
{ Version:	'V04-000'
{
{****************************************************************************
{*									    *
{*  COPYRIGHT (c) 1978, 1980, 1982, 1984 BY				    *
{*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
{*  ALL RIGHTS RESERVED.						    *
{* 									    *
{*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
{*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
{*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
{*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
{*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
{*  TRANSFERRED.							    *
{* 									    *
{*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
{*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
{*  CORPORATION.							    *
{* 									    *
{*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
{*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
{* 									    *
{*									    *
{****************************************************************************

{++
{
{ Facility:
{
{	Image Activator Internal Structure Definitions
{
{ Abstract:
{
{	This file contains definitions of the structures used internally
{	by the various components of the image activator.
{
{ Author:
{
{	Lawrence J. Kenah
{
{ Creation Date:
{
{	15 April 1983
{
{ Modified By:
{
{    V03-009	LJK0280		Lawrence J. Kenah	9-May-1984
{		Change WRONG_SYS_STB flag to SYS_STB.
{
{    V03-008	LJK0271		Lawrence J. Kenah	3-Apr-1984
{		Define bitfields in IAC$GL_IMAGCTX. Perform miscellaneous 
{		cleanup.
{
{    V03-007	LJK0267		Lawrence J. Kenah	28-Mar-1984
{		Add room in CTX storage area for global section name.
{
{    V03-006	WMC0001		Wayne Cardoza		23-Jan-1984
{		ICB image length should be 44
{		Add callers mode to own storage
{		Add pointer to sequential load ISDs
{
{    V03-005	LJK0240		Lawrence J. Kenah	2-Aug-1983
{		Add control flag for writable shareable images.
{
{    V03-004	LJK0237		Lawrence J. Kenah	26-Jul-1983
{		Add cell for image base address and flag to indicate
{		that privileges are to be removed.
{
{    V03-003	LJK0225		Lawrence J. Kenah	7-Jul-1983
{		Add own storage data cells needed for compatibility mode
{		images.
{
{    V03-002	LJK0215		Lawrence J. Kenah	24-Jun-1983
{		Keep Image Control Block definition here until naming issues
{		are sorted out. The name ICB is already in use by the network.
{--

module CTXDEF;
{+
{ CTX - Image Activator Context Block
{
{	These definitions describe impure storage that is carried between
{	two routines inside the image activator. The block is typically
{	allocated on the stack with its address stored in the ICB.
{-

aggregate CTXDEF structure prefix CTX_;
    BUFFER longword unsigned;		/* Address to read image header into
    IHDBUF longword unsigned;		/* Address of decoded image header
    VBN longword unsigned;		/* Next VBN of header to read
    ISD_OFFSET word unsigned;		/* Offset within block to next ISD
    ALIAS word;				/* Contents of last word of first block
    GENERATION word unsigned;		/* Version number of image header
    CTX_1 word fill;			/* Spare word for filler
    GSD_NAME character length 48;	/* Storage space for GSD name
constant "LENGTH" equals . prefix CTX_ tag C;	/* Size of context area
constant "LENGTH" equals . prefix CTX_ tag K;	/* Size of context area
    
end CTXDEF;

end_module CTXDEF;


module OWNDEF;
{+
{ OWN - Image Activator OWN Storage
{
{	These definitions describe the OWN storage used by the image activator.
{	This storage exists in several P1 pages and is used to contain all of
{	the information that is needed to describe a given activation but is
{	not required after the activation completes.
{-

aggregate OWNDEF structure prefix "";
    INTERNAL_FLAGS structure longword unsigned;	/* Name attributes
        /* The following two flags are mutually exclusive
        MAIN_PROGRAM bitfield mask;		/* Activation of main program
        MERGE bitfield mask;			/* Merged activation
        IMAGE_ACCOUNT bitfield mask;		/* Image accounting enabled
        REMOVE_PRIVILEGE bitfield mask;		/* Remove CMKRNL and CMEXEC privilege
        TRANSFER_BIAS_STORED bitfield mask;	/* Set to indicate that transfer array bias has been stored
        P1_MERGE_P0 bitfield mask;		/* Indicates P0 part of P1 merge
        end INTERNAL_FLAGS;
    LOCK_STATUS_BLOCK structure quadword unsigned;
        LOCK_STATUS word unsigned;        
        OWN_1 word fill;        
        LOCK_ID longword unsigned;
        end LOCK_STATUS_BLOCK;
    FILE_NAME_SIZE word unsigned;		/* Size in bytes of image file name
    OTHER_CHANNEL word unsigned;		/* Channel on which primary image file is opened
    FINAL_STATUS longword unsigned;		/* Ultimate return status from SYS$IMGACT
    OTHER_KFE_ADDRESS longword unsigned;	/* Address of KFE that describes primary image file
    TRANSFER_ARRAY_BIAS longword unsigned;	/* Amount by which to adjust transfer addresses
    USER_STACK_SIZE longword unsigned;
    IMAGE_IO_SEG_SIZE longword unsigned;
    CALL_MODE byte unsigned;			/* Callers mode
    OWN_2 byte dimension 3 fill;
    SEQ_LOAD_ISDS longword unsigned;		/* Address of ISDs for sequential load
    RMS_BASE longword unsigned;			/* Address of alternate RMS dispatcher

    { The following cells are used to keep safe copies of the various
    { components of the argument list.

    IMAGE_NAME_DESC quadword unsigned;
    DFLT_NAME_DESC quadword unsigned;
    BUFFER_ADDRESS longword unsigned;
    INPUT_FLAGS longword unsigned;
    INPUT_ADDRESS_RANGE structure quadword unsigned;
        INPUT_START_ADDRESS longword unsigned;
        INPUT_END_ADDRESS longword unsigned;
        end INPUT_ADDRESS_RANGE;
    RETURN_ARRAY_ADDRESS longword unsigned;
    RETURN_ADDRESS_RANGE structure quadword unsigned;
        RETURN_START_ADDRESS longword unsigned;
        RETURN_END_ADDRESS longword unsigned;
        end INPUT_ADDRESS_RANGE;
    INPUT_IDENT structure quadword unsigned;
        MATCH_CONTROL longword unsigned;
        VERSION structure longword unsigned;
            MINOR_ID bitfield length 24 mask;
            MAJOR_ID bitfield length 8  mask;
            end VERSION;
        end INPUT_IDENT;
    ACCESS_MODE longword unsigned;

constant "OWN_STORAGE_SIZE" equals . prefix "" tag "";	/* Size of OWN storage

end OWNDEF;

end_module OWNDEF;

module $ICBDEF;
{+
{ ICB - Image Control Block
{
{	There is one image control block for each image (executable or
{	shareable) that is currently mapped into process address  space.
{-

aggregate ICB$DEF structure prefix ICB$;
    FLINK longword unsigned;			/* Forward link in list
    BLINK longword unsigned;			/* Backward link in list
    SIZE word unsigned;				/* Size of ICB in bytes
    TYPE byte unsigned;				/* Structure type for ICB
    constant ICB_TYPE_CODE equals 127 prefix ICB$ tag K;
    ICB_1 byte fill;				/* Spare for alignment
    ACCESS_MODE byte unsigned;			/* Access mode of image
    ACT_CODE byte unsigned;			/* Activation code
    constant 
        ( MAIN_PROGRAM				/* Object of RUN command
        , MERGED_IMAGE				/* Additional image mapped
        , GLOBAL_IMAGE_SECTION			/* Image described by global ISD
        ) equals 1 increment 1 prefix ICB$ tag K;
    CHAN word unsigned;				/* Channel on which image file is opened
    FLAGS structure longword unsigned;		/* Name attributes
        EXPREG bitfield mask;			/* Image mapped at end of address space
        SHAREABLE bitfield mask;		/* Image installed /SHAREABLE
        OPEN_FOR_WRITE bitfield mask;		/* Image will be opened for write
        RES_HEADER bitfield mask;		/* Image header already decoded
        LOAD_IMAGE bitfield mask;		/* Load image from sequential device
        INITIALIZE bitfield mask;		/* Image contains initialization code
        DONE bitfield mask;			/* Image is completely activated
        SYS_STB bitfield mask;			/* Image is linked against SYS.STB
        end FLAGS;

    /* The image name is stored as a counted ASCII string. 

    IMAGE_NAME character length 40;		/* Name string (counted ASCII)
    FILL_1 longword fill;
    "IDENT" structure quadword unsigned;
        MATCH_CONTROL structure longword unsigned;
            MATCH_CONTROL bitfield length 3 mask;
            end MATCH_CONTROL;
        VERSION structure longword unsigned;
            MINOR_ID bitfield length 24 mask;
            MAJOR_ID bitfield length 8  mask;
            end VERSION;
        end "IDENT";
    ADDRESS_RANGE structure quadword unsigned;
        STARTING_ADDRESS longword unsigned;
        END_ADDRESS longword unsigned;
        end ADDRESS_RANGE;
    IHD longword unsigned;			/* Address of IHD for image
    KFE longword unsigned;			/* Address of KFE for image
    CONTEXT longword unsigned;			/* Address of context block
    BASE_ADDRESS longword unsigned;		/* Base address at which image is mapped
    INITIALIZE longword unsigned;		/* Address of initialization code
constant "LENGTH" equals . prefix ICB$ tag C;	/* Length of ICB
constant "LENGTH" equals . prefix ICB$ tag K;	/* Length of ICB

end ICB$DEF;

end_module $ICBDEF;

module $IMAGCTXDEF;

{+
{ IMAGCTX - Context of Currently Executing Image
{
{	The following bitfields are stored in the cell IAC$GL_IMAGCTX in the
{	image activator context page in P1 space. 
{
{	The low order 16 bits of this word contain context that survives for
{	the life of an image. This word is cleared by image rundown. 
{
{	The high order word passes context from the image activator service
{	running in exec mode to the $IMGFIX service that runs in user mode.
{	This word is cleared each time that the image activator service is
{	entered. 
{-

aggregate IMAGCTXDEF union prefix IMAGCTX$;
    BITS structure longword fill;
        EXEONLY bitfield mask;			/* Execute only file 
        PRIV bitfield mask;			/* Image installed with enhanced privilege 
        BITS_1 bitfield LENGTH 16-^ fill;	/* Get to start of second word
        SETVECTOR bitfield mask;		/* Privileged vectors to be installed 
        INITIALIZE bitfield mask;		/* Shareable image initialization
        REORDER bitfield mask;			/* Initialization order is significant
    end BITS;
end IMAGCTXDEF;

end_module $IMAGCTXDEF;
