%TITLE 'DSR directive dispatcher'
MODULE docm (	IDENT = 'V04-000'
		%BLISS32[, ADDRESSING_MODE (EXTERNAL    = LONG_RELATIVE,
					    NONEXTERNAL = LONG_RELATIVE)]
		) =
BEGIN
!
!****************************************************************************
!*									    *
!*  COPYRIGHT (c) 1978, 1980, 1982, 1984 BY				    *
!*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
!*  ALL RIGHTS RESERVED.						    *
!* 									    *
!*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
!*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
!*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
!*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
!*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
!*  TRANSFERRED.							    *
!* 									    *
!*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
!*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
!*  CORPORATION.							    *
!* 									    *
!*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
!*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
!* 									    *
!*									    *
!****************************************************************************
!

!++
! FACILITY:	DSR (Digital Standard RUNOFF) / DSRPLUS
!
! ABSTRACT:	Command dispatcher.
!
! ENVIRONMENT:	Transportable
!
! AUTHOR:	R.W.Friday	CREATION DATE:	May, 1978


%SBTTL 'Revision History'
!
! MODIFIED BY:
!
!	029	KFA00029	Ken Alden	04-Aug-1983
!		Added(dsrplus) .dis/enable Appendix, H_page_now.
!
!	028	KFA00028	Ken Alden	03-Aug-1983
!		Added(dsrplus) DIS/ENABLE CHAPTER
!
!	027	RER00027	Ron Randall	12-May-1983
!		Minor edit.
!
!	026	KAD00026	Keith Dawson	9-May-1983
!		Remove support for .DX, .PX.
!
!	025	REM00025	Ray Marshall	Apr-1983
!		Modified .APPENDIX & .CHAPTER dispatching for DSR to use the
!		  routine HEADER instead of CHAPT to support the chapter/
!		  appendix decoupling.
!		Modified .DISPLAY APPENDIX & .DISPLAY CHAPTER dispatching for
!		  DSR to use routine DSPENT instead of DSPPAG to support the
!		  chapter/appendix decoupling.
!		Modified .NO CHAPTER dispatching for DSRPLUS to use routine
!		  HEADER instead of CHAPT.  This change makes CHAPT obsolete
!		  from here on in both DSR & DSRPLUS.
!
!	024 	KFA00024	Ken Alden	21-Apr-1983
!		For DSRPLUS: changed the name of the handling routine
!		 for DISPLAY COUNTER to CNTTXT.
!
!	023	KAD00023	Keith Dawson	14-Apr-1983
!		For DSR, temporarily added dopx routine back in. 
!		(Will be removed altogether, later.)
!
!	022	RER00022	Ron Randall	12-Apr-1983
!		For DSRPLUS:  Added code for footnote numbering.
!
!	021	RER00021	Ron Randall	17-Mar-1983
!		For DSRPLUS:  Added code to handle topnotes.
!		Deleted passthrough flag code.
!		Eliminated handling of h_print_index.
!		Replaced dopx routine with dindex.
!
!	020	KFA00020	Ken Alden	15-Mar-1983
!		For DSRPLUS:  Changed handling of passthrough flag
!		to now be partially handled by OFT.
!		BEGIN/END PASSTHROUGH are now not supported.
!
!	019	KFA00019	Ken Alden	07-Mar-1983
!		Global edit of all modules. Updated module names, idents,
!		copyright dates. Changed require files to BLISS library.
!--


%SBTTL 'Module Level Declarations'
!
! INCLUDE FILES:
!
LIBRARY 'NXPORT:XPORT';			! XPORT Library
REQUIRE 'REQ:RNODEF';			! RUNOFF variant definitions

%IF DSRPLUS %THEN
LIBRARY 'REQ:DPLLIB';			! DSRPLUS BLISS Library
%ELSE
LIBRARY 'REQ:DSRLIB';			! DSR BLISS Library
%FI

!
! EQUATED SYMBOLS:
!
EXTERNAL LITERAL
    rintes : UNSIGNED (8);
!
! EXTERNAL REFERENCES:
!
EXTERNAL
    flgt	: flag_table [flag_count],
    fnct	: fnct_definition,
    gca		: gca_definition,
    ira		: fixed_string,
    khar,
    numprm	: numprm_define,
    sca		: sca_definition;

%IF DSRPLUS %THEN
EXTERNAL
    l_character,
    r_character,
    topnot	: tn_definition;

EXTERNAL LITERAL
    rnfiit;

EXTERNAL ROUTINE
    endchr,
    foonum;
%FI

EXTERNAL LITERAL
    rnfcns,
    rnfift,
    rnfjec,
    rnfurr;

EXTERNAL ROUTINE
    aline,	bars,	carage,	concat,	contrl,
    dle,	docase,	dsppag,	dsphl,	elsen,
    endcmt,	erma,	ermn,	figure,	fjnfnj,	flgsem,
    fn,		getnum,	gtabs,

    dspent,	! For .display { example | figure | table | appendix | chapter}.

%IF DSRPLUS %THEN
    dindex,	! For .do index
    tpnote,	! For .topnote { ,no | ,begin | ,end }, .topnote on.
    cref,	! For .referencepoint
    cnttxt,	! For .set { counter | textstring }and .display counter.
    sencon,	! For .send contents.
    numfoo,	! For .number footnote.
    dtable,	! For .do table.
    docont,	! For .do contents.
    xplus,
%FI

    style,	! For .style { example | figure | table }.
    nodopx,	! Inform user that .DX, .PX are no longer supported.
    header,	! For .header { level | example | figure | table }.
    savres,	! For .save and .restore.
    sthl,
    ififne,	layout,
    list,	lit,	makndx,	nm,	note,	oft,
    outnj,	page,	panpa,	parag,	period,	repeat,
    req,	rskips,	setdat,	settim,	stc,	std,
    subpag,	titles,	vr,	xcase;


%SBTTL 'DOCM -- routine header'
GLOBAL ROUTINE docm (handler, action_list) : NOVALUE =

!++
! FUNCTIONAL DESCRIPTION:
!
!	This routine is mainly a node from which all the
!	commands branch out to their corresponding modules.
!	The only processing done here is:
!
!	    1.	Interpretation of bits stored in the tables
!	    2.	Skipping spaces and tabs after a command has completed
!	    3.	Detecting junk not picked up by the command
!		  routines, and issuing an error message
!	    4.	Skipping comments after commands
!
! FORMAL PARAMETERS:
!
!	handler       -	unique integer that specifies exactly which
!			command the user typed.
!	action_list   -	set of bits that specify additional processing 
!			to take place before the actual command is
!			carried out.
!			See KWITEM.REQ for a description of the bits.
!
! IMPLICIT INPUTS:	None
!
! IMPLICIT OUTPUTS:	None
!
! ROUTINE VALUE:
! COMPLETION CODES:	None
!
! SIDE EFFECTS:		None
!--


%SBTTL 'DOCM -- directive preprocessing'

    BEGIN
    !
    ! Interpret the various action bits associated with each command.
    !
    IF .gca_skipping
    THEN
	!
	! In the FALSE branch of an .IF command.
	!
	IF  NOT .kwitem_rif (action_list)
	THEN
	    !
	    ! Skip lines containing commands not related to .IF.
	    !
	    RETURN;
    !
    ! This command is illegal in a footnote.
    !
    IF  .fnct_collecting AND .kwitem_iif (action_list)
    THEN
	!
	! Skip to end of command and issue message.
	!
	BEGIN
	erma (rnfift, true);
	RETURN;
	END;

%IF DSRPLUS %THEN
    !
    ! This command is illegal in a topnote.
    !
    IF  .tn_collecting AND .kwitem_iit (action_list)
    THEN
	!
	! Skip to end of command and issue message.
	!
	BEGIN
	erma (rnfiit, true);
	RETURN;
	END;
%FI

    IF  .kwitem_do_outnj (action_list)
    THEN
	BEGIN
	outnj ();
	!
	! Cancel pending indentation only if from an "auto-ed" paragraph.
	!
	IF  .sca_para_pnd
	THEN
	    sca_indent = 0;

	sca_para_pnd = false;
	END;

    IF  .kwitem_do_getnum (action_list)
    THEN
	!
	! Pick up a single number that might be provided.
	!
	num_result = getnum (ira, num_value, num_sign, num_length);


%SBTTL 'DOCM -- command dispatching'

    CASE .handler FROM first_command TO last_command OF
	SET

	[h_appendix, h_chapter] :
	    header (.handler);

	[h_display_subpa, h_display_numbe] :
	    dsppag (.handler);

%IF DSRPLUS %THEN
	[h_display_appen, h_display_chapt, h_display_head] :
%ELSE
	[h_display_appen, h_display_chapt] :
%FI
	    dspent (.handler);

	[h_display_level] :
	    dsphl (.handler);

	[h_display_eleme] :
	    dle (.handler);

%IF DSRPLUS %THEN
	[h_do_contents] :
	    docont (.handler);

	[h_do_table] :
	    dtable (.handler);
%FI

	[h_comment] :
	    endcmt ();

	[h_begin_bar, h_end_bar, h_enable_bar, h_disable_bar] :
	    bars (.handler);

	[h_control_chara, h_no_control_ch] :
	    contrl (.handler);

	[h_do_index] :
%IF DSRPLUS %THEN
	    dindex (.handler);
%ELSE
	    nodopx (.handler);
%FI

	[h_print_index] :
	    nodopx (.handler);

	[h_entry, h_index, h_subindex] :
	    makndx (.handler, .sca_index);

	[h_xlower,h_xupper] :
	    xcase (.handler);

	[h_center, h_right, h_left, h_indent] :
	    aline (.handler);

%IF DSRPLUS %THEN
	[h_referencepoin] :
	    cref (.handler);
%FI

	[h_right_margin, h_left_margin, h_page_size] :
	    page (.handler);

	[h_figure, h_figure_deferr] :
	    figure (.handler);

	[h_footnote, h_end_footnote] :
	    fn (.handler);

	[h_fill, h_justify, h_no_fill, h_no_justify] :
	    fjnfnj (.handler);

	[h_keep, h_no_keep, h_autojustify, h_no_autojustif]:
	    fjnfnj (.handler);

	[h_list, h_list_element] :
	    list (.handler);

	[h_note] :
	    note (.handler);

	[h_end_list, h_end_note] :
	    elsen (.handler);

	[h_header_level, h_set_level] :
	    header (.handler);

%IF DSRPLUS %THEN	
	[h_header_exampl, h_header_figure, h_header_table] :
	    header (.handler);

	[h_begin_topnote, h_end_topnote, h_topnote_on, h_no_topnote] :
	    tpnote (.handler);

	[h_display_examp, h_display_figur, h_display_table] :
	    dspent (.handler);

	[h_display_count] :
	    cnttxt (.handler);

	[h_number_exampl, h_number_figure, h_number_table] :
	    nm (.handler);

	[h_style_example, h_style_figure, h_style_table, 
	 h_style_appendi, h_style_chapter]:
	    style (.handler);
%FI

	[h_style_headers] :
	    style (.handler);

	[h_no_space] :
	    concat (.handler);

	[h_number_page, h_number_append, h_number_chapte, h_number_subpag, 
	 h_number_index, h_number_level, h_number_list, h_number_runnin] :
	    nm (.handler);

	[h_literal, h_end_literal] :
	    lit (.handler);

	[h_hyphenation, h_no_hyphenatio]:
	    flgsem (.handler);

	[h_enable_hyphen, h_enable_boldin, h_enable_indexi, h_enable_overst, 
	 h_enable_underl] :
	    flgsem (.handler);

	[h_disable_hyphe, h_disable_boldi, h_disable_index, h_disable_overs,
	 h_disable_under] :
	    flgsem (.handler);

	[h_enable_toc, h_disable_toc] :
	    flgsem (.handler);

	[h_send_toc] :
	    stc (.handler, .gca_btc);

%IF DSRPLUS %THEN
	[h_send_contents] :
	    sencon (.handler, .gca_btc);
%FI

	[h_save, h_save_all, h_restore] :
	    savres (.handler, 1);	! The '1' means internal_code: DOCM.

%IF DSRPLUS %THEN
	[h_set_counter, h_set_textstrin] :
	    cnttxt (.handler);
%FI

	[h_period, h_no_period] :
	    period (.handler);

	[h_repeat] :
	    repeat (.handler);

	[h_require] :
	    req (.handler);

	[h_standard] :
	    std (.handler);

	[h_tab_stops] :
	    gtabs (.handler);

	[h_upper_case, h_lower_case] :
	    docase (.handler);

	[h_autoparagraph, h_no_autoparagr, h_autotable, h_no_autotable,
	 h_paragraph, h_set_paragraph] :
	    parag (.handler);

	[h_flags_all, h_no_flags_all] :
	    oft (.handler, 0);

	[h_flags_bold, h_no_flags_bold] :
	    oft (.handler, bld_flag);

	[h_flags_break, h_no_flags_brea] :
	    oft (.handler, brk_flag);

	[h_flags_capital, h_no_flags_capi] :
	    oft (.handler, cap_flag);
	
	[h_flags_comment, h_no_flags_comm] :
	    oft (.handler, com_flag);

	[h_flags_control, h_no_flags_cont] :
	    oft (.handler, con_flag);

	[h_flags_endfoot, h_no_flags_endf] :
	    oft (.handler, efo_flag);

	[h_flags_hyphena, h_no_flags_hyph] :
	    oft (.handler, hyp_flag);

	[h_flags_index, h_no_flags_inde] :
	    oft (.handler, ind_flag);

	[h_flags_lowerca, h_no_flags_lowe] :
	    oft (.handler, low_flag);

	[h_flags_overstr, h_no_flags_over] :
	    oft (.handler, ovr_flag);

	[h_flags_period, h_no_flags_peri] :
	    oft (.handler, per_flag);

	[h_flags_quote, h_no_flags_quot] :
	    oft (.handler, quo_flag);

	[h_flags_space, h_no_flags_spac] :
	    oft (.handler, spa_flag);

	[h_flags_subinde, h_no_flags_subi] :
	    oft (.handler, sbx_flag);

	[h_flags_substit, h_no_flags_subs] :
	    oft (.handler, sub_flag);

	[h_flags_underli, h_no_flags_unde] :
	    oft (.handler, und_flag);

	[h_flags_upperca, h_no_flags_uppe] :
	    oft (.handler, upp_flag);

%IF DSRPLUS %THEN
!!	[h_begin_passthr, h_end_passthrou] :
!!	    flgpas (.handler);
%FI

	[h_blank, h_break, h_page, h_skip, h_spacing, h_test_page] :
	    carage (.handler);

%IF DSRPLUS %THEN
    	[h_page_now]:
	    carage (.handler);
%FI    	

	[h_variable] :
	    vr (.handler);

	[h_if, h_ifnot, h_else, h_endif] :
	    ififne (.handler);

	[h_date, h_no_date, h_first_title, h_subtitle,
	 h_no_subtitle, h_title, h_autosubtitle, h_no_autosubtit,
	 h_headers_lower, h_headers_on,
	 h_headers_mixed, h_headers_upper, h_no_headers, h_no_number] : 
	    titles (.handler);

%IF DSRPLUS %THEN
	[h_autotitle, h_no_autotitle, h_first_title_a] :
	    titles (.handler);

	[h_number_footno, h_no_number_foo] :
	    numfoo (.handler);

	[h_enable_chapte, h_disable_chapt, h_enable_append,
    	 h_disable_appen, h_no_chapter] :
	    header (.handler);
%FI

	[h_paging, h_no_paging] :
	    panpa (.handler);

	[h_set_date] :
	    setdat (.handler);

	[h_set_time] :
	    settim (.handler);

	[h_subpage, h_end_subpage] :
	    subpag (.handler);

	[h_layout] :
	    layout (.handler);

%IF DSRPLUS %THEN
	[h_xplus, h_yplus] :
	    makndx (.handler, .sca_index);

	[h_enable_xplus, h_disable_xplus] :
	    xplus (.handler);

	[h_flags_nopermu, h_no_flags_nope] :
	    oft (.handler, npx_flag);
%FI

	[inrange] :
	    ermn (rnfcns, .handler);

	[outrange] :
	    ermn (rnfurr, .handler);

	TES;


%SBTTL 'DOCM -- directive post-processing'

    rskips (ira);			! Trailing spaces and tabs are ok.

%IF DSRPLUS %THEN
    IF  .fnct_numbering AND (.fnct_first_line EQL 2) 
    THEN
	BEGIN
	!
	! Reset the flag that triggered this action.
	!
	fnct_first_line = 0;
	!
	! Set up the footnote number digits.
	!
	foonum ();
	!
	! Write the footnote number in brackets.
	!
	endchr (%C'[');

	IF .fnct_number_l NEQ 0 THEN endchr (.l_character);

	endchr (.r_character);
	endchr (%C']');
	END;
%FI

    IF	(.khar EQL rintes) OR 
	(.khar EQL %C';')  OR 
	(.KHAR EQL .flgt [con_flag, flag_character])
    THEN
	RETURN;

    IF	.flgt [com_flag, flag_enabled] AND 
	(.khar EQL .flgt[com_flag, flag_character])	! Trailing comment?
    THEN
	!
	! Skip trailing comment.
	!
	BEGIN
	endcmt ();
	RETURN;
	END;

    !
    ! The following code positions past any text still left after
    ! the command parameters have been processed.  Such text should not have
    ! been there in the first place, and constitutes a syntax error.
    !
    erma (rnfjec, true);	! Skip to end of command and issue message
    RETURN;
    END;			! End of DOCM

END				! End of module
ELUDOM
