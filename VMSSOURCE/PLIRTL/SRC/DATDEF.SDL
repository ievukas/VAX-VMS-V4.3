MODULE $DEFDAT;			/* Definitions for PL/I
{File:  DATDEF.SDL  Edit:  WHM1001
{****************************************************************************
{*									    *
{*  COPYRIGHT (c) 1978, 1980, 1982, 1984 BY				    *
{*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
{*  ALL RIGHTS RESERVED.						    *
{* 									    *
{*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
{*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
{*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
{*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
{*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
{*  TRANSFERRED.							    *
{* 									    *
{*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
{*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
{*  CORPORATION.							    *
{* 									    *
{*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
{*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
{* 									    *
{*									    *
{****************************************************************************

{ Edit history:
{
{ 1-001 - Original.  WHM ??-April-1983

/*
/* data type code definitions
/*
 
/*
/* data type definitions with and without prefixes
/*
 
CONSTANT (
	picture,		{ pictured
	fix_bin,		{ fixed binary
	flt_bin,		{ floating binary
	fix_dec,		{ fixed decimal
	flt_dec,		{ floating decimal
	cplx_fixb,		{ complex fixed binary
	cplx_fltb,		{ complex floating binary
	cplx_fixd,		{ complex fixed decimal
	cplx_fltd,		{ complex floating decimal
	char,			{ character
	char_var,		{ character varying
	bit,			{ bit
	bit_var,		{ bit varying
	bit_align,		{ bit aligned
	pointer,		{ pointer
	offset,			{ offset
	area,			{ area
	file,			{ file
	label,			{ label
	"entry",		{ entry
	format,			{ format
	data,			{ untyped data
	"structure",		{ structure
	bif,			{ built in function
	cond,			{ condition
	generic,		{ generic
	array,			{ 
		) EQUALS 1 INCREMENT 1 PREFIX "dat_"; 
END_MODULE;
