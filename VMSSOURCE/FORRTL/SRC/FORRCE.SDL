MODULE RCEDEF IDENT "1-001";	{ FORTRAN RFA Cache Entry (RCE) definition
				{ File: FORRCE.SDL, Edit: SBL1001

{****************************************************************************
{*									    *
{*  COPYRIGHT (c) 1978, 1980, 1982, 1984 BY				    *
{*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
{*  ALL RIGHTS RESERVED.						    *
{* 									    *
{*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
{*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
{*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
{*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
{*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
{*  TRANSFERRED.							    *
{* 									    *
{*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
{*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
{*  CORPORATION.							    *
{* 									    *
{*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
{*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
{* 									    *
{*									    *
{****************************************************************************
{
{ Author: Steven B. Lionel, 2-June-1983
{
{ 1-001 - Original.  SBL 2-June-1983
{--

/*+
/* An RFA Cache Entry (RCE) contains information about previous records
/* in the file for use by FOR$BACKSPACE, which implements the FORTRAN
/* BACKSPACE statement.
/*
/* For sequential organization and access disk files, each time a new record
/* is read or written, an entry is added to the RFA cache.  The cache itself
/* is a circularly-linked list, established when the file is opened.
/*-

AGGREGATE RCE_STRUCT STRUCTURE PREFIX RCE_ MARKER RCE_;

    CONSTANT CACHE_SIZE EQUALS 20;	/* Number of entries in cache
    
    NEXT ADDRESS;			/* Pointer to next entry
    PREV ADDRESS;			/* Pointer to previous entry
    LOG_RECNO LONGWORD UNSIGNED;	/* Logical record number for this entry
    RFA_UNION UNION;
	RFA QUADWORD UNSIGNED;		/*  RFA for this entry
	RFA_STRUCT STRUCTURE;
	    RFA0 LONGWORD UNSIGNED;	/* First 4 bytes of RFA
	    RFA4 WORD UNSIGNED;		/* Last 2 bytes of RFA
	    dummy WORD FILL;
	    END RFA_STRUCT;
	END RFA_UNION;
    END RCE_STRUCT;
END_MODULE RCEDEF;
