%TITLE 'EDT$LSUBS - SUBSTITUTE line-mode command'
MODULE EDT$LSUBS (				! SUBSTITUTE line-mode command
		IDENT = 'V04-000'			! File: LSUBS.BLI Edit: STS1011
		) =
BEGIN
!
!****************************************************************************
!*									    *
!*  COPYRIGHT (c) 1978, 1980, 1982, 1984 BY				    *
!*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
!*  ALL RIGHTS RESERVED.						    *
!* 									    *
!*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
!*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
!*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
!*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
!*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
!*  TRANSFERRED.							    *
!* 									    *
!*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
!*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
!*  CORPORATION.							    *
!* 									    *
!*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
!*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
!* 									    *
!*									    *
!****************************************************************************
!

!++
! FACILITY:	EDT -- The DEC Standard Editor
!
! ABSTRACT:
!
!	This module executes the line mode SUBSTITUTE command.
!
! ENVIRONMENT:	Runs at any access mode - AST reentrant
!
! AUTHOR: Bob Kushlis, CREATION DATE: February 3, 1978
!
! MODIFIED BY:
!
! 1-001	- Original.  DJS 30-JAN-81.  This module was created by
!	extracting the routine EDT$$LN_SUBCMD  from the module EXEC.BLI.
! 1-002	- Regularize headers.  JBS 20-Mar-1981
! 1-003	- Change substitute to EDT$$SUB_NXT .  JBS 27-Mar-1981
! 1-004 - Change paramter to FMT-STRCNT.  SMB 5-Feb-1982
! 1-005	- Give a message if there is an error setting search strings.  JBS 04-May-1982
! 1-006 - Stop processing on bad select range.  SMB 01-Jul-1982
! 1-007	- Use EDT$$FMT_CRLF instead of EDT$$OUT_FMTBUF.  JBS 05-Jul-1982
! 1-008	- Mark the screen as changed if we change anything.  JBS 07-Jul-1982
! 1-009 - Put edt$$tst_eob in line . STS 22-Sep-1982
! 1-010	- Remove EDT$$G_SCR_CHGD, new screen logic doesn't need it.  JBS 09-Oct-1982
! 1-011 - Put edt$$rng_frstln in line. STS 11-Oct-1982
!--


%SBTTL 'Declarations'
!
! TABLE OF CONTENTS:
!

REQUIRE 'EDTSRC:TRAROUNAM';

FORWARD ROUTINE
    EDT$$LN_SUBCMD : NOVALUE;			! Process the SUBSTITUTE command

!
! INCLUDE FILES:
!

REQUIRE 'EDTSRC:EDTREQ';

!
! MACROS:
!
!	NONE
!
! EQUATED SYMBOLS:
!
!	NONE
!
! OWN STORAGE:
!
!	NONE
!
! EXTERNAL REFERENCES:
!
!	In the routine

%SBTTL 'EDT$$LN_SUBCMD  - SUBSTITUTE line-mode command'

GLOBAL ROUTINE EDT$$LN_SUBCMD 			! SUBSTITUTE line-mode command
    : NOVALUE =

!++
! FUNCTIONAL DESCRIPTION:
!
!	Command processing routine for SUBSTITUTE.   Position to the first
!	line of the range, then enter a loop getting the next line and
!	calling EDT$$SUB_NXT  to do substituions within that line.
!	If the range was null, then we do only a single substitution,
!	otherwise all are done.
!
! FORMAL PARAMETERS:
!
!	NONE
!
! IMPLICIT INPUTS:
!
!	EDT$$G_INP_SRC
!	EDT$$A_CUR_BUF
!	EDT$$Z_RNG_SAVPOS
!	EDT$$A_EXE_CURCMD
!	EDT$$G_EXE_QRYQUIT
!	EDT$$G_EXE_SUBCNT
!	EDT$$A_WK_LN
!
! IMPLICIT OUTPUTS:
!
!	NONE
!
! ROUTINE VALUE:
!
!	NONE
!
! SIDE EFFECTS:
!
!	NONE
!
!--

    BEGIN

    EXTERNAL ROUTINE
	EDT$$FMT_STRCNT : NOVALUE,
	EDT$$FMT_CRLF,				! Terminate an output line
	EDT$$SET_STR,
	EDT$$FMT_MSG : NOVALUE,
	EDT$$NXT_LNRNG,
    	EDT$$RNG_REPOS,
    	EDT$$RD_CURLN,
	EDT$$SUB_NXT : NOVALUE,
	EDT$$STOP_WKINGMSG : NOVALUE,		! Turn off the "working" message
	EDT$$CHK_CC;				! Check for a control C

    EXTERNAL
	EDT$$L_LNO_ZERO : LN_BLOCK,
	EDT$$G_INP_SRC,
	EDT$$A_CUR_BUF : REF TBCB_BLOCK,
	EDT$$Z_RNG_SAVPOS : POS_BLOCK,
	EDT$$A_WK_LN : REF LIN_BLOCK,
    	EDT$$G_RNG_FRSTLN,
    	EDT$$Z_RNG_ORIGPOS : POS_BLOCK,
	EDT$$Z_EOB_LN,
	EDT$$A_EXE_CURCMD : REF NODE_BLOCK,	! Pointer to the current command.
	EDT$$G_EXE_QRYQUIT,			! Quit flag  for /QUERY operations.
	EDT$$G_EXE_SUBCNT,			! No. of substitutions done.
	EDT$$G_CC_DONE;				! Set if control C actually aborted something

    MESSAGES ((INVSTR));

    LOCAL
	STRINGS_OK,			! Flag indicating that there is a problem setting the strings
	TEMP_COUNT : LN_BLOCK,			! 6 byte count field
	SINGLE,					! Flag indicating single subs only
	FIRST,					! Flag indicating whether this is the first one.
	SEEN_CC;				! Flag indicating we have seen a control C

!+
! Get the range node.
!-

    BIND
	RANGE = .EDT$$A_EXE_CURCMD [RANGE1] : NODE_BLOCK;

!+
! Position to the first line.
!-

    EDT$$G_RNG_FRSTLN = 1;
    EDT$$CPY_MEM( POS_SIZE, .EDT$$A_CUR_BUF, EDT$$Z_RNG_ORIGPOS);
    IF ( NOT EDT$$RNG_REPOS (.EDT$$A_EXE_CURCMD [RANGE1])) THEN RETURN;

!+
! Set the single substitution flag if the range was null.
!-
    SINGLE = .RANGE [RAN_TYPE] EQL RAN_NULL;
!+
! Set flag indicating this if the first substitution, and zero the
! substitution count.
!-
    FIRST = 1;
    EDT$$G_EXE_SUBCNT = 0;
    STRINGS_OK = 1;
    SEEN_CC = 0;
!+
! Loop over the range.
!-

    WHILE (EDT$$NXT_LNRNG (0) AND ( NOT .EDT$$G_EXE_QRYQUIT) AND .STRINGS_OK AND ( NOT .SEEN_CC)) DO

	IF (.EDT$$A_WK_LN NEQA EDT$$Z_EOB_LN)
	THEN
	    BEGIN
!+
! Must set up the search and replace string each time through
! in case the range involved a search string, which would clobber
! it.
!-
	    STRINGS_OK = EDT$$SET_STR ();

	    IF .STRINGS_OK
	    THEN
		BEGIN
!+
! Do substitutions in this line starting at position 0.
!-
		SEEN_CC = EDT$$CHK_CC ();

		IF ( NOT .SEEN_CC)
		THEN
		    BEGIN
		    EDT$$SUB_NXT (.SINGLE, 0);
!+
! Check to see if this was the first line in the range.
!-

		    IF .FIRST
		    THEN
!+
! Save position after first substitute so we can
! correctly reposition there.  This is nescessary since
! modifying the first line might change it's position in
! the text buffer, invalidating the previously saved position.
!-
			BEGIN
			EDT$$CPY_MEM (POS_SIZE, .EDT$$A_CUR_BUF, EDT$$Z_RNG_SAVPOS);
			FIRST = 0;
			END;

		    END
		ELSE
		    EDT$$G_CC_DONE = 1;

		END;

	    END;

    EDT$$STOP_WKINGMSG ();
!+
! Report a case of an invalid string.
!-

    IF ( NOT .STRINGS_OK) THEN EDT$$FMT_MSG (EDT$_INVSTR);

!+
! If the command came from the terminal, report the number of
! substitutions.
!-

    IF (.EDT$$G_INP_SRC EQL INP_TERM)
    THEN
	BEGIN
	MOVELINE (EDT$$L_LNO_ZERO, TEMP_COUNT);
	TEMP_COUNT = .EDT$$G_EXE_SUBCNT;
	EDT$$FMT_STRCNT (TEMP_COUNT, UPLIT (' substitution'), 13);
	EDT$$FMT_CRLF ();
	END;

!+
! And re-position.
!-
    	EDT$$CPY_MEM(POS_SIZE, EDT$$Z_RNG_SAVPOS, .EDT$$A_CUR_BUF);
    	EDT$$RD_CURLN();
    END;					! of routine EDT$$LN_SUBCMD

!<BLF/PAGE>

END						! of module EDT$LSUBS

ELUDOM
