MODULE baddata	(%TITLE 'Analyze/Media Data Storage Declarations'
		 IDENT ='V04-000') =
BEGIN
!****************************************************************************
!*									    *
!*  COPYRIGHT (c) 1978, 1980, 1982, 1984 BY				    *
!*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
!*  ALL RIGHTS RESERVED.						    *
!* 									    *
!*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
!*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
!*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
!*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
!*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
!*  TRANSFERRED.							    *
!* 									    *
!*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
!*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
!*  CORPORATION.							    *
!* 									    *
!*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
!*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
!* 									    *
!*									    *
!****************************************************************************
!
!++
!
! Facility:
!
!	Analyze/Media
!
! Abstract:
!
!	This module contains all of the global data storage declarations
!	used by the utility.
!
! Author:
!
!	Michael T. Rhodes		Creation Date: July, 1982
!
! Modified By:
!
!	V03-002	MTR0002		Michael T. Rhodes	20-Jan-1983
!		Add shared message BADVALUE (severe) definition, for bad
!		keyword value diagnostic.
!
!	V03-001	MTR0001		Michael T. Rhodes	15-Dec-1982
!		Remove unused scalars -- bad$gl_retrycnt and bad$gl_worst_case.
!
!--

!
! Declare LIBRARY and REQUIRE files necessary to build the storage structures.
!
LIBRARY 'SYS$LIBRARY:LIB';					! System definitions.
	
!
! Define shared messages.
!
$SHR_MSGDEF	(BAD,250,GLOBAL,
		(BADVALUE,SEVERE),
		(CLOSEOUT,SEVERE),
		(INSVIRMEM,SEVERE),
		(OPENOUT,SEVERE),
		(READERR,ERROR),
		(WRITEERR,ERROR));

LITERAL
	dvientries = 10,					! Total number of entries in item list.
	dvilistsize = dvientries * 12;				! Number of bytes for $GETDVI item list.

GLOBAL
	bad$gl_bad_term		: VECTOR [4, LONG],		! Bad block information vector.
	bad$gb_block_fact	: BYTE,				! Block factor for medium.
	bad$gl_bytes_cyl,					! Number of bytes per cylinder.
	bad$gl_bytes_trk,					! Number of bytes per track.
	bad$gl_chan,						! Device channel number.
	bad$ga_comnd_line	: $BBLOCK [dsc$c_s_bln],	! Descriptor for command line buffer.
	bad$gl_context		: BITVECTOR [32],		! Context flags vector.
	bad$gl_cylinders,					! Number of cylinders on medium.
	bad$ga_bufadr		: VECTOR [2, LONG],		! IO request data buffer address vector.
	bad$gl_devchar		: $BBLOCK [4],			! Device characteristics.
	bad$gl_devclass,					! Device class identifier.
	bad$ga_device		: $BBLOCK [dsc$c_s_bln],	! Descriptor for device name.
	bad$ga_devnam		: $BBLOCK [64],			! Buffer to hold the device name.
	bad$gl_devnam,						! Size of the device name (returned by $GETDVI).
	bad$gq_devnam		: $BBLOCK [dsc$c_s_bln],	! Descriptor fo device name.
	bad$gl_devtype,						! Device type identifier.
	bad$ga_filespec		: $BBLOCK [dsc$c_s_bln],	! Descriptor for output file spec.
	bad$gl_func,						! IO function to perform.
	bad$ga_input_desc	: $BBLOCK [dsc$c_s_bln],	! Generic input descriptor.
	bad$gq_iosb		: VECTOR [4, LONG],		! IOSBs for requests.
	bad$gl_maxblock,					! Maximum user addressable LBN on device.
	bad$ga_mdbsf,						! Address of MDBSF buffer.
	bad$gl_mdbsf_ptr,					! Pointer to current entry in MDBSF.
	bad$gl_pagcnt,						! Number of pages in data buffers 1 & 2.
	bad$ga_sdbsf,						! Addrees of SDBSF buffer.
	bad$gl_sdbsf_ptr,					! Pointer to current entry in SDBSF.
	bad$gl_sectors,						! Number of sectors per track.
	bad$gl_sector_siz,					! Size in bytes of a single sector.
	bad$gl_serialnum,					! Pack serial number.
	bad$gl_status,						! Global status.
	bad$gb_term_count	: BYTE,				! Number of terms used to describe bad block info.
	bad$ga_tpb,						! Address of Test Pattern Buffer.
	bad$gl_tracks,						! Number of tracks per cylinder.
	bad$gl_trnsfr_cnt,					! Number of bytes to transfer per IO request.

!++
! Initialize the $GETDVI item list.
!
! NOTE:	If additional entries are added to this list the literal "bad$k_dvientries" declared
!	above MUST be incremented to reflect the new entry.  Otherwise, the storage allocation
!	for "bad$ga_getdvi" will be inadequate to serve the request.
!
!--
	bad$ga_getdvi:	$BBLOCK [dvilistsize]			! Starting address of the $GETDVI item list.
			INITIAL(
			WORD (4, dvi$_cylinders),	LONG (bad$gl_cylinders, 0),
			WORD (4, dvi$_devchar),		LONG (bad$gl_devchar, 0),
			WORD (4, dvi$_devclass),	LONG (bad$gl_devclass, 0),
			WORD (4, dvi$_devtype),		LONG (bad$gl_devtype, 0),
			WORD (64,dvi$_devnam),		LONG (bad$ga_devnam, bad$gl_devnam),
			WORD (4, dvi$_maxblock),	LONG (bad$gl_maxblock, 0),
			WORD (4, dvi$_sectors),		LONG (bad$gl_sectors, 0),
			WORD (4, dvi$_serialnum),	LONG (bad$gl_serialnum, 0),
			WORD (4, dvi$_tracks),		LONG (bad$gl_tracks, 0),
			WORD (0, 0),			LONG (0, 0));	! Terminator entry,
									! MUST be included in the
									! "bad$k_dvientries" count.

END
ELUDOM
