	$BEGIN	RMS0PUT,000,RM$RMS,<DISPATCH FOR PUT OPERATION>,<NOWRT,QUAD>

;
;****************************************************************************
;*									    *
;*  COPYRIGHT (c) 1978, 1980, 1982, 1984 BY				    *
;*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
;*  ALL RIGHTS RESERVED.						    *
;* 									    *
;*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
;*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
;*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
;*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
;*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
;*  TRANSFERRED.							    *
;* 									    *
;*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
;*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
;*  CORPORATION.							    *
;* 									    *
;*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
;*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
;* 									    *
;*									    *
;****************************************************************************
;
;++
; Facility: rms32
;
; Abstract:
;		this routine is the highest level control
;		routine to perform the $put function.
;

;
; Environment:
;		star processor running starlet exec.
;
; Author: L F Laverdure,	 creation date: 3-FEB-1977
;
; Modified By:
;
;	V03-007	DAS0001		David Solomon		14-Apr-1984
;		Fix truncation error in CASE to RM$PUT2.
;
;	V03-006	JWT0141		Jim Teague		11-Nov-1983
;		Change IFB$V_RUM to IFB$V_ONLY_RU
;
;	V03-005	KPL0003		Peter Lieberwirth	26-Jul-1983
;		If AT jnling, tell RJR we're a PUT.
;
;	V03-004	KPL0002		Peter Lieberwirth	24-Jul-1983
;		If AT jnling, get RAB data describing user's request.
;
;	V03-003	KPL0001		Peter Lieberwirth	20-Jun-1983
;		Change some JNLFLG references to JNLFLG2.
;
;	V03-002	JWH0153		Jeffrey W. Horn		 8-Dec-1982
;		Don't allow $PUT if not in recovery unit and RU only
;		specified for file.
;
;	V03-001	KBT0189		Keith B. Thompson	23-Aug-1982
;		Reorganize psects
;
;	V02-005	REFORMAT	Maria del C. Nasr	24-Jul-1980
;
;--
;


	.SBTTL	DECLARATIONS

;
; Include Files:
;

;
; Macros:
;

	$IFBDEF
	$RMSDEF
	$RJRDEF
	
;
; Equated Symbols:
;

;
; Own Storage:
;


	.SBTTL	RMS$PUT - COMMON $PUT SETUP AND DISPATCH ROUTINE

;++
; RMS$PUT - This routine performs common RAB function setup followed
;	 by dispatch to organization-dependent $PUT code.
;
; Calling sequence:
;
;	entered from exec as a result of user's calling sys$put
;	(e.g., by using the $put macro)
;
; Input Parameters:
;
;	ap	user's argument list addr
;
; Implicit Inputs:
;
;	the contents of the rab and related irab and ifab.
;
; Output Parameters:
;
;	r1	destroyed
;	r0	status code
;
; Implicit Outputs:
;
;	various fields of the rab are filled in to reflect
;	the status of the $put operation. (see rms functional
; 	spec for a complete list.)
;
;	the irab is similarly updated.
;
;	a completion ast is queued if specified in the user arglist.
;
; Completion Codes:
;
;	standard rms (see functional spec for list).
;
; Side Effects:
;
;	none
;
;--

	$ENTRY	RMS$PUT
	$TSTPT	PUT
	$RABSET	FAC=IFB$V_PUT,CFLG=1	; do common setup

;
; Returns to user on error
;

	BBC	#IFB$V_ONLY_RU,IFB$B_JNLFLG(R10),10$	; branch if not RU only
	BBS	#IFB$V_RUP,IFB$B_JNLFLG2(R10),10$	; branch if in RU
	RMSERR	NRU
	BRW	RM$EXRMS

10$:

;
; If AT journaling, get some information from RAB.
;
	BBC	#IFB$V_AT,IFB$B_JNLFLG(R10),20$	; skip if not AT jnling
	MOVL	#RJR$_PUT,R1		; input to AT_COM_RAB
	JSB	RM$AT_COM_RAB		; get RAB data into RJR
20$:

;
; Dispatch to org-dependent code
;  Sequential, Relative, indexed routines
;

	CASE	TYPE=B, SRC=IFB$B_ORGCASE(R10),-
		DISPLIST=<RM$PUT1,RM_PUT2_BR,RM$PUT3>
	.IF	NE $$RMSTEST&$$RMS_TBUGCHK
	BRW	RM$ERRORG
	.ENDC
RM_PUT2_BR:
	JMP	RM$PUT2

	.END
