	.TITLE	PAS$VECTOR - Entry vectors for PASRTL.EXE
	.IDENT	/1-002/			; File: PASVECTOR.MAR Edit: MDL1002

;
;****************************************************************************
;*									    *
;*  COPYRIGHT (c) 1978, 1980, 1982, 1984 BY				    *
;*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
;*  ALL RIGHTS RESERVED.						    *
;* 									    *
;*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
;*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
;*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
;*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
;*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
;*  TRANSFERRED.							    *
;* 									    *
;*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
;*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
;*  CORPORATION.							    *
;* 									    *
;*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
;*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
;* 									    *
;*									    *
;****************************************************************************
;

;++
; FACILITY: Pascal Language Support
;
; ABSTRACT:
;
;	This module contains the entry vector definitions for the
;	VAX-11 Pascal Run-Time Library shareable image PASRTL.EXE
;
; ENVIRONMENT: User mode, AST Reentrant
;
; AUTHOR: Steven B. Lionel, CREATION DATE: 11-March-1982
;
; MODIFIED BY:
;
; 1-001	- Original. SBL 11-March-1982
; 1-002 - Add some V1 routines so that V1 programs link on a uVAX.  MDL 26-Jun-1984
;--

	.SBTTL	DECLARATIONS
;
; LIBRARY MACRO CALLS:
;
;	NONE
;
; EXTERNAL DECLARATIONS:
;
	.DSABL	GBL		; Force all external symbols to be declared
;
; MACROS:
;

;+
; Macro to define an entry vector for a CALL entry point
;-

	.MACRO	VCALL	NAME
	.EXTRN		NAME
	.TRANSFER	NAME
	.MASK		NAME
	JMP		NAME+2
	.ENDM

;+
; Macro to define an entry vector for a JSB entry point
;-

	.MACRO	VJSB	NAME
	.EXTRN		NAME
	.TRANSFER	NAME
	JMP		NAME
	.BLKB		2
	.ENDM

	.LIST	MEB			; generate listing for code generated

;
; EQUATED SYMBOLS:
;
;	NONE
;
; OWN STORAGE:
;
;
;	NONE
;
; PSECT DECLARATIONS:
;
	.PSECT $PAS$VECTOR PIC, USR, CON, REL, LCL, SHR, -
			   EXE, RD, NOWRT, LONG


;+
; Define vectored entry points for the Pascal Run-Time Library in alphabetical
; order.
;
; Any additions or changes to this file should be reflected in
; COM$:PASRTLVEC.DAT.
;-

	VCALL	PAS$ABS_L

	VCALL	PAS$BIN

	VCALL	PAS$CARD2

	VCALL	PAS$CLOCK2

	VCALL	PAS$CLOSE2

	VJSB	PAS$CLOSE_LOCAL_R3

	VCALL	PAS$CONVERT_BOOL_L

	VCALL	PAS$CONVERT_BU_L

	VCALL	PAS$CONVERT_D_D

	VCALL	PAS$CONVERT_D_H

	VCALL	PAS$CONVERT_F_F

	VCALL	PAS$CONVERT_F_H

	VCALL	PAS$CONVERT_G_G

	VCALL	PAS$CONVERT_G_H

	VCALL	PAS$CONVERT_H_D

	VCALL	PAS$CONVERT_H_F

	VCALL	PAS$CONVERT_H_G

	VCALL	PAS$CONVERT_H_H

	VCALL	PAS$CONVERT_LU_D

	VCALL	PAS$CONVERT_LU_F

	VCALL	PAS$CONVERT_LU_G

	VCALL	PAS$CONVERT_LU_H

	VCALL	PAS$CONVERT_LU_L

	VCALL	PAS$CONVERT_L_BU

	VCALL	PAS$CONVERT_L_H

	VCALL	PAS$CONVERT_L_L

	VCALL	PAS$CONVERT_WU_L

	VCALL	PAS$CVT_D_T

	VCALL	PAS$CVT_F_T

	VCALL	PAS$CVT_G_T

	VCALL	PAS$CVT_H_T

	VCALL	PAS$DATE

	VCALL	PAS$DELETE

	VCALL	PAS$DISPOSE2

	VCALL	PAS$EOF2

	VCALL	PAS$EOLN2

	VCALL	PAS$EXPO_D

	VCALL	PAS$EXPO_F

	VCALL	PAS$EXPO_G

	VCALL	PAS$EXPO_H

	VCALL	PAS$FAB

	VCALL	PAS$FIND2

	VCALL	PAS$FINDK

	VCALL	PAS$GET

	VCALL	PAS$GET_UNLOCK

	VCALL	PAS$GOTO

	VCALL	PAS$HALT

	VCALL	PAS$HANDLER

	VCALL	PAS$HEX

	VCALL	PAS$LINELIMIT2

	VCALL	PAS$LOCATE

	VCALL	PAS$LOOK_AHEAD

	VCALL	PAS$MARK2

	VCALL	PAS$NEW2

	VCALL	PAS$OCT

	VCALL	PAS$ODD

	VCALL	PAS$OPEN2

	VCALL	PAS$PAGE2

	VCALL	PAS$PUT

	VCALL	PAS$RAB

	VCALL	PAS$READLN2

	VCALL	PAS$READV_BOOLEAN

	VCALL	PAS$READV_CHAR

	VCALL	PAS$READV_ENUMERATED

	VCALL	PAS$READV_INTEGER

	VCALL	PAS$READV_REAL_D

	VCALL	PAS$READV_REAL_F

	VCALL	PAS$READV_REAL_G

	VCALL	PAS$READV_REAL_H

	VCALL	PAS$READV_STRING

	VCALL	PAS$READV_UNSIGNED

	VCALL	PAS$READV_VARYING

	VCALL	PAS$READ_BOOLEAN

	VCALL	PAS$READ_CHAR

	VCALL	PAS$READ_ENUMERATED

	VCALL	PAS$READ_INTEGER

	VCALL	PAS$READ_REAL_D

	VCALL	PAS$READ_REAL_F

	VCALL	PAS$READ_REAL_G

	VCALL	PAS$READ_REAL_H

	VCALL	PAS$READ_STRING

	VCALL	PAS$READ_UNSIGNED

	VCALL	PAS$READ_VARYING

	VCALL	PAS$RELEASE2

	VCALL	PAS$RESET2

	VCALL	PAS$RESETK

	VCALL	PAS$REWRITE2

	VCALL	PAS$ROUND_D_LU

	VCALL	PAS$ROUND_F_LU

	VCALL	PAS$ROUND_G_LU

	VCALL	PAS$ROUND_H_LU

	VCALL	PAS$SQR_D

	VCALL	PAS$SQR_F

	VCALL	PAS$SQR_G

	VCALL	PAS$SQR_H

	VCALL	PAS$SQR_L

	VCALL	PAS$SQR_LU

	VCALL	PAS$STATUS

	VCALL	PAS$TIME

	VCALL	PAS$TRUNCATE

	VCALL	PAS$TRUNC_D_LU

	VCALL	PAS$TRUNC_F_LU

	VCALL	PAS$TRUNC_G_LU

	VCALL	PAS$TRUNC_H_LU

	VCALL	PAS$UFB

	VCALL	PAS$UNDEFINED_D

	VCALL	PAS$UNDEFINED_F

	VCALL	PAS$UNDEFINED_G

	VCALL	PAS$UNDEFINED_H

	VCALL	PAS$UNLOCK

	VCALL	PAS$UPDATE

	VCALL	PAS$WRITELN2

	VCALL	PAS$WRITEV_BIN

	VCALL	PAS$WRITEV_BOOLEAN

	VCALL	PAS$WRITEV_CHAR

	VCALL	PAS$WRITEV_ENUMERATED

	VCALL	PAS$WRITEV_HEX

	VCALL	PAS$WRITEV_INTEGER

	VCALL	PAS$WRITEV_OCT

	VCALL	PAS$WRITEV_REALE_D

	VCALL	PAS$WRITEV_REALE_F

	VCALL	PAS$WRITEV_REALE_G

	VCALL	PAS$WRITEV_REALE_H

	VCALL	PAS$WRITEV_REALF_D

	VCALL	PAS$WRITEV_REALF_F

	VCALL	PAS$WRITEV_REALF_G

	VCALL	PAS$WRITEV_REALF_H

	VCALL	PAS$WRITEV_STRING

	VCALL	PAS$WRITEV_UNSIGNED

	VCALL	PAS$WRITEV_VARYING

	VCALL	PAS$WRITE_BIN

	VCALL	PAS$WRITE_BOOLEAN

	VCALL	PAS$WRITE_CHAR

	VCALL	PAS$WRITE_ENUMERATED

	VCALL	PAS$WRITE_HEX

	VCALL	PAS$WRITE_INTEGER

	VCALL	PAS$WRITE_OCT

	VCALL	PAS$WRITE_REALE_D

	VCALL	PAS$WRITE_REALE_F

	VCALL	PAS$WRITE_REALE_G

	VCALL	PAS$WRITE_REALE_H

	VCALL	PAS$WRITE_REALF_D

	VCALL	PAS$WRITE_REALF_F

	VCALL	PAS$WRITE_REALF_G

	VCALL	PAS$WRITE_REALF_H

	VCALL	PAS$WRITE_STRING

	VCALL	PAS$WRITE_UNSIGNED

	VCALL	PAS$WRITE_VARYING

;+
; V1 entry points added to correct a uVAX problem.
;-

	VCALL	PAS$READ_STRING1

	VCALL	PAS$WRITE_REALF_D1

	VCALL	PAS$WRITE_REALF_F1

;+
; Add new entry points here, at the end.
;-

	.END						; End of module PAS$VECTOR
