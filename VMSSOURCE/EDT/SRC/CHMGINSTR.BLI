%TITLE 'EDT$CHMGINSTR - scan an insert command string'
MODULE EDT$CHMGINSTR (				! Scan an insert command string
		IDENT = 'V04-000'			! File: CHMGINSTR.BLI Edit: JBS1004
		) =
BEGIN
!
!****************************************************************************
!*									    *
!*  COPYRIGHT (c) 1978, 1980, 1982, 1984 BY				    *
!*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
!*  ALL RIGHTS RESERVED.						    *
!* 									    *
!*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
!*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
!*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
!*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
!*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
!*  TRANSFERRED.							    *
!* 									    *
!*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
!*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
!*  CORPORATION.							    *
!* 									    *
!*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
!*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
!* 									    *
!*									    *
!****************************************************************************
!

!++
! FACILITY:	EDT -- The DEC Standard Editor
!
! ABSTRACT:
!
!	This module scans over the string of characters to be inserted
!	by an insert command.
!
! ENVIRONMENT:	Runs at any access mode - AST reentrant
!
! AUTHOR: Bob Kushlis, CREATION DATE: Unknown
!
! MODIFIED BY:
!
! 1-001	- Original.  DJS 04-Feb-1981.  This module was created by
!	extracting the routine EDT$$SCAN_INSSTR  from module CHANGE.BLI.
! 1-002	- Regularize headers.  JBS 02-Mar-1981
! 1-003	- Add a return value to indicate end of journal file.  JBS 02-Oct-1981
! 1-004	- Improve the appearance of the listing.  JBS 13-Jun-1983
!--


%SBTTL 'Declarations'
!
! TABLE OF CONTENTS:
!

REQUIRE 'EDTSRC:TRAROUNAM';

FORWARD ROUTINE
    EDT$$SCAN_INSSTR;				! Scan over the string of characters to be inserted

!
! INCLUDE FILES:
!

REQUIRE 'EDTSRC:EDTREQ';

!
! MACROS:
!
!	NONE
!
! EQUATED SYMBOLS:
!
!	NONE
!
! OWN STORAGE:
!
!	NONE
!
! EXTERNAL REFERENCES:
!
!	In the routine

%SBTTL 'EDT$$SCAN_INSSTR  - scan an insert command'

GLOBAL ROUTINE EDT$$SCAN_INSSTR 		! Scan an insert command
    =

!++
! FUNCTIONAL DESCRIPTION:
!
!	This routine scans over the string of characters to be inserted by
!	an insert command.
!
!	An insert string is delimited by either a CTRL/Z character, or the printable
!	equivalent of ^Z or ^z.
!
!	The command pointer EDT$$A_CMD_BUF  is left pointing one character beyond the command.
!
! FORMAL PARAMETERS:
!
!	NONE
!
! IMPLICIT INPUTS:
!
!	EDT$$A_CMD_END
!	EDT$$A_CMD_BUF
!
! IMPLICIT OUTPUTS:
!
!	EDT$$A_CMD_BUF
!	EDT$$G_SEA_LEN
!
! ROUTINE VALUE:
!
!	1 = ok, 0 = end of journal file
!
! SIDE EFFECTS:
!
!	NONE
!
!--

    BEGIN

    EXTERNAL ROUTINE
	EDT$$INS_MOD;				! Process no-keypad insertion

    EXTERNAL
	EDT$$A_CMD_END,				! End of command pointer
	EDT$$A_CMD_BUF,				! Command string pointer
	EDT$$G_SEA_LEN;				! Length of search string.

    LOCAL
	SUCCEED;

    SUCCEED = 1;
    EDT$$G_SEA_LEN = 0;

    WHILE 1 DO
	BEGIN

	IF CH$PTR_EQL (.EDT$$A_CMD_BUF, .EDT$$A_CMD_END)
	THEN
	    BEGIN
	    SUCCEED = EDT$$INS_MOD ();
	    EXITLOOP;
	    END;

	IF (CH$RCHAR (.EDT$$A_CMD_BUF) EQL ASC_K_CTRL_Z)
	THEN
	    BEGIN
	    EDT$$A_CMD_BUF = CH$PLUS (.EDT$$A_CMD_BUF, 1);
	    EXITLOOP;
	    END;

	IF ((CH$RCHAR (.EDT$$A_CMD_BUF) EQL %C'^') AND 	!
	    ((CH$RCHAR (CH$PTR (.EDT$$A_CMD_BUF, 1)) EQL %C'Z') OR 	!
	    (CH$RCHAR (CH$PTR (.EDT$$A_CMD_BUF, 1)) EQL %C'z')))
	THEN
	    BEGIN
	    EDT$$A_CMD_BUF = CH$PLUS (.EDT$$A_CMD_BUF, 2);
	    EXITLOOP;
	    END;

	EDT$$A_CMD_BUF = CH$PLUS (.EDT$$A_CMD_BUF, 1);
	EDT$$G_SEA_LEN = .EDT$$G_SEA_LEN + 1;
	END;

    RETURN (.SUCCEED);
    END;					! of routine EDT$$SCAN_INSSTR

!<BLF/PAGE>

END						! of module EDT$CHMGINSTR

ELUDOM
