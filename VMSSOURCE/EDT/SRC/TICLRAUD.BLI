%TITLE 'EDT$TICLRAUD - flush journal file'
MODULE EDT$TICLRAUD (				! Flush journal file
		IDENT = 'V04-000'			! File: TICLRAUD.BLI Edit: JBS1012
		) =
BEGIN
!
!****************************************************************************
!*									    *
!*  COPYRIGHT (c) 1978, 1980, 1982, 1984 BY				    *
!*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
!*  ALL RIGHTS RESERVED.						    *
!* 									    *
!*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
!*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
!*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
!*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
!*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
!*  TRANSFERRED.							    *
!* 									    *
!*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
!*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
!*  CORPORATION.							    *
!* 									    *
!*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
!*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
!* 									    *
!*									    *
!****************************************************************************
!

!++
! FACILITY:	EDT -- The DEC Standard Editor
!
! ABSTRACT:
!
!	Flush journal file.
!
! ENVIRONMENT:	Runs at any access mode - AST reentrant
!
! AUTHOR: Bob Kushlis, CREATION DATE: June 9, 1979
!
! MODIFIED BY:
!
! 1-001	- Original.  DJS 18-FEB-1981.  This module was created by
!	extracting routine EDT$$TI_FLUSHJOUFI  from module TINPUT.
! 1-002	- Regularize headers.  JBS 11-Mar-1981
! 1-003	- Add parameter to routine and flag to record.  JBS 18-Jun-1981
! 1-004	- Make record flag compatible with EDT V2.  JBS 07-Jul-1981
! 1-005	- Fix a bug in control C processing.  JBS 17-Dec-1981
! 1-006	- Continue to debug control C processing.  JBS 24-Dec-1981
! 1-007	- Revise control C data names.  JBS 29-Dec-1981
! 1-008	- Use two words for control C counters.  JBS 30-Dec-1981
! 1-009	- Decrease stack usage.  JBS 27-Jan-1982
! 1-010	- We must write 0-length journal records.  JBS 01-Apr-1982
! 1-011	- We must not write a record unless it has been marked valid.  JBS 09-Apr-1982
! 1-012	- Use symbols instead of magic numbers in control C journaling.  JBS 24-May-1982
!--


%SBTTL 'Declarations'
!
! TABLE OF CONTENTS:
!

REQUIRE 'EDTSRC:TRAROUNAM';

FORWARD ROUTINE
    EDT$$TI_FLUSHJOUFI : NOVALUE;

!
! INCLUDE FILES:
!

REQUIRE 'EDTSRC:EDTREQ';

!
! MACROS:
!
!	NONE
!
! EQUATED SYMBOLS:
!
!	NONE
!
! OWN STORAGE:
!
!	NONE
!
! EXTERNAL REFERENCES:
!
!	In the routine

%SBTTL 'EDT$$TI_FLUSHJOUFI  - flush journal file'

GLOBAL ROUTINE EDT$$TI_FLUSHJOUFI (		! Flush journal file
    RECORD_TYPE					! text or control C
    ) : NOVALUE =

!++
! FUNCTIONAL DESCRIPTION:
!
!	This routine writes either a text record or a control C record.
!	A text record is taken from the journal buffer.  A control C record
!	consists of the count of the number of times we tested for control C
!	and didn't find it.  Upon writing either record the control c counter
!	is cleared; thus it records the number of tests since the last journal
!	record.
!
! FORMAL PARAMETERS:
!
!	RECORD_TYPE	ASCII 'T' for a text record, ASCII 'C' for a control C record.
!
! IMPLICIT INPUTS:
!
!	EDT$$T_TIN_OBUF
!	EDT$$G_TIN_OBUFPOS
!	EDT$$G_CC_CNT1_LO
!	EDT$$C_CC_CNT1_HI
!	EDT$$G_JOU_VALID
!
! IMPLICIT OUTPUTS:
!
!	EDT$$G_TIN_OBUFPOS
!	EDT$$G_JOU_VALID
!
! ROUTINE VALUE:
!
!	NONE
!
! SIDE EFFECTS:
!
!	NONE
!
!--

    BEGIN

    EXTERNAL ROUTINE
	EDT$$JOU_PUTREC;

    EXTERNAL
	EDT$$T_TIN_OBUF : VECTOR [256, BYTE],	! The journal output buffer
	EDT$$G_TIN_OBUFPOS,			! Position in journal output buffer
	EDT$$G_CC_CNT1_LO,			! Number of control C tests
	EDT$$G_CC_CNT1_HI,			! High half of the above
	EDT$$G_JOU_VALID;			! 1 = journal record is valid

    LOCAL
	JOURNAL_RECORD : VECTOR [CC_REC_SIZE, BYTE];	! For building the control C record

!+
! Make sure the control C counter is reasonable.
!-
    ASSERT (.EDT$$G_CC_CNT1_LO LEQ CC_CTR_MAX);
    ASSERT (.EDT$$G_CC_CNT1_HI LEQ CC_CTR_MAX);

    SELECTONE .RECORD_TYPE OF
	SET

	[%C'T'] : 				! Output a text record
	    BEGIN
	    ASSERT (.EDT$$G_TIN_OBUFPOS LEQ 256);
	    ASSERT (.EDT$$G_TIN_OBUFPOS GEQ 0);

	    IF (.EDT$$G_TIN_OBUFPOS GTR 0) THEN ASSERT (.EDT$$G_JOU_VALID);

	    IF .EDT$$G_JOU_VALID
	    THEN
		BEGIN
		EDT$$JOU_PUTREC (EDT$$T_TIN_OBUF [0], .EDT$$G_TIN_OBUFPOS);
		EDT$$G_TIN_OBUFPOS = 0;
		EDT$$G_JOU_VALID = 0;
		END;

	    END;

	[%C'C'] : 				! Output a control C record
	    BEGIN
	    JOURNAL_RECORD [0] = JOU_REC_ESC;	! Flag as non-text record
	    JOURNAL_RECORD [1] = CC_REC_FLAG;	! Control C record
	    EDT$$CPY_MEM (2, EDT$$G_CC_CNT1_LO, JOURNAL_RECORD [2]);
	    EDT$$CPY_MEM (2, EDT$$G_CC_CNT1_HI, JOURNAL_RECORD [4]);
	    EDT$$JOU_PUTREC (JOURNAL_RECORD [0], CC_REC_SIZE);
	    END;

	[OTHERWISE] :
	    ASSERT (0);
	TES;

    END;					! of routine EDT$$TI_FLUSHJOUFI

!<BLF/PAGE>

END						! of module EDT$TICLRAUD

ELUDOM
