	.TITLE	NML$CLEPURSTATE	CLEAR/PURGE PARAMETER STATE TABLES
	.IDENT	'V04-000'
 
 
;
;****************************************************************************
;*									    *
;*  COPYRIGHT (c) 1978, 1980, 1982, 1984 BY				    *
;*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
;*  ALL RIGHTS RESERVED.						    *
;* 									    *
;*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
;*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
;*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
;*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
;*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
;*  TRANSFERRED.							    *
;* 									    *
;*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
;*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
;*  CORPORATION.							    *
;* 									    *
;*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
;*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
;* 									    *
;*									    *
;****************************************************************************
;

;++
; FACILITY:  DECnet-VAX Network Management Listener
; 
; ABSTRACT: 
; 
;	This module contains the NPARSE state tables for processing the
;	NCP CLEAR and PURGE command messages.
; 
; ENVIRONMENT:	VAX/VMS Operating System 
; 
; AUTHOR:  Distributed Systems Software Engineering
;
; CREATION DATE: 19-November-1979 
; 
; MODIFIED BY: 
;		
;	V03-011	MKP0019		Kathy Perko	22-June-1984
;		Allow CLEAR and PURGE for CIRCUIT OWNER parameter.
;	V03-010	MKP0018		Kathy Perko	23-April-1984
;		Fix PUR EXEC ADDRESS so it uses correct CPT parameter.
;
;	V03-009	MKP0017		Kathy Perko	7-Jan-1984
;		Add X25 Access Module entity.  Allow X-2n Server
;		Destination node parameter to be cleared and purged.
;
;	V03-008	MKP0016		Kathy Perko	14-Dec-1983
;		Add node parameter, SERVICE NODE VERSION.
;
;	V03-007	MKP0015		Kathy Perko	30-July-1983
;		Add EXECUTOR parameter, ALIAS
;
;	V03-006	MKP0014		Kathy Perko	25-April-1983
;		Add PURGE for NI Configurator Module.
;
;	V03-005	MKP0013		Kathy Perko	19-Dec-1982
;		Add Ethernet protocol parameter (EPT) to line database, and
;		allow Maximum Block parameter to be cleared/purged in the
;		line database.
;
;	V03-004	MKP0012		Kathy Perko	21-Nov-1982
;		Add CLEAR CIRCUIT NUMBER.
;
;	V03-003	MKP0011		Kathy Perko	6-Sept-1982
;		Add Listen Timer to purgable circuit parameters,
;		since we've made listen timer a read only parameter.
;
;	V03-002	MKP0010		Kathy Perko	9-July-1982
;		Add NI parameters for lines, circuits and nodes.
;		Add a check to make sure X25-PROTOCOL GROUPS can only
;		have the qualifier, KNOWN DTEs, if ALL is specified.
;		Add X29-Server and X25-Trace entities.
;
;	V03-001	MKP0009		Kathy Perko	4-April-1982
;		Add grouping checks to X-25 Protocol and Server Modules.
;
;	V02-009	MKP0008		Kathy Perko	15-Feb-1982
;		Reinstate pipeline quota for executor nodes.
;
;	V02-008	MKP0007		Kathy Perko	19-Jan-1982
;		Add circuit parameter, transport protocol (NMA$C_PCCI_XPT).
;
;	V02-007	MKP0006		Kathy Perko	7-Jan-1982
;		One more time now -- move the RTT parameter from
;		circuits back to lines.
;
;	V02-006	MKP0005		Kathy Perko	17-Dec-81
;		Add node parameters ACCESS and DEFAULT ACCESS.  Also add
;		proxy login parameters for nodes and objects.
;
;	V02-005 MKP0004		Kathy Perko	16-Nov-81
;		Fix parsing for logging circuit sources.
;
;	V02-004	MKP0003		Kathy Perko	13-Nov-81
;		Add line clock parameter
;
;	V02-003 MKP0002		Kathy Perko	6-Sept-81
;		Add new VMS specific parameter for executor: PIPELINE QUOTA.
;
; 	V02-002	MKP0001		Kathy Perko	19-July-81
;		Add multipoint and X25 parameters.
;-- 

	.SBTTL	Declarations
;
; INCLUDE FILES:
;

$NMADEF				; Network Management Layer definitions
$NMLDEF				; NML definitions

;
; OWN STORAGE:
;

	.SBTTL	NML$NPA_CLPUCIR Clear/Purge circuit parameter state table

;++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
;	Circuits
;------------------------------------------------------------

IMSG$	NML$NPA_CLPUCIR

FIELD$
$EOM	,NPA$_EXIT,,NML$M_PRS_ALL,NML$GL_PRS_FLGS	; No parameters
$NEXT

FIELD$	NML_CIRCUIT_START
$EOM	,NPA$_EXIT			; Done
$NEXT

FIELD$
$SBEXP	NML_CIRCUIT_LCT,NML_CIRCUIT_START	; Counter timer
$NEXT

FIELD$
$SBEXP	NML_CIRCUIT_COS,NML_CIRCUIT_START	; Cost
$NEXT

FIELD$
$SBEXP	NML_CIRCUIT_MRT,NML_CIRCUIT_START	; Maximum routers on NI
$NEXT

FIELD$
$SBEXP	NML_CIRCUIT_RPR,NML_CIRCUIT_START	; Router priority on NI
$NEXT

FIELD$
$SBEXP	NML_CIRCUIT_HET,NML_CIRCUIT_START	; Hello timer
$NEXT

FIELD$
$SBEXP	NML_CIRCUIT_LIT,NML_CIRCUIT_START	; Listen timer
$NEXT

FIELD$
$SBEXP	NML_CIRCUIT_MRC,NML_CIRCUIT_START	; Maximum recalls
$NEXT

FIELD$
$SBEXP	NML_CIRCUIT_RCT,NML_CIRCUIT_START	; Recall timer
$NEXT

FIELD$
$SBEXP	NML_CIRCUIT_NUM,NML_CIRCUIT_START	; Number
$NEXT

FIELD$
$SBEXP	NML_CIRCUIT_OWN,NML_CIRCUIT_START	; Owner entity
$NEXT

FIELD$
$SBEXP	NML_CIRCUIT_BBT,NML_CIRCUIT_START	; Babble timer
$NEXT

FIELD$
$SBEXP	NML_CIRCUIT_TRT,NML_CIRCUIT_START	; Transmit timer
$NEXT

FIELD$
$SBEXP	NML_CIRCUIT_MRB,NML_CIRCUIT_START	; Maximum receive buffers
$NEXT

FIELD$
$SBEXP	NML_CIRCUIT_MTR,NML_CIRCUIT_START	; Maximum transmits
$NEXT

FIELD$
$SBEXP	NML_CIRCUIT_ACB,NML_CIRCUIT_START	; Active base
$NEXT

FIELD$
$SBEXP	NML_CIRCUIT_ACI,NML_CIRCUIT_START	; Active increment
$NEXT

FIELD$
$SBEXP	NML_CIRCUIT_IAB,NML_CIRCUIT_START	; Inactive base
$NEXT

FIELD$
$SBEXP	NML_CIRCUIT_IAI,NML_CIRCUIT_START	; Inactive increment
$NEXT

FIELD$
$SBEXP	NML_CIRCUIT_IAT,NML_CIRCUIT_START	; Inactive threshold
$NEXT

FIELD$
$SBEXP	NML_CIRCUIT_DYB,NML_CIRCUIT_START	; Dying base
$NEXT

FIELD$
$SBEXP	NML_CIRCUIT_DYI,NML_CIRCUIT_START	; Dying increment
$NEXT

FIELD$
$SBEXP	NML_CIRCUIT_DYT,NML_CIRCUIT_START	; Dying threshold
$NEXT

FIELD$
$SBEXP	NML_CIRCUIT_DTH,NML_CIRCUIT_START	; Dead threshold
$NEXT

FIELD$
$SBEXP	NML_CIRCUIT_XPT,NML_CIRCUIT_START	; Transport protocol
$NEXT

FIELD$
$MATCH	2,NML_PTY_ERR
$NULL	,NML_FOR_ERR


;
; Circuit parameter subexpressions
;
FIELD$	NML_CIRCUIT_LCT			; Counter timer
$WORD	NMA$C_PCCI_LCT,NPA$_EXIT,NML$PRM_CLEAR, -
		,,CPT$GK_PCCI_LCT

FIELD$	NML_CIRCUIT_COS			; Cost
$WORD	NMA$C_PCCI_COS,NPA$_EXIT,NML$PRM_CLEAR, -
		,,CPT$GK_PCCI_COS

FIELD$	NML_CIRCUIT_MRT			; Maximum routers on NI
$WORD	NMA$C_PCCI_MRT,NPA$_EXIT,NML$PRM_CLEAR, -
		,,CPT$GK_PCCI_MRT

FIELD$	NML_CIRCUIT_RPR			; Router priority on NI
$WORD	NMA$C_PCCI_RPR,NPA$_EXIT,NML$PRM_CLEAR, -
		,,CPT$GK_PCCI_RPR

FIELD$	NML_CIRCUIT_HET			; Hello timer
$WORD	NMA$C_PCCI_HET,NPA$_EXIT,NML$PRM_CLEAR, -
		,,CPT$GK_PCCI_HET

FIELD$	NML_CIRCUIT_LIT			; Listen timer
$WORD	NMA$C_PCCI_LIT,NPA$_EXIT,NML$PRM_CLEAR, -
		,,CPT$GK_PCCI_LIT

FIELD$	NML_CIRCUIT_MRC			; Maximum recalls
$WORD	NMA$C_PCCI_MRC,NPA$_EXIT,NML$PRM_CLEAR, -
		,,CPT$GK_PCCI_MRC

FIELD$	NML_CIRCUIT_RCT			; Recall timer
$WORD	NMA$C_PCCI_RCT,NPA$_EXIT,NML$PRM_CLEAR, -
		,,CPT$GK_PCCI_RCT

FIELD$	NML_CIRCUIT_NUM			; DTE number (X25 only)
$WORD	NMA$C_PCCI_NUM,NPA$_EXIT,NML$PRM_CLEAR, -
		,,CPT$GK_PCCI_NUM

FIELD$	NML_CIRCUIT_OWN			; Owner entity identification
$WORD	NMA$C_PCCI_OWN,NPA$_EXIT,NML$PRM_CLEAR, -
		,,CPT$GK_PCCI_OWN

FIELD$	NML_CIRCUIT_BBT			; Babble timer
$WORD	NMA$C_PCCI_BBT,NPA$_EXIT,NML$PRM_CLEAR, -
		,,CPT$GK_PCCI_BBT

FIELD$	NML_CIRCUIT_TRT			; Transmit timer
$WORD	NMA$C_PCCI_TRT,NPA$_EXIT,NML$PRM_CLEAR, -
		,,CPT$GK_PCCI_TRT

FIELD$	NML_CIRCUIT_MRB			; Maximum receive buffers
$WORD	NMA$C_PCCI_MRB,NPA$_EXIT,NML$PRM_CLEAR, -
		,,CPT$GK_PCCI_MRB

FIELD$	NML_CIRCUIT_MTR			; Maximum transmits
$WORD	NMA$C_PCCI_MTR,NPA$_EXIT,NML$PRM_CLEAR, -
		,,CPT$GK_PCCI_MTR

FIELD$	NML_CIRCUIT_ACB			; Active base
$WORD	NMA$C_PCCI_ACB,NPA$_EXIT,NML$PRM_CLEAR, -
		,,CPT$GK_PCCI_ACB

FIELD$	NML_CIRCUIT_ACI			; Active increment
$WORD	NMA$C_PCCI_ACI,NPA$_EXIT,NML$PRM_CLEAR, -
		,,CPT$GK_PCCI_ACI

FIELD$	NML_CIRCUIT_IAB			; Inactive base
$WORD	NMA$C_PCCI_IAB,NPA$_EXIT,NML$PRM_CLEAR, -
		,,CPT$GK_PCCI_IAB

FIELD$	NML_CIRCUIT_IAI			; Inactive increment
$WORD	NMA$C_PCCI_IAI,NPA$_EXIT,NML$PRM_CLEAR, -
		,,CPT$GK_PCCI_IAI

FIELD$	NML_CIRCUIT_IAT			; Inactive threshold
$WORD	NMA$C_PCCI_IAT,NPA$_EXIT,NML$PRM_CLEAR, -
		,,CPT$GK_PCCI_IAT

FIELD$	NML_CIRCUIT_DYB			; Dying base
$WORD	NMA$C_PCCI_DYB,NPA$_EXIT,NML$PRM_CLEAR, -
		,,CPT$GK_PCCI_DYB

FIELD$	NML_CIRCUIT_DYI			; Dying increment
$WORD	NMA$C_PCCI_DYI,NPA$_EXIT,NML$PRM_CLEAR, -
		,CPT$GK_PCCI_DYI

FIELD$	NML_CIRCUIT_DYT			; Dying threshold
$WORD	NMA$C_PCCI_DYT,NPA$_EXIT,NML$PRM_CLEAR, -
		,,CPT$GK_PCCI_DYT

FIELD$	NML_CIRCUIT_DTH			; Dead threshold
$WORD	NMA$C_PCCI_DTH,NPA$_EXIT,NML$PRM_CLEAR, -
		,,CPT$GK_PCCI_DTH

FIELD$	NML_CIRCUIT_XPT			; Transport protocol
$WORD	NMA$C_PCCI_XPT,NPA$_EXIT,NML$PRM_CLEAR, -
		,,CPT$GK_PCCI_XPT

FIELD$					; End of circuit parameter states


	.SBTTL	NML$NPA_CLPULIN	Clear/Purge line parameter state table

;+
;    line
;-

IMSG$	NML$NPA_CLPULIN

FIELD$
$EOM	,NPA$_EXIT,,NML$M_PRS_ALL,NML$GL_PRS_FLGS	; No parameters
$NEXT

FIELD$	NML_LIN_START
$EOM	,NPA$_EXIT			; Done
$NEXT

FIELD$
$WORD	NMA$C_PCLI_STA,NML_LIN_START,NML$PRM_CLEAR,-	; State
	,,CPT$GK_PCLI_STA
$NEXT

FIELD$
$WORD	NMA$C_PCLI_SER,NML_LIN_START,NML$PRM_CLEAR,-	; Service control
	,,CPT$GK_PCLI_SER
$NEXT

FIELD$
$WORD	NMA$C_PCLI_LCT,NML_LIN_START,NML$PRM_CLEAR,-	; Counter timer
	,,CPT$GK_PCLI_LCT
$NEXT

FIELD$
$WORD	NMA$C_PCLI_DUP,NML_LIN_START,NML$PRM_CLEAR,-	; Duplex
	,,CPT$GK_PCLI_DUP
$NEXT

FIELD$
$WORD	NMA$C_PCLI_CLO,NML_LIN_START,NML$PRM_CLEAR,-	; Clock
	,,CPT$GK_PCLI_CLO
$NEXT

FIELD$
$WORD	NMA$C_PCLI_CON,NML_LIN_START,NML$PRM_CLEAR,-	; Controller mode
	,,CPT$GK_PCLI_CON
$NEXT

FIELD$
$WORD	NMA$C_PCLI_STI,NML_LIN_START,NML$PRM_CLEAR,-	; Service timer
	,,CPT$GK_PCLI_STI
$NEXT

FIELD$
$WORD	NMA$C_PCLI_RTT,NML_LIN_START,NML$PRM_CLEAR, -	; Retransmit timer
	,,CPT$GK_PCLI_RTT
$NEXT

FIELD$
$WORD	NMA$C_PCLI_HTI,NML_LIN_START,NML$PRM_CLEAR,-	; Holdback timer
	,,CPT$GK_PCLI_HTI
$NEXT

FIELD$
$WORD	NMA$C_PCLI_MBL,NML_LIN_START,NML$PRM_CLEAR,-	; Maximum block
	,,CPT$GK_PCLI_MBL
$NEXT

FIELD$
$WORD	NMA$C_PCLI_MRT,NML_LIN_START,NML$PRM_CLEAR,-	; Maximum retransmits
	,,CPT$GK_PCLI_MRT
$NEXT

FIELD$
$WORD	NMA$C_PCLI_SLT,NML_LIN_START,NML$PRM_CLEAR,-	; Scheduling timer
	,,CPT$GK_PCLI_SLT
$NEXT

FIELD$
$WORD	NMA$C_PCLI_DDT,NML_LIN_START,NML$PRM_CLEAR,-	; Dead timer
	,,CPT$GK_PCLI_DDT
$NEXT

FIELD$
$WORD	NMA$C_PCLI_DLT,NML_LIN_START,NML$PRM_CLEAR,-	; Delay timer
	,,CPT$GK_PCLI_DLT
$NEXT

FIELD$
$WORD	NMA$C_PCLI_SRT,NML_LIN_START,NML$PRM_CLEAR,-	; Stream timer
	,,CPT$GK_PCLI_SRT
$NEXT

FIELD$
$WORD	NMA$C_PCLI_EPT,NML_LIN_START,NML$PRM_CLEAR,-	; Ethernet protocol type
	,,CPT$GK_PCLI_EPT
$NEXT

FIELD$
$MATCH	2,NML_PTY_ERR			; Unrecognized parameter type
$NULL	,NML_FOR_ERR			; Message format error

FIELD$					; End of line parameter states

	.SBTTL	NML$NPA_CLPULOG	Clear/Purge logging parameter state table

;+
;    logging
;-

IMSG$	NML$NPA_CLPULOG

FIELD$
$EOM	,NPA$_EXIT,,NML$M_PRS_ALL,NML$GL_PRS_FLGS	 ; No parameters
$NEXT

FIELD$	NML_LOG_START
$SBEXP	NML_LOG_STA,NML_LOG_START,NML$PRM_CHKESI ; State
$NEXT

FIELD$
$SBEXP	NML_LOG_LNA,NML_LOG_START,NML$PRM_CHKESI ; Name
$NEXT

FIELD$
$SBEXP	NML_LOG_SIN,NML_LOG_START,NML$PRM_CHKEFI,-
	NML$M_PRS_SNKNOD,NML$GL_PRS_FLGS; Sink node
$NEXT

FIELD$
$SBEXP	NML_LOG_EVE,NML_LOG_START,NML$PRM_CHKEFI ; Events
$NEXT

FIELD$
$EOM	,NML_LOG_LAST,NML$PRSEXESNK	; End of message
$MATCH	2,NML_PTY_ERR			; Unrecognized parameter type
$NULL	,NML_FOR_ERR			; Format error

FIELD$	NML_LOG_LAST
$NULL	,NPA$_EXIT,NML$PRM_CHKEVE	; Event parameter may be required
;
; Event logging parameters.
;
FIELD$	NML_LOG_STA			; State
$WORD	NMA$C_PCLO_STA,NPA$_EXIT,NML$PRM_CLEAR,-
	,,CPT$GK_PCLO_STA

FIELD$	NML_LOG_LNA			; Name parameter
$WORD	NMA$C_PCLO_LNA,NPA$_EXIT,NML$PRM_CLEAR,-
	,,CPT$GK_PCLO_LNA

FIELD$	NML_LOG_EVE			; Event parameter
$WORD	NMA$C_PCLO_EVE,,,CPT$GK_PCLO_EVE,NML$GL_PRMCODE
FIELD$	NML_EVE_SUB
$BYTE	NMA$C_ENT_KNO,NML_EVE_CLASS,NML$PRM_EVTSRCTYP  ; No entity specified
$BYTE	NMA$C_ENT_NOD,NML_EVE_NODEID,NML$PRM_EVTSRCTYP ; Node entity
$BYTE	NMA$C_ENT_CIR,NML_EVE_CIRCUITID,NML$PRM_EVTSRCTYP ; Circuit entity
$BYTE	NMA$C_ENT_LIN,NML_EVE_LINEID,NML$PRM_EVTSRCTYP ; Line entity
$NULL	,NML_FOR_ERR			; Message format error

FIELD$	NML_EVE_NODEID			; Source node id
$LOOK	0,NML_EVE_NODNUM
$IMAGE	6,NML_EVE_CLASS,NML$PRM_EVTSOURCE

FIELD$	NML_EVE_NODNUM
$MATCH	3,NML_EVE_CLASS,NML$PRM_EVTSOURCE

FIELD$	NML_EVE_CIRCUITID		; Source circuit id
$IMAGE	16,NML_EVE_CLASS,NML$PRM_EVTSOURCE

FIELD$	NML_EVE_LINEID			; Source line id
$IMAGE	16,NML_EVE_CLASS,NML$PRM_EVTSOURCE

FIELD$	NML_EVE_CLASS
$EOM	,NML_FOR_ERR			  ; Message format error
$MATCH	1,NML_EVE_CLASS2,NML$PRM_EVTCLASS ; Match class byte

FIELD$	NML_EVE_CLASS2
$EXTZV	<0,6,2,NPA$_ADVANCE>,NML_EVE_LIST,NML$PRM_EVTMSKTYP ; Single class
$EXTZV	<2,6,2,NPA$_ADVANCE>,NPA$_EXIT,NML$PRM_EVTMSKTYP ; Entire class
$EXTZV	<3,6,2,NPA$_ADVANCE>,NPA$_EXIT,NML$PRM_EVTMSKTYP ; Known events

FIELD$	NML_EVE_LIST
$IMAGE	8,NPA$_EXIT,NML$PRM_EVTMASK
$NULL	,NML_FOR_ERR			; Message format error

FIELD$	NML_LOG_SIN			; Sink node parameter
$WORD	NMA$C_PCLO_SIN,,,CPT$GK_PCLO_SIN,NML$GL_PRMCODE
FIELD$
$LOOK	0,NML_LOG_SINADR
$IMAGE	6,NPA$_EXIT,NML$PRSSNKNNA	; Sink node name
$NULL	,NML_FOR_ERR			; Message format error

FIELD$	NML_LOG_SINADR
$MATCH	3,NPA$_EXIT,NML$PRSSNKNAD	; Sink node address
$NULL	,NML_FOR_ERR			; Message format error
	
FIELD$					; End of logging parameter states

	.SBTTL	NML$NPA_CLPUEXE	Clear/Purge executor parameter state table

;+
;	executor
;-

IMSG$	NML$NPA_CLPUEXE

FIELD$
$EOM	,NPA$_EXIT,,NML$M_PRS_ALL,NML$GL_PRS_FLGS	 ; No parameters
$NEXT

FIELD$	NML_EXE_START
$EOM	,NPA$_EXIT				; Done
$NEXT

FIELD$
$SBEXP	NML_EXE_STA,NML_EXE_START,NML$PRM_CHKEXE ; State
$NEXT

FIELD$
$SBEXP	NML_EXE_PHA,NML_EXE_START,NML$PRM_CHKEXE ; Physical address on NI
$NEXT

FIELD$
$SBEXP	NML_EXE_IDE,NML_EXE_START,NML$PRM_CHKEXE ; Identification
$NEXT

;FIELD$
;$SBEXP	NML_EXE_IHO,NML_EXE_START,NML$PRM_CHKNOD ; Host
;$NEXT

FIELD$
$SBEXP	NML_EXE_ADD,NML_EXE_START,NML$PRM_CHKEXE ; Address
$NEXT

FIELD$
$SBEXP	NML_EXE_CTI,NML_EXE_START,NML$PRM_CHKNOD ; Counter timer
$NEXT

FIELD$
$SBEXP	NML_EXE_NNA,NML_EXE_START,NML$PRM_CHKNOD ; Name
$NEXT

FIELD$
$SBEXP	NML_EXE_MLK,NML_EXE_START,NML$PRM_CHKEXE ; Max links
$NEXT

FIELD$
$SBEXP	NML_EXE_DFA,NML_EXE_START,NML$PRM_CHKEXE ; Delay factor
$NEXT

FIELD$
$SBEXP	NML_EXE_DWE,NML_EXE_START,NML$PRM_CHKEXE ; Delay weight
$NEXT

FIELD$
$SBEXP	NML_EXE_IAT,NML_EXE_START,NML$PRM_CHKEXE ; Inactivity timer
$NEXT

FIELD$
$SBEXP	NML_EXE_RFA,NML_EXE_START,NML$PRM_CHKEXE ; Retransmit factor
$NEXT

FIELD$
$SBEXP	NML_EXE_ETY,NML_EXE_START,NML$PRM_CHKEXE ; Executor type
$NEXT

FIELD$
$SBEXP	NML_EXE_RTI,NML_EXE_START,NML$PRM_CHKEXE ; Routing timer
$NEXT

FIELD$
$SBEXP	NML_EXE_SAD,NML_EXE_START,NML$PRM_CHKEXE ; Subaddresses
$NEXT

FIELD$
$SBEXP	NML_EXE_BRT,NML_EXE_START,NML$PRM_CHKEXE ; Broadcast routing timer
$NEXT

FIELD$
$SBEXP	NML_EXE_MAD,NML_EXE_START,NML$PRM_CHKEXE ; Max address
$NEXT

FIELD$
$SBEXP	NML_EXE_MLN,NML_EXE_START,NML$PRM_CHKEXE ; Max lines
$NEXT

FIELD$
$SBEXP	NML_EXE_MCO,NML_EXE_START,NML$PRM_CHKEXE ; Max cost
$NEXT

FIELD$
$SBEXP	NML_EXE_MHO,NML_EXE_START,NML$PRM_CHKEXE ; Max hops
$NEXT

FIELD$
$SBEXP	NML_EXE_MVI,NML_EXE_START,NML$PRM_CHKEXE ; Max visits
$NEXT

FIELD$
$SBEXP	NML_EXE_MAR,NML_EXE_START,NML$PRM_CHKEXE ; Max areas
$NEXT

FIELD$
$SBEXP	NML_EXE_MBE,NML_EXE_START,NML$PRM_CHKEXE ; Max broadcast endnodes
$NEXT

FIELD$
$SBEXP	NML_EXE_MBR,NML_EXE_START,NML$PRM_CHKEXE ; Max broadcast routers
$NEXT

FIELD$
$SBEXP	NML_EXE_AMC,NML_EXE_START,NML$PRM_CHKEXE ; Area maximum cost
$NEXT

FIELD$
$SBEXP	NML_EXE_AMH,NML_EXE_START,NML$PRM_CHKEXE ; Area maximum hops
$NEXT

FIELD$
$SBEXP	NML_EXE_MBU,NML_EXE_START,NML$PRM_CHKEXE ; Max buffers
$NEXT

FIELD$
$SBEXP	NML_EXE_BUS,NML_EXE_START,NML$PRM_CHKEXE ; Buffer size
$NEXT

FIELD$
$SBEXP	NML_EXE_SBS,NML_EXE_START,NML$PRM_CHKEXE ; Segment buffer size
$NEXT

FIELD$
$SBEXP	NML_EXE_ITI,NML_EXE_START,NML$PRM_CHKEXE ; Incoming timer
$NEXT

FIELD$
$SBEXP	NML_EXE_OTI,NML_EXE_START,NML$PRM_CHKEXE ; Outgoing timer
$NEXT

FIELD$
$SBEXP	NML_EXE_PUS,NML_EXE_START,NML$PRM_CHKNOD ; Priv user id
$NEXT

FIELD$
$SBEXP	NML_EXE_PAC,NML_EXE_START,NML$PRM_CHKNOD ; Priv account
$NEXT

FIELD$
$SBEXP	NML_EXE_PPW,NML_EXE_START,NML$PRM_CHKNOD ; Priv password
$NEXT

FIELD$
$SBEXP	NML_EXE_NUS,NML_EXE_START,NML$PRM_CHKNOD ; Nonpriv user id
$NEXT

FIELD$
$SBEXP	NML_EXE_NAC,NML_EXE_START,NML$PRM_CHKNOD ; Nonpriv account
$NEXT

FIELD$
$SBEXP	NML_EXE_NPW,NML_EXE_START,NML$PRM_CHKNOD ; Nonpriv password
$NEXT

FIELD$
$SBEXP	NML_EXE_RPA,NML_EXE_START,NML$PRM_CHKNOD ; Receive password
$NEXT

FIELD$
$SBEXP	NML_EXE_TPA,NML_EXE_START,NML$PRM_CHKNOD ; Transmit password
$NEXT

FIELD$
$SBEXP	NML_NOD_ACC,NML_EXE_START,NML$PRM_CHKNOD ; Access
$NEXT

FIELD$
$SBEXP	NML_EXE_DAC,NML_EXE_START,NML$PRM_CHKEXE ; Default access
$NEXT

FIELD$
$SBEXP	NML_EXE_PIQ,NML_EXE_START,NML$PRM_CHKEXE ; Pipeline quota
$NEXT

FIELD$
$SBEXP	NML_NOD_PRX,NML_EXE_START,NML$PRM_CHKNOD ; Proxy login access
$NEXT

FIELD$
$SBEXP	NML_EXE_DPX,NML_EXE_START,NML$PRM_CHKEXE ; Default proxy login access
$NEXT

FIELD$
$SBEXP	NML_EXE_ALI,NML_EXE_START,NML$PRM_CHKEXE ; Alias node number
$NEXT

FIELD$
$WORD	NMA$C_PCNO_SLI,NML_PNA_ERR	; Service line
$WORD	NMA$C_PCNO_SPA,NML_PNA_ERR	; Service password
$WORD	NMA$C_PCNO_SDV,NML_PNA_ERR	; Service device
$WORD	NMA$C_PCNO_CPU,NML_PNA_ERR	; CPU type
$WORD	NMA$C_PCNO_HWA,NML_PNA_ERR	; Hardware address
$WORD	NMA$C_PCNO_SNV,NML_PNA_ERR	; Service node version
$WORD	NMA$C_PCNO_STY,NML_PNA_ERR	; Software type
$WORD	NMA$C_PCNO_SID,NML_PNA_ERR	; Software identification
$WORD	NMA$C_PCNO_LOA,NML_PNA_ERR	; Load file
$WORD	NMA$C_PCNO_SLO,NML_PNA_ERR	; Secondary loader
$WORD	NMA$C_PCNO_TLO,NML_PNA_ERR	; Tertiary loader
$WORD	NMA$C_PCNO_DFL,NML_PNA_ERR	; Diagnostic file
$WORD	NMA$C_PCNO_DUM,NML_PNA_ERR	; Dump file
$WORD	NMA$C_PCNO_SDU,NML_PNA_ERR	; Secondary dumper
$WORD	NMA$C_PCNO_DAD,NML_PNA_ERR	; Dump address
$WORD	NMA$C_PCNO_DCT,NML_PNA_ERR	; Dump count
$WORD	NMA$C_PCNO_IHO,NML_PNA_ERR	; Host
$WORD	NMA$C_PCNO_NLI,NML_PNA_ERR	; Line
$NEXT

FIELD$
$MATCH	2,NML_PTY_ERR			; Unrecognized parameter
$NULL	,NML_FOR_ERR			; Message format error

FIELD$	NML_EXE_STA			; State
$WORD	NMA$C_PCNO_STA,NPA$_EXIT,NML$PRM_CLEAR,-
	,,CPT$GK_PCNO_STA

FIELD$	NML_EXE_PHA			; Physical address on NI
$WORD	NMA$C_PCNO_PHA,NPA$_EXIT,NML$PRM_CLEAR,-
	,,CPT$GK_PCNO_PHA

FIELD$	NML_EXE_IDE			; Identification
$WORD	NMA$C_PCNO_IDE,NPA$_EXIT,NML$PRM_CLEAR,-
	,,CPT$GK_PCNO_IDE

FIELD$	NML_EXE_IHO			; Host
$WORD	NMA$C_PCNO_IHO,NPA$_EXIT,NML$PRM_CLEAR,-
	,,CPT$GK_PCNO_IHO

FIELD$	NML_EXE_ADD			; Address
$WORD	NMA$C_PCNO_ADD,NPA$_EXIT,NML$PRM_CLEAR,-
	,,CPT$GK_PCNO_AD$

FIELD$	NML_EXE_CTI			; Counter timer
$WORD	NMA$C_PCNO_CTI,NPA$_EXIT,NML$PRM_CLEAR,-
	,,CPT$GK_PCNO_CTI

FIELD$	NML_EXE_NNA			; Name
$WORD	NMA$C_PCNO_NNA,NPA$_EXIT,NML$PRM_CLEAR,-
	,,CPT$GK_PCNO_NNA

FIELD$	NML_EXE_MLK			; Maximum links
$WORD	NMA$C_PCNO_MLK,NPA$_EXIT,NML$PRM_CLEAR,-
	,,CPT$GK_PCNO_MLK

FIELD$	NML_EXE_DFA			; Delay factor
$WORD	NMA$C_PCNO_DFA,NPA$_EXIT,NML$PRM_CLEAR,-
	,,CPT$GK_PCNO_DFA

FIELD$	NML_EXE_DWE			; Delay weight
$WORD	NMA$C_PCNO_DWE,NPA$_EXIT,NML$PRM_CLEAR,-
	,,CPT$GK_PCNO_DWE

FIELD$	NML_EXE_IAT			; Inactivity timer
$WORD	NMA$C_PCNO_IAT,NPA$_EXIT,NML$PRM_CLEAR,-
	,,CPT$GK_PCNO_IAT

FIELD$	NML_EXE_RFA			; Retransmit factor
$WORD	NMA$C_PCNO_RFA,NPA$_EXIT,NML$PRM_CLEAR,-
	,,CPT$GK_PCNO_RFA

FIELD$	NML_EXE_ETY			; Executor type
$WORD	NMA$C_PCNO_ETY,NPA$_EXIT,NML$PRM_CLEAR,-
	,,CPT$GK_PCNO_ETY

FIELD$	NML_EXE_RTI			; Routing timer
$WORD	NMA$C_PCNO_RTI,NPA$_EXIT,NML$PRM_CLEAR,-
	,,CPT$GK_PCNO_RTI

FIELD$	NML_EXE_SAD			; Subaddresses
$WORD	NMA$C_PCNO_SAD,NPA$_EXIT,NML$PRM_CLEAR,-
	,,CPT$GK_PCNO_SAD

FIELD$	NML_EXE_BRT			; Broadcast routing timer
$WORD	NMA$C_PCNO_BRT,NPA$_EXIT,NML$PRM_CLEAR,-
	,,CPT$GK_PCNO_BRT

FIELD$	NML_EXE_MAD			; Maximum address
$WORD	NMA$C_PCNO_MAD,NPA$_EXIT,NML$PRM_CLEAR,-
	,,CPT$GK_PCNO_MAD

FIELD$	NML_EXE_MLN			; Maximum lines
$WORD	NMA$C_PCNO_MLN,NPA$_EXIT,NML$PRM_CLEAR,-
	,,CPT$GK_PCNO_MLN

FIELD$	NML_EXE_MCO			; Maximum cost
$WORD	NMA$C_PCNO_MCO,NPA$_EXIT,NML$PRM_CLEAR,-
	,,CPT$GK_PCNO_MCO

FIELD$	NML_EXE_MHO			; Maximum hops
$WORD	NMA$C_PCNO_MHO,NPA$_EXIT,NML$PRM_CLEAR,-
	,,CPT$GK_PCNO_MHO

FIELD$	NML_EXE_MVI			; Maximum visits
$WORD	NMA$C_PCNO_MVI,NPA$_EXIT,NML$PRM_CLEAR,-
	,,CPT$GK_PCNO_MVI

FIELD$	NML_EXE_MAR			; Maximum areas
$WORD	NMA$C_PCNO_MAR,NPA$_EXIT,NML$PRM_CLEAR,-
	,,CPT$GK_PCNO_MAR

FIELD$	NML_EXE_MBE			; Maximum broadcast endnodes
$WORD	NMA$C_PCNO_MBE,NPA$_EXIT,NML$PRM_CLEAR,-
	,,CPT$GK_PCNO_MBE

FIELD$	NML_EXE_MBR			; Maximum broadcast routers
$WORD	NMA$C_PCNO_MBR,NPA$_EXIT,NML$PRM_CLEAR,-
	,,CPT$GK_PCNO_MBR

FIELD$	NML_EXE_AMC			; Area maximum cost
$WORD	NMA$C_PCNO_AMC,NPA$_EXIT,NML$PRM_CLEAR,-
	,,CPT$GK_PCNO_AMC

FIELD$	NML_EXE_AMH			; Area maximum hops
$WORD	NMA$C_PCNO_AMH,NPA$_EXIT,NML$PRM_CLEAR,-
	,,CPT$GK_PCNO_AMH

FIELD$	NML_EXE_MBU			; Maximum buffers
$WORD	NMA$C_PCNO_MBU,NPA$_EXIT,NML$PRM_CLEAR,-
	,,CPT$GK_PCNO_MBU

FIELD$	NML_EXE_BUS			; Buffers
$WORD	NMA$C_PCNO_BUS,NPA$_EXIT,NML$PRM_CLEAR,-
	,,CPT$GK_PCNO_BUS

FIELD$	NML_EXE_SBS			; Segment buffer size
$WORD	NMA$C_PCNO_SBS,NPA$_EXIT,NML$PRM_CLEAR,-
	,,CPT$GK_PCNO_SBS

FIELD$	NML_EXE_ITI			; Incoming timer
$WORD	NMA$C_PCNO_ITI,NPA$_EXIT,NML$PRM_CLEAR,-
	,,CPT$GK_PCNO_ITI

FIELD$	NML_EXE_OTI			; Outgoing timer
$WORD	NMA$C_PCNO_OTI,NPA$_EXIT,NML$PRM_CLEAR,-
	,,CPT$GK_PCNO_OTI

FIELD$	NML_EXE_PUS			; Privileged user id
$WORD	NMA$C_PCNO_PUS,NPA$_EXIT,NML$PRM_CLEAR,-
	,,CPT$GK_PCNO_PUS

FIELD$	NML_EXE_PAC			; Privileged account
$WORD	NMA$C_PCNO_PAC,NPA$_EXIT,NML$PRM_CLEAR,-
	,,CPT$GK_PCNO_PAC

FIELD$	NML_EXE_PPW			; Privileged password
$WORD	NMA$C_PCNO_PPW,NPA$_EXIT,NML$PRM_CLEAR,-
	,,CPT$GK_PCNO_PPW

FIELD$	NML_EXE_NUS			; Nonprivileged user id
$WORD	NMA$C_PCNO_NUS,NPA$_EXIT,NML$PRM_CLEAR,-
	,,CPT$GK_PCNO_NUS

FIELD$	NML_EXE_NAC			; Nonprivileged account
$WORD	NMA$C_PCNO_NAC,NPA$_EXIT,NML$PRM_CLEAR,-
	,,CPT$GK_PCNO_NAC

FIELD$	NML_EXE_NPW			; Nonprivileged password
$WORD	NMA$C_PCNO_NPW,NPA$_EXIT,NML$PRM_CLEAR,-
	,,CPT$GK_PCNO_NPW

FIELD$	NML_EXE_RPA			; Receive password
$WORD	NMA$C_PCNO_RPA,NPA$_EXIT,NML$PRM_CLEAR,-
	,,CPT$GK_PCNO_RPA

FIELD$	NML_EXE_TPA			; Transmit password
$WORD	NMA$C_PCNO_TPA,NPA$_EXIT,NML$PRM_CLEAR,-
	,,CPT$GK_PCNO_TPA

FIELD$	NML_EXE_DAC			; Default access
$WORD	NMA$C_PCNO_DAC,NPA$_EXIT,NML$PRM_CLEAR,-
	,,CPT$GK_PCNO_DAC

FIELD$	NML_EXE_PIQ			; Pipeline quota
$WORD	NMA$C_PCNO_PIQ,NPA$_EXIT,NML$PRM_CLEAR,-
	,,CPT$GK_PCNO_PIQ

FIELD$	NML_EXE_DPX			; Default proxy login access
$WORD	NMA$C_PCNO_DPX,NPA$_EXIT,NML$PRM_CLEAR,-
	,,CPT$GK_PCNO_DPX

FIELD$	NML_EXE_ALI			; Alias node number
$WORD	NMA$C_PCNO_ALI,NPA$_EXIT,NML$PRM_CLEAR,-
	,,CPT$GK_PCNO_ALI

FIELD$					; End of executor parameter states

	.SBTTL	NML$NPA_CLPUNOD	Clear/Purge node parameter state table

;+
;	node
;-

IMSG$	NML$NPA_CLPUNOD

FIELD$
$EOM	,NPA$_EXIT,,NML$M_PRS_ALL,NML$GL_PRS_FLGS	 ; No parameters
$NEXT

FIELD$	NML_NOD_START
$EOM	,NPA$_EXIT				; Done
$SBEXP	NML_NOD_SLI,NML_NOD_START,NML$PRM_CHKREM ; Service line
$NEXT

FIELD$
$SBEXP	NML_NOD_SPA,NML_NOD_START,NML$PRM_CHKREM ; Service password
$NEXT

FIELD$
$SBEXP	NML_NOD_SDV,NML_NOD_START,NML$PRM_CHKREM ; Service device
$NEXT

FIELD$
$SBEXP	NML_NOD_CPU,NML_NOD_START,NML$PRM_CHKREM ; CPU
$NEXT

FIELD$
$SBEXP	NML_NOD_HWA,NML_NOD_START,NML$PRM_CHKREM ; Hardware address
$NEXT

FIELD$
$SBEXP	NML_NOD_SNV,NML_NOD_START,NML$PRM_CHKREM ; Service node version
$NEXT

FIELD$
$SBEXP	NML_NOD_DFL,NML_NOD_START,NML$PRM_CHKREM ; Diagnostic file
$NEXT

FIELD$
$SBEXP	NML_NOD_STY,NML_NOD_START,NML$PRM_CHKREM ; Software type
$NEXT

FIELD$
$SBEXP	NML_NOD_SID,NML_NOD_START,NML$PRM_CHKREM ; Software identification
$NEXT

FIELD$
$SBEXP	NML_NOD_LOA,NML_NOD_START,NML$PRM_CHKREM ; Load file
$NEXT

FIELD$
$SBEXP	NML_NOD_SLO,NML_NOD_START,NML$PRM_CHKREM ; Secondary loader
$NEXT

FIELD$
$SBEXP	NML_NOD_TLO,NML_NOD_START,NML$PRM_CHKREM ; Tertiary loader
$NEXT

FIELD$
$SBEXP	NML_NOD_DUM,NML_NOD_START,NML$PRM_CHKREM ; Dump file
$NEXT

FIELD$
$SBEXP	NML_NOD_SDU,NML_NOD_START,NML$PRM_CHKREM ; Secondary dumper
$NEXT

FIELD$
$SBEXP	NML_NOD_DAD,NML_NOD_START,NML$PRM_CHKREM ; Dump address
$NEXT

FIELD$
$SBEXP	NML_NOD_DCT,NML_NOD_START,NML$PRM_CHKREM ; Dump count
$NEXT

FIELD$
$SBEXP	NML_NOD_IHO,NML_NOD_START,NML$PRM_CHKREM ; Host
$NEXT

FIELD$
$SBEXP	NML_NOD_CTI,NML_NOD_START,NML$PRM_CHKREM ; Counter timer
$NEXT

FIELD$
$SBEXP	NML_NOD_NNA,NML_NOD_START,NML$PRM_CHKREM ; Name
$NEXT

FIELD$
$SBEXP	NML_NOD_NLI,NML_NOD_LOOPNA,NML$PRM_CHKLOO ; Line
$NEXT

FIELD$
$SBEXP	NML_NOD_PUS,NML_NOD_START,NML$PRM_CHKREM ; Privileged user id
$NEXT

FIELD$
$SBEXP	NML_NOD_PAC,NML_NOD_START,NML$PRM_CHKREM ; Privileged account
$NEXT

FIELD$
$SBEXP	NML_NOD_PPW,NML_NOD_START,NML$PRM_CHKREM ; Privileged password
$NEXT

FIELD$
$SBEXP	NML_NOD_NUS,NML_NOD_START,NML$PRM_CHKREM ; Nonprivileged user id
$NEXT

FIELD$
$SBEXP	NML_NOD_NAC,NML_NOD_START,NML$PRM_CHKREM ; Nonprivileged account
$NEXT

FIELD$
$SBEXP	NML_NOD_NPW,NML_NOD_START,NML$PRM_CHKREM ; Nonprivileged password
$NEXT

FIELD$
$SBEXP	NML_NOD_RPA,NML_NOD_START,NML$PRM_CHKREM ; Receive password
$NEXT

FIELD$
$SBEXP	NML_NOD_TPA,NML_NOD_START,NML$PRM_CHKREM ; Transmit password
$NEXT

FIELD$
$SBEXP	NML_NOD_ACC,NML_NOD_START,NML$PRM_CHKREM ; Access
$NEXT

FIELD$
$SBEXP	NML_NOD_PRX,NML_NOD_START,NML$PRM_CHKREM ; Proxy login access
$NEXT

;
; Skip invalid loop node parameter list
;
FIELD$
$NULL	,NML_NOD_REMPNA
;
; Parameters that are not applicable to loop nodes.
;
FIELD$	NML_NOD_LOOPNA
$WORD	NMA$C_PCNO_SLI,NML_PNA_ERR	; Service line
$WORD	NMA$C_PCNO_SPA,NML_PNA_ERR	; Service password
$WORD	NMA$C_PCNO_SDV,NML_PNA_ERR	; Service device
$WORD	NMA$C_PCNO_CPU,NML_PNA_ERR	; CPU type
$WORD	NMA$C_PCNO_HWA,NML_PNA_ERR	; Hardware address on NI
$WORD	NMA$C_PCNO_SNV,NML_PNA_ERR	; Service node version
$WORD	NMA$C_PCNO_STY,NML_PNA_ERR	; Software type
$WORD	NMA$C_PCNO_SID,NML_PNA_ERR	; Software identification
$WORD	NMA$C_PCNO_LOA,NML_PNA_ERR	; Load file
$WORD	NMA$C_PCNO_SLO,NML_PNA_ERR	; Secondary loader
$WORD	NMA$C_PCNO_TLO,NML_PNA_ERR	; Tertiary loader
$WORD	NMA$C_PCNO_DFL,NML_PNA_ERR	; Diagnostic file
$WORD	NMA$C_PCNO_DUM,NML_PNA_ERR	; Dump file
$WORD	NMA$C_PCNO_SDU,NML_PNA_ERR	; Secondary dumper
$WORD	NMA$C_PCNO_DAD,NML_PNA_ERR	; Dump address
$WORD	NMA$C_PCNO_DCT,NML_PNA_ERR	; Dump count
$WORD	NMA$C_PCNO_IHO,NML_PNA_ERR	; Host
$WORD	NMA$C_PCNO_CTI,NML_PNA_ERR	; Counter timer
$WORD	NMA$C_PCNO_NNA,NML_PNA_ERR	; Name
$WORD	NMA$C_PCNO_ADD,NML_PNA_ERR	; Address
$WORD	NMA$C_PCNO_PUS,NML_PNA_ERR	; Privileged user id
$WORD	NMA$C_PCNO_PAC,NML_PNA_ERR	; Privileged account
$WORD	NMA$C_PCNO_PPW,NML_PNA_ERR	; Privileged password
$WORD	NMA$C_PCNO_NUS,NML_PNA_ERR	; Nonprivileged user id
$WORD	NMA$C_PCNO_NAC,NML_PNA_ERR	; Nonprivileged account
$WORD	NMA$C_PCNO_NPW,NML_PNA_ERR	; Nonprivileged password
$WORD	NMA$C_PCNO_RPA,NML_PNA_ERR	; Receive password
$WORD	NMA$C_PCNO_TPA,NML_PNA_ERR	; Transmit password
$NEXT
;
; Parameters that are not applicable to remote nodes.
;
FIELD$	NML_NOD_REMPNA
$WORD	NMA$C_PCNO_STA,NML_PNA_ERR	; State
$WORD	NMA$C_PCNO_PHA,NML_PNA_ERR	; Physical address on NI
$WORD	NMA$C_PCNO_IDE,NML_PNA_ERR	; Identification
$WORD	NMA$C_PCNO_ITI,NML_PNA_ERR	; Incoming timer
$WORD	NMA$C_PCNO_OTI,NML_PNA_ERR	; Outgoing timer
$WORD	NMA$C_PCNO_MLK,NML_PNA_ERR	; Maximum links
$WORD	NMA$C_PCNO_DFA,NML_PNA_ERR	; Delay factor
$WORD	NMA$C_PCNO_DWE,NML_PNA_ERR	; Delay weight
$WORD	NMA$C_PCNO_IAT,NML_PNA_ERR	; Inactivity timer
$WORD	NMA$C_PCNO_RFA,NML_PNA_ERR	; Retransmit factor
$WORD	NMA$C_PCNO_ETY,NML_PNA_ERR	; Executor type
$WORD	NMA$C_PCNO_RTI,NML_PNA_ERR	; Retransmit timer
$WORD	NMA$C_PCNO_BRT,NML_PNA_ERR	; Broadcast routine timer
$WORD	NMA$C_PCNO_MAD,NML_PNA_ERR	; Maximum address
$WORD	NMA$C_PCNO_MLN,NML_PNA_ERR	; Maximum lines
$WORD	NMA$C_PCNO_MCO,NML_PNA_ERR	; Maximum cost
$WORD	NMA$C_PCNO_MHO,NML_PNA_ERR	; Maximum hops
$WORD	NMA$C_PCNO_MVI,NML_PNA_ERR	; Maximum visits
$WORD	NMA$C_PCNO_MAR,NML_PNA_ERR	; Maximum areas
$WORD	NMA$C_PCNO_MBE,NML_PNA_ERR	; Maximum broadcast endnodes
$WORD	NMA$C_PCNO_MBR,NML_PNA_ERR	; Maximum broadcast routers
$WORD	NMA$C_PCNO_AMC,NML_PNA_ERR	; Area maximum cost
$WORD	NMA$C_PCNO_AMH,NML_PNA_ERR	; Area maximum hops
$WORD	NMA$C_PCNO_MBU,NML_PNA_ERR	; Maximum buffers
$WORD	NMA$C_PCNO_BUS,NML_PNA_ERR	; Buffer size
$WORD	NMA$C_PCNO_SBS,NML_PNA_ERR	; Segment buffer size
$WORD	NMA$C_PCNO_DAC,NML_PNA_ERR	; Access
$WORD	NMA$C_PCNO_DPX,NML_PNA_ERR	; Default proxy login access
$WORD	NMA$C_PCNO_ALI,NML_PNA_ERR	; Alias node number
$NEXT

FIELD$	NML_NOD_EOM
$EOM	,NPA$_EXIT			; End of message
$MATCH	2,NML_PTY_ERR			; Unrecognized parameter
$NULL	,NML_FOR_ERR			; Message format error
;
; Parameter subexpressions.
;
FIELD$	NML_NOD_SLI			; Service line
$WORD	NMA$C_PCNO_SLI,NPA$_EXIT,NML$PRM_CLEAR,-
	,,CPT$GK_PCNO_SLI 

FIELD$	NML_NOD_SPA			; Service password
$WORD	NMA$C_PCNO_SPA,NPA$_EXIT,NML$PRM_CLEAR,-
	,,CPT$GK_PCNO_SPA 

FIELD$	NML_NOD_SDV			; Service device
$WORD	NMA$C_PCNO_SDV,NPA$_EXIT,NML$PRM_CLEAR,-
	,,CPT$GK_PCNO_SDV 

FIELD$	NML_NOD_CPU			; CPU type
$WORD	NMA$C_PCNO_CPU,NPA$_EXIT,NML$PRM_CLEAR,-
	,,CPT$GK_PCNO_CPU 

FIELD$	NML_NOD_HWA			; Hardware address
$WORD	NMA$C_PCNO_HWA,NPA$_EXIT,NML$PRM_CLEAR,-
	,,CPT$GK_PCNO_HWA

FIELD$	NML_NOD_SNV			; Service node version
$WORD	NMA$C_PCNO_SNV,NPA$_EXIT,NML$PRM_CLEAR,-
	,,CPT$GK_PCNO_SNV

FIELD$	NML_NOD_DFL			; Diagnostic file
$WORD	NMA$C_PCNO_DFL,NPA$_EXIT,NML$PRM_CLEAR,-
	,,CPT$GK_PCNO_DFL

FIELD$	NML_NOD_STY			; Software type
$WORD	NMA$C_PCNO_STY,NPA$_EXIT,NML$PRM_CLEAR,-
	,,CPT$GK_PCNO_STY 

FIELD$	NML_NOD_SID			; Software id
$WORD	NMA$C_PCNO_SID,NPA$_EXIT,NML$PRM_CLEAR,-
	,,CPT$GK_PCNO_SID 

FIELD$	NML_NOD_LOA			; Load file
$WORD	NMA$C_PCNO_LOA,NPA$_EXIT,NML$PRM_CLEAR,-
	,,CPT$GK_PCNO_LOA 

FIELD$	NML_NOD_SLO			; Secondary loader
$WORD	NMA$C_PCNO_SLO,NPA$_EXIT,NML$PRM_CLEAR,-
	,,CPT$GK_PCNO_SLO 

FIELD$	NML_NOD_TLO			; Tertiary loader
$WORD	NMA$C_PCNO_TLO,NPA$_EXIT,NML$PRM_CLEAR,-
	,,CPT$GK_PCNO_TLO 

FIELD$	NML_NOD_DUM			; Dump file
$WORD	NMA$C_PCNO_DUM,NPA$_EXIT,NML$PRM_CLEAR,-
	,,CPT$GK_PCNO_DUM 

FIELD$	NML_NOD_SDU			; Secondary dumper
$WORD	NMA$C_PCNO_SDU,NPA$_EXIT,NML$PRM_CLEAR,-
	,,CPT$GK_PCNO_SDU 

FIELD$	NML_NOD_DAD			; Dump address
$WORD	NMA$C_PCNO_DAD,NPA$_EXIT,NML$PRM_CLEAR,-
	,,CPT$GK_PCNO_DAD 

FIELD$	NML_NOD_DCT			; Dump count
$WORD	NMA$C_PCNO_DCT,NPA$_EXIT,NML$PRM_CLEAR,-
	,,CPT$GK_PCNO_DCT 

FIELD$	NML_NOD_IHO			; Host
$WORD	NMA$C_PCNO_IHO,NPA$_EXIT,NML$PRM_CLEAR,-
	,,CPT$GK_PCNO_IHO

FIELD$	NML_NOD_CTI			; Counter timer
$WORD	NMA$C_PCNO_CTI,NPA$_EXIT,NML$PRM_CLEAR,-
	,,CPT$GK_PCNO_CTI 

FIELD$	NML_NOD_NNA			; Name
$WORD	NMA$C_PCNO_NNA,NPA$_EXIT,NML$PRM_CLEAR,-
	,,CPT$GK_PCNO_NNA 

FIELD$	NML_NOD_NLI			; Line
$WORD	NMA$C_PCNO_NLI,NPA$_EXIT,NML$PRM_CLEAR,-
	,,CPT$GK_PCNO_NLI

FIELD$	NML_NOD_PUS			; Privileged user id
$WORD	NMA$C_PCNO_PUS,NPA$_EXIT,NML$PRM_CLEAR,-
	,,CPT$GK_PCNO_PUS

FIELD$	NML_NOD_PAC			; Privileged account
$WORD	NMA$C_PCNO_PAC,NPA$_EXIT,NML$PRM_CLEAR,-
	,,CPT$GK_PCNO_PAC

FIELD$	NML_NOD_PPW			; Privileged password
$WORD	NMA$C_PCNO_PPW,NPA$_EXIT,NML$PRM_CLEAR,-
	,,CPT$GK_PCNO_PPW

FIELD$	NML_NOD_NUS			; Nonprivileged user id
$WORD	NMA$C_PCNO_NUS,NPA$_EXIT,NML$PRM_CLEAR,-
	,,CPT$GK_PCNO_NUS

FIELD$	NML_NOD_NAC			; Nonprivileged account
$WORD	NMA$C_PCNO_NAC,NPA$_EXIT,NML$PRM_CLEAR,-
	,,CPT$GK_PCNO_NAC

FIELD$	NML_NOD_NPW			; Nonprivileged password
$WORD	NMA$C_PCNO_NPW,NPA$_EXIT,NML$PRM_CLEAR,-
	,,CPT$GK_PCNO_NPW

FIELD$	NML_NOD_RPA			; Receive password
$WORD	NMA$C_PCNO_RPA,NPA$_EXIT,NML$PRM_CLEAR,-
	,,CPT$GK_PCNO_RPA 

FIELD$	NML_NOD_TPA			; Transmit password
$WORD	NMA$C_PCNO_TPA,NPA$_EXIT,NML$PRM_CLEAR,-
	,,CPT$GK_PCNO_TPA 

FIELD$	NML_NOD_ACC			; Access
$WORD	NMA$C_PCNO_ACC,NPA$_EXIT,NML$PRM_CLEAR,-
	,,CPT$GK_PCNO_ACC

FIELD$	NML_NOD_PRX			; Proxy login access
$WORD	NMA$C_PCNO_PRX,NPA$_EXIT,NML$PRM_CLEAR,-
	,,CPT$GK_PCNO_PRX

FIELD$					; End of node parameter states

	.SBTTL	NML$NPA_CLPU_X25_ACCESS	  Clear/Purge X25 Access Module
;++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
;	X-25 Access Module Network State Table
;------------------------------------------------------------

IMSG$	NML$NPA_CLPU_X25_ACCESS

FIELD$
$EOM	,NPA$_EXIT,,NML$M_PRS_ALL,NML$GL_PRS_FLGS		;No parameters
$NEXT

FIELD$	NML_ACCESS_PARAMS
$EOM	,NPA$_EXIT
$NEXT

FIELD$
$SBEXP	NML_ACCESS_NOD,NML_ACCESS_PARAMS		; Node id
$NEXT

FIELD$
$SBEXP	NML_ACCESS_USR,NML_ACCESS_PARAMS		; User
$NEXT

FIELD$
$SBEXP	NML_ACCESS_PSW,NML_ACCESS_PARAMS		; Password
$NEXT

FIELD$
$SBEXP	NML_ACCESS_ACC,NML_ACCESS_PARAMS		; Account
$NEXT

FIELD$
$MATCH	2,NML_PTY_ERR				; Unrecognized parameter type
$NULL	,NML_FOR_ERR

;
; Subexpressions for X25 access module parameters.
;
FIELD$	NML_ACCESS_NOD			; X-25 Access Node id
$WORD	NMA$C_PCXA_NOD,NPA$_EXIT,NML$PRM_CLEAR -
		,,,CPT$GK_PCXA_NOD

FIELD$	NML_ACCESS_USR			; X-25 Access User
$WORD	NMA$C_PCXA_USR,NPA$_EXIT,NML$PRM_CLEAR -
		,,,CPT$GK_PCXA_USR

FIELD$	NML_ACCESS_PSW			; X-25 Access Password
$WORD	NMA$C_PCXA_PSW,NPA$_EXIT,NML$PRM_CLEAR -
		,,,CPT$GK_PCXA_PSW

FIELD$	NML_ACCESS_ACC			; X-25 Access Account
$WORD	NMA$C_PCXA_ACC,NPA$_EXIT,NML$PRM_CLEAR -
		,,,CPT$GK_PCXA_ACC

FIELD$

	.SBTTL	NML$NPA_CLPUMOD_PROTOCOL	Clear/Purge Protocol Module
;++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
;	X-25 Protocol Module Network State Table
;------------------------------------------------------------

IMSG$	NML$NPA_CLPU_PROT_NET

FIELD$
$EOM	,NPA$_EXIT,,NML$M_PRS_ALL,NML$GL_PRS_FLGS		;No parameters
$NEXT

FIELD$	NML_PROTOCOL_PARAMS
$EOM	,NPA$_EXIT
$NEXT

FIELD$
$SBEXP	NML_PROTOCOL_DBL,NML_PROTOCOL_PARAMS		; Default block
$NEXT

FIELD$
$SBEXP	NML_PROTOCOL_DWI,NML_PROTOCOL_PARAMS		; Default window
$NEXT

FIELD$
$SBEXP	NML_PROTOCOL_MBL,NML_PROTOCOL_PARAMS		; Maximum block
$NEXT

FIELD$
$SBEXP	NML_PROTOCOL_MWI,NML_PROTOCOL_PARAMS		; Maximum window
$NEXT

FIELD$
$SBEXP	NML_PROTOCOL_MCL,NML_PROTOCOL_PARAMS		; Maximum clears
$NEXT

FIELD$
$SBEXP	NML_PROTOCOL_MRS,NML_PROTOCOL_PARAMS		; Maximum resets
$NEXT

FIELD$
$SBEXP	NML_PROTOCOL_MST,NML_PROTOCOL_PARAMS		; Maximum restarts
$NEXT

FIELD$
$SBEXP	NML_PROTOCOL_CAT,NML_PROTOCOL_PARAMS		; Call timer
$NEXT

FIELD$
$SBEXP	NML_PROTOCOL_CLT,NML_PROTOCOL_PARAMS		; Clear timer
$NEXT

FIELD$
$SBEXP	NML_PROTOCOL_RST,NML_PROTOCOL_PARAMS		; Reset timer
$NEXT

FIELD$
$SBEXP	NML_PROTOCOL_STT,NML_PROTOCOL_PARAMS		; Restart timer
$NEXT

FIELD$
$SBEXP	NML_PROTOCOL_MNS,NML_PROTOCOL_PARAMS		; Multinetwork support
$NEXT

;
; X.25 Protocol parameters that are not allowed with Network parameters.
;
FIELD$
$SBEXP	NML_CHK_DTE_PARAMS
$NEXT

FIELD$
$SBEXP	NML_CHK_GRP_PARAMS
$NEXT

FIELD$
$MATCH	2,NML_PTY_ERR				; Unrecognized parameter type
$NULL	,NML_FOR_ERR

;
; Subexpressions for protocol module parameters.
;
FIELD$	NML_PROTOCOL_DBL			; X-25 Protocol Default Block
$WORD	NMA$C_PCXP_DBL,NPA$_EXIT,NML$PRM_CLEAR -
		,,,CPT$GK_PCXP_DBL

FIELD$	NML_PROTOCOL_DWI			; X-25 Protocol Default Window
$WORD	NMA$C_PCXP_DWI,NPA$_EXIT,NML$PRM_CLEAR -
		,,,CPT$GK_PCXP_DWI

FIELD$	NML_PROTOCOL_MBL			; X-25 Protocol Maximum Block
$WORD	NMA$C_PCXP_MBL,NPA$_EXIT,NML$PRM_CLEAR -
		,,,CPT$GK_PCXP_MBL

FIELD$	NML_PROTOCOL_MWI			; X-25 Protocol Maximum Window
$WORD	NMA$C_PCXP_MWI,NPA$_EXIT,NML$PRM_CLEAR -
		,,,CPT$GK_PCXP_MWI

FIELD$	NML_PROTOCOL_MCL			; X-25 Protocol Maximum Clears
$WORD	NMA$C_PCXP_MCL,NPA$_EXIT,NML$PRM_CLEAR -
		,,,CPT$GK_PCXP_MCL

FIELD$	NML_PROTOCOL_MRS			; X-25 Protocol Maximum resets
$WORD	NMA$C_PCXP_MRS,NPA$_EXIT,NML$PRM_CLEAR -
		,,,CPT$GK_PCXP_MRS

FIELD$	NML_PROTOCOL_MST			; X-25 Protocol Maximum Restarts
$WORD	NMA$C_PCXP_MST,NPA$_EXIT,NML$PRM_CLEAR -
		,,,CPT$GK_PCXP_MST

FIELD$	NML_PROTOCOL_CAT			; X-25 Protocol call timer
$WORD	NMA$C_PCXP_CAT,NPA$_EXIT,NML$PRM_CLEAR -
		,,,CPT$GK_PCXP_CAT

FIELD$	NML_PROTOCOL_CLT			; X-25 Protocol clear timer
$WORD	NMA$C_PCXP_CLT,NPA$_EXIT,NML$PRM_CLEAR -
		,,,CPT$GK_PCXP_CLT

FIELD$	NML_PROTOCOL_RST			; X-25 Protocol reset timer
$WORD	NMA$C_PCXP_RST,NPA$_EXIT,NML$PRM_CLEAR -
		,,,CPT$GK_PCXP_RST

FIELD$	NML_PROTOCOL_STT			; X-25 Protocol restart timer
$WORD	NMA$C_PCXP_STT,NPA$_EXIT,NML$PRM_CLEAR -
		,,,CPT$GK_PCXP_STT

FIELD$	NML_PROTOCOL_MNS			; X-25 Protocol multinetwork support
$WORD	NMA$C_PCXP_MNS,NPA$_EXIT,NML$PRM_CLEAR -
		,,,CPT$GK_PCXP_MNS

FIELD$						; End of Protocol Module params

;++++++++++++++++
;	X-25 Protocol Module DTE State Table
;----------------

IMSG$	NML$NPA_CLPU_PROT_DTE

FIELD$
$EOM	,NPA$_EXIT,,NML$M_PRS_ALL,NML$GL_PRS_FLGS		;No parameters
$NEXT

FIELD$	NML_DTE_LOOP
$EOM	,NPA$_EXIT
$NEXT

FIELD$
$SBEXP	NML_PROTOCOL_STA,NML_DTE_LOOP		; State
$NEXT

FIELD$
$SBEXP	NML_PROTOCOL_CTM,NML_DTE_LOOP		; Counter timer
$NEXT

FIELD$
$SBEXP	NML_PROTOCOL_LIN,NML_DTE_LOOP		; Line
$NEXT

FIELD$
$SBEXP	NML_PROTOCOL_CHN,NML_DTE_LOOP		; Channels
$NEXT

FIELD$
$SBEXP	NML_PROTOCOL_MCI,NML_DTE_LOOP		; Maximum circuits
$NEXT

;
; Check for X.25 Protocol parameters that are not allowed with DTE.
;
FIELD$
$SBEXP	NML_CHK_NET_PARAMS
$NEXT

FIELD$
$SBEXP	NML_CHK_GRP_PARAMS
$NEXT

FIELD$
$MATCH	2,NML_PTY_ERR				; Unrecognized parameter type
$NULL	,NML_FOR_ERR



FIELD$	NML_PROTOCOL_STA			; X-25 DTE State
$WORD	NMA$C_PCXP_STA,NPA$_EXIT,NML$PRM_CLEAR -
		,,,CPT$GK_PCXP_STA

FIELD$	NML_PROTOCOL_CTM			; X-25 DTE Counter timer
$WORD	NMA$C_PCXP_CTM,NPA$_EXIT,NML$PRM_CLEAR -
		,,,CPT$GK_PCXP_CTM

FIELD$	NML_PROTOCOL_LIN			; X-25 DTE Line
$WORD	NMA$C_PCXP_LIN,NPA$_EXIT,NML$PRM_CLEAR -
		,,,CPT$GK_PCXP_LIN

FIELD$	NML_PROTOCOL_CHN			; X-25 DTE Channels
$WORD	NMA$C_PCXP_CHN,NPA$_EXIT,NML$PRM_CLEAR -
		,,,CPT$GK_PCXP_CHN

FIELD$	NML_PROTOCOL_MCI			; X-25 DTE Maximum circuits
$WORD	NMA$C_PCXP_MCI,NPA$_EXIT,NML$PRM_CLEAR -
		,,,CPT$GK_PCXP_MCI

FIELD$

;+++++++++++++++++
;	X-25 Protocol Group State Table
;-----------------

IMSG$	NML$NPA_CLPU_PROT_GRP

FIELD$
$EOM	,NPA$_EXIT,,NML$M_PRS_ALL,NML$GL_PRS_FLGS ; No parameters, do change ALL
$NEXT

;
; A group DTE entry must be completely cleared.  Number and type are not
; individually clearable or definable. 
; If there are any other X-25 protocol parameters in the message, return
; a grouping error.  Otherwise, return an unrecognized parameter error.
;
FIELD$
$SBEXP	NML_CHK_DTE_PARAMS
$NEXT

FIELD$
$SBEXP	NML_CHK_NET_PARAMS
$NEXT

FIELD$
$EOM	,NPA$_EXIT
$MATCH	2,NML_PTY_ERR				; Unrecognized parameter type
$NULL	,NML_FOR_ERR

FIELD$

;
; Subexpressions for checking grouping errors for X-25 protocol module
; changes.
;
FIELD$	NML_CHK_DTE_PARAMS
$WORD	NMA$C_PCXP_STA,NML_PGP_ERR		; DTE State
$WORD	NMA$C_PCXP_CTM,NML_PGP_ERR		; DTE Counter Timer
$WORD	NMA$C_PCXP_DTE,NML_PGP_ERR		; DTE ID
$WORD	NMA$C_PCXP_LIN,NML_PGP_ERR		; DTE Line
$WORD	NMA$C_PCXP_MCI,NML_PGP_ERR		; DTE Maximum circuits
$NULL	,NPA$_EXIT
$NEXT

FIELD$	NML_CHK_GRP_PARAMS
$WORD	NMA$C_PCXP_GRP,NML_PGP_ERR		; Group ID
$WORD	NMA$C_PCXP_GDT,NML_PGP_ERR		; Group DTE
$WORD	NMA$C_PCXP_GNM,NML_PGP_ERR		; Group number
$WORD	NMA$C_PCXP_GTY,NML_PGP_ERR		; Group type
$NULL	,NPA$_EXIT
$NEXT

FIELD$	NML_CHK_NET_PARAMS
$WORD	NMA$C_PCXP_NET,NML_PGP_ERR		; Network ID
$WORD	NMA$C_PCXP_DBL,NML_PGP_ERR		; Network default block
$WORD	NMA$C_PCXP_DWI,NML_PGP_ERR		; Network default window
$WORD	NMA$C_PCXP_MBL,NML_PGP_ERR		; Network Maximum block
$WORD	NMA$C_PCXP_MWI,NML_PGP_ERR		; Network Maximum window
$WORD	NMA$C_PCXP_MCL,NML_PGP_ERR		; Network Maximum clears
$WORD	NMA$C_PCXP_MRS,NML_PGP_ERR		; Network Maximum resets
$WORD	NMA$C_PCXP_MST,NML_PGP_ERR		; Network maximum restarts
$WORD	NMA$C_PCXP_CAT,NML_PGP_ERR		; Network call timer
$WORD	NMA$C_PCXP_CLT,NML_PGP_ERR		; Network clear timer
$WORD	NMA$C_PCXP_RST,NML_PGP_ERR		; Network reset timer
$WORD	NMA$C_PCXP_STT,NML_PGP_ERR		; Network restart timer
$WORD	NMA$C_PCXP_MNS,NML_PGP_ERR		; Network multinetwork support

FIELD$

	.SBTTL	NML$NPA_CLPU_X25_SERVER	Clear/Purge Server Module
;++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
;	X-25 Server Module State Table
;	The NICE parameters must all be in one of two groups: 
;		Server module parameters
;		Destination parameters
;------------------------------------------------------------

IMSG$	NML$NPA_CLPU_X25_SERV

FIELD$
$EOM	,NPA$_EXIT,,NML$M_PRS_ALL,NML$GL_PRS_FLGS		;No parameters
$NEXT

FIELD$	NML_X25_SERV_PARAMS
$EOM	,NPA$_EXIT
$NEXT

FIELD$	
$SBEXP	NML_X25_SERV_CTM,NML_X25_SERV_PARAMS	; Counter timer
$NEXT

FIELD$	
$SBEXP	NML_X25_SERV_MCI,NML_X25_SERV_PARAMS	; Maximum circuits
$NEXT

;
;  Check for grouping errors (destination parameters)
;
FIELD$
$NULL	,NML_SERV_GROUP_ERRS
$NEXT


;
;	Subexpressions for Server Module parameters
;
FIELD$	NML_X25_SERV_CTM			; X-25 Server counter timer
$WORD	NMA$C_PCXS_CTM,NPA$_EXIT,NML$PRM_CLEAR -
		,,,CPT$GK_PCXS_CTM

FIELD$	NML_X25_SERV_MCI			; X-25 Server maximum circuits
$WORD	NMA$C_PCXS_MCI,NPA$_EXIT,NML$PRM_CLEAR -
		,,,CPT$GK_PCXS_MCI

FIELD$						; End of Server Module parameters



;+++++++++++++++++++++++++++++++++++++++++++
;	X-25 Server Destination State Table
;-------------------------------------------
IMSG$	NML$NPA_CLPU_X25_SERV_DEST

FIELD$	
$EOM	,NPA$_EXIT,,NML$M_PRS_ALL,NML$GL_PRS_FLGS		; No parameters, do change ALL
$NEXT

FIELD$	NML_X25_DEST_LOOP
$EOM	,NPA$_EXIT
$NEXT

FIELD$
$SBEXP	NML_X25_DEST_USR,NML_X25_DEST_LOOP; Destination Username
$NEXT

FIELD$
$SBEXP	NML_X25_DEST_SPW,NML_X25_DEST_LOOP; Destination Password to Set
$NEXT

FIELD$
$SBEXP	NML_X25_DEST_ACC,NML_X25_DEST_LOOP; Destination Account
$NEXT

FIELD$
$SBEXP	NML_X25_DEST_PRI,NML_X25_DEST_LOOP; Destination Priority
$NEXT

FIELD$
$SBEXP	NML_X25_DEST_CMK,NML_X25_DEST_LOOP; Destination Call Mask
$NEXT

FIELD$
$SBEXP	NML_X25_DEST_CVL,NML_X25_DEST_LOOP; Destination Call Value
$NEXT

FIELD$
$SBEXP	NML_X25_DEST_GRP,NML_X25_DEST_LOOP; Destination Group
$NEXT

FIELD$
$SBEXP	NML_X25_DEST_NOD,NML_X25_DEST_LOOP; Destination Node
$NEXT

FIELD$
$SBEXP	NML_X25_DEST_NUM,NML_X25_DEST_LOOP; Destination Number
$NEXT

FIELD$
$SBEXP	NML_X25_DEST_SAD,NML_X25_DEST_LOOP; Destination Subaddresses
$NEXT

FIELD$
$SBEXP	NML_X25_DEST_FIL,NML_X25_DEST_LOOP; Destination Object file
$NEXT

;
;  Check for grouping errors (Server parameters)
;
FIELD$
$NULL	,NML_DEST_GROUP_ERR
$NEXT

;
;  Subexpressions for Server Destinations
;
FIELD$	NML_X25_DEST_USR			; Destination Username
$WORD	NMA$C_PCXS_USR,NPA$_EXIT,NML$PRM_CLEAR -
		,,,CPT$GK_PCXS_USR

FIELD$	NML_X25_DEST_SPW			; Destination Password to set
$WORD	NMA$C_PCXS_SPW,NPA$_EXIT,NML$PRM_CLEAR -
		,,,CPT$GK_PCXS_SPW

FIELD$	NML_X25_DEST_ACC			; Destination Account
$WORD	NMA$C_PCXS_ACC,NPA$_EXIT,NML$PRM_CLEAR -
		,,,CPT$GK_PCXS_ACC

FIELD$	NML_X25_DEST_PRI			; Destination Priority
$WORD	NMA$C_PCXS_PRI,NPA$_EXIT,NML$PRM_CLEAR -
		,,,CPT$GK_PCXS_PRI

FIELD$	NML_X25_DEST_CMK			; Destination Call mask
$WORD	NMA$C_PCXS_CMK,NPA$_EXIT,NML$PRM_CLEAR -
		,,,CPT$GK_PCXS_CMK

FIELD$	NML_X25_DEST_CVL			; Destination Call value
$WORD	NMA$C_PCXS_CVL,NPA$_EXIT,NML$PRM_CLEAR -
		,,,CPT$GK_PCXS_CVL

FIELD$	NML_X25_DEST_GRP			; Destination Group
$WORD	NMA$C_PCXS_GRP,NPA$_EXIT,NML$PRM_CLEAR -
		,,,CPT$GK_PCXS_GRP

FIELD$	NML_X25_DEST_NOD			; Destination Node
$WORD	NMA$C_PCXS_NOD,NPA$_EXIT,NML$PRM_CLEAR -
		,,,CPT$GK_PCXS_NOD

FIELD$	NML_X25_DEST_NUM			; Destination Number
$WORD	NMA$C_PCXS_NUM,NPA$_EXIT,NML$PRM_CLEAR -
		,,,CPT$GK_PCXS_NUM

FIELD$	NML_X25_DEST_SAD			; Destination Subaddresses
$WORD	NMA$C_PCXS_SAD,NPA$_EXIT,NML$PRM_CLEAR -
		,,,CPT$GK_PCXS_SAD

FIELD$	NML_X25_DEST_FIL			; Destination Object File
$WORD	NMA$C_PCXS_FIL,NPA$_EXIT,NML$PRM_CLEAR -
		,,,CPT$GK_PCXS_FIL

FIELD$

	.SBTTL	NML$NPA_CLPU_TRACE	Clear/Purge Trace Module
;++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
;	X-25 Trace Module State Table
;	The NICE parameters must all be in one of two groups: 
;		Trace module parameters
;		Tracepoint parameters
;------------------------------------------------------------

IMSG$	NML$NPA_CLPU_TRACE

FIELD$
$EOM	,NPA$_EXIT,,NML$M_PRS_ALL,NML$GL_PRS_FLGS		;No parameters
$NEXT

FIELD$	NML_TRACE_PARAMS
$EOM	,NPA$_EXIT
$NEXT

FIELD$	
$SBEXP	NML_TRACE_STA,NML_TRACE_PARAMS		; Trace state
$NEXT

FIELD$	
$SBEXP	NML_TRACE_BSZ,NML_TRACE_PARAMS		; Trace buffer size
$NEXT

FIELD$	
$SBEXP	NML_TRACE_MBK,NML_TRACE_PARAMS		; Trace maximum blocks/file
$NEXT

FIELD$	
$SBEXP	NML_TRACE_FNM,NML_TRACE_PARAMS		; Trace filename
$NEXT

FIELD$	
$SBEXP	NML_TRACE_MBF,NML_TRACE_PARAMS		; Trace maximum # buffers
$NEXT

FIELD$	
$SBEXP	NML_TRACE_CPL,NML_TRACE_PARAMS		; Trace capture limit
$NEXT

FIELD$	
$SBEXP	NML_TRACE_MVR,NML_TRACE_PARAMS		; Trace Maximum file version
$NEXT

;
;  Check for grouping errors (tracepoint parameters)
;
FIELD$
$WORD	NMA$C_PCXT_TPT,NML_PGP_ERR		; Tracepoint name
$WORD	NMA$C_PCXT_CPS,NML_PGP_ERR		; Tracepoint capture size
$WORD	NMA$C_PCXT_TST,NML_PGP_ERR		; Tracepoint state
$NULL	,NPA$_EXIT
$NEXT

FIELD$
$MATCH	2,NML_PTY_ERR				; Unrecognized parameter
$NULL	,NML_FOR_ERR


;
;	Subexpressions for Server Module parameters
;
FIELD$	NML_TRACE_STA			; X-25 Trace State
$WORD	NMA$C_PCXT_STA,NPA$_EXIT,NML$PRM_CLEAR -
		,,,CPT$GK_PCXT_STA

FIELD$	NML_TRACE_BSZ			; X-25 Trace buffer size
$WORD	NMA$C_PCXT_BSZ,NPA$_EXIT,NML$PRM_CLEAR -
		,,,CPT$GK_PCXT_BSZ

FIELD$	NML_TRACE_MBK			; X-25 Trace maximum blocks/file
$WORD	NMA$C_PCXT_MBK,NPA$_EXIT,NML$PRM_CLEAR -
		,,,CPT$GK_PCXT_MBK

FIELD$	NML_TRACE_FNM			; X-25 Trace filename
$WORD	NMA$C_PCXT_FNM,NPA$_EXIT,NML$PRM_CLEAR -
		,,,CPT$GK_PCXT_FNM

FIELD$	NML_TRACE_MBF			; X-25 Trace Maximum number of buffers
$WORD	NMA$C_PCXT_MBF,NPA$_EXIT,NML$PRM_CLEAR -
		,,,CPT$GK_PCXT_MBF

FIELD$	NML_TRACE_CPL			; X-25 Trace Capture Limit
$WORD	NMA$C_PCXT_CPL,NPA$_EXIT,NML$PRM_CLEAR -
		,,,CPT$GK_PCXT_CPL

FIELD$	NML_TRACE_MVR			; X-25 Trace Maximum Trace File Version
$WORD	NMA$C_PCXT_MVR,NPA$_EXIT,NML$PRM_CLEAR -
		,,,CPT$GK_PCXT_MVR

FIELD$						; End of Server Module parameters

;+++++++++++++++++++++++++++++++++++++++++++
;	X-25 Tracepoint State Table
;-------------------------------------------
IMSG$	NML$NPA_CLPU_TRACEPOINT

FIELD$	
$EOM	,NPA$_EXIT,,NML$M_PRS_ALL,NML$GL_PRS_FLGS		; No parameters, do change ALL
$NEXT

FIELD$	NML_TRACEPNT_LOOP
$EOM	,NPA$_EXIT
$NEXT

FIELD$
$SBEXP	NML_TRACEPNT_CPS,NML_TRACEPNT_LOOP; Tracepoint capture size
$NEXT

FIELD$
$SBEXP	NML_TRACEPNT_TST,NML_TRACEPNT_LOOP; Tracepoint Per-trace state
$NEXT
;
;  Check for grouping errors (Trace parameters)
;
FIELD$
$WORD	NMA$C_PCXT_BSZ,NML_PGP_ERR		; Trace buffer size
$WORD	NMA$C_PCXT_MBK,NML_PGP_ERR		; Trace maximum blocks
$WORD	NMA$C_PCXT_FNM,NML_PGP_ERR		; Trace filename
$WORD	NMA$C_PCXT_MBF,NML_PGP_ERR		; Trace maximum buffers
$WORD	NMA$C_PCXT_CPL,NML_PGP_ERR		; Trace capture limit
$WORD	NMA$C_PCXT_MVR,NML_PGP_ERR		; Trace maximum trace file version
$NULL	,NPA$_EXIT
$NEXT

FIELD$
$MATCH	2,NML_PTY_ERR				; Unrecognized parameter
$NULL	,NML_FOR_ERR



;
;	Subexpressions for Trace Module parameters
;
FIELD$	NML_TRACEPNT_CPS			; Tracepoint Capture size
$WORD	NMA$C_PCXT_CPS,NPA$_EXIT,NML$PRM_CLEAR -
		,,,CPT$GK_PCXT_CPS

FIELD$	NML_TRACEPNT_TST			; Tracepoint Trace state
$WORD	NMA$C_PCXT_TST,NPA$_EXIT,NML$PRM_CLEAR -
		,,,CPT$GK_PCXT_TST

FIELD$

	.SBTTL	NML$NPA_CLPU_X29_SERVER	Clear/Purge Server Module
;++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
;	X-29 Server Module State Table
;	The NICE parameters must all be in one of two groups: 
;		Server module parameters
;		Destination parameters
;------------------------------------------------------------

IMSG$	NML$NPA_CLPU_X29_SERV

FIELD$
$EOM	,NPA$_EXIT,,NML$M_PRS_ALL,NML$GL_PRS_FLGS		;No parameters
$NEXT

FIELD$	NML_X29_SERV_PARAMS
$EOM	,NPA$_EXIT
$NEXT

FIELD$	
$SBEXP	NML_X29_SERV_CTM,NML_X29_SERV_PARAMS	; Counter timer
$NEXT

FIELD$	
$SBEXP	NML_X29_SERV_MCI,NML_X29_SERV_PARAMS	; Maximum circuits
$NEXT

;
;  Check for grouping errors (destination parameters)
;
FIELD$	NML_SERV_GROUP_ERRS
$WORD	NMA$C_PCXS_DST,NML_PGP_ERR		; Destination
$WORD	NMA$C_PCXS_MCI,NML_PGP_ERR		; Maximum circuits
$WORD	NMA$C_PCXS_NOD,NML_PGP_ERR		; Node
$WORD	NMA$C_PCXS_USR,NML_PGP_ERR		; Username
$WORD	NMA$C_PCXS_SPW,NML_PGP_ERR		; Password to set
$WORD	NMA$C_PCXS_ACC,NML_PGP_ERR		; Account
$WORD	NMA$C_PCXS_OBJ,NML_PGP_ERR		; Object
$WORD	NMA$C_PCXS_PRI,NML_PGP_ERR		; Priority
$WORD	NMA$C_PCXS_CMK,NML_PGP_ERR		; Call mask
$WORD	NMA$C_PCXS_CVL,NML_PGP_ERR		; Call value
$WORD	NMA$C_PCXS_GRP,NML_PGP_ERR		; Group
$WORD	NMA$C_PCXS_NUM,NML_PGP_ERR		; Number
$WORD	NMA$C_PCXS_SAD,NML_PGP_ERR		; Subaddresses
$WORD	NMA$C_PCXS_FIL,NML_PGP_ERR		; Object file
$NULL	,NPA$_EXIT
$NEXT

FIELD$
$MATCH	2,NML_PTY_ERR				; Unrecognized parameter
$NULL	,NML_FOR_ERR



;
;	Subexpressions for Server Module parameters
;
FIELD$	NML_X29_SERV_CTM			; X-25 Server counter timer
$WORD	NMA$C_PCXS_CTM,NPA$_EXIT,NML$PRM_CLEAR -
		,,,CPT$GK_PCXS9_CTM

FIELD$	NML_X29_SERV_MCI			; X-25 Server Maximum circuits
$WORD	NMA$C_PCXS_MCI,NPA$_EXIT,NML$PRM_CLEAR -
		,,,CPT$GK_PCXS9_MCI

FIELD$						; End of Server Module parameters



;+++++++++++++++++++++++++++++++++++++++++++
;	X-29 Server Destination State Table
;-------------------------------------------
IMSG$	NML$NPA_CLPU_X29_SERV_DEST

FIELD$	
$EOM	,NPA$_EXIT,,NML$M_PRS_ALL,NML$GL_PRS_FLGS		; No parameters, do change ALL
$NEXT

FIELD$	NML_X29_DEST_LOOP
$EOM	,NPA$_EXIT
$NEXT

FIELD$
$SBEXP	NML_X29_DEST_USR,NML_X29_DEST_LOOP; Destination Username
$NEXT

FIELD$
$SBEXP	NML_X29_DEST_SPW,NML_X29_DEST_LOOP; Destination Password to Set
$NEXT

FIELD$
$SBEXP	NML_X29_DEST_ACC,NML_X29_DEST_LOOP; Destination Account
$NEXT

FIELD$
$SBEXP	NML_X29_DEST_PRI,NML_X29_DEST_LOOP; Destination Priority
$NEXT

FIELD$
$SBEXP	NML_X29_DEST_CMK,NML_X29_DEST_LOOP; Destination Call Mask
$NEXT

FIELD$
$SBEXP	NML_X29_DEST_CVL,NML_X29_DEST_LOOP; Destination Call Value
$NEXT

FIELD$
$SBEXP	NML_X29_DEST_GRP,NML_X29_DEST_LOOP; Destination Group
$NEXT

FIELD$
$SBEXP	NML_X29_DEST_NOD,NML_X29_DEST_LOOP; Destination Node
$NEXT

FIELD$
$SBEXP	NML_X29_DEST_NUM,NML_X29_DEST_LOOP; Destination Number
$NEXT

FIELD$
$SBEXP	NML_X29_DEST_SAD,NML_X29_DEST_LOOP; Destination Subaddresses
$NEXT

FIELD$
$SBEXP	NML_X29_DEST_FIL,NML_X29_DEST_LOOP; Destination Object File
$NEXT

;
;  Check for grouping errors (Server parameters)
;
FIELD$	NML_DEST_GROUP_ERR
$WORD	NMA$C_PCXS_CTM,NML_PGP_ERR		; Counter timer
$WORD	NMA$C_PCXS_MCI,NML_PGP_ERR		; Maximum Circuits
$WORD	NMA$C_PCXS_STA,NML_PGP_ERR		; State
$NEXT

FIELD$
$MATCH	2,NML_PTY_ERR				; Unrecognized parameter type
$NULL	,NML_FOR_ERR

;
;  Subexpressions for Server Destinations
;
FIELD$	NML_X29_DEST_USR			; Destination Username
$WORD	NMA$C_PCXS_USR,NPA$_EXIT,NML$PRM_CLEAR -
		,,,CPT$GK_PCXS9_USR

FIELD$	NML_X29_DEST_SPW			; Destination Password to set
$WORD	NMA$C_PCXS_SPW,NPA$_EXIT,NML$PRM_CLEAR -
		,,,CPT$GK_PCXS9_SPW

FIELD$	NML_X29_DEST_ACC			; Destination Account
$WORD	NMA$C_PCXS_ACC,NPA$_EXIT,NML$PRM_CLEAR -
		,,,CPT$GK_PCXS9_ACC

FIELD$	NML_X29_DEST_PRI			; Destination Priority
$WORD	NMA$C_PCXS_PRI,NPA$_EXIT,NML$PRM_CLEAR -
		,,,CPT$GK_PCXS9_PRI

FIELD$	NML_X29_DEST_CMK			; Destination Call mask
$WORD	NMA$C_PCXS_CMK,NPA$_EXIT,NML$PRM_CLEAR -
		,,,CPT$GK_PCXS9_CMK

FIELD$	NML_X29_DEST_CVL			; Destination Call value
$WORD	NMA$C_PCXS_CVL,NPA$_EXIT,NML$PRM_CLEAR -
		,,,CPT$GK_PCXS9_CVL

FIELD$	NML_X29_DEST_GRP			; Destination Group
$WORD	NMA$C_PCXS_GRP,NPA$_EXIT,NML$PRM_CLEAR -
		,,,CPT$GK_PCXS9_GRP

FIELD$	NML_X29_DEST_NOD			; Destination Node
$WORD	NMA$C_PCXS_NOD,NPA$_EXIT,NML$PRM_CLEAR -
		,,,CPT$GK_PCXS9_NOD

FIELD$	NML_X29_DEST_NUM			; Destination Number
$WORD	NMA$C_PCXS_NUM,NPA$_EXIT,NML$PRM_CLEAR -
		,,,CPT$GK_PCXS9_NUM

FIELD$	NML_X29_DEST_SAD			; Destination Subaddresses
$WORD	NMA$C_PCXS_SAD,NPA$_EXIT,NML$PRM_CLEAR -
		,,,CPT$GK_PCXS9_SAD

FIELD$	NML_X29_DEST_FIL			; Destination Object file
$WORD	NMA$C_PCXS_FIL,NPA$_EXIT,NML$PRM_CLEAR -
		,,,CPT$GK_PCXS9_FIL

FIELD$

	.SBTTL	NML$NPA_CLPU_NI_CONFIG  Clear/Purge Configurator state table

;++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
;	NI Configurator Module
;------------------------------------------------------------

IMSG$	NML$NPA_CLPU_NI_CONFIG

FIELD$
$EOM	,NPA$_EXIT,,NML$M_PRS_ALL,NML$GL_PRS_FLGS	; No parameters

FIELD$
$MATCH	2,NML_PTY_ERR					; Unrecognized parameter type
$NULL	,NML_FOR_ERR					; Message format error

FIELD$

	.SBTTL	NML$NPA_CLPUOBJ	Clear/Purge object parameter state table

;+
;    object
;-

IMSG$	NML$NPA_CLPUOBJ

FIELD$
$EOM	,NPA$_EXIT,,NML$M_PRS_ALL,NML$GL_PRS_FLGS	 ; No parameters
$NEXT

FIELD$	NML_OBJ_START
$EOM	,NPA$_EXIT			; Done
$NEXT

FIELD$					; File id
$WORD	NMA$C_PCOB_FID,NML_OBJ_START,NML$PRM_CLEAR,-
	,,CPT$GK_PCOB_FID
$NEXT

FIELD$					; Privileges
$WORD	NMA$C_PCOB_PRV,NML_OBJ_START,NML$PRM_CLEAR,-
	,,CPT$GK_PCOB_PRV
$NEXT

FIELD$					; User id
$WORD	NMA$C_PCOB_USR,NML_OBJ_START,NML$PRM_CLEAR,-
	,,CPT$GK_PCOB_USR
$NEXT

FIELD$					; Account
$WORD	NMA$C_PCOB_ACC,NML_OBJ_START,NML$PRM_CLEAR,-
	,,CPT$GK_PCOB_ACC
$NEXT

FIELD$					; Password
$WORD	NMA$C_PCOB_PSW,NML_OBJ_START,NML$PRM_CLEAR,-
	,,CPT$GK_PCOB_PSW
$NEXT

FIELD$					; Proxy login access
$WORD	NMA$C_PCOB_PRX,NML_OBJ_START,NML$PRM_CLEAR,-
	,,CPT$GK_PCOB_PRX
$NEXT

FIELD$
$MATCH	2,NML_PTY_ERR			; Unrecognized parameter type
$NULL	,NML_FOR_ERR			; Message format error

FIELD$					; End of object parameter states

	.SBTTL	NML$NPA_CLPULNK	Clear/Purge link parameter state table

;+
;	link
;-

IMSG$	NML$NPA_CLPULNK

FIELD$
$EOM	,NPA$_EXIT,,NML$M_PRS_ALL,NML$GL_PRS_FLGS	 ; No parameters
$MATCH	2,NML_PTY_ERR			; Unrecognized parameter
$NULL	,NML_FOR_ERR			; Message format error

FIELD$					; End of link parameter states

	.SBTTL	NML$NPA_CLPUSUB	Common clear/purge parameter subexpressions

;+
; Common subexpressions
;-

IMSG$	NML$NPA_CLPUSUB

FIELD$	NML_NODEID_SUB	; Node name or address parameter
$EOM	,NML_FOR_ERR
$LOOK	0,NML_NODNUM
$IMAGE	6,NPA$_EXIT

FIELD$	NML_NODNUM
$MATCH	3,NPA$_EXIT
$NULL	,NML_FOR_ERR

FIELD$	NML_PTY_ERR	; Unrecognized parameter error
$ERROR	NML$_STS_PTY,,NML$PRM_ERR,,,NMA$C_STS_PTY

FIELD$	NML_PVA_ERR	; Parameter value error
$ERROR	NML$_STS_PVA,,NML$PRM_ERR,,,NMA$C_STS_PVA

FIELD$	NML_PNA_ERR	; Parameter not applicable error
$ERROR	NML$_STS_PNA,,NML$PRM_ERR,,,NMA$C_STS_PNA

FIELD$	NML_FOR_ERR	; Message format error
$ERROR	NML$_STS_INV,,NML$PRM_ERR,,,NMA$C_STS_INV

FIELD$	NML_PMS_ERR	; Parameter missing error
$ERROR	NML$_STS_PMS,,NML$PRM_ERR,,,NMA$C_STS_PMS

FIELD$	NML_PGP_ERR	; Parameter grouping error
$ERROR	NML$_STS_PGP,,NML$PRM_ERR,,,NMA$C_STS_PGP

FIELD$			; End of common parsing states

	.END
